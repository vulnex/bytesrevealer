/**
 * Kaitai Formats - Archives
 * 17 formats
 * Auto-generated: 2025-09-21T19:51:05.638Z
 */

export const archivesFormats = [
  {
    "id": "ksy_android_bootldr_asus",
    "name": "ASUS Fugu bootloader.img format (version 2 and later)",
    "category": "Archives",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "img"
      ],
      "description": "ASUS Fugu bootloader.img format (version 2 and later)",
      "originalCategory": "archive",
      "filePath": "archive/android_bootldr_asus.ksy",
      "signature": {
        "offset": 0,
        "bytes": [
          66,
          79,
          79,
          84,
          76,
          68,
          82,
          33
        ]
      },
      "endian": "le"
    },
    "content": "meta:\n  id: android_bootldr_asus\n  title: ASUS Fugu bootloader.img format (version 2 and later)\n  file-extension: img\n  tags:\n    - archive\n    - android\n  license: CC0-1.0\n  ks-version: 0.9\n  encoding: ASCII\n  endian: le\ndoc: |\n  A bootloader image which only seems to have been used on a few ASUS\n  devices. The encoding is ASCII, because the `releasetools.py` script\n  is written using Python 2, where the default encoding is ASCII.\n\n  A test file can be found in the firmware files for the \"fugu\" device,\n  which can be downloaded from <https://developers.google.com/android/images>\ndoc-ref: https://android.googlesource.com/device/asus/fugu/+/android-8.1.0_r5/releasetools.py\nseq:\n  - id: magic\n    contents: BOOTLDR!\n  - id: revision\n    type: u2\n    valid:\n      min: 2\n  - id: reserved1\n    type: u2\n  - id: reserved2\n    type: u4\n  - id: images\n    type: image\n    repeat: expr\n    repeat-expr: 3\n    doc: |\n      Only three images are included: `ifwi.bin`, `droidboot.img`\n      and `splashscreen.img`\ntypes:\n  image:\n    -webide-representation: '{file_name}'\n    seq:\n      - id: chunk_id\n        size: 8\n        type: str\n        valid:\n          any-of:\n            - '\"IFWI!!!!\"'\n            - '\"DROIDBT!\"'\n            - '\"SPLASHS!\"'\n      - id: len_body\n        type: u4\n      - id: flags\n        type: u1\n        valid:\n          expr: _ & 1 != 0\n      - id: reserved1\n        type: u1\n      - id: reserved2\n        type: u1\n      - id: reserved3\n        type: u1\n      - id: body\n        size: len_body\n    instances:\n      file_name:\n        value: |\n          chunk_id == \"IFWI!!!!\" ? \"ifwi.bin\" :\n          chunk_id == \"DROIDBT!\" ? \"droidboot.img\" :\n          chunk_id == \"SPLASHS!\" ? \"splashscreen.img\" :\n          \"\"\n"
  },
  {
    "id": "ksy_android_bootldr_huawei",
    "name": "Huawei Bootloader packed image format",
    "category": "Archives",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "img"
      ],
      "description": "Huawei Bootloader packed image format",
      "originalCategory": "archive",
      "filePath": "archive/android_bootldr_huawei.ksy",
      "endian": "le"
    },
    "content": "meta:\n  id: android_bootldr_huawei\n  title: Huawei Bootloader packed image format\n  file-extension: img\n  tags:\n    - archive\n    - android\n  license: CC0-1.0\n  # The `releasetools.py` script is written for Python 2, where the default\n  # encoding is ASCII.\n  encoding: ASCII\n  endian: le\ndoc: |\n  Format of `bootloader-*.img` files found in factory images of certain Android devices from Huawei:\n\n  * Nexus 6P \"angler\": [sample][sample-angler] ([other samples][others-angler]),\n    [releasetools.py](https://android.googlesource.com/device/huawei/angler/+/cf92cd8/releasetools.py#29)\n\n  [sample-angler]: https://androidfilehost.com/?fid=11410963190603870158 \"bootloader-angler-angler-03.84.img\"\n  [others-angler]: https://androidfilehost.com/?w=search&s=bootloader-angler&type=files\n\n  All image versions can be found in factory images at\n  <https://developers.google.com/android/images> for the specific device. To\n  avoid having to download an entire ZIP archive when you only need one file\n  from it, install [remotezip](https://github.com/gtsystem/python-remotezip) and\n  use its [command line\n  tool](https://github.com/gtsystem/python-remotezip#command-line-tool) to list\n  members in the archive and then to download only the file you want.\n\ndoc-ref:\n  - https://android.googlesource.com/device/huawei/angler/+/673cfb9/releasetools.py\n  - https://source.codeaurora.org/quic/la/device/qcom/common/tree/meta_image/meta_format.h?h=LA.UM.6.1.1&id=a68d284aee85\n  - https://source.codeaurora.org/quic/la/device/qcom/common/tree/meta_image/meta_image.c?h=LA.UM.6.1.1&id=a68d284aee85\nseq:\n  - id: meta_header\n    type: meta_hdr\n  - id: header_ext\n    size: meta_header.len_meta_header - meta_header._sizeof\n  - id: image_header\n    size: meta_header.len_image_header\n    type: image_hdr\ntypes:\n  meta_hdr:\n    seq:\n      - id: magic\n        contents: [0x3c, 0xd6, 0x1a, 0xce]\n      - id: version\n        type: version\n      - id: image_version\n        size: 64\n        type: strz\n      - id: len_meta_header\n        -orig-id: meta_hdr_sz\n        type: u2\n      - id: len_image_header\n        -orig-id: img_hdr_sz\n        type: u2\n  version:\n    seq:\n      - id: major\n        type: u2\n      - id: minor\n        type: u2\n  image_hdr:\n    seq:\n      - id: entries\n        type: image_hdr_entry\n        repeat: eos\n        doc: |\n          The C generator program defines `img_header` as a [fixed size\n          array](https://source.codeaurora.org/quic/la/device/qcom/common/tree/meta_image/meta_image.c?h=LA.UM.6.1.1&id=a68d284aee85#n42)\n          of `img_header_entry_t` structs with length `MAX_IMAGES` (which is\n          defined as `16`).\n\n          This means that technically there will always be 16 `image_hdr`\n          entries, the first *n* entries being used (filled with real values)\n          and the rest left unused with all bytes zero.\n\n          To check if an entry is used, use the `is_used` attribute.\n  image_hdr_entry:\n    -webide-representation: '{name} - o:{ofs_body}, s:{len_body} (used: {is_used})'\n    seq:\n      - id: name\n        size: 72\n        type: strz\n        doc: partition name\n      - id: ofs_body\n        type: u4\n      - id: len_body\n        type: u4\n    instances:\n      is_used:\n        value: ofs_body != 0 and len_body != 0\n        doc-ref: https://source.codeaurora.org/quic/la/device/qcom/common/tree/meta_image/meta_image.c?h=LA.UM.6.1.1&id=a68d284aee85#n119\n      body:\n        io: _root._io\n        pos: ofs_body\n        size: len_body\n        if: is_used\n"
  },
  {
    "id": "ksy_android_bootldr_qcom",
    "name": "Qualcomm Snapdragon (MSM) bootloader.img format",
    "category": "Archives",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "img"
      ],
      "description": "Qualcomm Snapdragon (MSM) bootloader.img format",
      "originalCategory": "archive",
      "filePath": "archive/android_bootldr_qcom.ksy",
      "signature": {
        "offset": 0,
        "bytes": [
          66,
          79,
          79,
          84,
          76,
          68,
          82,
          33
        ]
      },
      "endian": "le"
    },
    "content": "meta:\n  id: android_bootldr_qcom\n  title: Qualcomm Snapdragon (MSM) bootloader.img format\n  file-extension: img\n  tags:\n    - archive\n    - android\n  license: CC0-1.0\n  # The `releasetools.py` script is written for Python 2, where the default\n  # encoding is ASCII.\n  encoding: ASCII\n  endian: le\ndoc: |\n  A bootloader for Android used on various devices powered by Qualcomm\n  Snapdragon chips:\n\n  <https://en.wikipedia.org/wiki/Devices_using_Qualcomm_Snapdragon_processors>\n\n  Although not all of the Snapdragon based Android devices use this particular\n  bootloader format, it is known that devices with the following chips have used\n  it (example devices are given for each chip):\n\n  * APQ8064 ([devices](https://en.wikipedia.org/wiki/Devices_using_Qualcomm_Snapdragon_processors#Snapdragon_S4_Pro))\n    - Nexus 4 \"mako\": [sample][sample-mako] ([other samples][others-mako]),\n      [releasetools.py](https://android.googlesource.com/device/lge/mako/+/33f0114/releasetools.py#98)\n\n  * MSM8974AA ([devices](https://en.wikipedia.org/wiki/Devices_using_Qualcomm_Snapdragon_processors#Snapdragon_800,_801_and_805_(2013/14)))\n    - Nexus 5 \"hammerhead\": [sample][sample-hammerhead] ([other samples][others-hammerhead]),\n      [releasetools.py](https://android.googlesource.com/device/lge/hammerhead/+/7618a7d/releasetools.py#116)\n\n  * MSM8992 ([devices](https://en.wikipedia.org/wiki/Devices_using_Qualcomm_Snapdragon_processors#Snapdragon_808_and_810_(2015)))\n    - Nexus 5X \"bullhead\": [sample][sample-bullhead] ([other samples][others-bullhead]),\n      [releasetools.py](https://android.googlesource.com/device/lge/bullhead/+/2994b6b/releasetools.py#126)\n\n  * APQ8064-1AA ([devices](https://en.wikipedia.org/wiki/Devices_using_Qualcomm_Snapdragon_processors#Snapdragon_600_(2013)))\n    - Nexus 7 \\[2013] (Mobile) \"deb\" <a href=\"#doc-note-data-after-img-bodies\">(\\**)</a>: [sample][sample-deb] ([other samples][others-deb]),\n      [releasetools.py](https://android.googlesource.com/device/asus/deb/+/14c1638/releasetools.py#105)\n    - Nexus 7 \\[2013] (Wi-Fi) \"flo\" <a href=\"#doc-note-data-after-img-bodies\">(\\**)</a>: [sample][sample-flo] ([other samples][others-flo]),\n      [releasetools.py](https://android.googlesource.com/device/asus/flo/+/9d9fee9/releasetools.py#130)\n\n  * MSM8996 Pro-AB ([devices](https://en.wikipedia.org/wiki/Devices_using_Qualcomm_Snapdragon_processors#Snapdragon_820_and_821_(2016)))\n    - Pixel \"sailfish\" <a href=\"#doc-note-bootloader-size\">(\\*)</a>:\n      [sample][sample-sailfish] ([other samples][others-sailfish])\n    - Pixel XL \"marlin\" <a href=\"#doc-note-bootloader-size\">(\\*)</a>:\n      [sample][sample-marlin] ([other samples][others-marlin])\n\n  * MSM8998 ([devices](https://en.wikipedia.org/wiki/Devices_using_Qualcomm_Snapdragon_processors#Snapdragon_835_(2017)))\n    - Pixel 2 \"walleye\" <a href=\"#doc-note-bootloader-size\">(\\*)</a>: [sample][sample-walleye] ([other samples][others-walleye])\n    - Pixel 2 XL \"taimen\": [sample][sample-taimen] ([other samples][others-taimen])\n\n  <small id=\"doc-note-bootloader-size\">(\\*)\n  `bootloader_size` is equal to the size of the whole file (not just `img_bodies` as usual).\n  </small>\n\n  <small id=\"doc-note-data-after-img-bodies\">(\\**)\n  There are some data after the end of `img_bodies`.\n  </small>\n\n  ---\n\n  On the other hand, devices with these chips **do not** use this format:\n\n  * <del>APQ8084</del> ([devices](https://en.wikipedia.org/wiki/Devices_using_Qualcomm_Snapdragon_processors#Snapdragon_800,_801_and_805_(2013/14)))\n    - Nexus 6 \"shamu\": [sample][foreign-sample-shamu] ([other samples][foreign-others-shamu]),\n      [releasetools.py](https://android.googlesource.com/device/moto/shamu/+/df9354d/releasetools.py#12) -\n      uses \"Motoboot packed image format\" instead\n\n  * <del>MSM8994</del> ([devices](https://en.wikipedia.org/wiki/Devices_using_Qualcomm_Snapdragon_processors#Snapdragon_808_and_810_(2015)))\n    - Nexus 6P \"angler\": [sample][foreign-sample-angler] ([other samples][foreign-others-angler]),\n      [releasetools.py](https://android.googlesource.com/device/huawei/angler/+/cf92cd8/releasetools.py#29) -\n      uses \"Huawei Bootloader packed image format\" instead\n\n  [sample-mako]: https://androidfilehost.com/?fid=96039337900113996 \"bootloader-mako-makoz30f.img\"\n  [others-mako]: https://androidfilehost.com/?w=search&s=bootloader-mako&type=files\n\n  [sample-hammerhead]: https://androidfilehost.com/?fid=385035244224410247 \"bootloader-hammerhead-hhz20h.img\"\n  [others-hammerhead]: https://androidfilehost.com/?w=search&s=bootloader-hammerhead&type=files\n\n  [sample-bullhead]: https://androidfilehost.com/?fid=11410963190603870177 \"bootloader-bullhead-bhz32c.img\"\n  [others-bullhead]: https://androidfilehost.com/?w=search&s=bootloader-bullhead&type=files\n\n  [sample-deb]: https://androidfilehost.com/?fid=23501681358552487 \"bootloader-deb-flo-04.02.img\"\n  [others-deb]: https://androidfilehost.com/?w=search&s=bootloader-deb-flo&type=files\n\n  [sample-flo]: https://androidfilehost.com/?fid=23991606952593542 \"bootloader-flo-flo-04.05.img\"\n  [others-flo]: https://androidfilehost.com/?w=search&s=bootloader-flo-flo&type=files\n\n  [sample-sailfish]: https://androidfilehost.com/?fid=6006931924117907154 \"bootloader-sailfish-8996-012001-1904111134.img\"\n  [others-sailfish]: https://androidfilehost.com/?w=search&s=bootloader-sailfish&type=files\n\n  [sample-marlin]: https://androidfilehost.com/?fid=6006931924117907131 \"bootloader-marlin-8996-012001-1904111134.img\"\n  [others-marlin]: https://androidfilehost.com/?w=search&s=bootloader-marlin&type=files\n\n  [sample-walleye]: https://androidfilehost.com/?fid=14943124697586348540 \"bootloader-walleye-mw8998-003.0085.00.img\"\n  [others-walleye]: https://androidfilehost.com/?w=search&s=bootloader-walleye&type=files\n\n  [sample-taimen]: https://androidfilehost.com/?fid=14943124697586348536 \"bootloader-taimen-tmz30m.img\"\n  [others-taimen]: https://androidfilehost.com/?w=search&s=bootloader-taimen&type=files\n\n  [foreign-sample-shamu]: https://androidfilehost.com/?fid=745849072291678307 \"bootloader-shamu-moto-apq8084-72.04.img\"\n  [foreign-others-shamu]: https://androidfilehost.com/?w=search&s=bootloader-shamu&type=files\n\n  [foreign-sample-angler]: https://androidfilehost.com/?fid=11410963190603870158 \"bootloader-angler-angler-03.84.img\"\n  [foreign-others-angler]: https://androidfilehost.com/?w=search&s=bootloader-angler&type=files\n\n  ---\n\n  The `bootloader-*.img` samples referenced above originally come from factory\n  images packed in ZIP archives that can be found on the page [Factory Images\n  for Nexus and Pixel Devices](https://developers.google.com/android/images) on\n  the Google Developers site. Note that the codenames on that page may be\n  different than the ones that are written in the list above. That's because the\n  Google page indicates **ROM codenames** in headings (e.g. \"occam\" for Nexus 4)\n  but the above list uses **model codenames** (e.g. \"mako\" for Nexus 4) because\n  that is how the original `bootloader-*.img` files are identified. For most\n  devices, however, these code names are the same.\n\ndoc-ref: https://android.googlesource.com/device/lge/hammerhead/+/7618a7d/releasetools.py\nseq:\n  - id: magic\n    contents: BOOTLDR!\n  - id: num_images\n    type: u4\n  - id: ofs_img_bodies\n    -orig-id: start_offset\n    type: u4\n  - id: bootloader_size\n    -orig-id: bootldr_size\n    type: u4\n    doc: |\n      According to all available `releasetools.py` versions from AOSP (links are\n      in the top-level `/doc`), this should determine only the size of\n      `img_bodies` - there is [an assertion](\n      https://android.googlesource.com/device/lge/hammerhead/+/7618a7d/releasetools.py#167)\n      for it.\n\n      However, files for certain Pixel devices (see `/doc`) apparently declare\n      the entire file size here (i.e. including also fields from `magic` to\n      `img_headers`). So if you interpreted `bootloader_size` as the size of\n      `img_bodies` substream in these files, you would exceed the end of file.\n      Although you could check that it fits in the file before attempting to\n      create a substream of that size, you wouldn't know if it's meant to\n      specify the size of just `img_bodies` or the size of the entire bootloader\n      payload (whereas there may be additional data after the end of payload)\n      until parsing `img_bodies` (or at least summing sizes from `img_headers`,\n      but that's stupid).\n\n      So this field isn't reliable enough to be used as the size of any\n      substream. If you want to check if it has a reasonable value, do so in\n      your application code.\n  - id: img_headers\n    -orig-id: img_info\n    type: img_header\n    repeat: expr\n    repeat-expr: num_images\ninstances:\n  img_bodies:\n    pos: ofs_img_bodies\n    type: img_body(_index)\n    repeat: expr\n    repeat-expr: num_images\ntypes:\n  img_header:\n    -webide-representation: '{name}'\n    seq:\n      - id: name\n        size: 64\n        type: strz\n      - id: len_body\n        type: u4\n  img_body:\n    -webide-representation: '{img_header.name}: {img_header.len_body:dec} bytes'\n    params:\n      - id: idx\n        type: s4\n    seq:\n      - id: body\n        size: img_header.len_body\n    instances:\n      img_header:\n        value: _root.img_headers[idx]\n"
  },
  {
    "id": "ksy_android_dto",
    "name": "Android DTB/DTBO Partition",
    "category": "Archives",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "img"
      ],
      "description": "Android DTB/DTBO Partition",
      "originalCategory": "archive",
      "filePath": "archive/android_dto.ksy",
      "endian": "be"
    },
    "content": "meta:\n  id: android_dto\n  title: Android DTB/DTBO Partition\n  license: CC0-1.0\n  file-extension: img\n  endian: be\n\ndoc: |\n  Format for Android DTB/DTBO partitions. It's kind of archive with\n  dtb/dtbo files. Used only when there is a separate unique partition\n  (dtb, dtbo) on an android device to organize device tree files.\n  The format consists of a header with info about size and number\n  of device tree entries and the entries themselves. This format\n  description could be used to extract device tree entries from a\n  partition images and decompile them with dtc (device tree compiler).\n\ndoc-ref:\n  - https://source.android.com/docs/core/architecture/dto/partitions\n  - https://android.googlesource.com/platform/system/libufdt/+/refs/tags/android-10.0.0_r47\n\nseq:\n  - id: header\n    type: dt_table_header\n  - id: entries\n    type: dt_table_entry\n    repeat: expr\n    repeat-expr: header.dt_entry_count\n\ntypes:\n  dt_table_header:\n    seq:\n      - id: magic\n        contents: [0xd7, 0xb7, 0xab, 0x1e]\n      - id: total_size\n        type: u4\n        doc: includes dt_table_header + all dt_table_entry and all dtb/dtbo\n      - id: header_size\n        type: u4\n        doc: sizeof(dt_table_header)\n      - id: dt_entry_size\n        type: u4\n        doc: sizeof(dt_table_entry)\n      - id: dt_entry_count\n        type: u4\n        doc: number of dt_table_entry\n      - id: dt_entries_offset\n        type: u4\n        doc: offset to the first dt_table_entry from head of dt_table_header\n      - id: page_size\n        type: u4\n        doc: flash page size\n      - id: version\n        type: u4\n        doc: DTBO image version\n  dt_table_entry:\n    seq:\n      - id: dt_size\n        type: u4\n        doc: size of this entry\n      - id: dt_offset\n        type: u4\n        doc: offset from head of dt_table_header\n      - id: id\n        type: u4\n        doc: optional, must be zero if unused\n      - id: rev\n        type: u4\n        doc: optional, must be zero if unused\n      - id: custom\n        type: u4\n        repeat: expr\n        repeat-expr: 4\n        doc: optional, must be zero if unused\n    instances:\n      body:\n        io: _root._io\n        pos: dt_offset\n        size: dt_size\n        doc: DTB/DTBO file\n"
  },
  {
    "id": "ksy_android_img",
    "name": "Android Boot Image",
    "category": "Archives",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "img"
      ],
      "description": "Android Boot Image",
      "originalCategory": "archive",
      "filePath": "archive/android_img.ksy",
      "signature": {
        "offset": 0,
        "bytes": [
          65,
          78,
          68,
          82,
          79,
          73,
          68,
          33
        ]
      },
      "endian": "le"
    },
    "content": "meta:\n  id: android_img\n  title: Android Boot Image\n  file-extension: img\n  tags:\n    - archive\n    - android\n  license: CC0-1.0\n  endian: le\ndoc-ref: https://source.android.com/docs/core/architecture/bootloader/boot-image-header\nseq:\n  - id: magic\n    contents: ANDROID!\n  - id: kernel\n    type: load\n  - id: ramdisk\n    type: load\n  - id: second\n    type: load\n  - id: tags_load\n    type: u4\n  - id: page_size\n    type: u4\n  - id: header_version\n    type: u4\n  - id: os_version\n    type: os_version\n  - id: name\n    type: strz\n    size: 16\n    encoding: ASCII\n  - id: cmdline\n    type: strz\n    size: 512\n    encoding: ASCII\n  - id: sha\n    size: 32\n  - id: extra_cmdline\n    type: strz\n    size: 1024\n    encoding: ASCII\n  - id: recovery_dtbo\n    type: size_offset\n    if: header_version > 0\n  - id: boot_header_size\n    type: u4\n    if: header_version > 0\n  - id: dtb\n    type: load_long\n    if: header_version > 1\ninstances:\n  base:\n    value: kernel.addr - 0x00008000\n    doc: base loading address\n  kernel_offset:\n    value: kernel.addr - base\n    doc: kernel offset from base\n  ramdisk_offset:\n    value: 'ramdisk.addr > 0 ? ramdisk.addr - base : 0'\n    doc: ramdisk offset from base\n  second_offset:\n    value: 'second.addr > 0 ? second.addr - base : 0'\n    doc: 2nd bootloader offset from base\n  tags_offset:\n    value: tags_load - base\n    doc: tags offset from base\n  dtb_offset:\n    value: 'dtb.addr > 0 ? dtb.addr - base : 0'\n    if: header_version > 1\n    doc: dtb offset from base\n  kernel_img:\n    pos: page_size\n    size: kernel.size\n  ramdisk_img:\n    pos: ((page_size + kernel.size + page_size - 1) / page_size) * page_size\n    size: ramdisk.size\n    if: ramdisk.size > 0\n  second_img:\n    pos: ((page_size + kernel.size + ramdisk.size + page_size - 1) / page_size) * page_size\n    size: second.size\n    if: second.size > 0\n  recovery_dtbo_img:\n    pos: recovery_dtbo.offset\n    size: recovery_dtbo.size\n    if: header_version > 0 and recovery_dtbo.size > 0\n  dtb_img:\n    pos: ((page_size + kernel.size + ramdisk.size + second.size + recovery_dtbo.size + page_size - 1) / page_size) * page_size\n    size: dtb.size\n    if: header_version > 1 and dtb.size > 0\ntypes:\n  load:\n    seq:\n      - id: size\n        type: u4\n      - id: addr\n        type: u4\n  load_long:\n    seq:\n      - id: size\n        type: u4\n      - id: addr\n        type: u8\n  size_offset:\n    seq:\n      - id: size\n        type: u4\n      - id: offset\n        type: u8\n  os_version:\n    seq:\n      - id: version\n        type: u4\n    instances:\n      major:\n        value: (version >> 25) & 0x7f\n      minor:\n        value: (version >> 18) & 0x7f\n      patch:\n        value: (version >> 11) & 0x7f\n      year:\n        value: ((version >> 4) & 0x7f) + 2000\n      month:\n        value: version & 0xf\n"
  },
  {
    "id": "ksy_android_sparse",
    "name": "Android sparse image",
    "category": "Archives",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "img"
      ],
      "description": "Android sparse image",
      "originalCategory": "archive",
      "filePath": "archive/android_sparse.ksy",
      "endian": "le"
    },
    "content": "meta:\n  id: android_sparse\n  title: Android sparse image\n  file-extension: img\n  tags:\n    - archive\n    - android\n  license: CC0-1.0\n  ks-version: 0.9\n  endian: le\ndoc: |\n  The Android sparse format is a format to more efficiently store files\n  for for example firmware updates to save on bandwidth. Files in sparse\n  format first have to be converted back to their original format.\n\n  A tool to create images for testing can be found in the Android source code tree:\n\n  <https://android.googlesource.com/platform/system/core/+/e8d02c50d7/libsparse> - `img2simg.c`\n\n  Note: this is not the same as the Android sparse data image format.\ndoc-ref:\n  - https://android.googlesource.com/platform/system/core/+/e8d02c50d7/libsparse/sparse_format.h\n  - https://web.archive.org/web/20220322054458/https://source.android.com/devices/bootloader/images#sparse-image-format\nseq:\n  - id: header_prefix\n    type: file_header_prefix\n    doc: internal; access `_root.header` instead\n  - id: header\n    size: header_prefix.len_header - header_prefix._sizeof\n    type: file_header\n  - id: chunks\n    type: chunk\n    repeat: expr\n    repeat-expr: header.num_chunks\ntypes:\n  file_header_prefix:\n    seq:\n      - id: magic\n        contents: [0x3a, 0xff, 0x26, 0xed]\n      - id: version\n        type: version\n        doc: internal; access `_root.header.version` instead\n      - id: len_header\n        -orig-id: file_hdr_sz\n        type: u2\n        doc: internal; access `_root.header.len_header` instead\n  file_header:\n    seq:\n      - id: len_chunk_header\n        -orig-id: chunk_hdr_sz\n        type: u2\n        doc: size of chunk header, should be 12\n      - id: block_size\n        -orig-id: blk_sz\n        type: u4\n        valid:\n          expr: _ % 4 == 0\n        doc: block size in bytes, must be a multiple of 4\n      - id: num_blocks\n        -orig-id: total_blks\n        type: u4\n        doc: blocks in the original data\n      - id: num_chunks\n        -orig-id: total_chunks\n        type: u4\n      - id: checksum\n        -orig-id: image_checksum\n        type: u4\n        doc: |\n          CRC32 checksum of the original data\n\n          In practice always 0; if checksum writing is requested, a CRC32 chunk is written\n          at the end of the file instead. The canonical `libsparse` implementation does this\n          and other implementations tend to follow it, see\n          <https://gitlab.com/teskje/android-sparse-rs/-/blob/57c2577/src/write.rs#L112-114>\n    instances:\n      version:\n        value: _root.header_prefix.version\n      len_header:\n        value: _root.header_prefix.len_header\n        doc: size of file header, should be 28\n  chunk:\n    -webide-representation: '{header}'\n    seq:\n      - id: header\n        size: _root.header.len_chunk_header\n        type: chunk_header\n      - id: body\n        size: header.len_body\n        type:\n          switch-on: header.chunk_type\n          cases:\n            chunk_types::crc32: u4\n            # byte array for all other chunk types\n    types:\n      chunk_header:\n        -webide-representation: '{chunk_type}: {num_body_blocks:dec} blocks'\n        seq:\n          - id: chunk_type\n            type: u2\n            enum: chunk_types\n          - id: reserved1\n            type: u2\n          - id: num_body_blocks\n            -orig-id: chunk_sz\n            type: u4\n            doc: size of the chunk body in blocks in output image\n          - id: len_chunk\n            -orig-id: total_sz\n            type: u4\n            valid:\n              eq: 'len_body_expected != -1 ? _root.header.len_chunk_header + len_body_expected : len_chunk'\n            doc: in bytes of chunk input file including chunk header and data\n        instances:\n          len_body:\n            value: len_chunk - _root.header.len_chunk_header\n          len_body_expected:\n            value: |\n              chunk_type == chunk_types::raw ? _root.header.block_size * num_body_blocks :\n              chunk_type == chunk_types::fill ? 4 :\n              chunk_type == chunk_types::dont_care ? 0 :\n              chunk_type == chunk_types::crc32 ? 4 :\n              -1\n            doc-ref:\n              - https://android.googlesource.com/platform/system/core/+/e8d02c50d7/libsparse/sparse_read.cpp#184  # ::raw\n              - https://android.googlesource.com/platform/system/core/+/e8d02c50d7/libsparse/sparse_read.cpp#215  # ::fill\n              - https://android.googlesource.com/platform/system/core/+/e8d02c50d7/libsparse/sparse_read.cpp#249  # ::dont_care\n              - https://android.googlesource.com/platform/system/core/+/e8d02c50d7/libsparse/sparse_read.cpp#270  # ::crc32\n  version:\n    seq:\n      - id: major\n        -orig-id: major_version\n        type: u2\n        valid: 1\n      - id: minor\n        -orig-id: minor_version\n        type: u2\nenums:\n  chunk_types:\n    0xcac1: raw\n    0xcac2: fill\n    0xcac3: dont_care\n    0xcac4: crc32\n"
  },
  {
    "id": "ksy_cpio_old_le",
    "name": "cpio archive, old binary variant, little-endian",
    "category": "Archives",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "cpio"
      ],
      "description": "cpio archive, old binary variant, little-endian",
      "originalCategory": "archive",
      "filePath": "archive/cpio_old_le.ksy",
      "endian": "le"
    },
    "content": "meta:\n  id: cpio_old_le\n  title: cpio archive, old binary variant, little-endian\n  file-extension: cpio\n  xref:\n    forensicswiki: cpio\n    justsolve: Cpio\n    mime: application/x-cpio\n    pronom: fmt/635\n    wikidata: Q285296\n  license: CC0-1.0\n  endian: le\nseq:\n  - id: files\n    type: file\n    repeat: eos\ntypes:\n  file:\n    seq:\n      - id: header\n        type: file_header\n      - id: path_name\n        size: header.path_name_size - 1\n      - id: string_terminator\n        contents: [0x00]\n      - id: path_name_padding\n        contents: [0x00]\n        if: header.path_name_size % 2 == 1\n      - id: file_data\n        size: header.file_size.value\n      - id: file_data_padding\n        contents: [0x00]\n        if: header.file_size.value % 2 == 1\n      - id: end_of_file_padding\n        size-eos: true\n        if: path_name == [0x54, 0x52, 0x41, 0x49, 0x4c, 0x45, 0x52, 0x21, 0x21, 0x21] and header.file_size.value == 0\n  file_header:\n    seq:\n      - id: magic\n        contents: [0xC7, 0x71]\n      - id: device_number\n        type: u2\n      - id: inode_number\n        type: u2\n      - id: mode\n        type: u2\n      - id: user_id\n        type: u2\n      - id: group_id\n        type: u2\n      - id: number_of_links\n        type: u2\n      - id: r_device_number\n        type: u2\n      - id: modification_time\n        type: four_byte_unsigned_integer\n      - id: path_name_size\n        type: u2\n      - id: file_size\n        type: four_byte_unsigned_integer\n  four_byte_unsigned_integer:\n    seq:\n      - id: most_significant_bits\n        type: u2\n      - id: least_significant_bits\n        type: u2\n    instances:\n      value:\n        value: least_significant_bits + (most_significant_bits << 16)\n"
  },
  {
    "id": "ksy_gzip",
    "name": "Gzip",
    "category": "Archives",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "gz"
      ],
      "description": "",
      "originalCategory": "archive",
      "filePath": "archive/gzip.ksy",
      "signature": {
        "offset": 0,
        "bytes": [
          31,
          139
        ]
      },
      "endian": "le"
    },
    "content": "meta:\n  id: gzip\n  file-extension: gz\n  xref:\n    forensicswiki: gzip\n    justsolve: Gzip\n    mime: application/gzip\n    pronom: x-fmt/266\n    rfc: 1952\n    wikidata: Q10287816\n  license: CC0-1.0\n  endian: le\ndoc: |\n  Gzip is a popular and standard single-file archiving format. It\n  essentially provides a container that stores original file name,\n  timestamp and a few other things (like optional comment), basic\n  CRCs, etc, and a file compressed by a chosen compression algorithm.\n\n  As of 2019, there is actually only one working solution for\n  compression algorithms, so it's typically raw DEFLATE stream\n  (without zlib header) in all gzipped files.\ndoc-ref: https://www.rfc-editor.org/rfc/rfc1952\nseq:\n  - id: magic\n    -orig-id: ID1, ID2\n    contents: [0x1f, 0x8b]\n  - id: compression_method\n    -orig-id: CM\n    type: u1\n    enum: compression_methods\n    doc: |\n      Compression method used to compress file body. In practice, only\n      one method is widely used: 8 = deflate.\n  - id: flags\n    -orig-id: FLG\n    type: flags\n  - id: mod_time\n    -orig-id: MTIME\n    type: u4\n    doc: Last modification time of a file archived in UNIX timestamp format.\n  - id: extra_flags\n    -orig-id: XFL\n    type:\n      switch-on: compression_method\n      cases:\n        'compression_methods::deflate': extra_flags_deflate\n    doc: Extra flags, specific to compression method chosen.\n  - id: os\n    -orig-id: OS\n    type: u1\n    enum: oses\n    doc: OS used to compress this file.\n  - id: extras\n    type: extras\n    if: flags.has_extra\n  - id: name\n    terminator: 0\n    if: flags.has_name\n  - id: comment\n    terminator: 0\n    if: flags.has_comment\n  - id: header_crc16\n    type: u2\n    if: flags.has_header_crc\n  - id: body\n    size: _io.size - _io.pos - 8\n    doc: |\n      Compressed body of a file archived. Note that we don't make an\n      attempt to decompress it here.\n  - id: body_crc32\n    -orig-id: CRC32\n    type: u4\n    doc: |\n      CRC32 checksum of an uncompressed file body\n  - id: len_uncompressed\n    -orig-id: ISIZE\n    type: u4\n    doc: |\n      Size of original uncompressed data in bytes (truncated to 32\n      bits).\nenums:\n  compression_methods:\n    8: deflate\n  oses:\n    0:\n      id: fat\n      doc: FAT filesystem (MS-DOS, OS/2, NT/Win32)\n    1:\n      id: amiga\n      doc: Amiga\n    2:\n      id: vms\n      doc: VMS (or OpenVMS)\n    3:\n      id: unix\n      doc: Unix\n    4:\n      id: vm_cms\n      doc: VM/CMS\n    5:\n      id: atari_tos\n      doc: Atari TOS\n    6:\n      id: hpfs\n      doc: HPFS filesystem (OS/2, NT)\n    7:\n      id: macintosh\n      doc: Macintosh\n    8:\n      id: z_system\n      doc: Z-System\n    9:\n      id: cp_m\n      doc: CP/M\n    10:\n      id: tops_20\n      doc: TOPS-20\n    11:\n      id: ntfs\n      doc: NTFS filesystem (NT)\n    12:\n      id: qdos\n      doc: QDOS\n    13:\n      id: acorn_riscos\n      doc: Acorn RISCOS\n    255:\n      id: unknown\ntypes:\n  flags:\n    seq:\n      - id: reserved1\n        type: b3\n      - id: has_comment\n        -orig-id: FCOMMENT\n        type: b1\n      - id: has_name\n        -orig-id: FNAME\n        type: b1\n      - id: has_extra\n        -orig-id: FEXTRA\n        type: b1\n        doc: If true, optional extra fields are present in the archive.\n      - id: has_header_crc\n        -orig-id: FHCRC\n        type: b1\n        doc: |\n          If true, this archive includes a CRC16 checksum for the header.\n      - id: is_text\n        -orig-id: FTEXT\n        type: b1\n        doc: |\n          If true, file inside this archive is a text file from\n          compressor's point of view.\n  extra_flags_deflate:\n    seq:\n      - id: compression_strength\n        type: u1\n        enum: compression_strengths\n    enums:\n      compression_strengths:\n        2: best\n        4: fast\n  extras:\n    seq:\n      - id: len_subfields\n        -orig-id: XLEN\n        type: u2\n      - id: subfields\n        size: len_subfields\n        type: subfields\n  subfields:\n    doc: |\n      Container for many subfields, constrained by size of stream.\n    seq:\n      - id: entries\n        type: subfield\n        repeat: eos\n  subfield:\n    doc: |\n      Every subfield follows typical [TLV scheme](https://en.wikipedia.org/wiki/Type-length-value):\n\n      * `id` serves role of \"T\"ype\n      * `len_data` serves role of \"L\"ength\n      * `data` serves role of \"V\"alue\n\n      This way it's possible to for arbitrary parser to skip over\n      subfields it does not support.\n    seq:\n      - id: id\n        -orig-id: SI1, SI2\n        type: u2\n        doc: Subfield ID, typically two ASCII letters.\n      - id: len_data\n        type: u2\n      - id: data\n        size: len_data\n"
  },
  {
    "id": "ksy_lzh",
    "name": "Lzh",
    "category": "Archives",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "lzh"
      ],
      "description": "",
      "originalCategory": "archive",
      "filePath": "archive/lzh.ksy",
      "endian": "le"
    },
    "content": "meta:\n  id: lzh\n  application: LHA (AKA LHarc) by Yoshizaki Haruyasu\n  file-extension: lzh\n  xref:\n    justsolve: LHA\n    pronom: fmt/626\n    wikidata: Q368782\n  license: CC0-1.0\n  imports:\n    - /common/dos_datetime\n  endian: le\ndoc: |\n  LHA (LHarc, LZH) is a file format used by a popular freeware\n  eponymous archiver, created in 1988 by Haruyasu Yoshizaki. Over the\n  years, many ports and implementations were developed, sporting many\n  extensions to original 1988 LZH.\n\n  File format is pretty simple and essentially consists of a stream of\n  records.\nseq:\n  - id: entries\n    type: record\n    repeat: eos\ntypes:\n  record:\n    seq:\n      - id: header_len\n        type: u1\n      - id: file_record\n        type: file_record\n        if: header_len > 0\n  file_record:\n    seq:\n      - id: header\n        size: _parent.header_len - 1\n        type: header\n      - id: file_uncompr_crc16\n        type: u2\n        if: header.header1.lha_level == 0\n      - id: body\n        size: header.header1.file_size_compr\n  header:\n    seq:\n      - id: header1\n        type: header1\n        doc: >\n          Level-neutral header, same for all LHA levels. Subsequent\n          fields order and meaning varies, based on LHA level\n          specified in this header.\n      - id: filename_len\n        type: u1\n        if: header1.lha_level == 0\n      - id: filename\n        type: str\n        size: filename_len\n        encoding: ASCII\n        if: header1.lha_level == 0\n      - id: file_uncompr_crc16\n        type: u2\n        if: header1.lha_level == 2\n      - id: os\n        type: u1\n        if: header1.lha_level == 2\n      - id: ext_header_size\n        type: u2\n        if: header1.lha_level == 2\n  header1:\n    seq:\n      - id: header_checksum\n        type: u1\n      - id: method_id\n        type: str\n        size: 5\n        encoding: ASCII\n      - id: file_size_compr\n        type: u4\n        doc: Compressed file size\n      - id: file_size_uncompr\n        type: u4\n        doc: Uncompressed file size\n      - id: file_timestamp\n        size: 4\n        type: dos_datetime\n        doc: Original file date/time\n      - id: attr\n        type: u1\n        doc: File or directory attribute\n      - id: lha_level\n        type: u1\n"
  },
  {
    "id": "ksy_mozilla_mar",
    "name": "Mozilla ARchive",
    "category": "Archives",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "mar"
      ],
      "description": "Mozilla ARchive",
      "originalCategory": "archive",
      "filePath": "archive/mozilla_mar.ksy",
      "signature": {
        "offset": 0,
        "bytes": [
          77,
          65,
          82,
          49
        ]
      },
      "endian": "be"
    },
    "content": "meta:\n  id: mozilla_mar\n  title: Mozilla ARchive\n  file-extension: mar\n  xref:\n    justsolve: Mozilla_Archive\n    wikidata: Q28777700\n  license: CC0-1.0\n  endian: be\ndoc: |\n  Mozilla ARchive file is Mozilla's own archive format to distribute software updates.\n  Test files can be found on Mozilla's FTP site, for example:\n\n  <http://ftp.mozilla.org/pub/firefox/nightly/partials/>\ndoc-ref: https://wiki.mozilla.org/Software_Update:MAR\nseq:\n  - id: magic\n    contents: \"MAR1\"\n  - id: ofs_index\n    -orig-id: OffsetToIndex\n    type: u4\n  - id: file_size\n    -orig-id: FileSize\n    type: u8\n  - id: len_signatures\n    -orig-id: NumSignatures\n    type: u4\n  - id: signatures\n    type: signature\n    repeat: expr\n    repeat-expr: len_signatures\n  - id: len_additional_sections\n    -orig-id: NumAdditionalSections\n    type: u4\n  - id: additional_sections\n    type: additional_section\n    repeat: expr\n    repeat-expr: len_additional_sections\ninstances:\n  index:\n    pos: ofs_index\n    type: mar_index\ntypes:\n  signature:\n    seq:\n      - id: algorithm\n        -orig-id: SignatureAlgorithmID\n        type: u4\n        enum: signature_algorithms\n      - id: len_signature\n        -orig-id: SignatureSize\n        type: u4\n      - id: signature\n        size: len_signature\n  additional_section:\n    seq:\n      - id: len_block\n        type: u4\n      - id: block_identifier\n        -orig-id: BlockIdentifier\n        type: u4\n        enum: block_identifiers\n      - id: bytes\n        size: len_block - len_block._sizeof - block_identifier._sizeof\n        type:\n          switch-on: block_identifier\n          cases:\n            block_identifiers::product_information: product_information_block\n  mar_index:\n    seq:\n      - id: len_index\n        -orig-id: IndexSize\n        type: u4\n      - id: index_entries\n        type: index_entries\n        size: len_index\n  index_entries:\n    seq:\n      - id: index_entry\n        type: index_entry\n        repeat: eos\n  index_entry:\n    seq:\n      - id: ofs_content\n        -orig-id: OffsetToContent\n        type: u4\n      - id: len_content\n        -orig-id: ContentSize\n        type: u4\n      - id: flags\n        type: u4\n        doc: File permission bits (in standard unix-style format).\n      - id: file_name\n        -orig-id: FileName\n        type: strz\n        encoding: UTF-8\n    instances:\n      body:\n        pos: ofs_content\n        io: _root._io\n        size: len_content\n  product_information_block:\n    seq:\n      - id: mar_channel_name\n        -orig-id: MARChannelName\n        size: 64\n        type: strz\n        encoding: UTF-8\n      - id: product_version\n        -orig-id: ProductVersion\n        size: 32\n        type: strz\n        encoding: UTF-8\nenums:\n  signature_algorithms:\n    1: rsa_pkcs1_sha1\n    2: rsa_pkcs1_sha384\n  block_identifiers:\n    1: product_information\n"
  },
  {
    "id": "ksy_phar_without_stub",
    "name": "PHP phar archive (without stub)",
    "category": "Archives",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "phar"
      ],
      "description": "PHP phar archive (without stub)",
      "originalCategory": "archive",
      "filePath": "archive/phar_without_stub.ksy",
      "endian": "le"
    },
    "content": "meta:\n  id: phar_without_stub\n  title: PHP phar archive (without stub)\n  application: PHP\n  file-extension: phar\n  xref:\n    wikidata: Q1269709\n  license: CC0-1.0\n  ks-version: 0.9\n  imports:\n    - /serialization/php_serialized_value\n  endian: le\ndoc: |\n  A phar (PHP archive) file. The phar format is a custom archive format\n  from the PHP ecosystem that is used to package a complete PHP library\n  or application into a single self-contained archive.\n  All phar archives start with an executable PHP stub, which can be used to\n  allow executing or including phar files as if they were regular PHP scripts.\n  PHP 5.3 and later include the phar extension, which adds native support for\n  reading and manipulating phar files.\n\n  The phar format was originally developed as part of the PEAR library\n  PHP_Archive, first released in 2005. Later, a native PHP extension\n  named \"phar\" was developed, which was first released on PECL in 2007,\n  and is included with PHP 5.3 and later. The phar extension has effectively\n  superseded the PHP_Archive library, which has not been updated since 2010.\n  The phar extension is also no longer released independently on PECL;\n  it is now developed and released as part of PHP itself.\n\n  Because of current limitations in Kaitai Struct\n  (seekaitai-io/kaitai_struct#158 and kaitai-io/kaitai_struct#538),\n  the executable PHP stub that precedes the rest of the archive is not handled\n  by this spec. Before parsing a phar using this spec, the stub must be\n  removed manually.\n\n  A phar's stub is terminated by the special token `__HALT_COMPILER();`\n  (which may be followed by at most one space, the PHP tag end `?>`,\n  and an optional line terminator). The stub termination sequence is\n  immediately followed by the remaining parts of the phar format,\n  as described in this spec.\n\n  The phar stub usually contains code that loads the phar and runs\n  a contained PHP file, but this is not required. A minimal valid phar stub\n  is `<?php __HALT_COMPILER();` - such a stub makes it impossible to execute\n  the phar directly, but still allows loading or manipulating it using the\n  phar extension.\n\n  Note: The phar format does not specify any encoding for text fields\n  (stub, alias name, and all file names), so these fields may contain arbitrary\n  binary data. The actual text encoding used in a specific phar file usually\n  depends on the application that created the phar, and on the\n  standard encoding of the system on which the phar was created.\ndoc-ref:\n  - 'https://www.php.net/manual/en/phar.fileformat.php'\n  - 'https://github.com/php/php-src/tree/master/ext/phar'\n  - 'https://svn.php.net/viewvc/pecl/phar/'\n  - 'https://svn.php.net/viewvc/pear/packages/PHP_Archive/'\nseq:\n  - id: manifest\n    type: manifest\n    doc: |\n      The archive's manifest, containing general metadata about the archive\n      and its files.\n  - id: files\n    size: manifest.file_entries[_index].len_data_compressed\n    repeat: expr\n    repeat-expr: manifest.num_files\n    doc: |\n      The contents of each file in the archive (possibly compressed,\n      as indicated by the file's flags in the manifest). The files are stored\n      in the same order as they appear in the manifest.\n  - id: signature\n    type: signature\n    size-eos: true\n    if: manifest.flags.has_signature\n    doc: |\n      The archive's signature - a digest of all archive data before\n      the signature itself.\n\n      Note: Almost all of the available \"signature\" types are actually hashes,\n      not signatures, and cannot be used to verify that the archive has not\n      been tampered with. Only the OpenSSL signature type is a true\n      cryptographic signature.\nenums:\n  signature_type:\n    0x1:\n      id: md5\n      -orig-id: PHAR_SIG_MD5\n      doc: Indicates an MD5 hash.\n    0x2:\n      id: sha1\n      -orig-id: PHAR_SIG_SHA1\n      doc: Indicates a SHA-1 hash.\n    0x4:\n      id: sha256\n      -orig-id: PHAR_SIG_SHA256\n      doc: |\n        Indicates a SHA-256 hash. Available since API version 1.1.0,\n        PHP_Archive 0.12.0 and phar extension 1.1.0.\n    0x8:\n      id: sha512\n      -orig-id: PHAR_SIG_SHA512\n      doc: |\n        Indicates a SHA-512 hash. Available since API version 1.1.0,\n        PHP_Archive 0.12.0 and phar extension 1.1.0.\n    0x10:\n      id: openssl\n      -orig-id: PHAR_SIG_OPENSSL\n      doc: |\n        Indicates an OpenSSL signature. Available since API version 1.1.1,\n        PHP_Archive 0.12.0 (even though it claims to only support\n        API version 1.1.0) and phar extension 1.3.0. This type is not\n        documented in the phar extension's documentation of the phar format.\n\n        Note: In older versions of the phar extension, this value was used\n        for an undocumented and unimplemented \"PGP\" signature type\n        (`PHAR_SIG_PGP`).\ntypes:\n  serialized_value:\n    seq:\n      - id: raw\n        size-eos: true\n        doc: The serialized value, as a raw byte array.\n    instances:\n      parsed:\n        pos: 0\n        type: php_serialized_value\n        doc: The serialized value, parsed as a structure.\n  file_flags:\n    seq:\n      - id: value\n        type: u4\n        doc: The unparsed flag bits.\n    instances:\n      permissions:\n        value: value & 0x1ff\n        -orig-id: PHAR_ENT_PERM_MASK\n        doc: The file's permission bits.\n      zlib_compressed:\n        value: (value & 0x1000) != 0\n        -orig-id: PHAR_ENT_COMPRESSED_GZ\n        doc: Whether this file's data is stored using zlib compression.\n      bzip2_compressed:\n        value: (value & 0x2000) != 0\n        -orig-id: PHAR_ENT_COMPRESSED_BZ2\n        doc: Whether this file's data is stored using bzip2 compression.\n  file_entry:\n    seq:\n      - id: len_filename\n        type: u4\n        doc: The length of the file name, in bytes.\n      - id: filename\n        size: len_filename\n        doc: |\n          The name of this file. If the name ends with a slash, this entry\n          represents a directory, otherwise a regular file. Directory entries\n          are supported since phar API version 1.1.1.\n          (Explicit directory entries are only needed for empty directories.\n          Non-empty directories are implied by the files located inside them.)\n      - id: len_data_uncompressed\n        type: u4\n        doc: The length of the file's data when uncompressed, in bytes.\n      - id: timestamp\n        type: u4\n        doc: |\n          The time at which the file was added or last updated, as a\n          Unix timestamp.\n      - id: len_data_compressed\n        type: u4\n        doc: The length of the file's data when compressed, in bytes.\n      - id: crc32\n        type: u4\n        doc: The CRC32 checksum of the file's uncompressed data.\n      - id: flags\n        type: file_flags\n        doc: Flags for this file.\n      - id: len_metadata\n        type: u4\n        doc: The length of the metadata, in bytes, or 0 if there is none.\n      - id: metadata\n        size: len_metadata\n        type: serialized_value\n        if: len_metadata != 0\n        doc: |\n          Metadata for this file, in the format used by PHP's\n          `serialize` function. The meaning of the serialized data is not\n          specified further, it may be used to store arbitrary custom data\n          about the file.\n  api_version:\n    meta:\n      endian: be\n    doc: |\n      A phar API version number. This version number is meant to indicate\n      which features are used in a specific phar, so that tools reading\n      the phar can easily check that they support all necessary features.\n\n      The following API versions exist so far:\n\n      * 0.5, 0.6, 0.7, 0.7.1: The first official API versions. At this point,\n        the phar format was only used by the PHP_Archive library, and the\n        API version numbers were identical to the PHP_Archive versions that\n        supported them. Development of the native phar extension started around\n        API version 0.7. These API versions could only be queried using the\n        `PHP_Archive::APIversion()` method, but were not stored physically\n        in archives. These API versions are not supported by this spec.\n      * 0.8.0: Used by PHP_Archive 0.8.0 (released 2006-07-18) and\n        later development versions of the phar extension. This is the first\n        version number to be physically stored in archives. This API version\n        is not supported by this spec.\n      * 0.9.0: Used by later development/early beta versions of the\n        phar extension. Also temporarily used by PHP_Archive 0.9.0\n        (released 2006-12-15), but reverted back to API version 0.8.0 in\n        PHP_Archive 0.9.1 (released 2007-01-05).\n      * 1.0.0: Supported since PHP_Archive 0.10.0 (released 2007-05-29)\n        and phar extension 1.0.0 (released 2007-03-28). This is the first\n        stable, forwards-compatible and documented version of the format.\n      * 1.1.0: Supported since PHP_Archive 0.12.0 (released 2015-07-06)\n        and phar extension 1.1.0 (released 2007-04-12). Adds SHA-256 and\n        SHA-512 signature types.\n      * 1.1.1: Supported since phar extension 2.0.0 (released 2009-07-29 and\n        included with PHP 5.3 and later). (PHP_Archive 0.12.0 also supports\n        all features from API verison 1.1.1, but it reports API version 1.1.0.)\n        Adds the OpenSSL signature type and support for storing\n        empty directories.\n    seq:\n      - id: release\n        type: b4\n      - id: major\n        type: b4\n      - id: minor\n        type: b4\n      - id: unused\n        type: b4\n  global_flags:\n    seq:\n      - id: value\n        type: u4\n        doc: The unparsed flag bits.\n    instances:\n      any_zlib_compressed:\n        value: (value & 0x1000) != 0\n        -orig-id: PHAR_HDR_COMPRESSED_GZ\n        doc: |\n          Whether any of the files in this phar are stored using\n          zlib compression.\n      any_bzip2_compressed:\n        value: (value & 0x2000) != 0\n        -orig-id: PHAR_HDR_COMPRESSED_BZ2\n        doc: |\n          Whether any of the files in this phar are stored using\n          bzip2 compression.\n      has_signature:\n        value: (value & 0x10000) != 0\n        -orig-id: PHAR_HDR_SIGNATURE\n        doc: Whether this phar contains a signature.\n  manifest:\n    seq:\n      - id: len_manifest\n        type: u4\n        doc: |\n          The length of the manifest, in bytes.\n\n          Note: The phar extension does not allow reading manifests\n          larger than 100 MiB.\n      - id: num_files\n        type: u4\n        doc: The number of files in this phar.\n      - id: api_version\n        type: api_version\n        doc: The API version used by this phar manifest.\n      - id: flags\n        type: global_flags\n        doc: Global flags for this phar.\n      - id: len_alias\n        type: u4\n        doc: The length of the alias, in bytes.\n      - id: alias\n        size: len_alias\n        doc: |\n          The phar's alias, i. e. the name under which it is loaded into PHP.\n      - id: len_metadata\n        type: u4\n        doc: The size of the metadata, in bytes, or 0 if there is none.\n      - id: metadata\n        size: len_metadata\n        type: serialized_value\n        if: len_metadata != 0\n        doc: |\n          Metadata for this phar, in the format used by PHP's\n          `serialize` function. The meaning of the serialized data is not\n          specified further, it may be used to store arbitrary custom data\n          about the archive.\n      - id: file_entries\n        type: file_entry\n        repeat: expr\n        repeat-expr: num_files\n        doc: Manifest entries for the files contained in this phar.\n  signature:\n    seq:\n      - id: data\n        size: _io.size - _io.pos - 8\n        doc: |\n          The signature data. The size and contents depend on the\n          signature type.\n      - id: type\n        type: u4\n        enum: signature_type\n        doc: The signature type.\n      - id: magic\n        contents: \"GBMB\"\n"
  },
  {
    "id": "ksy_rar",
    "name": "RAR (Roshall ARchiver) archive files",
    "category": "Archives",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "rar"
      ],
      "description": "RAR (Roshall ARchiver) archive files",
      "originalCategory": "archive",
      "filePath": "archive/rar.ksy",
      "endian": "le"
    },
    "content": "meta:\n  id: rar\n  title: RAR (Roshall ARchiver) archive files\n  application: RAR archiver\n  file-extension: rar\n  xref:\n    forensicswiki: rar\n    justsolve: RAR\n    loc: fdd000450\n    mime:\n      - application/vnd.rar\n      - application/x-rar-compressed\n    pronom:\n      - x-fmt/264 # RAR 2.0\n      - fmt/411 # RAR 2.9\n      - fmt/613 # RAR 5.0\n    wikidata: Q243303\n  license: CC0-1.0\n  ks-version: 0.7\n  imports:\n    - /common/dos_datetime\n  endian: le\ndoc: |\n  RAR is a archive format used by popular proprietary RAR archiver,\n  created by Eugene Roshal. There are two major versions of format\n  (v1.5-4.0 and RAR v5+).\n\n  File format essentially consists of a linear sequence of\n  blocks. Each block has fixed header and custom body (that depends on\n  block type), so it's possible to skip block even if one doesn't know\n  how to process a certain block type.\ndoc-ref: http://acritum.com/winrar/rar-format\nseq:\n  - id: magic\n    type: magic_signature\n    doc: File format signature to validate that it is indeed a RAR archive\n  - id: blocks\n    type:\n      switch-on: magic.version\n      cases:\n        0: block\n        1: block_v5\n    repeat: eos\n    doc: Sequence of blocks that constitute the RAR file\ntypes:\n  magic_signature:\n    doc: |\n      RAR uses either 7-byte magic for RAR versions 1.5 to 4.0, and\n      8-byte magic (and pretty different block format) for v5+. This\n      type would parse and validate both versions of signature. Note\n      that actually this signature is a valid RAR \"block\": in theory,\n      one can omit signature reading at all, and read this normally,\n      as a block, if exact RAR version is known (and thus it's\n      possible to choose correct block format).\n    seq:\n      - id: magic1\n        contents:\n          - 'Rar!'\n          - 0x1a\n          - 0x07\n        doc: \"Fixed part of file's magic signature that doesn't change with RAR version\"\n      - id: version\n        type: u1\n        doc: |\n          Variable part of magic signature: 0 means old (RAR 1.5-4.0)\n          format, 1 means new (RAR 5+) format\n      - id: magic3\n        contents: [0]\n        if: version == 1\n        doc: New format (RAR 5+) magic contains extra byte\n  block:\n    doc: |\n      Basic block that RAR files consist of. There are several block\n      types (see `block_type`), which have different `body` and\n      `add_body`.\n    seq:\n      - id: crc16\n        type: u2\n        doc: CRC16 of whole block or some part of it (depends on block type)\n      - id: block_type\n        type: u1\n        enum: block_types\n      - id: flags\n        type: u2\n      - id: block_size\n        type: u2\n        doc: Size of block (header + body, but without additional content)\n      - id: add_size\n        type: u4\n        if: has_add\n        doc: Size of additional content in this block\n      - id: body\n        size: body_size\n        type:\n          switch-on: block_type\n          cases:\n            'block_types::file_header': block_file_header\n      - id: add_body\n        size: add_size\n        if: has_add\n        doc: Additional content in this block\n    instances:\n      has_add:\n        value: 'flags & 0x8000 != 0'\n        doc: True if block has additional content attached to it\n      header_size:\n        value: 'has_add ? 11 : 7'\n      body_size:\n        value: block_size - header_size\n  block_file_header:\n    seq:\n      - id: low_unp_size\n        type: u4\n        doc: Uncompressed file size (lower 32 bits, if 64-bit header flag is present)\n      - id: host_os\n        type: u1\n        enum: oses\n        doc: Operating system used for archiving\n      - id: file_crc32\n        type: u4\n      - id: file_time\n        size: 4\n        type: dos_datetime\n        doc: Date and time in standard MS DOS format\n      - id: rar_version\n        type: u1\n        doc: RAR version needed to extract file (Version number is encoded as 10 * Major version + minor version.)\n      - id: method\n        type: u1\n        enum: methods\n        doc: Compression method\n      - id: name_size\n        type: u2\n        doc: File name size\n      - id: attr\n        type: u4\n        doc: File attributes\n      - id: high_pack_size\n        type: u4\n        doc: Compressed file size, high 32 bits, only if 64-bit header flag is present\n        if: '_parent.flags & 0x100 != 0'\n      - id: file_name\n        size: name_size\n      - id: salt\n        type: u8\n        if: '_parent.flags & 0x400 != 0'\n#     - id: ext_time\n#       variable size\n#       if: '_parent.flags & 0x1000 != 0'\n  block_v5:\n    {}\n    # not yet implemented\nenums:\n  block_types:\n    0x72: marker\n    0x73: archive_header\n    0x74: file_header\n    0x75: old_style_comment_header\n    0x76: old_style_authenticity_info_76\n    0x77: old_style_subblock\n    0x78: old_style_recovery_record\n    0x79: old_style_authenticity_info_79\n    0x7a: subblock\n    0x7b: terminator\n  oses:\n    0: ms_dos\n    1: os_2\n    2: windows\n    3: unix\n    4: mac_os\n    5: beos\n  methods:\n    0x30: store\n    0x31: fastest\n    0x32: fast\n    0x33: normal\n    0x34: good\n    0x35: best\n"
  },
  {
    "id": "ksy_respack",
    "name": "ResPack",
    "category": "Archives",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "cfg"
      ],
      "description": "ResPack",
      "originalCategory": "archive",
      "filePath": "archive/respack.ksy",
      "endian": "le"
    },
    "content": "meta:\n  id: respack\n  title: ResPack\n  file-extension: cfg\n  license: CC0-1.0\n  encoding: UTF-8\n  endian: le\ndoc: |\n  Resource file found in CPB firmware archives, mostly used on older CoolPad\n  phones and/or tablets. The only observed files are called \"ResPack.cfg\".\nseq:\n  - id: header\n    type: header\n  - id: json\n    size: header.len_json\n    type: str\ntypes:\n  header:\n    seq:\n      - id: magic\n        contents: \"RS\"\n      - id: unknown\n        size: 8\n      - id: len_json\n        type: u4\n      - id: md5\n        size: 32\n        type: str\n        doc: MD5 of data that follows the header\n"
  },
  {
    "id": "ksy_rpm",
    "name": "RPM package file",
    "category": "Archives",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "rpm",
        "srpm",
        "src.rpm",
        "drpm"
      ],
      "description": "RPM package file",
      "originalCategory": "archive",
      "filePath": "archive/rpm.ksy",
      "endian": "be"
    },
    "content": "meta:\n  id: rpm\n  title: RPM package file\n  application: RPM Package Manager\n  file-extension:\n    - rpm\n    - srpm\n    - src.rpm\n    - drpm\n  xref:\n    justsolve: RPM\n    mime: application/x-rpm\n    pronom: fmt/795 # v3\n    wikidata: Q492650\n  license: CC0-1.0\n  ks-version: 0.9\n  encoding: UTF-8\n  endian: be\ndoc: |\n  This parser is for the RPM version 3 file format which is the current version\n  of the file format used by RPM 2.1 and later (including RPM version 4.x, which\n  is the current version of the RPM tool). There are historical versions of the\n  RPM file format, as well as a currently abandoned fork (rpm5). These formats\n  are not covered by this specification.\ndoc-ref:\n  - https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/format.md\n  - https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/tags.md\n  - https://refspecs.linuxbase.org/LSB_5.0.0/LSB-Core-generic/LSB-Core-generic/pkgformat.html\n  - http://ftp.rpm.org/max-rpm/\nseq:\n  - id: lead\n    type: lead\n  - id: signature\n    type: header(true)\n  - id: signature_padding\n    size: (- _io.pos) % 8\n  - size: 0\n    if: ofs_header < 0\n  - id: header\n    type: header(false)\n  - size: 0\n    if: ofs_payload < 0\n  - id: signature_tags_steps\n    type: 'signature_tags_step(_index, _index < 1 ? -1 : signature_tags_steps[_index - 1].size_tag_idx)'\n    repeat: expr\n    repeat-expr: signature.header_record.num_index_records\ninstances:\n  payload:\n    pos: ofs_payload\n    size: len_payload\n    if: has_signature_size_tag\n  len_payload:\n    value: 'signature_size_tag.body.as<record_type_uint32>.values[0] - len_header'\n    if: has_signature_size_tag\n  len_header:\n    value: ofs_payload - ofs_header\n  ofs_header:\n    value: _io.pos\n  ofs_payload:\n    value: _io.pos\n  has_signature_size_tag:\n    value: signature_tags_steps.last.size_tag_idx != -1\n  signature_size_tag:\n    value: signature.index_records[signature_tags_steps.last.size_tag_idx]\n    if: has_signature_size_tag\ntypes:\n  signature_tags_step:\n    params:\n      - id: idx\n        type: s4\n      - id: prev_size_tag_idx\n        type: s4\n    instances:\n      size_tag_idx:\n        value: |\n          prev_size_tag_idx != -1 ? prev_size_tag_idx :\n            (_parent.signature.index_records[idx].signature_tag == signature_tags::size\n            and _parent.signature.index_records[idx].record_type == record_types::uint32\n            and _parent.signature.index_records[idx].num_values >= 1 ? idx : -1)\n  dummy: {}\n  lead:\n    doc: |\n      In 2021, Panu Matilainen (a RPM developer) [described this\n      structure](https://github.com/kaitai-io/kaitai_struct_formats/pull/469#discussion_r718288192)\n      as follows:\n\n      > The lead as a structure is 25 years obsolete, the data there is\n      > meaningless. Seriously. Except to check for the magic to detect that\n      > it's an rpm file in the first place, just ignore everything in it.\n      > Literally everything.\n\n      The fields with `valid` constraints are important, because these are the\n      same validations that RPM does (which means that any valid `.rpm` file\n      must pass them), but otherwise you should not make decisions based on the\n      values given here.\n    seq:\n      - id: magic\n        contents: [0xed, 0xab, 0xee, 0xdb]\n      - id: version\n        type: rpm_version\n      - id: type\n        type: u2\n        enum: rpm_types\n      - id: architecture\n        -orig-id: archnum\n        type: u2\n        enum: architectures\n      - id: package_name\n        size: 66\n        type: strz\n      - id: os\n        -orig-id: osnum\n        type: u2\n        enum: operating_systems\n      - id: signature_type\n        type: u2\n        valid: 5\n      - id: reserved\n        size: 16\n  rpm_version:\n    seq:\n      - id: major\n        type: u1\n        valid:\n          min: 3\n          max: 4\n        doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/lib/rpmlead.c#L102\n      - id: minor\n        type: u1\n  header:\n    doc: |\n      header structure used for both the \"header\" and \"signature\", but some tag\n      values have different meanings in signature and header (hence they use\n      different enums)\n    params:\n      - id: is_signature\n        type: bool\n    seq:\n      - id: header_record\n        type: header_record\n      - id: index_records\n        type: header_index_record\n        repeat: expr\n        repeat-expr: header_record.num_index_records\n      - id: storage_section\n        size: header_record.len_storage_section\n        type: dummy\n    instances:\n      is_header:\n        value: not is_signature\n  header_index_record:\n    -webide-representation: '{signature_tag} {header_tag} [{record_type}]'\n    seq:\n      - id: tag_raw\n        type: u4\n        doc: prefer to access `signature_tag` and `header_tag` instead\n      - id: record_type\n        type: u4\n        enum: record_types\n      - id: ofs_body\n        type: u4\n      - id: count\n        type: u4\n        doc: internal; access `num_values` and `len_value` instead\n    instances:\n      signature_tag:\n        value: tag_raw\n        enum: signature_tags\n        if: _parent.is_signature\n      header_tag:\n        value: tag_raw\n        enum: header_tags\n        if: _parent.is_header\n      num_values:\n        value: count\n        if: record_type != record_types::bin\n      len_value:\n        value: count\n        if: record_type == record_types::bin\n      body:\n        io: _parent.storage_section._io\n        pos: ofs_body\n        type:\n          switch-on: record_type\n          cases:\n            record_types::char: record_type_uint8(num_values)\n            record_types::uint8: record_type_uint8(num_values)\n            record_types::uint16: record_type_uint16(num_values)\n            record_types::uint32: record_type_uint32(num_values)\n            record_types::uint64: record_type_uint64(num_values)\n            record_types::string: record_type_string\n            record_types::bin: record_type_bin(len_value)\n            record_types::string_array: record_type_string_array(num_values)\n            record_types::i18n_string: record_type_string_array(num_values)\n  record_type_uint8:\n    params:\n      - id: num_values\n        type: u4\n    seq:\n      - id: values\n        type: u1\n        repeat: expr\n        repeat-expr: num_values\n  record_type_uint16:\n    params:\n      - id: num_values\n        type: u4\n    seq:\n      - id: values\n        type: u2\n        repeat: expr\n        repeat-expr: num_values\n  record_type_uint32:\n    params:\n      - id: num_values\n        type: u4\n    seq:\n      - id: values\n        type: u4\n        repeat: expr\n        repeat-expr: num_values\n  record_type_uint64:\n    params:\n      - id: num_values\n        type: u4\n    seq:\n      - id: values\n        type: u8\n        repeat: expr\n        repeat-expr: num_values\n  record_type_string:\n    seq:\n      - id: values\n        type: strz\n        repeat: expr\n        repeat-expr: 1\n  record_type_bin:\n    params:\n      - id: len_value\n        type: u4\n    seq:\n      - id: values\n        size: len_value\n        repeat: expr\n        repeat-expr: 1\n  record_type_string_array:\n    params:\n      - id: num_values\n        type: u4\n    seq:\n      - id: values\n        type: strz\n        repeat: expr\n        repeat-expr: num_values\n  header_record:\n    seq:\n      - id: magic\n        contents: [0x8e, 0xad, 0xe8, 0x01]\n      - id: reserved\n        contents: [0, 0, 0, 0]\n      - id: num_index_records\n        -orig-id: nindex\n        type: u4\n        valid:\n          min: 1\n      - id: len_storage_section\n        -orig-id: hsize\n        type: u4\n        doc: |\n          Size of the storage area for the data\n          pointed to by the Index Records.\nenums:\n  rpm_types:\n    0: binary\n    1: source\n\n  # these come (mostly) from <https://github.com/rpm-software-management/rpm/blob/afad3167/rpmrc.in#L170>\n  # (see <https://ftp.osuosl.org/pub/rpm/max-rpm/s1-rpm-multi-build-install-detection.html#S3-RPM-MULTI-XXX-CANON>\n  # for `arch_canon` entry explanation)\n  #\n  # See also\n  #   - <https://github.com/eclipse/packager/blob/51ccdd3/rpm/src/main/java/org/eclipse/packager/rpm/Architecture.java>\n  #   - <https://github.com/craigwblake/redline/blob/15afff5/src/main/java/org/redline_rpm/header/Architecture.java>\n  #   - <https://web.archive.org/web/20210605105702/https://docs.fedoraproject.org/en-US/Fedora_Draft_Documentation/0.1/html/RPM_Guide/ch01s03.html>\n  architectures:\n    1:\n      id: x86\n      doc: x86 or x86_64\n    2:\n      id: alpha\n      doc: Alpha or Sparc64\n      doc-ref:\n        - https://github.com/eclipse/packager/blob/51ccdd3/rpm/src/main/java/org/eclipse/packager/rpm/Architecture.java#L24\n        - https://github.com/file/file/blob/9b2538d/magic/Magdir/rpm#L14\n        - https://github.com/rpm-software-management/rpm/blob/afad3167/rpmrc.in#L188-L197\n    3: sparc\n    4: mips\n    5: ppc\n    6: m68k\n    7:\n      id: sgi\n      -orig-id: IP\n      doc: SGI Inhouse Processors (IP)\n      doc-ref:\n        - https://github.com/file/file/blob/9b2538d/magic/Magdir/rpm#L19\n        - https://github.com/rpm-software-management/rpm/blob/afad3167/rpmrc.in#L219\n    8: rs6000\n    9: ia64\n    10:\n      id: sparc64\n      doc-ref:\n        - https://github.com/file/file/blob/9b2538d/magic/Magdir/rpm#L22\n        - https://github.com/craigwblake/redline/blob/15afff5/src/main/java/org/redline_rpm/header/Architecture.java#L15\n    11: mips64\n    12: arm\n    13:\n      id: m68k_mint\n      -orig-id: m68kmint\n      doc-ref:\n        - https://github.com/craigwblake/redline/blob/15afff5/src/main/java/org/redline_rpm/header/Architecture.java#L18\n        - https://github.com/rpm-software-management/rpm/blob/afad3167/rpmrc.in#L240-L247\n    14: s390\n    15: s390x\n    16: ppc64\n    17: sh\n    18: xtensa\n    19: aarch64\n    20:\n      id: mips_r6\n      -orig-id: mipsr6\n      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/rpmrc.in#L266-L267\n    21:\n      id: mips64_r6\n      -orig-id: mips64r6\n      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/rpmrc.in#L268-L269\n    22: riscv\n    23: loongarch64\n    255:\n      id: no_arch\n      -orig-id: noarch\n      doc: can be installed on any architecture\n      doc-ref:\n        - https://github.com/file/file/blob/9b2538d/magic/Magdir/rpm#L31\n        - https://github.com/rpm-software-management/rpm/blob/afad3167/lib/rpmrc.c#L1548\n  operating_systems:\n    # these come from <https://github.com/rpm-software-management/rpm/blob/afad3167/rpmrc.in#L277>\n    # in practice it will almost always be 1\n    1: linux\n    2: irix\n    255:\n      id: no_os\n      -orig-id: noos\n      doc: |\n        This value is pretty much a guess, based on that `archnum` and `osnum`\n        values are handled by the same function `getMachineInfo()` (see\n        `doc-ref` link) which uses 255 for an unknown value. Value\n        `architectures::no_arch` can be verified with the magic file of\n        `file(1)` and `.rpm` files that have `noarch` in their name, so it seems\n        reasonable that `no_os` (or \"`noos`\" originally) follows the same\n        pattern.\n\n        Moreover, this value is actually used in practice, see this sample file:\n        <https://github.com/craigwblake/redline/blob/15afff5/src/test/resources/rpm-3-1.0-1.somearch.rpm>\n      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/lib/rpmrc.c#L1548\n\n  signature_tags:\n    # Tags from [lib/rpmtag.h](https://github.com/rpm-software-management/rpm/blob/afad3167/include/rpm/rpmtag.h#L423).\n    # the first three are shared with header_tags\n    62:\n      id: signatures\n      -orig-id: HEADER_SIGNATURES\n    63:\n      id: header_immutable\n      -orig-id: HEADER_IMMUTABLE\n    100:\n      id: i18n_table\n      -orig-id: HEADER_I18NTABLE\n    # RPMSIGTAG_*\n    # 256: RPMTAG_SIG_BASE\n    264:\n      id: bad_sha1_1_obsolete\n      -orig-id: RPMSIGTAG_BADSHA1_1\n    265:\n      id: bad_sha1_2_obsolete\n      -orig-id: RPMSIGTAG_BADSHA1_2\n    # 266:\n    #   id: pubkeys_internal\n    #   -orig-id: RPMTAG_PUBKEYS\n    #   doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/tags.md#internal--special\n    267:\n      id: dsa\n      -orig-id: RPMSIGTAG_DSA\n    268:\n      id: rsa\n      -orig-id: RPMSIGTAG_RSA\n    269:\n      id: sha1\n      -orig-id: RPMSIGTAG_SHA1\n    270:\n      id: long_size\n      -orig-id: RPMSIGTAG_LONGSIZE\n    271:\n      id: long_archive_size\n      -orig-id: RPMSIGTAG_LONGARCHIVESIZE\n    # 272 - reserved\n    273:\n      id: sha256\n      -orig-id: RPMTAG_SHA256HEADER\n    274:\n      id: file_signatures\n      -orig-id: RPMSIGTAG_FILESIGNATURES\n    275:\n      id: file_signature_length\n      -orig-id: RPMSIGTAG_FILESIGNATURELENGTH\n    276:\n      id: verity_signatures\n      -orig-id: RPMTAG_VERITYSIGNATURES\n    277:\n      id: verity_signature_algo\n      -orig-id: RPMTAG_VERITYSIGNATUREALGO\n    1000:\n      id: size\n      -orig-id: RPMSIGTAG_SIZE\n      doc: Header + payload size (32bit) in bytes.\n    1001:\n      id: le_md5_1_obsolete\n      -orig-id: RPMSIGTAG_LEMD5_1\n      doc: MD5 broken on big-endian machines, take 1\n    1002:\n      id: pgp\n      -orig-id: RPMSIGTAG_PGP\n      doc: PGP 2.6.3 signature.\n    1003:\n      id: le_md5_2_obsolete\n      -orig-id: RPMSIGTAG_LEMD5_2\n      doc: MD5 broken on big-endian machines, take 2\n    1004:\n      id: md5\n      -orig-id: RPMSIGTAG_MD5\n      doc: MD5 signature\n    1005:\n      id: gpg\n      -orig-id: RPMSIGTAG_GPG\n      doc: GnuPG signature\n    1006:\n      id: pgp5_obsolete\n      -orig-id: RPMSIGTAG_PGP5\n    1007:\n      id: payload_size\n      -orig-id: RPMSIGTAG_PAYLOADSIZE\n      doc: Uncompressed payload size (32bit) in bytes.\n    1008:\n      id: reserved_space\n      -orig-id: RPMSIGTAG_RESERVEDSPACE\n      doc: Space reserved for signatures\n  header_tags:\n    # Tags from [include/rpm/rpmtag.h](https://github.com/rpm-software-management/rpm/blob/afad3167/include/rpm/rpmtag.h).\n    # This includes (almost) all tags. Some have `_unimplemented`, `_internal`\n    # or `_obsolete` suffix (if more than one applies, the first applicable in\n    # this order is used).\n    62:\n      id: signatures\n      -orig-id: HEADER_SIGNATURES\n    63:\n      id: header_immutable\n      -orig-id: HEADER_IMMUTABLE\n    100:\n      id: i18n_table\n      -orig-id: HEADER_I18NTABLE\n    # RPMTAG_*\n    1000:\n      id: name\n      -orig-id: RPMTAG_NAME\n      doc: Specifies the name of the package.\n    1001:\n      id: version\n      -orig-id: RPMTAG_VERSION\n      doc: Specifies the version of the package.\n    1002:\n      id: release\n      -orig-id: RPMTAG_RELEASE\n      doc: Specifies the release of the package.\n    1003:\n      id: epoch # from lib/rpmtag.h\n      -orig-id: RPMTAG_EPOCH\n    1004:\n      id: summary\n      -orig-id: RPMTAG_SUMMARY\n      doc: |\n        Specifies the summary description of the package. The summary\n        value pointed to by this index record contains a one line\n        description of the package.\n    1005:\n      id: description\n      -orig-id: RPMTAG_DESCRIPTION\n      doc: |\n        Specifies the description of the package. The description value\n        pointed to by this index record contains a full desription of\n        the package.\n    1006:\n      id: build_time\n      -orig-id: RPMTAG_BUILDTIME\n      doc: |\n        Specifies the time as seconds since the epoch\n        at which the package was built.\n    1007:\n      id: build_host\n      -orig-id: RPMTAG_BUILDHOST\n      doc: Specifies the hostname of the system on which the package was built.\n    1008:\n      id: install_time # from lib/rpmtag.h\n      -orig-id: RPMTAG_INSTALLTIME\n    1009:\n      id: size\n      -orig-id: RPMTAG_SIZE\n      doc: Specifies the sum of the sizes of the regular files in the archive.\n    1010:\n      id: distribution\n      -orig-id: RPMTAG_DISTRIBUTION\n      doc: Contains the name of the distribution on which the package was built.\n    1011:\n      id: vendor\n      -orig-id: RPMTAG_VENDOR\n      doc: Contains the name of the organization that produced the package.\n    1012:\n      id: gif_obsolete\n      -orig-id: RPMTAG_GIF\n      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/tags.md#deprecated--obsolete\n    1013:\n      id: xpm_obsolete\n      -orig-id: RPMTAG_XPM\n      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/tags.md#deprecated--obsolete\n    1014:\n      id: license\n      -orig-id: RPMTAG_LICENSE\n      doc: Specifies the license which applies to this package.\n    1015:\n      id: packager\n      -orig-id: RPMTAG_PACKAGER\n      doc: Identifies the tool used to build the package.\n    1016:\n      id: group\n      -orig-id: RPMTAG_GROUP\n      doc: Specifies the administrative group to which this package belongs.\n    1017:\n      id: changelog_internal\n      -orig-id: RPMTAG_CHANGELOG\n    1018:\n      id: source # from lib/rpmtag.h\n      -orig-id: RPMTAG_SOURCE\n    1019:\n      id: patch # from lib/rpmtag.h\n      -orig-id: RPMTAG_PATCH\n    1020:\n      id: url\n      -orig-id: RPMTAG_URL\n      doc: Generic package information URL.\n    1021:\n      id: os\n      -orig-id: RPMTAG_OS\n      doc: Specifies the OS of the package.\n    1022:\n      id: arch\n      -orig-id: RPMTAG_ARCH\n      doc: Specifies the architecture of the package.\n    1023:\n      id: pre_install_scriptlet\n      -orig-id: RPMTAG_PREIN\n      doc: |\n        Specifies the preinstall scriptlet. If present, then\n        `::pre_install_interpreter` shall also be present.\n    1024:\n      id: post_install_scriptlet\n      -orig-id: RPMTAG_POSTIN\n      doc: |\n        Specifies the postinstall scriptlet. If present, then\n        `::post_install_interpreter` shall also be present.\n    1025:\n      id: pre_uninstall_scriptlet\n      -orig-id: RPMTAG_PREUN\n      doc: |\n        Specifies the preuninstall scriptlet. If present, then\n        `::pre_uninstall_interpreter` shall also be present.\n    1026:\n      id: post_uninstall_scriptlet\n      -orig-id: RPMTAG_POSTUN\n      doc: |\n        Specifies the postuninstall scriptlet. If present, then\n        `::post_uninstall_interpreter` shall also be present.\n    1027:\n      id: old_file_names_obsolete\n      -orig-id: RPMTAG_OLDFILENAMES\n      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/tags.md#deprecated--obsolete\n    1028:\n      id: file_sizes\n      -orig-id: RPMTAG_FILESIZES\n      doc: Specifies the size of each file in the archive.\n    1029:\n      id: file_states # from lib/rpmtag.h\n      -orig-id: RPMTAG_FILESTATES\n    1030:\n      id: file_modes\n      -orig-id: RPMTAG_FILEMODES\n      doc: The mode of each file in the archive.\n    1031:\n      id: file_uids_internal\n      -orig-id: RPMTAG_FILEUIDS\n    1032:\n      id: file_gids_internal\n      -orig-id: RPMTAG_FILEGIDS\n    1033:\n      id: device_number\n      -orig-id: RPMTAG_FILERDEVS\n      doc: The device number from which the file was copied.\n    1034:\n      id: mtimes\n      -orig-id: RPMTAG_FILEMTIMES\n      doc: |\n        The modification time in seconds since the epoch\n        of each file in the archive.\n    1035:\n      id: file_digests\n      -orig-id: RPMTAG_FILEDIGESTS\n      doc: |\n        The ASCII representation of the MD5 sum of the corresponding\n        file contents. This value is empty if the corresponding archive\n        entry is not a regular file.\n    1036:\n      id: link_tos\n      -orig-id: RPMTAG_FILELINKTOS\n      doc: The target for a symlink, otherwise NULL.\n    1037:\n      id: file_flags\n      -orig-id: RPMTAG_FILEFLAGS\n      doc: |\n        Specifies the bit(s) to classify and control how files\n        are to be installed.\n    1038:\n      id: root_internal\n      -orig-id: RPMTAG_ROOT\n    1039:\n      id: file_owner\n      -orig-id: RPMTAG_FILEUSERNAME\n      doc: Specifies the owner of the corresponding file.\n    1040:\n      id: file_group\n      -orig-id: RPMTAG_FILEGROUPNAME\n      doc: Specifies the group of the corresponding file.\n    1041:\n      id: exclude_internal\n      -orig-id: RPMTAG_EXCLUDE\n    1042:\n      id: exclusive_internal\n      -orig-id: RPMTAG_EXCLUSIVE\n    1043:\n      id: icon_obsolete\n      -orig-id: RPMTAG_ICON\n      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/tags.md#deprecated--obsolete\n    1044:\n      id: source_rpm\n      -orig-id: RPMTAG_SOURCERPM\n      doc: Specifies the name of the source RPM.\n    1045:\n      id: file_verify_flags\n      -orig-id: RPMTAG_FILEVERIFYFLAGS\n      doc: |\n        Specifies the bit(s) to control how files are to be verified\n        after install, specifying which checks should be performed.\n    1046:\n      id: archive_size\n      -orig-id: RPMTAG_ARCHIVESIZE\n      doc: |\n        Specifies the uncompressed size of the Payload archive,\n        including the cpio headers.\n    1047:\n      id: provide_name\n      -orig-id: RPMTAG_PROVIDENAME\n      doc: The name of the dependency provided by this package.\n    1048:\n      id: require_flags\n      -orig-id: RPMTAG_REQUIREFLAGS\n      doc: Bits(s) to specify the dependency range and context.\n    1049:\n      id: require_name\n      -orig-id: RPMTAG_REQUIRENAME\n      doc: Indicates the dependencies for this package.\n    1050:\n      id: require_version\n      -orig-id: RPMTAG_REQUIREVERSION\n      doc: |\n        Indicates the versions associated with the values found\n        in the require_name index.\n    1051:\n      id: no_source # from lib/rpmtag.h\n      -orig-id: RPMTAG_NOSOURCE\n    1052:\n      id: no_patch # from lib/rpmtag.h\n      -orig-id: RPMTAG_NOPATCH\n    1053:\n      id: conflict_flags\n      -orig-id: RPMTAG_CONFLICTFLAGS\n      doc: Bits(s) to specify the conflict range and context.\n    1054:\n      id: conflict_name\n      -orig-id: RPMTAG_CONFLICTNAME\n      doc: Indicates the conflicting dependencies for this package.\n    1055:\n      id: conflict_version\n      -orig-id: RPMTAG_CONFLICTVERSION\n      doc: |\n        Indicates the versions associated with the\n        values found in the conflict_name index.\n    1056:\n      id: default_prefix_internal\n      -orig-id: RPMTAG_DEFAULTPREFIX\n    1057:\n      id: build_root_internal\n      -orig-id: RPMTAG_BUILDROOT\n    1058:\n      id: install_prefix_internal\n      -orig-id: RPMTAG_INSTALLPREFIX\n    1059:\n      id: exclude_arch # from lib/rpmtag.h\n      -orig-id: RPMTAG_EXCLUDEARCH\n    1060:\n      id: exclude_os # from lib/rpmtag.h\n      -orig-id: RPMTAG_EXCLUDEOS\n    1061:\n      id: exclusive_arch # from lib/rpmtag.h\n      -orig-id: RPMTAG_EXCLUSIVEARCH\n    1063:\n      id: autoreqprov_internal\n      -orig-id: RPMTAG_AUTOREQPROV\n    1062:\n      id: exclusive_os # from lib/rpmtag.h\n      -orig-id: RPMTAG_EXCLUSIVEOS\n    1064:\n      id: rpm_version\n      -orig-id: RPMTAG_RPMVERSION\n      doc: Indicates the version of RPM tool used to build this package.\n    1065:\n      id: trigger_scripts # from lib/rpmtag.h\n      -orig-id: RPMTAG_TRIGGERSCRIPTS\n    1066:\n      id: trigger_name # from lib/rpmtag.h\n      -orig-id: RPMTAG_TRIGGERNAME\n    1067:\n      id: trigger_version # from lib/rpmtag.h\n      -orig-id: RPMTAG_TRIGGERVERSION\n    1068:\n      id: trigger_flags # from lib/rpmtag.h\n      -orig-id: RPMTAG_TRIGGERFLAGS\n    1069:\n      id: trigger_index # from lib/rpmtag.h\n      -orig-id: RPMTAG_TRIGGERINDEX\n    # 1070..1078 - unassigned (missing in lib/rpmtag.h)\n    1079:\n      id: verify_script # from lib/rpmtag.h\n      -orig-id: RPMTAG_VERIFYSCRIPT\n    1080:\n      id: changelog_time\n      -orig-id: RPMTAG_CHANGELOGTIME\n      doc: |\n        Specifies the Unix time in seconds since the epoch\n        associated with each entry in the Changelog file.\n    1081:\n      id: changelog_name\n      -orig-id: RPMTAG_CHANGELOGNAME\n      doc: Specifies the name of who made a change to this package.\n    1082:\n      id: changelog_text\n      -orig-id: RPMTAG_CHANGELOGTEXT\n      doc: Specifies the changes asssociated with a changelog entry.\n    1083:\n      id: broken_md5_internal\n      -orig-id: RPMTAG_BROKENMD5\n    1084:\n      id: prereq_internal\n      -orig-id: RPMTAG_PREREQ\n    1085:\n      id: pre_install_interpreter\n      -orig-id: RPMTAG_PREINPROG\n      doc: |\n        Specifies the name of the interpreter to which the preinstall\n        scriptlet will be passed. The interpreter pointed to by this\n        index record shall be `/bin/sh`.\n    1086:\n      id: post_install_interpreter\n      -orig-id: RPMTAG_POSTINPROG\n      doc: |\n        Specifies the name of the interpreter to which the postinstall\n        scriptlet will be passed. The intepreter pointed to by this\n        index record shall be `/bin/sh`.\n    1087:\n      id: pre_uninstall_interpreter\n      -orig-id: RPMTAG_PREUNPROG\n      doc: |\n        Specifies the name of the interpreter to which the preuninstall\n        scriptlet will be passed. The interpreter pointed to by this index\n        record shall be `/bin/sh`.\n    1088:\n      id: post_uninstall_interpreter\n      -orig-id: RPMTAG_POSTUNPROG\n      doc: |\n        Specifies the name of the interpreter to which the postuninstall\n        scriptlet will be passed. The interpreter pointed to by this index\n        record shall be `/bin/sh`.\n    1089:\n      id: build_archs # from lib/rpmtag.h\n      -orig-id: RPMTAG_BUILDARCHS\n    1090:\n      id: obsolete_name # from lib/rpmtag.h\n      -orig-id: RPMTAG_OBSOLETENAME\n      doc: Indicates the obsoleted dependencies for this package.\n    1091:\n      id: verify_script_prog # from lib/rpmtag.h\n      -orig-id: RPMTAG_VERIFYSCRIPTPROG\n    1092:\n      id: trigger_script_prog # from lib/rpmtag.h\n      -orig-id: RPMTAG_TRIGGERSCRIPTPROG\n    1093:\n      id: doc_dir_internal\n      -orig-id: RPMTAG_DOCDIR\n    1094:\n      id: cookie\n      -orig-id: RPMTAG_COOKIE\n      doc: Contains an opaque string whose contents are undefined.\n    1095:\n      id: file_devices\n      -orig-id: RPMTAG_FILEDEVICES\n      doc: Specifies the 16 bit device number from which the file was copied.\n    1096:\n      id: file_inodes\n      -orig-id: RPMTAG_FILEINODES\n      doc: |\n        Specifies the inode value from the original file system\n        on the the system on which it was built.\n    1097:\n      id: file_langs\n      -orig-id: RPMTAG_FILELANGS\n      doc: |\n        Specifies a per-file locale marker used to install only locale\n        specific subsets of files when the package is installed.\n    1098:\n      id: prefixes # from lib/rpmtag.h\n      -orig-id: RPMTAG_PREFIXES\n    1099:\n      id: install_prefixes # from lib/rpmtag.h\n      -orig-id: RPMTAG_INSTPREFIXES\n    1100:\n      id: trigger_install_internal\n      -orig-id: RPMTAG_TRIGGERIN\n    1101:\n      id: trigger_uninstall_internal\n      -orig-id: RPMTAG_TRIGGERUN\n    1102:\n      id: trigger_post_uninstall_internal\n      -orig-id: RPMTAG_TRIGGERPOSTUN\n    1103:\n      id: autoreq_internal\n      -orig-id: RPMTAG_AUTOREQ\n    1104:\n      id: autoprov_internal\n      -orig-id: RPMTAG_AUTOPROV\n    1105:\n      id: capability_internal\n      -orig-id: RPMTAG_CAPABILITY\n    1106:\n      id: source_package # from lib/rpmtag.h\n      -orig-id: RPMTAG_SOURCEPACKAGE\n    1107:\n      id: old_orig_filenames_internal\n      -orig-id: RPMTAG_OLDORIGFILENAMES\n    1108:\n      id: build_prereq_internal\n      -orig-id: RPMTAG_BUILDPREREQ\n    1109:\n      id: build_requires_internal\n      -orig-id: RPMTAG_BUILDREQUIRES\n    1110:\n      id: build_conflicts_internal\n      -orig-id: RPMTAG_BUILDCONFLICTS\n    1111:\n      id: build_macros_internal\n      -orig-id: RPMTAG_BUILDMACROS\n    1112:\n      id: provide_flags\n      -orig-id: RPMTAG_PROVIDEFLAGS\n      doc: Bits(s) to specify the conflict range and context.\n    1113:\n      id: provide_version\n      -orig-id: RPMTAG_PROVIDEVERSION\n      doc: |\n        Indicates the versions associated with the values found\n        in the provide_name index.\n    1114:\n      id: obsolete_flags\n      -orig-id: RPMTAG_OBSOLETEFLAGS\n    1115:\n      id: obsolete_version\n      -orig-id: RPMTAG_OBSOLETEVERSION\n    1116:\n      id: dir_indexes\n      -orig-id: RPMTAG_DIRINDEXES\n    1117:\n      id: base_names\n      -orig-id: RPMTAG_BASENAMES\n    1118:\n      id: dir_names\n      -orig-id: RPMTAG_DIRNAMES\n    1119:\n      id: orig_dir_indexes # from lib/rpmtag.h\n      -orig-id: RPMTAG_ORIGDIRINDEXES\n    1120:\n      id: orig_base_names # from lib/rpmtag.h\n      -orig-id: RPMTAG_ORIGBASENAMES\n    1121:\n      id: orig_dir_names # from lib/rpmtag.h\n      -orig-id: RPMTAG_ORIGDIRNAMES\n    1122:\n      id: opt_flags\n      -orig-id: RPMTAG_OPTFLAGS\n    1123:\n      id: dist_url\n      -orig-id: RPMTAG_DISTURL\n    1124:\n      id: payload_format\n      -orig-id: RPMTAG_PAYLOADFORMAT\n    1125:\n      id: payload_compressor\n      -orig-id: RPMTAG_PAYLOADCOMPRESSOR\n    1126:\n      id: payload_flags\n      -orig-id: RPMTAG_PAYLOADFLAGS\n    1127:\n      id: install_color # from lib/rpmtag.h\n      -orig-id: RPMTAG_INSTALLCOLOR\n    1128:\n      id: install_tid # from lib/rpmtag.h\n      -orig-id: RPMTAG_INSTALLTID\n    1129:\n      id: remove_tid_obsolete\n      -orig-id: RPMTAG_REMOVETID\n      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/tags.md#deprecated--obsolete\n    1130:\n      id: sha1_rhn_internal\n      -orig-id: RPMTAG_SHA1RHN\n    1131:\n      id: rhn_platform_internal\n      -orig-id: RPMTAG_RHNPLATFORM\n    1132:\n      id: platform\n      -orig-id: RPMTAG_PLATFORM\n    # below are all from lib/rpmtag.h\n    1133:\n      id: patches_name_obsolete\n      -orig-id: RPMTAG_PATCHESNAME\n    1134:\n      id: patches_flags_obsolete\n      -orig-id: RPMTAG_PATCHESFLAGS\n    1135:\n      id: patches_version_obsolete\n      -orig-id: RPMTAG_PATCHESVERSION\n    1136:\n      id: cache_ctime_internal\n      -orig-id: RPMTAG_CACHECTIME\n    1137:\n      id: cache_pkg_path_internal\n      -orig-id: RPMTAG_CACHEPKGPATH\n    1138:\n      id: cache_pkg_size_internal\n      -orig-id: RPMTAG_CACHEPKGSIZE\n    1139:\n      id: cache_pkg_mtime_internal\n      -orig-id: RPMTAG_CACHEPKGMTIME\n    1140:\n      id: file_colors\n      -orig-id: RPMTAG_FILECOLORS\n    1141:\n      id: file_class\n      -orig-id: RPMTAG_FILECLASS\n    1142:\n      id: class_dict\n      -orig-id: RPMTAG_CLASSDICT\n    1143:\n      id: file_depends_idx\n      -orig-id: RPMTAG_FILEDEPENDSX\n      doc: Index into `::depends_dict` denoting start of this file's dependencies.\n    1144:\n      id: file_depends_num\n      -orig-id: RPMTAG_FILEDEPENDSN\n      doc: Number of file dependencies in `::depends_dict`, starting from `::file_depends_idx`\n    1145:\n      id: depends_dict\n      -orig-id: RPMTAG_DEPENDSDICT\n    1146:\n      id: source_pkgid\n      -orig-id: RPMTAG_SOURCEPKGID\n    1147:\n      id: file_contexts_obsolete\n      -orig-id: RPMTAG_FILECONTEXTS\n      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/tags.md#deprecated--obsolete\n    1148:\n      id: fs_contexts_obsolete\n      -orig-id: RPMTAG_FSCONTEXTS\n      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/tags.md#deprecated--obsolete\n    1149:\n      id: re_contexts_obsolete\n      -orig-id: RPMTAG_RECONTEXTS\n      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/tags.md#deprecated--obsolete\n    1150:\n      id: policies\n      -orig-id: RPMTAG_POLICIES\n    1151:\n      id: pre_trans\n      -orig-id: RPMTAG_PRETRANS\n    1152:\n      id: post_trans\n      -orig-id: RPMTAG_POSTTRANS\n    1153:\n      id: pre_trans_prog\n      -orig-id: RPMTAG_PRETRANSPROG\n    1154:\n      id: post_trans_prog\n      -orig-id: RPMTAG_POSTTRANSPROG\n    1155:\n      id: dist_tag\n      -orig-id: RPMTAG_DISTTAG\n    1156:\n      id: old_suggests_name_obsolete\n      -orig-id: RPMTAG_OLDSUGGESTSNAME\n    1157:\n      id: old_suggests_version_obsolete\n      -orig-id: RPMTAG_OLDSUGGESTSVERSION\n    1158:\n      id: old_suggests_flags_obsolete\n      -orig-id: RPMTAG_OLDSUGGESTSFLAGS\n    1159:\n      id: old_enhances_name_obsolete\n      -orig-id: RPMTAG_OLDENHANCESNAME\n    1160:\n      id: old_enhances_version_obsolete\n      -orig-id: RPMTAG_OLDENHANCESVERSION\n    1161:\n      id: old_enhances_flags_obsolete\n      -orig-id: RPMTAG_OLDENHANCESFLAGS\n    1162:\n      id: priority_unimplemented\n      -orig-id: RPMTAG_PRIORITY\n    1163:\n      id: cvsid_unimplemented\n      -orig-id:\n        - RPMTAG_CVSID\n        - RPMTAG_SVNID\n    1164:\n      id: blink_pkgid_unimplemented\n      -orig-id: RPMTAG_BLINKPKGID\n    1165:\n      id: blink_hdrid_unimplemented\n      -orig-id: RPMTAG_BLINKHDRID\n    1166:\n      id: blink_nevra_unimplemented\n      -orig-id: RPMTAG_BLINKNEVRA\n    1167:\n      id: flink_pkgid_unimplemented\n      -orig-id: RPMTAG_FLINKPKGID\n    1168:\n      id: flink_hdrid_unimplemented\n      -orig-id: RPMTAG_FLINKHDRID\n    1169:\n      id: flink_nevra_unimplemented\n      -orig-id: RPMTAG_FLINKNEVRA\n    1170:\n      id: package_origin_unimplemented\n      -orig-id: RPMTAG_PACKAGEORIGIN\n    1171:\n      id: trigger_pre_install_internal\n      -orig-id: RPMTAG_TRIGGERPREIN\n    1172:\n      id: build_suggests_unimplemented\n      -orig-id: RPMTAG_BUILDSUGGESTS\n    1173:\n      id: build_enhances_unimplemented\n      -orig-id: RPMTAG_BUILDENHANCES\n    1174:\n      id: script_states_unimplemented\n      -orig-id: RPMTAG_SCRIPTSTATES\n    1175:\n      id: script_metrics_unimplemented\n      -orig-id: RPMTAG_SCRIPTMETRICS\n    1176:\n      id: build_cpu_clock_unimplemented\n      -orig-id: RPMTAG_BUILDCPUCLOCK\n    1177:\n      id: file_digest_algos_unimplemented\n      -orig-id: RPMTAG_FILEDIGESTALGOS\n    1178:\n      id: variants_unimplemented\n      -orig-id: RPMTAG_VARIANTS\n    1179:\n      id: xmajor_unimplemented\n      -orig-id: RPMTAG_XMAJOR\n    1180:\n      id: xminor_unimplemented\n      -orig-id: RPMTAG_XMINOR\n    1181:\n      id: repo_tag_unimplemented\n      -orig-id: RPMTAG_REPOTAG\n    1182:\n      id: keywords_unimplemented\n      -orig-id: RPMTAG_KEYWORDS\n    1183:\n      id: build_platforms_unimplemented\n      -orig-id: RPMTAG_BUILDPLATFORMS\n    1184:\n      id: package_color_unimplemented\n      -orig-id: RPMTAG_PACKAGECOLOR\n    1185:\n      id: package_pref_color_unimplemented\n      -orig-id: RPMTAG_PACKAGEPREFCOLOR\n    1186:\n      id: xattrs_dict_unimplemented\n      -orig-id: RPMTAG_XATTRSDICT\n    1187:\n      id: filex_attrsx_unimplemented\n      -orig-id: RPMTAG_FILEXATTRSX\n    1188:\n      id: dep_attrs_dict_unimplemented\n      -orig-id: RPMTAG_DEPATTRSDICT\n    1189:\n      id: conflict_attrsx_unimplemented\n      -orig-id: RPMTAG_CONFLICTATTRSX\n    1190:\n      id: obsolete_attrsx_unimplemented\n      -orig-id: RPMTAG_OBSOLETEATTRSX\n    1191:\n      id: provide_attrsx_unimplemented\n      -orig-id: RPMTAG_PROVIDEATTRSX\n    1192:\n      id: require_attrsx_unimplemented\n      -orig-id: RPMTAG_REQUIREATTRSX\n    1193:\n      id: build_provides_unimplemented\n      -orig-id: RPMTAG_BUILDPROVIDES\n    1194:\n      id: build_obsoletes_unimplemented\n      -orig-id: RPMTAG_BUILDOBSOLETES\n    1195:\n      id: db_instance\n      -orig-id: RPMTAG_DBINSTANCE\n    1196:\n      id: nvra\n      -orig-id: RPMTAG_NVRA\n    # 1997..4999 - reserved\n    5000:\n      id: file_names\n      -orig-id: RPMTAG_FILENAMES\n    5001:\n      id: file_provide\n      -orig-id: RPMTAG_FILEPROVIDE\n    5002:\n      id: file_require\n      -orig-id: RPMTAG_FILEREQUIRE\n    5003:\n      id: fs_names_unimplemented\n      -orig-id: RPMTAG_FSNAMES\n    5004:\n      id: fs_sizes_unimplemented\n      -orig-id: RPMTAG_FSSIZES\n    5005:\n      id: trigger_conds\n      -orig-id: RPMTAG_TRIGGERCONDS\n    5006:\n      id: trigger_type\n      -orig-id: RPMTAG_TRIGGERTYPE\n    5007:\n      id: orig_file_names\n      -orig-id: RPMTAG_ORIGFILENAMES\n    5008:\n      id: long_file_sizes\n      -orig-id: RPMTAG_LONGFILESIZES\n    5009:\n      id: long_size\n      -orig-id: RPMTAG_LONGSIZE\n    5010:\n      id: file_caps\n      -orig-id: RPMTAG_FILECAPS\n    5011:\n      id: file_digest_algo\n      -orig-id: RPMTAG_FILEDIGESTALGO\n      doc: File digest algorithm\n    5012:\n      id: bug_url\n      -orig-id: RPMTAG_BUGURL\n    5013:\n      id: evr\n      -orig-id: RPMTAG_EVR\n    5014:\n      id: nvr\n      -orig-id: RPMTAG_NVR\n    5015:\n      id: nevr\n      -orig-id: RPMTAG_NEVR\n    5016:\n      id: nevra\n      -orig-id: RPMTAG_NEVRA\n    5017:\n      id: header_color\n      -orig-id: RPMTAG_HEADERCOLOR\n    5018:\n      id: verbose\n      -orig-id: RPMTAG_VERBOSE\n    5019:\n      id: epoch_num\n      -orig-id: RPMTAG_EPOCHNUM\n    5020:\n      id: pre_install_flags\n      -orig-id: RPMTAG_PREINFLAGS\n    5021:\n      id: post_install_flags\n      -orig-id: RPMTAG_POSTINFLAGS\n    5022:\n      id: pre_uninstall_flags\n      -orig-id: RPMTAG_PREUNFLAGS\n    5023:\n      id: post_uninstall_flags\n      -orig-id: RPMTAG_POSTUNFLAGS\n    5024:\n      id: pre_trans_flags\n      -orig-id: RPMTAG_PRETRANSFLAGS\n    5025:\n      id: post_trans_flags\n      -orig-id: RPMTAG_POSTTRANSFLAGS\n    5026:\n      id: verify_script_flags\n      -orig-id: RPMTAG_VERIFYSCRIPTFLAGS\n    5027:\n      id: trigger_script_flags\n      -orig-id: RPMTAG_TRIGGERSCRIPTFLAGS\n    # 5028 - unassigned (removed from lib/rpmtag.h in commit <https://github.com/rpm-software-management/rpm/commit/dc2ee980>)\n    5029:\n      id: collections_unimplemented\n      -orig-id: RPMTAG_COLLECTIONS\n    5030:\n      id: policy_names\n      -orig-id: RPMTAG_POLICYNAMES\n    5031:\n      id: policy_types\n      -orig-id: RPMTAG_POLICYTYPES\n    5032:\n      id: policy_types_indexes\n      -orig-id: RPMTAG_POLICYTYPESINDEXES\n    5033:\n      id: policy_flags\n      -orig-id: RPMTAG_POLICYFLAGS\n    5034:\n      id: vcs\n      -orig-id: RPMTAG_VCS\n    5035:\n      id: order_name\n      -orig-id: RPMTAG_ORDERNAME\n    5036:\n      id: order_version\n      -orig-id: RPMTAG_ORDERVERSION\n    5037:\n      id: order_flags\n      -orig-id: RPMTAG_ORDERFLAGS\n    5038:\n      id: mssf_manifest_unimplemented\n      -orig-id: RPMTAG_MSSFMANIFEST\n    5039:\n      id: mssf_domain_unimplemented\n      -orig-id: RPMTAG_MSSFDOMAIN\n    5040:\n      id: inst_file_names\n      -orig-id: RPMTAG_INSTFILENAMES\n    5041:\n      id: require_nevrs\n      -orig-id: RPMTAG_REQUIRENEVRS\n    5042:\n      id: provide_nevrs\n      -orig-id: RPMTAG_PROVIDENEVRS\n    5043:\n      id: obsolete_nevrs\n      -orig-id: RPMTAG_OBSOLETENEVRS\n    5044:\n      id: conflict_nevrs\n      -orig-id: RPMTAG_CONFLICTNEVRS\n    5045:\n      id: file_nlinks\n      -orig-id: RPMTAG_FILENLINKS\n    5046:\n      id: recommend_name\n      -orig-id: RPMTAG_RECOMMENDNAME\n    5047:\n      id: recommend_version\n      -orig-id: RPMTAG_RECOMMENDVERSION\n    5048:\n      id: recommend_flags\n      -orig-id: RPMTAG_RECOMMENDFLAGS\n    5049:\n      id: suggest_name\n      -orig-id: RPMTAG_SUGGESTNAME\n    5050:\n      id: suggest_version\n      -orig-id: RPMTAG_SUGGESTVERSION\n    5051:\n      id: suggest_flags\n      -orig-id: RPMTAG_SUGGESTFLAGS\n    5052:\n      id: supplement_name\n      -orig-id: RPMTAG_SUPPLEMENTNAME\n    5053:\n      id: supplement_version\n      -orig-id: RPMTAG_SUPPLEMENTVERSION\n    5054:\n      id: supplement_flags\n      -orig-id: RPMTAG_SUPPLEMENTFLAGS\n    5055:\n      id: enhance_name\n      -orig-id: RPMTAG_ENHANCENAME\n    5056:\n      id: enhance_version\n      -orig-id: RPMTAG_ENHANCEVERSION\n    5057:\n      id: enhance_flags\n      -orig-id: RPMTAG_ENHANCEFLAGS\n    5058:\n      id: recommend_nevrs\n      -orig-id: RPMTAG_RECOMMENDNEVRS\n    5059:\n      id: suggest_nevrs\n      -orig-id: RPMTAG_SUGGESTNEVRS\n    5060:\n      id: supplement_nevrs\n      -orig-id: RPMTAG_SUPPLEMENTNEVRS\n    5061:\n      id: enhance_nevrs\n      -orig-id: RPMTAG_ENHANCENEVRS\n    5062:\n      id: encoding\n      -orig-id: RPMTAG_ENCODING\n    5063:\n      id: file_trigger_install_internal\n      -orig-id: RPMTAG_FILETRIGGERIN\n    5064:\n      id: file_trigger_uninstall_internal\n      -orig-id: RPMTAG_FILETRIGGERUN\n    5065:\n      id: file_trigger_post_uninstall_internal\n      -orig-id: RPMTAG_FILETRIGGERPOSTUN\n    5066:\n      id: file_trigger_scripts\n      -orig-id: RPMTAG_FILETRIGGERSCRIPTS\n    5067:\n      id: file_trigger_script_prog\n      -orig-id: RPMTAG_FILETRIGGERSCRIPTPROG\n    5068:\n      id: file_trigger_script_flags\n      -orig-id: RPMTAG_FILETRIGGERSCRIPTFLAGS\n    5069:\n      id: file_trigger_name\n      -orig-id: RPMTAG_FILETRIGGERNAME\n    5070:\n      id: file_trigger_index\n      -orig-id: RPMTAG_FILETRIGGERINDEX\n    5071:\n      id: file_trigger_version\n      -orig-id: RPMTAG_FILETRIGGERVERSION\n    5072:\n      id: file_trigger_flags\n      -orig-id: RPMTAG_FILETRIGGERFLAGS\n    5073:\n      id: trans_file_trigger_install_internal\n      -orig-id: RPMTAG_TRANSFILETRIGGERIN\n    5074:\n      id: trans_file_trigger_uninstall_internal\n      -orig-id: RPMTAG_TRANSFILETRIGGERUN\n    5075:\n      id: trans_file_trigger_post_uninstall_internal\n      -orig-id: RPMTAG_TRANSFILETRIGGERPOSTUN\n    5076:\n      id: trans_file_trigger_scripts\n      -orig-id: RPMTAG_TRANSFILETRIGGERSCRIPTS\n    5077:\n      id: trans_file_trigger_script_prog\n      -orig-id: RPMTAG_TRANSFILETRIGGERSCRIPTPROG\n    5078:\n      id: trans_file_trigger_script_flags\n      -orig-id: RPMTAG_TRANSFILETRIGGERSCRIPTFLAGS\n    5079:\n      id: trans_file_trigger_name\n      -orig-id: RPMTAG_TRANSFILETRIGGERNAME\n    5080:\n      id: trans_file_trigger_index\n      -orig-id: RPMTAG_TRANSFILETRIGGERINDEX\n    5081:\n      id: trans_file_trigger_version\n      -orig-id: RPMTAG_TRANSFILETRIGGERVERSION\n    5082:\n      id: trans_file_trigger_flags\n      -orig-id: RPMTAG_TRANSFILETRIGGERFLAGS\n    5083:\n      id: remove_path_postfixes_internal\n      -orig-id: RPMTAG_REMOVEPATHPOSTFIXES\n    5084:\n      id: file_trigger_priorities\n      -orig-id: RPMTAG_FILETRIGGERPRIORITIES\n    5085:\n      id: trans_file_trigger_priorities\n      -orig-id: RPMTAG_TRANSFILETRIGGERPRIORITIES\n    5086:\n      id: file_trigger_conds\n      -orig-id: RPMTAG_FILETRIGGERCONDS\n    5087:\n      id: file_trigger_type\n      -orig-id: RPMTAG_FILETRIGGERTYPE\n    5088:\n      id: trans_file_trigger_conds\n      -orig-id: RPMTAG_TRANSFILETRIGGERCONDS\n    5089:\n      id: trans_file_trigger_type\n      -orig-id: RPMTAG_TRANSFILETRIGGERTYPE\n    5090:\n      id: file_signatures\n      -orig-id: RPMTAG_FILESIGNATURES\n    5091:\n      id: file_signature_length\n      -orig-id: RPMTAG_FILESIGNATURELENGTH\n    5092:\n      id: payload_digest\n      -orig-id: RPMTAG_PAYLOADDIGEST\n    5093:\n      id: payload_digest_algo\n      -orig-id: RPMTAG_PAYLOADDIGESTALGO\n    5094:\n      id: auto_installed_unimplemented\n      -orig-id: RPMTAG_AUTOINSTALLED\n    5095:\n      id: identity_unimplemented\n      -orig-id: RPMTAG_IDENTITY\n    5096:\n      id: modularity_label\n      -orig-id: RPMTAG_MODULARITYLABEL\n    5097:\n      id: payload_digest_alt\n      -orig-id: RPMTAG_PAYLOADDIGESTALT\n    5098:\n      id: arch_suffix\n      -orig-id: RPMTAG_ARCHSUFFIX\n    5099:\n      id: spec\n      -orig-id: RPMTAG_SPEC\n    5100:\n      id: translation_url\n      -orig-id: RPMTAG_TRANSLATIONURL\n    5101:\n      id: upstream_releases\n      -orig-id: RPMTAG_UPSTREAMRELEASES\n    5102:\n      id: source_license_internal\n      -orig-id: RPMTAG_SOURCELICENSE\n    5103:\n      id: pre_untrans\n      -orig-id: RPMTAG_PREUNTRANS\n    5104:\n      id: post_untrans\n      -orig-id: RPMTAG_POSTUNTRANS\n    5105:\n      id: pre_untrans_prog\n      -orig-id: RPMTAG_PREUNTRANSPROG\n    5106:\n      id: post_untrans_prog\n      -orig-id: RPMTAG_POSTUNTRANSPROG\n    5107:\n      id: pre_untrans_flags\n      -orig-id: RPMTAG_PREUNTRANSFLAGS\n    5108:\n      id: post_untrans_flags\n      -orig-id: RPMTAG_POSTUNTRANSFLAGS\n    5109:\n      id: sys_users\n      -orig-id: RPMTAG_SYSUSERS\n  record_types:\n    # from LSB\n    0: not_implemented\n    1: char\n    2: uint8\n    3: uint16\n    4: uint32\n    5: uint64\n    6: string # NUL terminated\n    7: bin\n    8: string_array # NUL terminated strings\n    9: i18n_string # NUL terminated strings\n"
  },
  {
    "id": "ksy_xar",
    "name": "XAR (eXtensible ARchive)",
    "category": "Archives",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "xar",
        "pkg",
        "xip"
      ],
      "description": "XAR (eXtensible ARchive)",
      "originalCategory": "archive",
      "filePath": "archive/xar.ksy",
      "endian": "be"
    },
    "content": "meta:\n  id: xar\n  title: XAR (eXtensible ARchive)\n  file-extension:\n    - xar\n    - pkg\n    - xip\n  xref:\n    justsolve: Xar_(Extensible_Archive)\n    mime: application/x-xar\n    pronom: fmt/600\n    wikidata: Q1093556\n  license: CC0-1.0\n  ks-version: 0.9\n  encoding: UTF-8\n  endian: be\ndoc: |\n  From [Wikipedia](https://en.wikipedia.org/wiki/Xar_(archiver)):\n\n  \"XAR (short for eXtensible ARchive format) is an open source file archiver\n  and the archiver's file format. It was created within the OpenDarwin project\n  and is used in macOS X 10.5 and up for software installation routines, as\n  well as browser extensions in Safari 5.0 and up.\"\ndoc-ref: https://github.com/mackyle/xar/wiki/xarformat\nseq:\n  - id: header_prefix\n    type: file_header_prefix\n    doc: internal; access `_root.header` instead\n  - id: header\n    size: header_prefix.len_header - header_prefix._sizeof\n    type: file_header\n  - id: toc\n    size: header.len_toc_compressed\n    type: toc_type\n    process: zlib\n    doc: zlib compressed XML further describing the content of the archive\ninstances:\n  checksum_algorithm_other:\n    -orig-id: XAR_CKSUM_OTHER\n    value: 3\n    doc-ref: https://github.com/mackyle/xar/blob/66d451d/xar/include/xar.h.in#L85\ntypes:\n  file_header_prefix:\n    seq:\n      - id: magic\n        contents: 'xar!'\n      - id: len_header\n        type: u2\n        doc: internal; access `_root.header.len_header` instead\n  file_header:\n    seq:\n      - id: version\n        type: u2\n        valid: 1\n      - id: len_toc_compressed\n        -orig-id: toc_length_compressed\n        type: u8\n      - id: toc_length_uncompressed\n        type: u8\n      - id: checksum_algorithm_int\n        type: u4\n        doc: internal; access `checksum_algorithm_name` instead\n      - id: checksum_alg_name\n        size-eos: true\n        type: strz\n        valid:\n          expr: _ != \"\" and _ != \"none\"\n        if: has_checksum_alg_name\n        doc: internal; access `checksum_algorithm_name` instead\n    instances:\n      checksum_algorithm_name:\n        value: |\n          has_checksum_alg_name ? checksum_alg_name\n          : checksum_algorithm_int == checksum_algorithms_apple::none.to_i ? \"none\"\n          : checksum_algorithm_int == checksum_algorithms_apple::sha1.to_i ? \"sha1\"\n          : checksum_algorithm_int == checksum_algorithms_apple::md5.to_i ? \"md5\"\n          : checksum_algorithm_int == checksum_algorithms_apple::sha256.to_i ? \"sha256\"\n          : checksum_algorithm_int == checksum_algorithms_apple::sha512.to_i ? \"sha512\"\n          : \"\"\n        doc: |\n          If it is not\n\n          * `\"\"` (empty string), indicating an unknown integer value (access\n            `checksum_algorithm_int` for debugging purposes to find out\n            what that value is), or\n          * `\"none\"`, indicating that the TOC checksum is not provided (in that\n            case, the `<checksum>` property or its `style` attribute should be\n            missing, or the `style` attribute must be set to `\"none\"`),\n\n          it must exactly match the `style` attribute value of the\n          `<checksum>` property in the root node `<toc>`. See\n          <https://github.com/mackyle/xar/blob/66d451d/xar/lib/archive.c#L345-L371>\n          for reference.\n\n          The `xar` (eXtensible ARchiver) program [uses OpenSSL's function\n          `EVP_get_digestbyname`](\n            https://github.com/mackyle/xar/blob/66d451d/xar/lib/archive.c#L328\n          ) to verify this value (if it's not `\"\"` or `\"none\"`, of course).\n          So it's reasonable to assume that this can only have one of the values\n          that OpenSSL recognizes.\n      has_checksum_alg_name:\n        value: |\n          checksum_algorithm_int == _root.checksum_algorithm_other\n          and len_header >= 32\n          and len_header % 4 == 0\n      len_header:\n        value: _root.header_prefix.len_header\n  toc_type:\n    seq:\n      - id: xml_string\n        type: str\n        size-eos: true\nenums:\n  # https://github.com/apple-opensource/xar/blob/03d10ac/xar/include/xar.h.in#L67-L73\n  checksum_algorithms_apple:\n    0: none\n    1: sha1\n    2: md5\n    3: sha256\n    4: sha512\n"
  },
  {
    "id": "ksy_zip",
    "name": "ZIP archive file",
    "category": "Archives",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "zip"
      ],
      "description": "ZIP archive file",
      "originalCategory": "archive",
      "filePath": "archive/zip.ksy",
      "endian": "le"
    },
    "content": "meta:\n  id: zip\n  title: ZIP archive file\n  file-extension: zip\n  xref:\n    forensicswiki: zip\n    iso: 21320-1\n    justsolve: ZIP\n    loc:\n      - fdd000354\n      - fdd000355\n      - fdd000362\n      - fdd000361\n    pronom: x-fmt/263\n    wikidata: Q136218\n  license: CC0-1.0\n  ks-version: 0.9\n  imports:\n    - /common/dos_datetime\n  endian: le\n  bit-endian: le\ndoc: |\n  ZIP is a popular archive file format, introduced in 1989 by Phil Katz\n  and originally implemented in PKZIP utility by PKWARE.\n\n  Thanks to solid support of it in most desktop environments and\n  operating systems, and algorithms / specs availability in public\n  domain, it quickly became tool of choice for implementing file\n  containers.\n\n  For example, Java .jar files, OpenDocument, Office Open XML, EPUB files\n  are actually ZIP archives.\ndoc-ref:\n  - https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT\n  - https://users.cs.jmu.edu/buchhofp/forensics/formats/pkzip.html\nseq:\n  - id: sections\n    type: pk_section\n    repeat: eos\ntypes:\n  pk_section:\n    seq:\n      - id: magic\n        contents: 'PK'\n      - id: section_type\n        type: u2\n      - id: body\n        type:\n          switch-on: section_type\n          cases:\n            0x0201: central_dir_entry\n            0x0403: local_file\n            0x0605: end_of_central_dir\n            0x0807: data_descriptor\n  data_descriptor:\n    seq:\n      - id: crc32\n        type: u4\n      - id: len_body_compressed\n        type: u4\n      - id: len_body_uncompressed\n        type: u4\n  local_file:\n    seq:\n      - id: header\n        type: local_file_header\n      - id: body\n        size: header.len_body_compressed\n  local_file_header:\n    seq:\n      - id: version\n        type: u2\n      - id: flags\n        type: gp_flags\n        size: 2\n      - id: compression_method\n        type: u2\n        enum: compression\n      - id: file_mod_time\n        size: 4\n        type: dos_datetime\n      - id: crc32\n        type: u4\n      - id: len_body_compressed\n        type: u4\n      - id: len_body_uncompressed\n        type: u4\n      - id: len_file_name\n        type: u2\n      - id: len_extra\n        type: u2\n      - id: file_name\n        type: str\n        size: len_file_name\n        encoding: UTF-8\n      - id: extra\n        size: len_extra\n        type: extras\n    types:\n      gp_flags:\n        -orig-id: general purpose bit flag\n        doc-ref:\n          - https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT - 4.4.4\n          - https://users.cs.jmu.edu/buchhofp/forensics/formats/pkzip.html Local file headers\n        seq:\n          - id: file_encrypted\n            type: b1\n          - id: comp_options_raw\n            type: b2\n            doc: internal; access derived value instances instead\n          - id: has_data_descriptor\n            type: b1\n          - id: reserved_1\n            type: b1\n          - id: comp_patched_data\n            type: b1\n          - id: strong_encrypt\n            type: b1\n          - id: reserved_2\n            type: b4\n          - id: lang_encoding\n            type: b1\n          - id: reserved_3\n            type: b1\n          - id: mask_header_values\n            type: b1\n          - id: reserved_4\n            type: b2\n        instances:\n          deflated_mode:\n            value: comp_options_raw\n            enum: deflate_mode\n            if: |\n              _parent.compression_method == compression::deflated\n              or _parent.compression_method == compression::enhanced_deflated\n          imploded_dict_byte_size:\n            value: '((comp_options_raw & 0b01) != 0 ? 8 : 4) * 1024'\n            if: '_parent.compression_method == compression::imploded'\n            doc: 8KiB or 4KiB in bytes\n          imploded_num_sf_trees:\n            value: '(comp_options_raw & 0b10) != 0 ? 3 : 2'\n            if: '_parent.compression_method == compression::imploded'\n          lzma_has_eos_marker:\n            value: '(comp_options_raw & 0b01) != 0'\n            if: '_parent.compression_method == compression::lzma'\n        enums:\n          deflate_mode:\n            0: normal\n            1: maximum\n            2: fast\n            3: super_fast\n  central_dir_entry:\n    doc-ref: https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT - 4.3.12\n    seq:\n      - id: version_made_by\n        type: u2\n      - id: version_needed_to_extract\n        type: u2\n      - id: flags\n        type: u2\n      - id: compression_method\n        type: u2\n        enum: compression\n      - id: file_mod_time\n        size: 4\n        type: dos_datetime\n      - id: crc32\n        type: u4\n      - id: len_body_compressed\n        type: u4\n      - id: len_body_uncompressed\n        type: u4\n      - id: len_file_name\n        type: u2\n      - id: len_extra\n        type: u2\n      - id: len_comment\n        type: u2\n      - id: disk_number_start\n        type: u2\n      - id: int_file_attr\n        type: u2\n      - id: ext_file_attr\n        type: u4\n      - id: ofs_local_header\n        type: s4\n      - id: file_name\n        type: str\n        size: len_file_name\n        encoding: UTF-8\n      - id: extra\n        size: len_extra\n        type: extras\n      - id: comment\n        type: str\n        size: len_comment\n        encoding: UTF-8\n    instances:\n      local_header:\n        pos: ofs_local_header\n        type: pk_section\n  # https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT - 4.3.16\n  end_of_central_dir:\n    seq:\n      - id: disk_of_end_of_central_dir\n        type: u2\n      - id: disk_of_central_dir\n        type: u2\n      - id: num_central_dir_entries_on_disk\n        type: u2\n      - id: num_central_dir_entries_total\n        type: u2\n      - id: len_central_dir\n        type: u4\n      - id: ofs_central_dir\n        type: u4\n      - id: len_comment\n        type: u2\n      - id: comment\n        type: str\n        size: len_comment\n        encoding: UTF-8\n  extras:\n    seq:\n      - id: entries\n        type: extra_field\n        repeat: eos\n  extra_field:\n    seq:\n      - id: code\n        type: u2\n        enum: extra_codes\n      - id: len_body\n        type: u2\n      - id: body\n        size: len_body\n        type:\n          switch-on: code\n          cases:\n            'extra_codes::ntfs': ntfs\n            'extra_codes::extended_timestamp': extended_timestamp\n            'extra_codes::infozip_unix_var_size': infozip_unix_var_size\n    types:\n      ntfs:\n        doc-ref: 'https://github.com/LuaDist/zip/blob/b710806/proginfo/extrafld.txt#L191'\n        seq:\n          - id: reserved\n            type: u4\n          - id: attributes\n            type: attribute\n            repeat: eos\n        types:\n          attribute:\n            seq:\n              - id: tag\n                type: u2\n              - id: len_body\n                type: u2\n              - id: body\n                size: len_body\n                type:\n                  switch-on: tag\n                  cases:\n                    1: attribute_1\n          attribute_1:\n            seq:\n              - id: last_mod_time\n                type: u8\n              - id: last_access_time\n                type: u8\n              - id: creation_time\n                type: u8\n      extended_timestamp:\n        doc-ref: 'https://github.com/LuaDist/zip/blob/b710806/proginfo/extrafld.txt#L817'\n        seq:\n          - id: flags\n            size: 1\n            type: info_flags\n          - id: mod_time\n            type: u4\n            if: flags.has_mod_time\n            doc: Unix timestamp\n          - id: access_time\n            type: u4\n            if: flags.has_access_time\n            doc: Unix timestamp\n          - id: create_time\n            type: u4\n            if: flags.has_create_time\n            doc: Unix timestamp\n        types:\n          info_flags:\n            seq:\n              - id: has_mod_time\n                type: b1\n              - id: has_access_time\n                type: b1\n              - id: has_create_time\n                type: b1\n              - id: reserved\n                type: b5\n      infozip_unix_var_size:\n        doc-ref: 'https://github.com/LuaDist/zip/blob/b710806/proginfo/extrafld.txt#L1339'\n        seq:\n          - id: version\n            type: u1\n            doc: Version of this extra field, currently 1\n          - id: len_uid\n            type: u1\n            doc: Size of UID field\n          - id: uid\n            size: len_uid\n            doc: UID (User ID) for a file\n          - id: len_gid\n            type: u1\n            doc: Size of GID field\n          - id: gid\n            size: len_gid\n            doc: GID (Group ID) for a file\nenums:\n  compression:\n    0: none\n    1: shrunk\n    2: reduced_1\n    3: reduced_2\n    4: reduced_3\n    5: reduced_4\n    6: imploded\n    8: deflated\n    9: enhanced_deflated\n    10: pkware_dcl_imploded\n    12: bzip2\n    14: lzma\n    18: ibm_terse\n    19: ibm_lz77_z\n    93: zstandard\n    94: mp3\n    95: xz\n    96: jpeg\n    97: wavpack\n    98: ppmd\n    99: aex_encryption_marker\n  extra_codes:\n    # https://github.com/LuaDist/zip/blob/b710806/proginfo/extrafld.txt\n    0x0001: zip64\n    0x0007: av_info\n#    0x0008: reserved for extended language encoding data (PFS) (see APPENDIX D)\n    0x0009: os2\n    0x000a: ntfs\n    0x000c: openvms\n    0x000d: pkware_unix\n    0x000e: file_stream_and_fork_descriptors\n    0x000f: patch_descriptor\n    0x0014: pkcs7\n    0x0015: x509_cert_id_and_signature_for_file\n    0x0016: x509_cert_id_for_central_dir\n    0x0017: strong_encryption_header\n    0x0018: record_management_controls\n    0x0019: pkcs7_enc_recip_cert_list\n    0x0065: ibm_s390_uncomp\n    0x0066: ibm_s390_comp\n    0x4690: poszip_4690\n    0x5455: extended_timestamp\n    0x6542: beos\n    0x756e: asi_unix\n    0x7855: infozip_unix\n    0x7875: infozip_unix_var_size\n    0xa11e: apache_commons_compress\n    0xa220: microsoft_open_packaging_growth_hint\n    0xfd4a: sms_qdos\n    0x9901: aex_encryption\n"
  },
  {
    "id": "ksy_zisofs",
    "name": "zisofs",
    "category": "Archives",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [],
      "description": "zisofs",
      "originalCategory": "archive",
      "filePath": "archive/zisofs.ksy",
      "endian": "le"
    },
    "content": "meta:\n  id: zisofs\n  title: zisofs\n  xref:\n    justsolve: Zisofs\n    wikidata: Q105854284\n  tags:\n    - archive\n    - filesystem\n  license: CC0-1.0\n  endian: le\ndoc: |\n  zisofs is a compression format for files on ISO9660 file system. It has\n  limited support across operating systems, mainly Linux kernel. Typically a\n  directory tree is first preprocessed by mkzftree (from the zisofs-tools\n  package before being turned into an ISO9660 image by mkisofs, genisoimage\n  or similar tool. The data is zlib compressed.\n\n  The specification here describes the structure of a file that has been\n  preprocessed by mkzftree, not of a full ISO9660 ziso. Data is not\n  decompressed, as blocks with length 0 have a special meaning. Decompression\n  and deconstruction of this data should be done outside of Kaitai Struct.\ndoc-ref: https://web.archive.org/web/20200612093441/https://dev.lovelyhq.com/libburnia/web/-/wikis/zisofs\nseq:\n  - id: header\n    size: 16\n    type: header\n  - id: block_pointers\n    type: u4\n    repeat: expr\n    repeat-expr: header.num_blocks + 1\n    doc: |\n      The final pointer (`block_pointers[header.num_blocks]`) indicates the end\n      of the last block. Typically this is also the end of the file data.\ninstances:\n  blocks:\n    type: 'block(block_pointers[_index], block_pointers[_index + 1])'\n    repeat: expr\n    repeat-expr: header.num_blocks\ntypes:\n  header:\n    seq:\n      - id: magic\n        contents: [0x37, 0xe4, 0x53, 0x96, 0xc9, 0xdb, 0xd6, 0x07]\n      - id: uncompressed_size\n        type: u4\n        doc: Size of the original uncompressed file\n      - id: len_header\n        type: u1\n        valid: 4\n        doc: header_size >> 2 (currently 4)\n      - id: block_size_log2\n        type: u1\n        valid:\n          any-of: [15, 16, 17]\n      - id: reserved\n        contents: [0, 0]\n    instances:\n      block_size:\n        value: 1 << block_size_log2\n      num_blocks:\n        value: '(uncompressed_size / block_size) + (uncompressed_size % block_size != 0 ? 1 : 0)'\n        doc: ceil(uncompressed_size / block_size)\n  block:\n    -webide-representation: '[{ofs_start}, {ofs_end}): {len_data:dec} bytes'\n    params:\n      - id: ofs_start\n        type: u4\n      - id: ofs_end\n        type: u4\n    instances:\n      len_data:\n        value: ofs_end - ofs_start\n      data:\n        io: _root._io\n        pos: ofs_start\n        size: len_data\n"
  }
];

export default {
  category: "Archives",
  formats: archivesFormats
};
