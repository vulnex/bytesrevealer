/**
 * Kaitai Formats - Database
 * 4 formats
 * Auto-generated: 2025-09-21T19:51:05.638Z
 */

export const databaseFormats = [
  {
    "id": "ksy_dbf",
    "name": "Dbf",
    "category": "Database",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "dbf"
      ],
      "description": "",
      "originalCategory": "database",
      "filePath": "database/dbf.ksy",
      "signature": {
        "offset": 0,
        "bytes": [
          13
        ]
      },
      "endian": "le"
    },
    "content": "meta:\n  id: dbf\n  application: dBASE\n  file-extension: dbf\n  xref:\n    justsolve: DBF\n    loc: fdd000325\n    mime:\n      - application/dbf\n      - application/dbase\n    pronom:\n      - x-fmt/8 # dBASE Database II\n      - x-fmt/9 # dBASE Database III\n      - x-fmt/271 # dBASE Database III+\n      - x-fmt/10 # dBASE Database IV\n      - x-fmt/272 # dBASE Database V\n    wikidata: Q16545707\n  license: CC0-1.0\n  endian: le\ndoc: |\n  .dbf is a relational database format introduced in DOS database\n  management system dBASE in 1982.\n\n  One .dbf file corresponds to one table and contains a series of headers,\n  specification of fields, and a number of fixed-size records.\ndoc-ref: http://www.dbase.com/Knowledgebase/INT/db7_file_fmt.htm\nseq:\n  - id: header1\n    type: header1\n  - id: header2\n    size: header1.len_header - header1._sizeof - header_terminator._sizeof\n    type: header2\n  - id: header_terminator\n    contents: [0x0D]\n  - id: records\n    type: record\n    size: header1.len_record\n    repeat: expr\n    repeat-expr: header1.num_records\ntypes:\n  header1:\n    doc-ref: http://www.dbase.com/Knowledgebase/INT/db7_file_fmt.htm - section 1.1\n    seq:\n      - id: version\n        type: u1\n      - id: last_update_y\n        type: u1\n      - id: last_update_m\n        type: u1\n      - id: last_update_d\n        type: u1\n      - id: num_records\n        type: u4\n      - id: len_header\n        type: u2\n      - id: len_record\n        type: u2\n    instances:\n      dbase_level:\n        value: 'version & 0b111'\n  header2:\n    seq:\n      - id: header_dbase_3\n        if: _root.header1.dbase_level == 3\n        type: header_dbase_3\n      - id: header_dbase_7\n        if: _root.header1.dbase_level == 7\n        type: header_dbase_7\n      - id: fields\n        type: field\n        repeat: eos\n  header_dbase_3:\n    seq:\n      - id: reserved1\n        size: 3\n      - id: reserved2\n        size: 13\n      - id: reserved3\n        size: 4\n  header_dbase_7:\n    seq:\n      - id: reserved1\n        contents: [0, 0]\n      - id: has_incomplete_transaction\n        type: u1\n      - id: dbase_iv_encryption\n        type: u1\n      - id: reserved2\n        size: 12\n      - id: production_mdx\n        type: u1\n      - id: language_driver_id\n        type: u1\n      - id: reserved3\n        contents: [0, 0]\n      - id: language_driver_name\n        size: 32\n      - id: reserved4\n        size: 4\n  field:\n    seq:\n      - id: name\n        type: strz\n        encoding: ASCII\n        size: 11\n      - id: datatype\n        type: u1\n      - id: data_address\n        type: u4\n      - id: length\n        type: u1\n      - id: decimal_count\n        type: u1\n      - id: reserved1\n        size: 2\n      - id: work_area_id\n        type: u1\n      - id: reserved2\n        size: 2\n      - id: set_fields_flag\n        type: u1\n      - id: reserved3\n        size: 8\n  record:\n    seq:\n      - id: deleted\n        type: u1\n        enum: delete_state\n      - id: record_fields\n        size: _root.header2.fields[_index].length\n        repeat: expr\n        repeat-expr: _root.header2.fields.size\nenums:\n  delete_state:\n    0x2a: true\n    0x20: false\n"
  },
  {
    "id": "ksy_gettext_mo",
    "name": "gettext binary database",
    "category": "Database",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "mo"
      ],
      "description": "gettext binary database",
      "originalCategory": "database",
      "filePath": "database/gettext_mo.ksy"
    },
    "content": "meta:\n  id: gettext_mo\n  title: gettext binary database\n  application:\n    - GNU gettext\n    - libintl\n  file-extension: mo\n  xref:\n    justsolve: Gettext_MO_(Machine_Object)_file\n    wikidata:\n      - Q105856977 # little-endian\n      - Q105857131 # big-endian\n  tags:\n    - database\n    - linux\n  license: BSD-2-Clause\n  ks-version: 0.9\n  encoding: UTF-8\n\n#  Copyright (c) 2000, 2001 Citrus Project,\n#  All rights reserved.\n#  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n#  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n#  2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\ndoc: |\n  [GNU gettext](https://www.gnu.org/software/gettext/) is a popular\n  solution in free/open source software world to do i18n/l10n of\n  software, by providing translated strings that will substitute\n  strings in original language (typically, English).\n\n  gettext .mo is a binary database format which stores these string\n  translation pairs in an efficient binary format, ready to be used by\n  gettext-enabled software. .mo format is a result of compilation of\n  text-based .po files using\n  [msgfmt](https://www.gnu.org/software/gettext/manual/html_node/msgfmt-Invocation.html#msgfmt-Invocation)\n  utility. The reverse conversion (.mo -> .po) is also possible using\n  [msgunfmt](https://www.gnu.org/software/gettext/manual/html_node/msgunfmt-Invocation.html#msgunfmt-Invocation)\n  decompiler utility.\ndoc-ref: https://gitlab.com/worr/libintl\nseq:\n  - id: signature\n    size: 4\n  - id: mo\n    type: mo\ntypes:\n  hash_lookup_iteration:\n    params:\n      - id: idx\n        type: u4\n      - id: collision_step\n        type: u4\n    instances:\n      original:\n        value: _root.mo.originals[idx].str\n      translation:\n        value: _root.mo.translations[idx].str\n      next_idx:\n        value: \"idx + collision_step - (idx >= _root.mo.num_hashtable_items - collision_step ? _root.mo.num_hashtable_items : 0)\"\n      next:\n        pos: 0\n        type: hash_lookup_iteration(_root.mo.hashtable_items[next_idx].val, collision_step)\n  lookup_iteration:\n    params:\n      - id: current\n        type: hash_lookup_iteration\n      - id: query\n        type: str\n    instances:\n      found:\n        value: query == current.original\n      next:\n        pos: 0\n        type: lookup_iteration(current.next, query)\n        if: not found\n\n  hashtable_lookup:\n    doc: |\n      def lookup(s:str, t:gettext_mo.GettextMo):\n        try:\n          l=gettext_mo.GettextMo.HashtableLookup(s, string_hash(s), t._io, _parent=t, _root=t)\n          e=l.entry\n          while(not e.found):\n            e=e.next\n          return e.current\n        except:\n          raise Exception(\"Not found \"+s+\" in the hashtable!\")\n\n      lookup(t.mo.originals[145].str, t)\n    doc-ref: https://gitlab.com/worr/libintl/raw/master/src/lib/libintl/gettext.c\n    params:\n      - id: query\n        type: str\n      - id: hash\n        type: u4\n        doc-ref: https://gitlab.com/worr/libintl/raw/master/src/lib/libintl/strhash.c\n        doc: |\n          def string_hash(s):\n            s=s.encode(\"utf-8\")\n            h = 0\n            for i in range(len(s)):\n              h = h << 4\n              h += s[i]\n              tmp = h & 0xF0000000\n              if tmp != 0:\n                h ^= tmp\n                h ^= tmp >> 24\n            return h\n    instances:\n      collision_step:\n        value: \"hash % (_root.mo.num_hashtable_items - 2) + 1\"\n      idx:\n        value: \"hash % _root.mo.num_hashtable_items\"\n      hash_lookup_iteration:\n        pos: 0\n        type: \"hash_lookup_iteration(_root.mo.hashtable_items[idx].val, collision_step)\"\n      entry:\n        pos: 0\n        type: \"lookup_iteration(hash_lookup_iteration, query)\"\n\n  mo:\n    meta:\n      endian:\n        switch-on: _root.signature\n        cases:\n          '[0xde, 0x12, 0x04, 0x95]': le\n          '[0x95, 0x04, 0x12, 0xde]': be\n    seq:\n      - id: version\n        type: version\n      - id: num_translations\n        type: u4\n      - id: ofs_originals\n        type: u4\n      - id: ofs_translations\n        type: u4\n      - id: num_hashtable_items\n        type: u4\n      - id: ofs_hashtable_items\n        type: u4\n    instances:\n      originals:\n        io: _root._io\n        pos: ofs_originals\n        type: descriptor\n        repeat: expr\n        repeat-expr: num_translations\n      translations:\n        io: _root._io\n        pos: ofs_translations\n        type: descriptor\n        repeat: expr\n        repeat-expr: num_translations\n      hashtable_items:\n        io: _root._io\n        pos: ofs_hashtable_items\n        type: hashtable_item\n        repeat: expr\n        repeat-expr: num_hashtable_items\n        if: ofs_hashtable_items != 0\n    types:\n      version:\n        seq:\n          - id: version_raw\n            type: u4\n        instances:\n          major:\n            value: version_raw >> 16\n          minor:\n            value: version_raw & 0xffff\n      hashtable_item:\n        seq:\n          - id: raw_val\n            type: u4\n        instances:\n          mask:\n            value: 0x80000000\n          val_1:\n            value: raw_val - 1\n            if: raw_val != 0\n          is_system_dependent:\n            value: val_1 & mask == 1\n            if: raw_val != 0\n          val:\n            value: val_1 & ~mask\n            if: raw_val != 0\n      descriptor:\n        seq:\n          - id: len_str\n            type: u4\n          - id: ofs_str\n            type: u4\n        instances:\n          str:\n            io: _root._io\n            pos: ofs_str\n            size: len_str\n            type: strz\n"
  },
  {
    "id": "ksy_sqlite3",
    "name": "SQLite3 database file",
    "category": "Database",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "sqlite",
        "db",
        "db3",
        "sqlite3"
      ],
      "description": "SQLite3 database file",
      "originalCategory": "database",
      "filePath": "database/sqlite3.ksy",
      "signature": {
        "offset": 0,
        "bytes": [
          null,
          0
        ]
      },
      "endian": "be"
    },
    "content": "meta:\n  id: sqlite3\n  title: SQLite3 database file\n  file-extension:\n    - sqlite\n    - db\n    - db3\n    - sqlite3\n  xref:\n    forensicswiki: sqlite_database_format\n    justsolve: SQLite\n    loc: fdd000461\n    pronom: fmt/729\n    wikidata: Q28600453\n  license: CC0-1.0\n  ks-version: '0.9'\n  imports:\n    - /common/vlq_base128_be\n  endian: be\ndoc: |\n  SQLite3 is a popular serverless SQL engine, implemented as a library\n  to be used within other applications. It keeps its databases as\n  regular disk files.\n\n  Every database file is segmented into pages. First page (starting at\n  the very beginning) is special: it contains a file-global header\n  which specifies some data relevant to proper parsing (i.e. format\n  versions, size of page, etc). After the header, normal contents of\n  the first page follow.\n\n  Each page would be of some type, and generally, they would be\n  reached via the links starting from the first page. First page type\n  (`root_page`) is always \"btree_page\".\ndoc-ref: https://www.sqlite.org/fileformat.html\nseq:\n  - id: magic\n    contents: [\"SQLite format 3\", 0]\n  - id: len_page_mod\n    type: u2\n    doc: |\n      The database page size in bytes. Must be a power of two between\n      512 and 32768 inclusive, or the value 1 representing a page size\n      of 65536.\n  - id: write_version\n    type: u1\n    enum: versions\n  - id: read_version\n    type: u1\n    enum: versions\n  - id: reserved_space\n    type: u1\n    doc: Bytes of unused \"reserved\" space at the end of each page. Usually 0.\n  - id: max_payload_frac\n    type: u1\n    doc: Maximum embedded payload fraction. Must be 64.\n  - id: min_payload_frac\n    type: u1\n    doc: Minimum embedded payload fraction. Must be 32.\n  - id: leaf_payload_frac\n    type: u1\n    doc: Leaf payload fraction. Must be 32.\n  - id: file_change_counter\n    type: u4\n  - id: num_pages\n    type: u4\n    doc: Size of the database file in pages. The \"in-header database size\".\n  - id: first_freelist_trunk_page\n    type: u4\n    doc: Page number of the first freelist trunk page.\n  - id: num_freelist_pages\n    type: u4\n    doc: Total number of freelist pages.\n  - id: schema_cookie\n    type: u4\n  - id: schema_format\n    type: u4\n    doc: The schema format number. Supported schema formats are 1, 2, 3, and 4.\n  - id: def_page_cache_size\n    type: u4\n    doc: Default page cache size.\n  - id: largest_root_page\n    type: u4\n    doc: The page number of the largest root b-tree page when in auto-vacuum or incremental-vacuum modes, or zero otherwise.\n  - id: text_encoding\n    type: u4\n    enum: encodings\n    doc: The database text encoding. A value of 1 means UTF-8. A value of 2 means UTF-16le. A value of 3 means UTF-16be.\n  - id: user_version\n    type: u4\n    doc: The \"user version\" as read and set by the user_version pragma.\n  - id: is_incremental_vacuum\n    type: u4\n    doc: True (non-zero) for incremental-vacuum mode. False (zero) otherwise.\n  - id: application_id\n    type: u4\n    doc: The \"Application ID\" set by PRAGMA application_id.\n  - id: reserved\n    size: 20\n  - id: version_valid_for\n    type: u4\n  - id: sqlite_version_number\n    type: u4\n  - id: root_page\n    type: btree_page\ninstances:\n  len_page:\n    value: 'len_page_mod == 1 ? 0x10000 : len_page_mod'\ntypes:\n  btree_page:\n    seq:\n      - id: page_type\n        type: u1\n      - id: first_freeblock\n        type: u2\n      - id: num_cells\n        type: u2\n      - id: ofs_cells\n        type: u2\n      - id: num_frag_free_bytes\n        type: u1\n      - id: right_ptr\n        type: u4\n        if: page_type == 2 or page_type == 5\n      - id: cells\n        type: ref_cell\n        repeat: expr\n        repeat-expr: num_cells\n  ref_cell:\n    seq:\n      - id: ofs_body\n        type: u2\n    instances:\n      body:\n        pos: ofs_body\n        type:\n          switch-on: _parent.page_type\n          cases:\n            0x0d: cell_table_leaf\n            0x05: cell_table_interior\n            0x0a: cell_index_leaf\n            0x02: cell_index_interior\n  cell_table_leaf:\n    doc-ref: 'https://www.sqlite.org/fileformat.html#b_tree_pages'\n    seq:\n      - id: len_payload\n        type: vlq_base128_be\n      - id: row_id\n        type: vlq_base128_be\n      - id: payload\n        size: len_payload.value\n        type: cell_payload\n      # TODO: overflow\n  cell_table_interior:\n    doc-ref: 'https://www.sqlite.org/fileformat.html#b_tree_pages'\n    seq:\n      - id: left_child_page\n        type: u4\n      - id: row_id\n        type: vlq_base128_be\n  cell_index_leaf:\n    doc-ref: 'https://www.sqlite.org/fileformat.html#b_tree_pages'\n    seq:\n      - id: len_payload\n        type: vlq_base128_be\n      - id: payload\n        size: len_payload.value\n        type: cell_payload\n      # TODO: overflow\n  cell_index_interior:\n    doc-ref: 'https://www.sqlite.org/fileformat.html#b_tree_pages'\n    seq:\n      - id: left_child_page\n        type: u4\n      - id: len_payload\n        type: vlq_base128_be\n      - id: payload\n        size: len_payload.value\n        type: cell_payload\n  cell_payload:\n    doc-ref: 'https://sqlite.org/fileformat2.html#record_format'\n    seq:\n      - id: len_header_and_len\n        type: vlq_base128_be\n      - id: column_serials\n        size: len_header_and_len.value - 1\n        type: serials\n      - id: column_contents\n        repeat: expr\n        repeat-expr: column_serials.entries.size\n        type: column_content(column_serials.entries[_index])\n  serials:\n    seq:\n      - id: entries\n        type: serial\n        repeat: eos\n  serial:\n    seq:\n      - id: code\n        type: vlq_base128_be\n    instances:\n      is_blob:\n        value: 'code.value >= 12 and (code.value % 2 == 0)'\n      is_string:\n        value: 'code.value >= 13 and (code.value % 2 == 1)'\n      len_content:\n        value: (code.value - 12) / 2\n        if: code.value >= 12\n  column_content:\n    params:\n      - id: serial_type\n        type: serial\n    seq:\n      - id: as_int\n        type:\n          switch-on: serial_type.code.value\n          cases:\n            1: u1\n            2: u2\n            3: b24\n            4: u4\n            5: b48\n            6: u8\n        if: serial_type.code.value >= 1 and serial_type.code.value <= 6\n      - id: as_float\n        type: f8\n        if: serial_type.code.value == 7\n      - id: as_blob\n        size: serial_type.len_content\n        if: serial_type.is_blob\n      - id: as_str\n        type: str\n        size: serial_type.len_content\n        encoding: UTF-8\n#        if: _root.text_encoding == encodings::utf_8 and serial_type.is_string\nenums:\n  versions:\n    1: legacy\n    2: wal\n  encodings:\n    1: utf_8\n    2: utf_16le\n    3: utf_16be\n"
  },
  {
    "id": "ksy_tsm",
    "name": "InfluxDB TSM file",
    "category": "Database",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "tsm"
      ],
      "description": "InfluxDB TSM file",
      "originalCategory": "database",
      "filePath": "database/tsm.ksy",
      "endian": "be"
    },
    "content": "meta:\n  id: tsm\n  title: InfluxDB TSM file\n  application: InfluxDB\n  file-extension: tsm\n  xref:\n    wikidata: Q29168491\n  license: MIT\n  endian: be\ndoc: |\n  InfluxDB is a scalable database optimized for storage of time\n  series, real-time application metrics, operations monitoring events,\n  etc, written in Go.\n\n  Data is stored in .tsm files, which are kept pretty simple\n  conceptually. Each .tsm file contains a header and footer, which\n  stores offset to an index. Index is used to find a data block for a\n  requested time boundary.\nseq:\n  - id: header\n    type: header\ninstances:\n  index:\n    pos: _io.size - 8\n    type: index\ntypes:\n  header:\n    seq:\n      - id: magic\n        contents: [0x16, 0xd1, 0x16, 0xd1]\n      - id: version\n        type: u1\n  index:\n    seq:\n      - id: offset\n        type: u8\n    instances:\n      entries:\n        pos: offset\n        type: index_header\n        repeat: until\n        repeat-until: _io.pos == _io.size - 8\n    types:\n      index_header:\n        seq:\n          - id: key_len\n            type: u2\n          - id: key\n            type: str\n            encoding: UTF-8\n            size: key_len\n          - id: type\n            type: u1\n          - id: entry_count\n            type: u2\n\n          - id: index_entries\n            type: index_entry\n            repeat: expr\n            repeat-expr: entry_count\n\n        types:\n          index_entry:\n            seq:\n              - id: min_time\n                type: u8\n              - id: max_time\n                type: u8\n              - id: block_offset\n                type: u8\n              - id: block_size\n                type: u4\n\n            types:\n              block_entry:\n                seq:\n                  - id: crc32\n                    type: u4\n                  - id: data\n                    size: _parent.block_size - 4\n\n            instances:\n              block:\n                io: _root._io\n                pos: block_offset\n                type: block_entry\n"
  }
];

export default {
  category: "Database",
  formats: databaseFormats
};
