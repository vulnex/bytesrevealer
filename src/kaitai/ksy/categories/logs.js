/**
 * Kaitai Formats - Logs
 * 7 formats
 * Auto-generated: 2025-09-21T19:51:05.641Z
 */

export const logsFormats = [
  {
    "id": "ksy_aix_utmp",
    "name": "utmp log file, IBM AIX version",
    "category": "Logs",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [],
      "description": "utmp log file, IBM AIX version",
      "originalCategory": "log",
      "filePath": "log/aix_utmp.ksy",
      "endian": "be"
    },
    "content": "meta:\n  id: aix_utmp\n  title: utmp log file, IBM AIX version\n  license: CC0-1.0\n  endian: be\ndoc: This spec can be used to parse utmp, wtmp and other similar as created by IBM AIX.\ndoc-ref: https://www.ibm.com/docs/en/aix/7.1?topic=files-utmph-file\nseq:\n  - id: records\n    type: record\n    repeat: eos\ntypes:\n  record:\n    seq:\n      - id: user\n        -orig-id: ut_user\n        doc: User login name\n        size: 256\n        type: str\n        encoding: ascii\n      - id: inittab_id\n        -orig-id: ut_id\n        doc: /etc/inittab id\n        size: 14\n        type: str\n        encoding: ascii\n      - id: device\n        -orig-id: ut_line\n        doc: device name (console, lnxx)\n        size: 64\n        type: str\n        encoding: ascii\n      - id: pid\n        -orig-id: ut_pid\n        type: u8\n        doc: process id\n      - id: type\n        -orig-id: ut_type\n        type: s2\n        doc: Type of login\n        enum: entry_type\n      - id: timestamp\n        -orig-id: ut_time\n        type: s8\n        doc: time entry was made\n      - id: exit_status\n        -orig-id: ut_exit\n        type: exit_status\n        doc: the exit status of a process marked as DEAD PROCESS\n      - id: hostname\n        -orig-id: ut_host\n        size: 256\n        doc: host name\n        type: str\n        encoding: ascii\n      - id: dbl_word_pad\n        type: s4\n      - id: reserved_a\n        size: 8\n      - id: reserved_v\n        size: 24\n  exit_status:\n    seq:\n      - id: termination_code\n        -orig-id: e_termination\n        type: s2\n        doc: process termination status\n      - id: exit_code\n        -orig-id: e_exit\n        type: s2\n        doc: process exit status\nenums:\n  entry_type:\n    0: empty\n    1: run_lvl\n    2: boot_time\n    3: old_time\n    4: new_time\n    5: init_process\n    6: login_process\n    7: user_process\n    8: dead_process\n    9: accounting\n"
  },
  {
    "id": "ksy_glibc_utmp",
    "name": "utmp log file, Linux/glibc version",
    "category": "Logs",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [],
      "description": "utmp log file, Linux/glibc version",
      "originalCategory": "log",
      "filePath": "log/glibc_utmp.ksy",
      "endian": "le"
    },
    "content": "meta:\n  id: glibc_utmp\n  title: utmp log file, Linux/glibc version\n  xref:\n    wikidata: Q3570128\n  tags:\n    - linux\n    - log\n  license: CC0-1.0\n  endian: le\nseq:\n  - id: records\n    size: 0x180\n    type: record\n    repeat: eos\ntypes:\n  record:\n    seq:\n      - id: ut_type\n        type: s4\n        doc: Type of login\n        enum: entry_type\n      - id: pid\n        type: s4\n        doc: Process ID of login process\n      - id: line\n        type: str\n        encoding: UTF-8\n        size: 32\n        doc: Devicename\n      - id: id\n        type: str\n        encoding: UTF-8\n        size: 4\n        doc: Inittab ID\n      - id: user\n        type: str\n        encoding: UTF-8\n        size: 32\n        doc: Username\n      - id: host\n        type: str\n        encoding: UTF-8\n        size: 256\n        doc: Hostname for remote login\n      - id: exit\n        type: u4\n        doc: Exit status of a process marked as DEAD_PROCESS\n      - id: session\n        type: s4\n        doc: Session ID, used for windowing\n      - id: tv\n        type: timeval\n        doc: Time entry was made\n      - id: addr_v6\n        size: 16\n        doc: Internet address of remote host\n      - id: reserved\n        size: 20\n  timeval:\n    seq:\n      - id: sec\n        type: u4\n        doc: Seconds\n      - id: usec\n        type: s4\n        doc: Microseconds\nenums:\n  entry_type:\n    0: empty\n    1: run_lvl\n    2: boot_time\n    3: new_time\n    4: old_time\n    5: init_process\n    6: login_process\n    7: user_process\n    8: dead_process\n    9: accounting\n"
  },
  {
    "id": "ksy_hashcat_restore",
    "name": "Hashcat Restore file",
    "category": "Logs",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "restore"
      ],
      "description": "Hashcat Restore file",
      "originalCategory": "log",
      "filePath": "log/hashcat_restore.ksy",
      "endian": "le"
    },
    "content": "meta:\n  id: hashcat_restore\n  title: Hashcat Restore file\n  file-extension: restore\n  license: CC0-1.0\n  endian: le\ndoc-ref: https://hashcat.net/wiki/doku.php?id=restore\nseq:\n  - id: version\n    type: u4\n  - id: cwd\n    type: strz\n    size: 256\n    encoding: UTF-8\n  - id: dicts_pos\n    type: u4\n  - id: masks_pos\n    type: u4\n  - id: padding\n    size: 4\n  - id: current_restore_point\n    type: u8\n  - id: argc\n    type: u4\n  - id: padding2\n    size: 12\n  - id: argv\n    type: strz\n    encoding: UTF-8\n    terminator: 0x0A\n    repeat: expr\n    repeat-expr: argc\n"
  },
  {
    "id": "ksy_mcap",
    "name": "MCAP",
    "category": "Logs",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "mcap"
      ],
      "description": "MCAP",
      "originalCategory": "log",
      "filePath": "log/mcap.ksy",
      "endian": "le"
    },
    "content": "meta:\n  id: mcap\n  title: MCAP\n  file-extension: mcap\n  license: Apache-2.0\n  endian: le\ndoc: |\n  MCAP is a modular container format and logging library for pub/sub messages with\n  arbitrary message serialization. It is primarily intended for use in robotics\n  applications, and works well under various workloads, resource constraints, and\n  durability requirements.\n\n  Time values (`log_time`, `publish_time`, `create_time`) are represented in\n  nanoseconds since a user-understood epoch (i.e. Unix epoch, robot boot time,\n  etc.)\ndoc-ref: https://github.com/foxglove/mcap/tree/c1cc51d/docs/specification#readme\nseq:\n  - id: header_magic\n    type: magic\n\n  - id: records\n    type: record\n    repeat: until\n    repeat-until: _.op == opcode::footer\n\n  - id: footer_magic\n    type: magic\n\ninstances:\n  footer:\n    pos: ofs_footer\n    size-eos: true\n    type: record\n  ofs_footer:\n    value: \"_io.size - footer.op._sizeof - footer.len_body._sizeof - sizeof<footer> - sizeof<magic>\"\n\nenums:\n  opcode:\n    0x01: header\n    0x02: footer\n    0x03: schema\n    0x04: channel\n    0x05: message\n    0x06: chunk\n    0x07: message_index\n    0x08: chunk_index\n    0x09: attachment\n    0x0a: attachment_index\n    0x0b: statistics\n    0x0c: metadata\n    0x0d: metadata_index\n    0x0e: summary_offset\n    0x0f: data_end\n\ntypes:\n  magic:\n    seq:\n      - id: magic\n        contents: [0x89, \"MCAP0\\r\\n\"]\n\n  prefixed_str:\n    seq:\n      - id: len_str\n        type: u4\n      - id: str\n        type: str\n        size: len_str\n        encoding: UTF-8\n\n  tuple_str_str:\n    seq:\n      - id: key\n        type: prefixed_str\n      - id: value\n        type: prefixed_str\n\n  map_str_str:\n    seq:\n      - id: len_entries\n        type: u4\n      - id: entries\n        size: len_entries\n        type: entries\n    types:\n      entries:\n        seq:\n          - id: entries\n            type: tuple_str_str\n            repeat: eos\n\n  records:\n    seq:\n      - id: records\n        type: record\n        repeat: eos\n\n  record:\n    seq:\n      - id: op\n        type: u1\n        enum: opcode\n      - id: len_body\n        type: u8\n      - id: body\n        size: len_body\n        type:\n          switch-on: op\n          cases:\n            opcode::header: header\n            opcode::footer: footer\n            opcode::schema: schema\n            opcode::channel: channel\n            opcode::message: message\n            opcode::chunk: chunk\n            opcode::message_index: message_index\n            opcode::chunk_index: chunk_index\n            opcode::attachment: attachment\n            opcode::attachment_index: attachment_index\n            opcode::statistics: statistics\n            opcode::metadata: metadata\n            opcode::metadata_index: metadata_index\n            opcode::summary_offset: summary_offset\n            opcode::data_end: data_end\n\n  header:\n    seq:\n      - id: profile\n        type: prefixed_str\n      - id: library\n        type: prefixed_str\n\n  footer:\n    seq:\n      - id: ofs_summary_section\n        -orig-id: summary_start\n        type: u8\n      - id: ofs_summary_offset_section\n        -orig-id: summary_offset_start\n        type: u8\n      - id: summary_crc32\n        -orig-id: summary_crc\n        type: u4\n        doc: |\n          A CRC-32 of all bytes from the start of the Summary section up through and\n          including the end of the previous field (summary_offset_start) in the footer\n          record. A value of 0 indicates the CRC-32 is not available.\n    instances:\n      summary_section:\n        io: _root._io\n        pos: ofs_summary_section\n        size: \"(ofs_summary_offset_section != 0 ? ofs_summary_offset_section : _root.ofs_footer) - ofs_summary_section\"\n        type: records\n        if: ofs_summary_section != 0\n      summary_offset_section:\n        io: _root._io\n        pos: ofs_summary_offset_section\n        size: \"_root.ofs_footer - ofs_summary_offset_section\"\n        type: records\n        if: ofs_summary_offset_section != 0\n      ofs_summary_crc32_input:\n        value: \"ofs_summary_section != 0 ? ofs_summary_section : _root.ofs_footer\"\n      summary_crc32_input:\n        io: _root._io\n        pos: ofs_summary_crc32_input\n        size: \"_root._io.size - ofs_summary_crc32_input - sizeof<magic> - summary_crc32._sizeof\"\n\n  schema:\n    seq:\n      - id: id\n        type: u2\n      - id: name\n        type: prefixed_str\n      - id: encoding\n        type: prefixed_str\n      - id: len_data\n        type: u4\n      - id: data\n        size: len_data\n\n  channel:\n    seq:\n      - id: id\n        type: u2\n      - id: schema_id\n        type: u2\n      - id: topic\n        type: prefixed_str\n      - id: message_encoding\n        type: prefixed_str\n      - id: metadata\n        type: map_str_str\n\n  message:\n    seq:\n      - id: channel_id\n        type: u2\n      - id: sequence\n        type: u4\n      - id: log_time\n        type: u8\n      - id: publish_time\n        type: u8\n      - id: data\n        size-eos: true\n\n  chunk:\n    seq:\n      - id: message_start_time\n        type: u8\n      - id: message_end_time\n        type: u8\n      - id: uncompressed_size\n        type: u8\n      - id: uncompressed_crc32\n        -orig-id: uncompressed_crc\n        type: u4\n        doc: |\n          CRC-32 checksum of uncompressed `records` field. A value of zero indicates that\n          CRC validation should not be performed.\n      - id: compression\n        type: prefixed_str\n      - id: len_records\n        type: u8\n      - id: records\n        size: len_records\n        type:\n          switch-on: compression.str\n          cases:\n            '\"\"': records\n\n  message_index:\n    seq:\n      - id: channel_id\n        type: u2\n      - id: len_records\n        type: u4\n      - id: records\n        size: len_records\n        type: message_index_entries\n    types:\n      message_index_entry:\n        seq:\n          - id: log_time\n            type: u8\n          - id: offset\n            type: u8\n      message_index_entries:\n        seq:\n          - id: entries\n            type: message_index_entry\n            repeat: eos\n\n  chunk_index:\n    seq:\n      - id: message_start_time\n        type: u8\n      - id: message_end_time\n        type: u8\n      - id: ofs_chunk\n        -orig-id: chunk_start_offset\n        type: u8\n      - id: len_chunk\n        -orig-id: chunk_length\n        type: u8\n      - id: len_message_index_offsets\n        type: u4\n      - id: message_index_offsets\n        size: len_message_index_offsets\n        type: message_index_offsets\n      - id: message_index_length\n        type: u8\n      - id: compression\n        type: prefixed_str\n      - id: compressed_size\n        type: u8\n      - id: uncompressed_size\n        type: u8\n    instances:\n      chunk:\n        io: _root._io\n        pos: ofs_chunk\n        size: len_chunk\n        type: record\n    types:\n      message_index_offset:\n        seq:\n          - id: channel_id\n            type: u2\n          - id: offset\n            type: u8\n      message_index_offsets:\n        seq:\n          - id: entries\n            type: message_index_offset\n            repeat: eos\n\n  attachment:\n    seq:\n      - id: log_time\n        type: u8\n      - id: create_time\n        type: u8\n      - id: name\n        type: prefixed_str\n      - id: content_type\n        type: prefixed_str\n      - id: len_data\n        type: u8\n      - id: data\n        size: len_data\n      # Trigger _io.pos computation: https://github.com/kaitai-io/kaitai_struct/issues/721#issuecomment-623011059\n      - id: invoke_crc32_input_end\n        size: 0\n        if: crc32_input_end >= 0\n      - id: crc32\n        -orig-id: crc\n        type: u4\n        doc: |\n          CRC-32 checksum of preceding fields in the record. A value of zero indicates that\n          CRC validation should not be performed.\n\n    instances:\n      crc32_input_end:\n        value: _io.pos\n      crc32_input:\n        pos: 0\n        size: crc32_input_end\n\n  attachment_index:\n    seq:\n      - id: ofs_attachment\n        -orig-id: offset\n        type: u8\n      - id: len_attachment\n        -orig-id: length\n        type: u8\n      - id: log_time\n        type: u8\n      - id: create_time\n        type: u8\n      - id: data_size\n        type: u8\n      - id: name\n        type: prefixed_str\n      - id: content_type\n        type: prefixed_str\n    instances:\n      attachment:\n        io: _root._io\n        pos: ofs_attachment\n        size: len_attachment\n        type: record\n\n  statistics:\n    seq:\n      - id: message_count\n        type: u8\n      - id: schema_count\n        type: u2\n      - id: channel_count\n        type: u4\n      - id: attachment_count\n        type: u4\n      - id: metadata_count\n        type: u4\n      - id: chunk_count\n        type: u4\n      - id: message_start_time\n        type: u8\n      - id: message_end_time\n        type: u8\n      - id: len_channel_message_counts\n        type: u4\n      - id: channel_message_counts\n        size: len_channel_message_counts\n        type: channel_message_counts\n    types:\n      channel_message_counts:\n        seq:\n          - id: entries\n            type: channel_message_count\n            repeat: eos\n      channel_message_count:\n        seq:\n          - id: channel_id\n            type: u2\n          - id: message_count\n            type: u8\n\n  metadata:\n    seq:\n      - id: name\n        type: prefixed_str\n      - id: metadata\n        type: map_str_str\n\n  metadata_index:\n    seq:\n      - id: ofs_metadata\n        -orig-id: offset\n        type: u8\n      - id: len_metadata\n        -orig-id: length\n        type: u8\n      - id: name\n        type: prefixed_str\n    instances:\n      metadata:\n        io: _root._io\n        pos: ofs_metadata\n        size: len_metadata\n        type: record\n\n  summary_offset:\n    seq:\n      - id: group_opcode\n        type: u1\n        enum: opcode\n      - id: ofs_group\n        -orig-id: group_start\n        type: u8\n      - id: len_group\n        -orig-id: group_length\n        type: u8\n    instances:\n      group:\n        io: _root._io\n        pos: ofs_group\n        size: len_group\n        type: records\n\n  data_end:\n    seq:\n      - id: data_section_crc32\n        -orig-id: data_section_crc\n        type: u4\n        doc: |\n          CRC-32 of all bytes in the data section. A value of 0 indicates the CRC-32 is not\n          available.\n"
  },
  {
    "id": "ksy_sudoers_ts",
    "name": "Sudoers Time Stamp file",
    "category": "Logs",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [],
      "description": "Sudoers Time Stamp file",
      "originalCategory": "log",
      "filePath": "log/sudoers_ts.ksy",
      "endian": "le"
    },
    "content": "meta:\n  id: sudoers_ts\n  title: Sudoers Time Stamp file\n  license: CC0-1.0\n  tags:\n    - linux\n  endian: le\ndoc: |\n  This spec can be used to parse sudo time stamp files located in directories\n  such as /run/sudo/ts/$USER or /var/lib/sudo/ts/$USER.\ndoc-ref: https://www.sudo.ws/docs/man/1.8.27/sudoers_timestamp.man/\nseq:\n  - id: records\n    type: record\n    repeat: eos\ntypes:\n  record:\n    seq:\n      - id: version\n        doc: version number of the timestamp_entry struct\n        type: u2\n      - id: len_record\n        doc: size of the record in bytes\n        type: u2\n        -orig-id: size\n      - id: payload\n        size: len_record - 4\n        type:\n          switch-on: version\n          cases:\n            1: record_v1\n            2: record_v2\n  record_v1:\n    seq:\n      - id: type\n        doc: record type\n        type: u2\n        enum: ts_type\n      - id: flags\n        doc: record flags\n        type: ts_flag\n      - id: auth_uid\n        doc: user ID that was used for authentication\n        type: u4\n      - id: sid\n        doc: session ID associated with tty/ppid\n        type: u4\n      - id: ts\n        doc: time stamp, from a monotonic time source\n        type: timespec\n      - id: ttydev\n        doc: device number of the terminal associated with the session\n        if: type == ts_type::tty\n        type: u4\n      - id: ppid\n        doc: ID of the parent process\n        if: type == ts_type::ppid\n        type: u4\n  record_v2:\n    seq:\n      - id: type\n        doc: record type\n        type: u2\n        enum: ts_type\n      - id: flags\n        doc: record flags\n        type: ts_flag\n      - id: auth_uid\n        doc: user ID that was used for authentication\n        type: u4\n      - id: sid\n        doc: ID of the user's terminal session, if present (when type is TS_TTY)\n        type: u4\n      - id: start_time\n        doc: start time of the session leader for records of type TS_TTY or of the parent process for records of type TS_PPID\n        type: timespec\n      - id: ts\n        doc: actual time stamp, from a monotonic time source\n        type: timespec\n      - id: ttydev\n        doc: device number of the terminal associated with the session\n        if: type == ts_type::tty\n        type: u4\n      - id: ppid\n        doc: ID of the parent process\n        if: type == ts_type::ppid\n        type: u4\n  timespec:\n    seq:\n      - id: sec\n        type: s8\n        doc: seconds\n      - id: nsec\n        type: s8\n        doc: nanoseconds\n  ts_flag:\n    seq:\n      - id: reserved0\n        doc: Reserved (unused) bits\n        type: b6\n      - id: anyuid\n        doc: ignore uid\n        type: b1\n        -orig-id: TS_ANYUID\n      - id: disabled\n        doc: entry disabled\n        type: b1\n        -orig-id: TS_DISABLED\n      - id: reserved1\n        doc: Reserved (unused) bits\n        type: b8\nenums:\n  ts_type:\n    1: global\n    2: tty\n    3: ppid\n    4: lockexcl\n"
  },
  {
    "id": "ksy_systemd_journal",
    "name": "systemd journal file",
    "category": "Logs",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "journal"
      ],
      "description": "systemd journal file",
      "originalCategory": "log",
      "filePath": "log/systemd_journal.ksy",
      "endian": "le"
    },
    "content": "meta:\n  id: systemd_journal\n  title: systemd journal file\n  file-extension: journal\n  xref:\n    forensicswiki: systemd\n  tags:\n    - linux\n    - log\n  license: CC0-1.0\n  endian: le\ndoc: |\n  systemd, a popular user-space system/service management suite on Linux,\n  offers logging functionality, storing incoming logs in a binary journal\n  format.\n\n  On live Linux system running systemd, these journals are typically located at:\n\n  * /run/log/journal/machine-id/*.journal (volatile, lost after reboot)\n  * /var/log/journal/machine-id/*.journal (persistent, but disabled by default on Debian / Ubuntu)\ndoc-ref: https://www.freedesktop.org/wiki/Software/systemd/journal-files/\nseq:\n  - id: header\n    type: header\n    size: len_header\n  - id: objects\n    type: journal_object\n    repeat: expr\n    repeat-expr: header.num_objects\ninstances:\n  len_header:\n    pos: 0x58\n    type: u8\n    doc: |\n      Header length is used to set substream size, as it thus required\n      prior to declaration of header.\n  data_hash_table:\n    pos: header.ofs_data_hash_table\n    size: header.len_data_hash_table\n  field_hash_table:\n    pos: header.ofs_field_hash_table\n    size: header.len_field_hash_table\nenums:\n  state:\n    0:\n      id: offline\n      doc: File is closed and thus not being written into right now\n    1:\n      id: online\n      doc: File is open and thus might be undergoing update at the moment\n    2:\n      id: archived\n      doc: File has been rotated, no further updates to this file are to be expected\ntypes:\n  header:\n    seq:\n      - id: signature\n        contents: LPKSHHRH\n      - id: compatible_flags\n        type: u4\n      - id: incompatible_flags\n        type: u4\n      - id: state\n        type: u1\n        enum: state\n      - id: reserved\n        size: 7\n      - id: file_id\n        size: 16\n      - id: machine_id\n        size: 16\n      - id: boot_id\n        size: 16\n      - id: seqnum_id\n        size: 16\n      - id: len_header\n        -orig-id: header_size\n        type: u8\n      - id: len_arena\n        -orig-id: arena_size\n        type: u8\n      - id: ofs_data_hash_table\n        -orig-id: data_hash_table_offset\n        type: u8\n      - id: len_data_hash_table\n        -orig-id: data_hash_table_size\n        type: u8\n      - id: ofs_field_hash_table\n        -orig-id: field_hash_table_offset\n        type: u8\n      - id: len_field_hash_table\n        -orig-id: field_hash_table_size\n        type: u8\n      - id: ofs_tail_object\n        -orig-id: tail_object_offset\n        type: u8\n      - id: num_objects\n        -orig-id: n_objects\n        type: u8\n      - id: num_entries\n        -orig-id: n_entries\n        type: u8\n      - id: tail_entry_seqnum\n        type: u8\n      - id: head_entry_seqnum\n        type: u8\n      - id: ofs_entry_array\n        -orig-id: entry_array_offset\n        type: u8\n      - id: head_entry_realtime\n        type: u8\n      - id: tail_entry_realtime\n        type: u8\n      - id: tail_entry_monotonic\n        type: u8\n\n      # Added in 187\n      - id: num_data\n        -orig-id: n_data\n        type: u8\n        if: not _io.eof\n      - id: num_fields\n        -orig-id: n_fields\n        type: u8\n        if: not _io.eof\n\n      # Added in 189\n      - id: num_tags\n        -orig-id: n_tags\n        type: u8\n        if: not _io.eof\n      - id: num_entry_arrays\n        -orig-id: n_entry_arrays\n        type: u8\n        if: not _io.eof\n  journal_object:\n    doc-ref: 'https://www.freedesktop.org/wiki/Software/systemd/journal-files/#objects'\n    seq:\n      - id: padding\n        size: (8 - _io.pos) % 8\n      - id: object_type\n        type: u1\n        enum: object_types\n      - id: flags\n        type: u1\n      - id: reserved\n        size: 6\n      - id: len_object\n        type: u8\n      - id: payload\n        size: len_object - 16\n        type:\n          switch-on: object_type\n          cases:\n            'object_types::data': data_object\n    enums:\n      object_types:\n        0: unused\n        1: data\n        2: field\n        3: entry\n        4: data_hash_table\n        5: field_hash_table\n        6: entry_array\n        7: tag\n  data_object:\n    doc: |\n      Data objects are designed to carry log payload, typically in\n      form of a \"key=value\" string in `payload` attribute.\n    doc-ref: 'https://www.freedesktop.org/wiki/Software/systemd/journal-files/#dataobjects'\n    seq:\n      - id: hash\n        type: u8\n      - id: ofs_next_hash\n        -orig-id: next_hash_offset\n        type: u8\n      - id: ofs_head_field\n        -orig-id: head_field_offset\n        type: u8\n      - id: ofs_entry\n        -orig-id: entry_offset\n        type: u8\n      - id: ofs_entry_array\n        -orig-id: entry_array_offset\n        type: u8\n      - id: num_entries\n        -orig-id: n_entries\n        type: u8\n      - id: payload\n        size-eos: true\n    instances:\n      next_hash:\n        io: _root._io\n        pos: ofs_next_hash\n        type: journal_object\n        if: ofs_next_hash != 0\n      head_field:\n        io: _root._io\n        pos: ofs_head_field\n        type: journal_object\n        if: ofs_head_field != 0\n      entry:\n        io: _root._io\n        pos: ofs_entry\n        type: journal_object\n        if: ofs_entry != 0\n      entry_array:\n        io: _root._io\n        pos: ofs_entry_array\n        type: journal_object\n        if: ofs_entry_array != 0\n"
  },
  {
    "id": "ksy_windows_evt_log",
    "name": "Windows Event Log (EVT)",
    "category": "Logs",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "evt"
      ],
      "description": "Windows Event Log (EVT)",
      "originalCategory": "log",
      "filePath": "log/windows_evt_log.ksy",
      "endian": "le"
    },
    "content": "meta:\n  id: windows_evt_log\n  title: Windows Event Log (EVT)\n  file-extension: evt\n  xref:\n    forensicswiki: windows_event_log_(evt)\n    justsolve: Windows_Event_Log\n  tags:\n    - windows\n    - log\n  license: CC0-1.0\n  ks-version: 0.9\n  endian: le\ndoc: |\n  EVT files are Windows Event Log files written by older Windows\n  operating systems (2000, XP, 2003). They are used as binary log\n  files by several major Windows subsystems and\n  applications. Typically, several of them can be found in\n  `%WINDIR%\\system32\\config` directory:\n\n  * Application = `AppEvent.evt`\n  * System = `SysEvent.evt`\n  * Security = `SecEvent.evt`\n\n  Alternatively, one can export any system event log as distinct .evt\n  file using relevant option in Event Viewer application.\n\n  A Windows application can submit an entry into these logs using\n  [ReportEventA](https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-reporteventa)\n  function of Windows API.\n\n  Internally, EVT files consist of a fixed-size header and event\n  records. There are several usage scenarios (non-wrapping vs wrapping\n  log files) which result in slightly different organization of\n  records.\ndoc-ref: https://learn.microsoft.com/en-us/windows/win32/eventlog/event-log-file-format\nseq:\n  - id: header\n    type: header\n  - id: records\n    type: record\n    repeat: eos\ntypes:\n  header:\n    doc-ref: https://learn.microsoft.com/en-us/previous-versions/windows/desktop/legacy/bb309024(v=vs.85)\n    seq:\n      - id: len_header\n        -orig-id: HeaderSize\n        type: u4\n        doc: Size of the header structure, must be 0x30.\n      - id: magic\n        -orig-id: Signature\n        contents: \"LfLe\"\n      - id: version_major\n        -orig-id: MajorVersion\n        type: u4\n      - id: version_minor\n        -orig-id: MinorVersion\n        type: u4\n      - id: ofs_start\n        -orig-id: StartOffset\n        type: u4\n        doc: Offset of oldest record kept in this log file.\n      - id: ofs_end\n        -orig-id: EndOffset\n        type: u4\n        doc: Offset of EOF log record, which is a placeholder for new record.\n      - id: cur_rec_idx\n        -orig-id: CurrentRecordNumber\n        type: u4\n        doc: |\n          Index of current record, where a new submission would be\n          written to (normally there should to EOF log record there).\n      - id: oldest_rec_idx\n        -orig-id: OldestRecordNumber\n        type: u4\n        doc: Index of oldest record in the log file\n      - id: len_file_max\n        -orig-id: MaxSize\n        type: u4\n        doc: Total maximum size of the log file\n      - id: flags\n        -orig-id: Flags\n        type: flags\n      - id: retention\n        -orig-id: Retention\n        type: u4\n      - id: len_header_2\n        -orig-id: EndHeaderSize\n        type: u4\n        doc: Size of the header structure repeated again, and again it must be 0x30.\n    types:\n      flags:\n        seq:\n          - id: reserved\n            type: b28\n          - id: archive\n            -orig-id: ELF_LOGFILE_ARCHIVE_SET\n            type: b1\n            doc: True if archive attribute has been set for this log file.\n          - id: log_full\n            -orig-id: ELF_LOGFILE_LOGFULL_WRITTEN\n            type: b1\n            doc: True if last write operation failed due to log being full.\n          - id: wrap\n            -orig-id: ELF_LOGFILE_HEADER_WRAP\n            type: b1\n            doc: True if wrapping of record has occured.\n          - id: dirty\n            -orig-id: ELF_LOGFILE_HEADER_DIRTY\n            type: b1\n            doc: |\n              True if write operation was in progress, but log file\n              wasn't properly closed.\n  record:\n    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-eventlogrecord\n    seq:\n      - id: len_record\n        -orig-id: Length\n        type: u4\n        doc: Size of whole record, including all headers, footers and data\n      - id: type\n        -orig-id: Reserved\n        type: u4\n        doc: |\n          Type of record. Normal log records specify \"LfLe\"\n          (0x654c664c) in this field, cursor records use 0x11111111.\n      - id: body\n        size: len_record - 12\n        type:\n          switch-on: type\n          cases:\n            0x654c664c: record_body\n            0x11111111: cursor_record_body\n        doc: |\n          Record body interpretation depends on type of record. Body\n          size is specified in a way that it won't include a 8-byte\n          \"header\" (`len_record` + `type`) and a \"footer\"\n          (`len_record2`).\n      - id: len_record2\n        type: u4\n        doc: Size of whole record again.\n  record_body:\n    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-eventlogrecord\n    seq:\n      - id: idx\n        -orig-id: RecordNumber\n        type: u4\n        doc: Index of record in the file.\n      - id: time_generated\n        -orig-id: TimeGenerated\n        type: u4\n        doc: Time when this record was generated, POSIX timestamp format.\n      - id: time_written\n        -orig-id: TimeWritten\n        type: u4\n        doc: Time when thsi record was written into the log file, POSIX timestamp format.\n      - id: event_id\n        -orig-id: EventID\n        type: u4\n        doc: |\n          Identifier of an event, meaning is specific to particular\n          source of events / event type.\n      - id: event_type\n        -orig-id: EventType\n        type: u2\n        enum: event_types\n        doc: Type of event.\n        doc-ref: https://learn.microsoft.com/en-us/windows/win32/eventlog/event-types\n      - id: num_strings\n        -orig-id: NumStrings\n        type: u2\n        doc: Number of strings present in the log.\n      - id: event_category\n        -orig-id: EventCategory\n        type: u2\n        doc-ref: https://learn.microsoft.com/en-us/windows/win32/eventlog/event-categories\n      - id: reserved\n        -orig-id: ReservedFlags, ClosingRecordNumber\n        size: 6\n      - id: ofs_strings\n        -orig-id: StringOffset\n        type: u4\n        doc: Offset of strings present in the log\n      - id: len_user_sid\n        -orig-id: UserSidLength\n        type: u4\n      - id: ofs_user_sid\n        -orig-id: UserSidOffset\n        type: u4\n      - id: len_data\n        -orig-id: DataLength\n        type: u4\n      - id: ofs_data\n        -orig-id: DataOffset\n        type: u4\n    instances:\n#      strings:\n#        pos: ofs_strings - 8\n      user_sid:\n        pos: ofs_user_sid - 8\n        size: len_user_sid\n      data:\n        pos: ofs_data - 8\n        size: len_data\n    enums:\n      event_types:\n        1: error\n        2: audit_failure\n        3: audit_success\n        4: info\n        5: warning\n  cursor_record_body:\n    doc-ref: 'https://forensics.wiki/windows_event_log_(evt)/#cursor-record'\n    seq:\n      - id: magic\n        contents: [0x22, 0x22, 0x22, 0x22, 0x33, 0x33, 0x33, 0x33, 0x44, 0x44, 0x44, 0x44]\n      - id: ofs_first_record\n        type: u4\n      - id: ofs_next_record\n        type: u4\n      - id: idx_next_record\n        type: u4\n      - id: idx_first_record\n        type: u4\n"
  }
];

export default {
  category: "Logs",
  formats: logsFormats
};
