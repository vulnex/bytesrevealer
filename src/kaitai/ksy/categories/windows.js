/**
 * Kaitai Formats - Windows
 * 6 formats
 * Auto-generated: 2025-09-21T19:51:05.642Z
 */

export const windowsFormats = [
  {
    "id": "ksy_regf",
    "name": "Windows registry database",
    "category": "Windows",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [],
      "description": "Windows registry database",
      "originalCategory": "windows",
      "filePath": "windows/regf.ksy",
      "endian": "le"
    },
    "content": "meta:\n  id: regf\n  title: Windows registry database\n  application: Windows NT and later\n  xref:\n    justsolve: Windows_Registry\n    forensicswiki: windows_nt_registry_file_(regf)\n    wikidata: Q463244\n  license: CC0-1.0\n  endian: le\ndoc: |\n  This spec allows to parse files used by Microsoft Windows family of\n  operating systems to store parts of its \"registry\". \"Registry\" is a\n  hierarchical database that is used to store system settings (global\n  configuration, per-user, per-application configuration, etc).\n\n  Typically, registry files are stored in:\n\n  * System-wide: several files in `%SystemRoot%\\System32\\Config\\`\n  * User-wide:\n    * `%USERPROFILE%\\Ntuser.dat`\n    * `%USERPROFILE%\\Local Settings\\Application Data\\Microsoft\\Windows\\Usrclass.dat` (localized, Windows 2000, Server 2003 and Windows XP)\n    * `%USERPROFILE%\\AppData\\Local\\Microsoft\\Windows\\Usrclass.dat` (non-localized, Windows Vista and later)\n\n  Note that one typically can't access files directly on a mounted\n  filesystem with a running Windows OS.\ndoc-ref: 'https://github.com/libyal/libregf/blob/main/documentation/Windows%20NT%20Registry%20File%20(REGF)%20format.asciidoc'\nseq:\n  - id: header\n    type: file_header\n  - id: hive_bins\n    type: hive_bin\n    size: 4096\n    repeat: eos\ntypes:\n  file_header:\n    seq:\n      - id: signature\n        contents: \"regf\"\n      - id: primary_sequence_number # Matches the secondary sequence number if the hive was properly synchronized\n        type: u4\n      - id: secondary_sequence_number # Matches the primary sequence number if the hive was properly synchronized\n        type: u4\n      - id: last_modification_date_and_time # Contains a FILETIME in UTC\n        type: filetime\n      - id: major_version\n        type: u4\n      - id: minor_version\n        type: u4\n      - id: type\n        type: u4\n        enum: file_type\n      - id: format\n        type: u4\n        enum: file_format\n      - id: root_key_offset\n        type: u4\n      - id: hive_bins_data_size\n        type: u4\n      - id: clustering_factor # Logical sector size of the underlying disk in bytes divided by 512\n        type: u4\n      - id: unknown1 # Sometimes contains the last part of the filename in UTF-16 LE most of the time with an end-of-string character, but not always. Unused bytes are 0.\n        size: 64\n      - id: unknown2 # Can contain remnant data, Padding used for the checksum?\n        size: 396\n      - id: checksum # XOR-32 of the previous 508 bytes\n        type: u4\n      - id: reserved\n        size: 3576\n      - id: boot_type # This field has no meaning on a disk\n        type: u4\n      - id: boot_recover # This field has no meaning on a disk\n        type: u4\n    enums:\n      file_type:\n        0: normal\n        1: transaction_log\n      file_format:\n        1: direct_memory_load\n  hive_bin_header:\n    seq:\n      - id: signature\n        contents: \"hbin\"\n      - id: offset\n        type: u4\n        doc: |\n          The offset of the hive bin, Value in bytes and relative from\n          the start of the hive bin data\n      - id: size\n        type: u4\n        doc: Size of the hive bin\n      - id: unknown1\n        type: u4\n        doc: 0 most of the time, can contain remnant data\n      - id: unknown2\n        type: u4\n        doc: 0 most of the time, can contain remnant data\n      - id: timestamp\n        type: filetime\n        doc: Only the root (first) hive bin seems to contain a valid FILETIME\n      - id: unknown4\n        type: u4\n        doc: Contains number of bytes\n  hive_bin_cell:\n    -webide-representation: \"{identifier}\"\n    seq:\n      - id: cell_size_raw\n        type: s4\n      - id: identifier\n        type: str\n        size: 2\n        encoding: ascii\n      - id: data\n        size: cell_size - 2 - 4\n        type:\n          switch-on: identifier\n          cases:\n            \"'nk'\": named_key\n            \"'lh'\": sub_key_list_lh_lf\n            \"'lf'\": sub_key_list_lh_lf\n            \"'li'\": sub_key_list_li\n            \"'ri'\": sub_key_list_ri\n            \"'vk'\": sub_key_list_vk\n            \"'sk'\": sub_key_list_sk\n    instances:\n      cell_size:\n        value: \"(cell_size_raw < 0 ? -1 : +1) * cell_size_raw\"\n        -webide-parse-mode: eager\n      is_allocated:\n        value: \"cell_size_raw < 0\"\n        -webide-parse-mode: eager\n    types:\n      named_key:\n        seq:\n          - id: flags\n            type: u2\n            enum: nk_flags\n          - id: last_key_written_date_and_time\n            type: filetime\n          - id: unknown1 # empty value\n            type: u4\n          - id: parent_key_offset # The offset value is in bytes and relative from the start of the hive bin data\n            type: u4\n          - id: number_of_sub_keys\n            type: u4\n          - id: number_of_volatile_sub_keys # The offset value is in bytes and relative from the start of the hive bin data / Refers to a sub keys list or contains -1 (0xffffffff) if empty.\n            type: u4\n          - id: sub_keys_list_offset # The offset value is in bytes and relative from the start of the hive bin data / Refers to a sub keys list or contains -1 (0xffffffff) if empty.\n            type: u4\n          - id: number_of_values\n            type: u4\n          - id: values_list_offset\n            type: u4\n          - id: security_key_offset\n            type: u4\n          - id: class_name_offset\n            type: u4\n          - id: largest_sub_key_name_size\n            type: u4\n          - id: largest_sub_key_class_name_size\n            type: u4\n          - id: largest_value_name_size\n            type: u4\n          - id: largest_value_data_size\n            type: u4\n          - id: unknown2 # Some run-time caching index or hash?\n            type: u4\n          - id: key_name_size\n            type: u2\n          - id: class_name_size\n            type: u2\n          - id: unknown_string_size\n            type: u4\n          - id: unknown_string\n            type: str\n            size: unknown_string_size\n            encoding: ascii\n        enums:\n          nk_flags:\n            0x0001: key_is_volatile   # Is volatile key\n            0x0002: key_hive_exit     # Is mount point (of another Registry hive)\n            0x0004: key_hive_entry    # Is root key (of current Registry hive)\n            0x0008: key_no_delete     # Cannot be deleted\n            0x0010: key_sym_link      # Is symbolic link key\n            0x0020: key_comp_name     # Name is an ASCII string / Otherwise the name is a Unicode (UTF-16 little-endian) string\n            0x0040: key_prefef_handle # Is predefined handle\n            0x0080: key_virt_mirrored # Unknown\n            0x0100: key_virt_target   # Unknown\n            0x0200: key_virtual_store # Unknown\n            0x1000: unknown1\n            0x4000: unknown2\n      sub_key_list_lh_lf:\n        seq:\n          - id: count\n            type: u2\n          - id: items\n            type: item\n            repeat: expr\n            repeat-expr: count\n        types:\n          item:\n            seq:\n              - id: named_key_offset # The offset value is in bytes and relative from the start of the hive bin data\n                type: u4\n              - id: hash_value # A different hash function is used for different sub key list types\n                type: u4\n      sub_key_list_li:\n        seq:\n          - id: count\n            type: u2\n          - id: items\n            type: item\n            repeat: expr\n            repeat-expr: count\n        types:\n          item:\n            seq:\n              - id: named_key_offset # The offset value is in bytes and relative from the start of the hive bin data\n                type: u4\n      sub_key_list_ri:\n        seq:\n          - id: count\n            type: u2\n          - id: items\n            type: item\n            repeat: expr\n            repeat-expr: count\n        types:\n          item:\n            seq:\n              - id: sub_key_list_offset # The offset value is in bytes and relative from the start of the hive bin data\n                type: u4\n      sub_key_list_vk:\n        seq:\n          - id: value_name_size # If the value name size is 0 the value name is \"(default)\"\n            type: u2\n          - id: data_size\n            type: u4\n          - id: data_offset # The offset value is in bytes and relative from the start of the hive bin data.\n            type: u4\n          - id: data_type\n            type: u4\n            enum: data_type_enum\n          - id: flags\n            type: u2\n            enum: vk_flags\n          - id: padding # unknown\n            type: u2\n          - id: value_name\n            size: value_name_size\n            type: str\n            encoding: ascii\n            if: \"flags == vk_flags::value_comp_name\"\n        enums:\n          data_type_enum:\n            0x00000000: reg_none # Undefined type\n            0x00000001: reg_sz # String / [MSDN] states that this is either in ASCII or Unicode with an end-of-string character / Although the string seems to be always stored as UTF-16 little-endian and sometimes the end-of-string character is not included. / Also see: Corruption scenarios\n            0x00000002: reg_expand_sz # String that contains expandable (environment) variables like %PATH% / Either in ASCII or Unicode with an end-of-string character\n            0x00000003: reg_binary # binary_data\n            0x00000004: reg_dword # REG_DWORD_LITTLE_ENDIAN: 32-bit integer (double word) little-endian\n            0x00000005: reg_dword_big_endian # Integer 32-bit signed big-endian (double word)\n            0x00000006: reg_link # String that contains a symbolic link / Either in ASCII or Unicode with an end-of-string character\n            0x00000007: reg_multi_sz # Array of strings / Either in ASCII or Unicode with an end-of-string character\n            0x00000008: reg_resource_list # Resource list\n            0x00000009: reg_full_resource_descriptor # Full resource descriptor\n            0x0000000a: reg_resource_requirements_list # Resource requirements list\n            0x0000000b: reg_qword # REG_QWORD_LITTLE_ENDIAN: Integer 64-bit signed little-endian (quad word)\n          vk_flags:\n            0x0001: value_comp_name # Name is an ASCII string / Otherwise the name is an Unicode (UTF-16 little-endian) string\n      sub_key_list_sk:\n        seq:\n          - id: unknown1\n            type: u2\n          - id: previous_security_key_offset\n            type: u4\n          - id: next_security_key_offset\n            type: u4\n          - id: reference_count\n            type: u4\n  hive_bin:\n    seq:\n      - id: header\n        type: hive_bin_header\n      - id: cells\n        type: hive_bin_cell\n        repeat: eos\n  filetime:\n    seq:\n      - id: value\n        type: u8\n    -webide-representation: \"{value}\"\n"
  },
  {
    "id": "ksy_windows_lnk_file",
    "name": "Windows shell link file",
    "category": "Windows",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "lnk"
      ],
      "description": "Windows shell link file",
      "originalCategory": "windows",
      "filePath": "windows/windows_lnk_file.ksy",
      "endian": "le"
    },
    "content": "meta:\n  id: windows_lnk_file\n  title: Windows shell link file\n  file-extension: lnk\n  xref:\n    forensicswiki: lnk\n    justsolve: Windows_Shortcut\n    mime: application/x-ms-shortcut\n    pronom: x-fmt/428\n    wikidata: Q29000599\n  license: CC0-1.0\n  imports:\n    - windows_shell_items\n  encoding: cp437\n  endian: le\ndoc: |\n  Windows .lnk files (AKA \"shell link\" file) are most frequently used\n  in Windows shell to create \"shortcuts\" to another files, usually for\n  purposes of running a program from some other directory, sometimes\n  with certain preconfigured arguments and some other options.\ndoc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf'\nseq:\n  - id: header\n    type: file_header\n  - id: target_id_list\n    type: link_target_id_list\n    if: header.flags.has_link_target_id_list\n  - id: info\n    type: link_info\n    if: header.flags.has_link_info\n  - id: name\n    -orig-id: NAME_STRING\n    type: string_data\n    if: header.flags.has_name\n  - id: rel_path\n    -orig-id: RELATIVE_PATH\n    type: string_data\n    if: header.flags.has_rel_path\n  - id: work_dir\n    -orig-id: WORKING_DIR\n    type: string_data\n    if: header.flags.has_work_dir\n  - id: arguments\n    -orig-id: COMMAND_LINE_ARGUMENTS\n    type: string_data\n    if: header.flags.has_arguments\n  - id: icon_location\n    -orig-id: ICON_LOCATION\n    type: string_data\n    if: header.flags.has_icon_location\ntypes:\n  file_header:\n    -orig-id: ShellLinkHeader\n    doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.1'\n    seq:\n      - id: len_header\n        -orig-id: HeaderSize\n        contents: [0x4c, 0, 0, 0]\n        doc: |\n          Technically, a size of the header, but in reality, it's\n          fixed by standard.\n      - id: link_clsid\n        contents: [0x01, 0x14, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46]\n        doc: |\n          16-byte class identified (CLSID), reserved for Windows shell\n          link files.\n      - id: flags\n        -orig-id: LinkFlags\n        type: link_flags\n        size: 4\n      - id: file_attrs\n        type: u4\n      - id: time_creation\n        -orig-id: CreationTime\n        type: u8\n      - id: time_access\n        -orig-id: AccessTime\n        type: u8\n      - id: time_write\n        -orig-id: WriteTime\n        type: u8\n      - id: target_file_size\n        -orig-id: FileSize\n        type: u4\n        doc: Lower 32 bits of the size of the file that this link targets\n      - id: icon_index\n        -orig-id: IconIndex\n        type: s4\n        doc: Index of an icon to use from target file\n      - id: show_command\n        -orig-id: ShowCommand\n        type: u4\n        enum: window_state\n        doc: Window state to set after the launch of target executable\n      - id: hotkey\n        type: u2\n      - id: reserved\n        contents: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  link_flags:\n    doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.1.1'\n    seq:\n      # Byte #0\n      - id: is_unicode\n        -orig-id: IsUnicode (H)\n        type: b1\n      - id: has_icon_location\n        -orig-id: HasIconLocation (G)\n        type: b1\n      - id: has_arguments\n        -orig-id: HasArguments (F)\n        type: b1\n      - id: has_work_dir\n        -orig-id: HasWorkingDir (E)\n        type: b1\n      - id: has_rel_path\n        -orig-id: HasRelativePath (D)\n        type: b1\n      - id: has_name\n        -orig-id: HasName (C)\n        type: b1\n      - id: has_link_info\n        -orig-id: HasLinkInfo (B)\n        type: b1\n      - id: has_link_target_id_list\n        -orig-id: HasLinkTargetIDList (A)\n        type: b1\n      # Byte #1, 2\n      - type: b16\n      # Byte #3\n      - id: reserved\n        type: b5\n      - id: keep_local_id_list_for_unc_target\n        -orig-id: KeepLocalIDListForUNCTarget (AA)\n        type: b1\n      - type: b2\n  link_target_id_list:\n    -orig-id: LinkTargetIDList\n    doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.2'\n    seq:\n      - id: len_id_list\n        -orig-id: IDListSize\n        type: u2\n      - id: id_list\n        -orig-id: IDList\n        size: len_id_list\n        type: windows_shell_items\n  link_info:\n    -orig-id: LinkInfo\n    doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.3'\n    seq:\n      - id: len_all\n        -orig-id: LinkInfoSize\n        type: u4\n      - id: all\n        size: len_all - 4\n        type: all\n    types:\n      all:\n        doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.3'\n        seq:\n          - id: len_header\n            -orig-id: LinkInfoHeaderSize\n            type: u4\n          - id: header\n            size: len_header - 8 # LinkInfoSize and LinkInfoHeaderSize\n            type: header\n        instances:\n          volume_id:\n            -orig-id: VolumeID\n            pos: header.ofs_volume_id - 4\n            type: volume_id_spec\n            if: header.flags.has_volume_id_and_local_base_path\n          local_base_path:\n            -orig-id: LocalBasePath\n            pos: header.ofs_local_base_path - 4\n            terminator: 0\n            if: header.flags.has_volume_id_and_local_base_path\n      header:\n        doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.3'\n        seq:\n          - id: flags\n            -orig-id: LinkInfoFlags\n            type: link_info_flags\n          - id: ofs_volume_id\n            -orig-id: VolumeIDOffset\n            type: u4\n          - id: ofs_local_base_path\n            -orig-id: LocalBasePathOffset\n            type: u4\n          - id: ofs_common_net_rel_link\n            -orig-id: CommonNetworkRelativeLinkOffset\n            type: u4\n          - id: ofs_common_path_suffix\n            -orig-id: CommonPathSuffixOffset\n            type: u4\n          - id: ofs_local_base_path_unicode\n            -orig-id: LocalBasePathOffsetUnicode\n            type: u4\n            if: not _io.eof\n          - id: ofs_common_path_suffix_unicode\n            -orig-id: CommonPathSuffixOffsetUnicode\n            type: u4\n            if: not _io.eof\n      link_info_flags:\n        -orig-id: LinkInfoFlags\n        doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.3'\n        seq:\n          - id: reserved1\n            type: b6\n          - id: has_common_net_rel_link\n            -orig-id: CommonNetworkRelativeLinkAndPathSuffix (B)\n            type: b1\n          - id: has_volume_id_and_local_base_path\n            -orig-id: VolumeIDAndLocalBasePath (A)\n            type: b1\n          - id: reserved2\n            type: b24\n      volume_id_spec:\n        -orig-id: VolumeID\n        doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.3.1'\n        seq:\n          - id: len_all\n            -orig-id: VolumeIDSize\n            type: u4\n          - id: body\n            size: len_all - 4\n            type: volume_id_body\n      volume_id_body:\n        -orig-id: VolumeID\n        doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.3.1'\n        seq:\n          - id: drive_type\n            -orig-id: DriveType\n            type: u4\n            enum: drive_types\n          - id: drive_serial_number\n            -orig-id: DriveSerialNumber\n            type: u4\n          - id: ofs_volume_label\n            -orig-id: VolumeLabelOffset\n            type: u4\n          - id: ofs_volume_label_unicode\n            -orig-id: VolumeLabelOffsetUnicode\n            type: u4\n            if: is_unicode\n        instances:\n          is_unicode:\n            value: ofs_volume_label == 0x14\n          volume_label_ansi:\n            pos: ofs_volume_label - 4\n            type: strz\n            if: not is_unicode\n  string_data:\n    seq:\n      - id: chars_str\n        -orig-id: CountCharacters\n        type: u2\n      - id: str\n        size: chars_str * 2\n        type: str\n        encoding: UTF-16LE\nenums:\n  window_state:\n    1: normal\n    3: maximized\n    7: min_no_active\n  drive_types:\n    0: unknown\n    1: no_root_dir\n    2: removable\n    3: fixed\n    4: remote\n    5: cdrom\n    6: ramdisk\n"
  },
  {
    "id": "ksy_windows_minidump",
    "name": "Windows MiniDump",
    "category": "Windows",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "dmp",
        "mdmp"
      ],
      "description": "Windows MiniDump",
      "originalCategory": "windows",
      "filePath": "windows/windows_minidump.ksy",
      "signature": {
        "offset": 0,
        "bytes": [
          77,
          68,
          77,
          80
        ]
      },
      "endian": "le"
    },
    "content": "meta:\n  id: windows_minidump\n  title: Windows MiniDump\n  file-extension:\n    - dmp\n    - mdmp\n  license: CC0-1.0\n  endian: le\ndoc: |\n  Windows MiniDump (MDMP) file provides a concise way to store process\n  core dumps, which is useful for debugging. Given its small size,\n  modularity, some cross-platform features and native support in some\n  debuggers, it is particularly useful for crash reporting, and is\n  used for that purpose in Windows and Google Chrome projects.\n\n  The file itself is a container, which contains a number of typed\n  \"streams\", which contain some data according to its type attribute.\ndoc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_header\n# https://github.com/libyal/libmdmp/blob/main/documentation/Minidump%20(MDMP)%20format.asciidoc\nseq:\n  - id: magic1\n    -orig-id: Signature\n    contents: MDMP\n  - id: magic2\n    -orig-id: Version\n    contents: [0x93, 0xa7]\n  - id: version\n    -orig-id: Version\n    type: u2\n  - id: num_streams\n    -orig-id: NumberOfStreams\n    type: u4\n  - id: ofs_streams\n    -orig-id: StreamDirectoryRva\n    type: u4\n  - id: checksum\n    -orig-id: CheckSum\n    type: u4\n  - id: timestamp\n    -orig-id: TimeDateStamp\n    type: u4\n  - id: flags\n    type: u8\ninstances:\n  streams:\n    pos: ofs_streams\n    type: dir\n    repeat: expr\n    repeat-expr: num_streams\ntypes:\n  dir:\n    -orig-id: MINIDUMP_DIRECTORY\n    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_directory\n    seq:\n      - id: stream_type\n        -orig-id: StreamType\n        type: u4\n        enum: stream_types\n      - id: len_data\n        -orig-id: DataSize\n        type: u4\n        doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_location_descriptor\n      - id: ofs_data\n        type: u4\n        -orig-id: Rva\n    instances:\n      data:\n        pos: ofs_data\n        size: len_data\n        type:\n          switch-on: stream_type\n          cases:\n            'stream_types::system_info': system_info\n            'stream_types::misc_info': misc_info\n            'stream_types::thread_list': thread_list\n            'stream_types::memory_list': memory_list\n            'stream_types::exception': exception_stream\n            # TODO: support more stream types\n  system_info:\n    doc: |\n      \"System info\" stream provides basic information about the\n      hardware and operating system which produces this dump.\n    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_system_info\n    seq:\n      - id: cpu_arch\n        -orig-id: ProcessorArchitecture\n        type: u2\n        enum: cpu_archs\n      - id: cpu_level\n        -orig-id: ProcessorLevel\n        type: u2\n      - id: cpu_revision\n        -orig-id: ProcessorRevision\n        type: u2\n      - id: num_cpus\n        -orig-id: NumberOfProcessors\n        type: u1\n      - id: os_type\n        -orig-id: ProductType\n        type: u1\n      - id: os_ver_major\n        -orig-id: MajorVersion\n        type: u4\n      - id: os_ver_minor\n        -orig-id: MinorVersion\n        type: u4\n      - id: os_build\n        -orig-id: BuildNumber\n        type: u4\n      - id: os_platform\n        -orig-id: PlatformId\n        type: u4\n      - id: ofs_service_pack\n        -orig-id: CSDVersionRva\n        type: u4\n      - id: os_suite_mask\n        type: u2\n      - id: reserved2\n        type: u2\n      # TODO: the rest of CPU information\n    instances:\n      service_pack:\n        io: _root._io\n        pos: ofs_service_pack\n        type: minidump_string\n        if: ofs_service_pack > 0\n    enums:\n      cpu_archs:\n        0: intel\n        5: arm\n        6: ia64\n        9: amd64\n        0xffff: unknown\n  misc_info:\n    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_misc_info\n    # https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_misc_info_2\n    seq:\n      - id: len_info\n        -orig-id: SizeOfInfo\n        type: u4\n      - id: flags1\n        -orig-id: Flags1\n        type: u4\n      - id: process_id\n        -orig-id: ProcessId\n        type: u4\n      - id: process_create_time\n        -orig-id: ProcessCreateTime\n        type: u4\n      - id: process_user_time\n        -orig-id: ProcessUserTime\n        type: u4\n      - id: process_kernel_time\n        -orig-id: ProcessKernelTime\n        type: u4\n      - id: cpu_max_mhz\n        -orig-id: ProcessorMaxMhz\n        type: u4\n      - id: cpu_cur_mhz\n        -orig-id: ProcessorCurrentMhz\n        type: u4\n      - id: cpu_limit_mhz\n        -orig-id: ProcessorMhzLimit\n        type: u4\n      - id: cpu_max_idle_state\n        -orig-id: ProcessorMaxIdleState\n        type: u4\n      - id: cpu_cur_idle_state\n        -orig-id: ProcessorCurrentIdleState\n        type: u4\n  thread_list:\n    -orig-id: MINIDUMP_THREAD_LIST\n    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_thread_list\n    seq:\n      - id: num_threads\n        -orig-id: NumberOfThreads\n        type: u4\n      - id: threads\n        -orig-id: Threads\n        type: thread\n        repeat: expr\n        repeat-expr: num_threads\n  thread:\n    -orig-id: MINIDUMP_THREAD\n    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_thread\n    seq:\n      - id: thread_id\n        -orig-id: ThreadId\n        type: u4\n      - id: suspend_count\n        -orig-id: SuspendCount\n        type: u4\n      - id: priority_class\n        -orig-id: PriorityClass\n        type: u4\n      - id: priority\n        -orig-id: Priority\n        type: u4\n      - id: teb\n        -orig-id: Teb\n        type: u8\n        doc: Thread Environment Block\n      - id: stack\n        -orig-id: Stack\n        type: memory_descriptor\n      - id: thread_context\n        -orig-id: ThreadContext\n        type: location_descriptor\n  memory_list:\n    -orig-id: MINIDUMP_MEMORY_LIST\n    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_memory64_list\n    seq:\n      - id: num_mem_ranges\n        type: u4\n      - id: mem_ranges\n        type: memory_descriptor\n        repeat: expr\n        repeat-expr: num_mem_ranges\n  exception_stream:\n    -orig-id: MINIDUMP_EXCEPTION_STREAM\n    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_exception_stream\n    seq:\n      - id: thread_id\n        -orig-id: ThreadId\n        type: u4\n      - id: reserved\n        -orig-id: __alignment\n        type: u4\n      - id: exception_rec\n        -orig-id: ExceptionRecord\n        type: exception_record\n      - id: thread_context\n        -orig-id: ThreadContext\n        type: location_descriptor\n  exception_record:\n    -orig-id: MINIDUMP_EXCEPTION\n    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_exception\n    seq:\n      - id: code\n        -orig-id: ExceptionCode\n        type: u4\n      - id: flags\n        -orig-id: ExceptionFlags\n        type: u4\n      - id: inner_exception\n        -orig-id: ExceptionRecord\n        type: u8\n      - id: addr\n        -orig-id: ExceptionAddress\n        type: u8\n        doc: Memory address where exception has occurred\n      - id: num_params\n        -orig-id: NumberParameters\n        type: u4\n      - id: reserved\n        -orig-id: __unusedAlignment\n        type: u4\n      - id: params\n        -orig-id: ExceptionInformation\n        type: u8\n        repeat: expr\n        repeat-expr: 15\n        doc: |\n          Additional parameters passed along with exception raise\n          function (for WinAPI, that is `RaiseException`). Meaning is\n          exception-specific. Given that this type is originally\n          defined by a C structure, it is described there as array of\n          fixed number of elements (`EXCEPTION_MAXIMUM_PARAMETERS` =\n          15), but in reality only first `num_params` would be used.\n  memory_descriptor:\n    -orig-id: MINIDUMP_MEMORY_DESCRIPTOR\n    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_memory_descriptor\n    seq:\n      - id: addr_memory_range\n        -orig-id: StartOfMemoryRange\n        type: u8\n      - id: memory\n        type: location_descriptor\n  location_descriptor:\n    -orig-id: MINIDUMP_LOCATION_DESCRIPTOR\n    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_location_descriptor\n    seq:\n      - id: len_data\n        -orig-id: DataSize\n        type: u4\n      - id: ofs_data\n        -orig-id: Rva\n        type: u4\n    instances:\n      data:\n        io: _root._io\n        pos: ofs_data\n        size: len_data\n  minidump_string:\n    doc: |\n      Specific string serialization scheme used in MiniDump format is\n      actually a simple 32-bit length-prefixed UTF-16 string.\n    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_string\n    seq:\n      - id: len_str\n        -orig-id: Length\n        type: u4\n      - id: str\n        -orig-id: Buffer\n        size: len_str\n        type: str\n        encoding: UTF-16LE\nenums:\n  stream_types:\n    # https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ne-minidumpapiset-minidump_stream_type\n    0: unused\n    1: reserved_0\n    2: reserved_1\n    3: thread_list\n    4: module_list\n    5: memory_list\n    6: exception\n    7: system_info\n    8: thread_ex_list\n    9: memory_64_list\n    10: comment_a\n    11: comment_w\n    12: handle_data\n    13: function_table\n    14: unloaded_module_list\n    15: misc_info\n    16: memory_info_list\n    17: thread_info_list\n    18: handle_operation_list\n    19: token\n    20: java_script_data\n    21: system_memory_info\n    22: process_vm_counters\n    23: ipt_trace\n    24: thread_names\n    0x8000: ce_null\n    0x8001: ce_system_info\n    0x8002: ce_exception\n    0x8003: ce_module_list\n    0x8004: ce_process_list\n    0x8005: ce_thread_list\n    0x8006: ce_thread_context_list\n    0x8007: ce_thread_call_stack_list\n    0x8008: ce_memory_virtual_list\n    0x8009: ce_memory_physical_list\n    0x800A: ce_bucket_parameters\n    0x800B: ce_process_module_map\n    0x800C: ce_diagnosis_list\n    # Breakpad extensions; see Breakpad's src/google_breakpad/common/minidump_format.h\n    0x47670001: md_raw_breakpad_info\n    0x47670002: md_raw_assertion_info\n    0x47670003: md_linux_cpu_info      # /proc/cpuinfo\n    0x47670004: md_linux_proc_status   # /proc/$x/status\n    0x47670005: md_linux_lsb_release   # /etc/lsb-release\n    0x47670006: md_linux_cmd_line      # /proc/$x/cmdline\n    0x47670007: md_linux_environ       # /proc/$x/environ\n    0x47670008: md_linux_auxv          # /proc/$x/auxv\n    0x47670009: md_linux_maps          # /proc/$x/maps\n    0x4767000a: md_linux_dso_debug\n    # Crashpad extension; See Crashpad's minidump/minidump_extensions.h\n    0x43500001: md_crashpad_info_stream\n"
  },
  {
    "id": "ksy_windows_resource_file",
    "name": "Windows resource file",
    "category": "Windows",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [
        "res"
      ],
      "description": "Windows resource file",
      "originalCategory": "windows",
      "filePath": "windows/windows_resource_file.ksy",
      "endian": "le"
    },
    "content": "meta:\n  id: windows_resource_file\n  title: Windows resource file\n  file-extension: res\n  xref:\n    justsolve: Windows_resource\n    wikidata: Q1417897\n  license: CC0-1.0\n  endian: le\ndoc: |\n  Windows resource file (.res) are binary bundles of\n  \"resources\". Resource has some sort of ID (numerical or string),\n  type (predefined or user-defined), and raw value. Resource files can\n  be seen standalone (as .res file), or embedded inside PE executable\n  (.exe, .dll) files.\n\n  Typical use cases include:\n\n  * providing information about the application (such as title, copyrights, etc)\n  * embedding icon(s) to be displayed in file managers into .exe\n  * adding non-code data into the binary, such as menus, dialog forms,\n    cursor images, fonts, various misc bitmaps, and locale-aware\n    strings\n\n  Windows provides special API to access \"resources\" from a binary.\n\n  Normally, resources files are created with `rc` compiler: it takes a\n  .rc file (so called \"resource-definition script\") + all the raw\n  resource binary files for input, and outputs .res file. That .res\n  file can be linked into an .exe / .dll afterwards using a linker.\n\n  Internally, resource file is just a sequence of individual resource\n  definitions. RC tool ensures that first resource (#0) is always\n  empty.\nseq:\n  - id: resources\n    type: resource\n    repeat: eos\ntypes:\n  resource:\n    doc: |\n      Each resource has a `type` and a `name`, which can be used to\n      identify it, and a `value`. Both `type` and `name` can be a\n      number or a string.\n    doc-ref: https://learn.microsoft.com/en-us/windows/win32/menurc/resourceheader\n    seq:\n      - id: value_size\n        -orig-id: DataSize\n        type: u4\n        doc: Size of resource value that follows the header\n      - id: header_size\n        -orig-id: HeaderSize\n        type: u4\n        doc: |\n          Size of this header (i.e. every field except `value` and an\n          optional padding after it)\n      - id: type\n        -orig-id: TYPE\n        type: unicode_or_id\n      - id: name\n        -orig-id: NAME\n        type: unicode_or_id\n      - id: padding1\n        size: (4 - _io.pos) % 4\n      - id: format_version\n        -orig-id: DataVersion\n        type: u4\n      - id: flags\n        -orig-id: MemoryFlags\n        type: u2\n      - id: language\n        -orig-id: LanguageId\n        type: u2\n      - id: value_version\n        -orig-id: Version\n        type: u4\n        doc: Version for value, as specified by a user.\n      - id: characteristics\n        -orig-id: Characteristics\n        type: u4\n        doc: Extra 4 bytes that can be used by user for any purpose.\n      - id: value\n        size: value_size\n      - id: padding2\n        size: (4 - _io.pos) % 4\n    instances:\n      type_as_predef:\n        value: type.as_numeric\n        enum: predef_types\n        if: not type.is_string and type.as_numeric <= 0xff\n        doc: |\n          Numeric type IDs in range of [0..0xff] are reserved for\n          system usage in Windows, and there are some predefined,\n          well-known values in that range. This instance allows to get\n          it as enum value, if applicable.\n    enums:\n      predef_types:\n        # https://learn.microsoft.com/en-us/windows/win32/menurc/resource-types\n        # Win16\n        1: cursor\n        2: bitmap\n        3: icon\n        4: menu\n        5: dialog\n        6: string\n        7: fontdir\n        8: font\n        9: accelerator\n        10: rcdata\n        12: group_cursor\n        14: group_icon\n        # Win32\n        11: messagetable\n        16: version\n        17: dlginclude\n        19: plugplay\n        20: vxd\n        21: anicursor\n        22: aniicon\n        23: html\n        24: manifest\n  unicode_or_id:\n    doc: |\n      Resources use a special serialization of names and types: they\n      can be either a number or a string.\n\n      Use `is_string` to check which kind we've got here, and then use\n      `as_numeric` or `as_string` to get relevant value.\n    seq:\n      - id: first\n        type: u2\n        if: save_pos1 >= 0\n      - id: as_numeric\n        type: u2\n        if: not is_string\n      - id: rest\n        type: u2\n        repeat: until\n        repeat-until: _ == 0\n        if: is_string\n      - id: noop\n        size: 0\n        if: is_string and save_pos2 >= 0\n    instances:\n      # Super dirty hack to save start and end position in a stream to re-read it as string if needed\n      save_pos1:\n        value: _io.pos\n      save_pos2:\n        value: _io.pos\n      is_string:\n        value: first != 0xffff\n      as_string:\n        pos: save_pos1\n        size: save_pos2 - save_pos1 - 2\n        type: str\n        encoding: UTF-16LE\n        if: is_string\n"
  },
  {
    "id": "ksy_windows_shell_items",
    "name": "Windows Shell Items",
    "category": "Windows",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [],
      "description": "Windows Shell Items",
      "originalCategory": "windows",
      "filePath": "windows/windows_shell_items.ksy",
      "endian": "le"
    },
    "content": "meta:\n  id: windows_shell_items\n  title: Windows Shell Items\n  xref:\n    forensicswiki: shell_item\n  license: CC0-1.0\n  endian: le\ndoc: |\n  Windows Shell Items (AKA \"shellbags\") is an undocumented set of\n  structures used internally within Windows to identify paths in\n  Windows Folder Hierarchy. It is widely used in Windows Shell (and\n  most visible in File Explorer), both as in-memory and in-file\n  structures. Some formats embed them, namely:\n\n  * Windows Shell link files (.lnk) Windows registry\n  * Windows registry \"ShellBags\" keys\n\n  The format is mostly undocumented, and is known to vary between\n  various Windows versions.\ndoc-ref: https://github.com/libyal/libfwsi/blob/main/documentation/Windows%20Shell%20Item%20format.asciidoc\nseq:\n  - id: items\n    -orig-id: IDList\n    type: shell_item\n    repeat: until\n    repeat-until: _.len_data == 0\n    doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.2.1'\ntypes:\n  shell_item:\n    -orig-id: ItemID\n    doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.2.2'\n    seq:\n      - id: len_data\n        type: u2\n      - id: data\n        size: len_data - 2\n        type: shell_item_data\n        if: len_data >= 2\n  shell_item_data:\n    seq:\n      - id: code\n        type: u1\n      - id: body1\n        type:\n          switch-on: code\n          cases:\n            0x1f: root_folder_body\n      - id: body2\n        type:\n          switch-on: code & 0x70\n          cases:\n            0x20: volume_body\n            0x30: file_entry_body\n  root_folder_body:\n    doc-ref: 'https://github.com/libyal/libfwsi/blob/main/documentation/Windows%20Shell%20Item%20format.asciidoc#32-root-folder-shell-item'\n    seq:\n      - id: sort_index\n        type: u1\n      - id: shell_folder_id\n        size: 16\n      # TODO: various extensions\n  volume_body:\n    doc-ref: 'https://github.com/libyal/libfwsi/blob/main/documentation/Windows%20Shell%20Item%20format.asciidoc#33-volume-shell-item'\n    seq:\n      - id: flags\n        type: u1\n  file_entry_body:\n    doc-ref: 'https://github.com/libyal/libfwsi/blob/main/documentation/Windows%20Shell%20Item%20format.asciidoc#34-file-entry-shell-item'\n    seq:\n      - type: u1\n      - id: file_size\n        type: u4\n      - id: last_mod_time\n        type: u4\n      - id: file_attrs\n        type: u2\n    instances:\n      is_dir:\n        value: _parent.code & 0x01 != 0\n      is_file:\n        value: _parent.code & 0x02 != 0\n"
  },
  {
    "id": "ksy_windows_systemtime",
    "name": "Microsoft Windows SYSTEMTIME structure",
    "category": "Windows",
    "metadata": {
      "isGenerated": true,
      "fileExtensions": [],
      "description": "Microsoft Windows SYSTEMTIME structure",
      "originalCategory": "windows",
      "filePath": "windows/windows_systemtime.ksy",
      "endian": "le"
    },
    "content": "meta:\n  id: windows_systemtime\n  title: Microsoft Windows SYSTEMTIME structure\n  xref:\n    justsolve: Windows_SYSTEMTIME\n  license: CC0-1.0\n  endian: le\ndoc: |\n  Microsoft Windows SYSTEMTIME structure, stores individual components\n  of date and time as individual fields, up to millisecond precision.\ndoc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minwinbase/ns-minwinbase-systemtime\nseq:\n  - id: year\n    -orig-id: wYear\n    type: u2\n    doc: Year\n  - id: month\n    -orig-id: wMonth\n    type: u2\n    doc: Month (January = 1)\n  - id: dow\n    -orig-id: wDayOfWeek\n    type: u2\n    doc: Day of week (Sun = 0)\n  - id: day\n    -orig-id: wDay\n    type: u2\n    doc: Day of month\n  - id: hour\n    -orig-id: wHour\n    type: u2\n    doc: Hours\n  - id: min\n    -orig-id: wMinute\n    type: u2\n    doc: Minutes\n  - id: sec\n    -orig-id: wSecond\n    type: u2\n    doc: Seconds\n  - id: msec\n    -orig-id: wMilliseconds\n    type: u2\n    doc: Milliseconds\n"
  }
];

export default {
  category: "Windows",
  formats: windowsFormats
};
