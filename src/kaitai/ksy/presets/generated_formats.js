/**
 * Auto-generated KSY format library
 * Generated from 185 KSY files
 * Categories: 22
 * 
 * DO NOT EDIT - This file is auto-generated
 * Run 'node scripts/generate_format_library.js' to regenerate
 */

export const generatedFormats = [
  {
    id: "ksy_gltf_binary",
    name: "GL Transmission Format, binary container",
    category: "3D Graphics",
    metadata: {
      isGenerated: true,
      fileExtensions: ["glb"],
      description: "GL Transmission Format, binary container",
      originalCategory: "3d",
      filePath: "3d/gltf_binary.ksy",
      endian: "le"
    },
    content: `meta:
  id: gltf_binary
  title: GL Transmission Format, binary container
  file-extension: glb
  xref:
    justsolve: GlTF
    mime: model/gltf-binary
    wikidata: Q28135989
  license: MIT
  endian: le

doc: |
  glTF is a format for distribution of 3D models optimized for being used in software

doc-ref: https://github.com/KhronosGroup/glTF/tree/2354846/specification/2.0#binary-gltf-layout

seq:
  - id: header
    type: header
  - id: chunks
    type: chunk
    repeat: eos

types:

  header:
    seq:
      - id: magic
        contents: glTF
      - id: version
        type: u4
        doc: |
          Indicates the version of the Binary glTF container format.
          For this specification, should be set to 2.
      - id: length
        type: u4
        doc: Total length of the Binary glTF, including Header and all Chunks, in bytes.

  chunk:
    seq:
      - id: len_data
        type: u4
      - id: type
        type: u4
        enum: chunk_type
      - id: data
        size: len_data
        type:
          switch-on: type
          cases:
            'chunk_type::json': json
            'chunk_type::bin': bin

  json:
    seq:
      - id: data
        size-eos: true
        type: str
        encoding: UTF-8
        doc: |
          This is where GLB deviates from being an elegant format.
          To parse the rest of the file, you have to parse the JSON first.

  bin:
    seq:
      - id: data
        size-eos: true

enums:
  chunk_type:
    0x4E4F534A: json # "JSON"
    0x004E4942: bin  # "BIN\\0"
`
  },
  {
    id: "ksy_android_bootldr_asus",
    name: "ASUS Fugu bootloader.img format (version 2 and later)",
    category: "Archives",
    metadata: {
      isGenerated: true,
      fileExtensions: ["img"],
      description: "ASUS Fugu bootloader.img format (version 2 and later)",
      originalCategory: "archive",
      filePath: "archive/android_bootldr_asus.ksy",
      signature: {"offset":0,"bytes":[66,79,79,84,76,68,82,33]},
      endian: "le"
    },
    content: `meta:
  id: android_bootldr_asus
  title: ASUS Fugu bootloader.img format (version 2 and later)
  file-extension: img
  tags:
    - archive
    - android
  license: CC0-1.0
  ks-version: 0.9
  encoding: ASCII
  endian: le
doc: |
  A bootloader image which only seems to have been used on a few ASUS
  devices. The encoding is ASCII, because the \`releasetools.py\` script
  is written using Python 2, where the default encoding is ASCII.

  A test file can be found in the firmware files for the "fugu" device,
  which can be downloaded from <https://developers.google.com/android/images>
doc-ref: https://android.googlesource.com/device/asus/fugu/+/android-8.1.0_r5/releasetools.py
seq:
  - id: magic
    contents: BOOTLDR!
  - id: revision
    type: u2
    valid:
      min: 2
  - id: reserved1
    type: u2
  - id: reserved2
    type: u4
  - id: images
    type: image
    repeat: expr
    repeat-expr: 3
    doc: |
      Only three images are included: \`ifwi.bin\`, \`droidboot.img\`
      and \`splashscreen.img\`
types:
  image:
    -webide-representation: '{file_name}'
    seq:
      - id: chunk_id
        size: 8
        type: str
        valid:
          any-of:
            - '"IFWI!!!!"'
            - '"DROIDBT!"'
            - '"SPLASHS!"'
      - id: len_body
        type: u4
      - id: flags
        type: u1
        valid:
          expr: _ & 1 != 0
      - id: reserved1
        type: u1
      - id: reserved2
        type: u1
      - id: reserved3
        type: u1
      - id: body
        size: len_body
    instances:
      file_name:
        value: |
          chunk_id == "IFWI!!!!" ? "ifwi.bin" :
          chunk_id == "DROIDBT!" ? "droidboot.img" :
          chunk_id == "SPLASHS!" ? "splashscreen.img" :
          ""
`
  },
  {
    id: "ksy_android_bootldr_huawei",
    name: "Huawei Bootloader packed image format",
    category: "Archives",
    metadata: {
      isGenerated: true,
      fileExtensions: ["img"],
      description: "Huawei Bootloader packed image format",
      originalCategory: "archive",
      filePath: "archive/android_bootldr_huawei.ksy",
      endian: "le"
    },
    content: `meta:
  id: android_bootldr_huawei
  title: Huawei Bootloader packed image format
  file-extension: img
  tags:
    - archive
    - android
  license: CC0-1.0
  # The \`releasetools.py\` script is written for Python 2, where the default
  # encoding is ASCII.
  encoding: ASCII
  endian: le
doc: |
  Format of \`bootloader-*.img\` files found in factory images of certain Android devices from Huawei:

  * Nexus 6P "angler": [sample][sample-angler] ([other samples][others-angler]),
    [releasetools.py](https://android.googlesource.com/device/huawei/angler/+/cf92cd8/releasetools.py#29)

  [sample-angler]: https://androidfilehost.com/?fid=11410963190603870158 "bootloader-angler-angler-03.84.img"
  [others-angler]: https://androidfilehost.com/?w=search&s=bootloader-angler&type=files

  All image versions can be found in factory images at
  <https://developers.google.com/android/images> for the specific device. To
  avoid having to download an entire ZIP archive when you only need one file
  from it, install [remotezip](https://github.com/gtsystem/python-remotezip) and
  use its [command line
  tool](https://github.com/gtsystem/python-remotezip#command-line-tool) to list
  members in the archive and then to download only the file you want.

doc-ref:
  - https://android.googlesource.com/device/huawei/angler/+/673cfb9/releasetools.py
  - https://source.codeaurora.org/quic/la/device/qcom/common/tree/meta_image/meta_format.h?h=LA.UM.6.1.1&id=a68d284aee85
  - https://source.codeaurora.org/quic/la/device/qcom/common/tree/meta_image/meta_image.c?h=LA.UM.6.1.1&id=a68d284aee85
seq:
  - id: meta_header
    type: meta_hdr
  - id: header_ext
    size: meta_header.len_meta_header - meta_header._sizeof
  - id: image_header
    size: meta_header.len_image_header
    type: image_hdr
types:
  meta_hdr:
    seq:
      - id: magic
        contents: [0x3c, 0xd6, 0x1a, 0xce]
      - id: version
        type: version
      - id: image_version
        size: 64
        type: strz
      - id: len_meta_header
        -orig-id: meta_hdr_sz
        type: u2
      - id: len_image_header
        -orig-id: img_hdr_sz
        type: u2
  version:
    seq:
      - id: major
        type: u2
      - id: minor
        type: u2
  image_hdr:
    seq:
      - id: entries
        type: image_hdr_entry
        repeat: eos
        doc: |
          The C generator program defines \`img_header\` as a [fixed size
          array](https://source.codeaurora.org/quic/la/device/qcom/common/tree/meta_image/meta_image.c?h=LA.UM.6.1.1&id=a68d284aee85#n42)
          of \`img_header_entry_t\` structs with length \`MAX_IMAGES\` (which is
          defined as \`16\`).

          This means that technically there will always be 16 \`image_hdr\`
          entries, the first *n* entries being used (filled with real values)
          and the rest left unused with all bytes zero.

          To check if an entry is used, use the \`is_used\` attribute.
  image_hdr_entry:
    -webide-representation: '{name} - o:{ofs_body}, s:{len_body} (used: {is_used})'
    seq:
      - id: name
        size: 72
        type: strz
        doc: partition name
      - id: ofs_body
        type: u4
      - id: len_body
        type: u4
    instances:
      is_used:
        value: ofs_body != 0 and len_body != 0
        doc-ref: https://source.codeaurora.org/quic/la/device/qcom/common/tree/meta_image/meta_image.c?h=LA.UM.6.1.1&id=a68d284aee85#n119
      body:
        io: _root._io
        pos: ofs_body
        size: len_body
        if: is_used
`
  },
  {
    id: "ksy_android_bootldr_qcom",
    name: "Qualcomm Snapdragon (MSM) bootloader.img format",
    category: "Archives",
    metadata: {
      isGenerated: true,
      fileExtensions: ["img"],
      description: "Qualcomm Snapdragon (MSM) bootloader.img format",
      originalCategory: "archive",
      filePath: "archive/android_bootldr_qcom.ksy",
      signature: {"offset":0,"bytes":[66,79,79,84,76,68,82,33]},
      endian: "le"
    },
    content: `meta:
  id: android_bootldr_qcom
  title: Qualcomm Snapdragon (MSM) bootloader.img format
  file-extension: img
  tags:
    - archive
    - android
  license: CC0-1.0
  # The \`releasetools.py\` script is written for Python 2, where the default
  # encoding is ASCII.
  encoding: ASCII
  endian: le
doc: |
  A bootloader for Android used on various devices powered by Qualcomm
  Snapdragon chips:

  <https://en.wikipedia.org/wiki/Devices_using_Qualcomm_Snapdragon_processors>

  Although not all of the Snapdragon based Android devices use this particular
  bootloader format, it is known that devices with the following chips have used
  it (example devices are given for each chip):

  * APQ8064 ([devices](https://en.wikipedia.org/wiki/Devices_using_Qualcomm_Snapdragon_processors#Snapdragon_S4_Pro))
    - Nexus 4 "mako": [sample][sample-mako] ([other samples][others-mako]),
      [releasetools.py](https://android.googlesource.com/device/lge/mako/+/33f0114/releasetools.py#98)

  * MSM8974AA ([devices](https://en.wikipedia.org/wiki/Devices_using_Qualcomm_Snapdragon_processors#Snapdragon_800,_801_and_805_(2013/14)))
    - Nexus 5 "hammerhead": [sample][sample-hammerhead] ([other samples][others-hammerhead]),
      [releasetools.py](https://android.googlesource.com/device/lge/hammerhead/+/7618a7d/releasetools.py#116)

  * MSM8992 ([devices](https://en.wikipedia.org/wiki/Devices_using_Qualcomm_Snapdragon_processors#Snapdragon_808_and_810_(2015)))
    - Nexus 5X "bullhead": [sample][sample-bullhead] ([other samples][others-bullhead]),
      [releasetools.py](https://android.googlesource.com/device/lge/bullhead/+/2994b6b/releasetools.py#126)

  * APQ8064-1AA ([devices](https://en.wikipedia.org/wiki/Devices_using_Qualcomm_Snapdragon_processors#Snapdragon_600_(2013)))
    - Nexus 7 \\[2013] (Mobile) "deb" <a href="#doc-note-data-after-img-bodies">(\\**)</a>: [sample][sample-deb] ([other samples][others-deb]),
      [releasetools.py](https://android.googlesource.com/device/asus/deb/+/14c1638/releasetools.py#105)
    - Nexus 7 \\[2013] (Wi-Fi) "flo" <a href="#doc-note-data-after-img-bodies">(\\**)</a>: [sample][sample-flo] ([other samples][others-flo]),
      [releasetools.py](https://android.googlesource.com/device/asus/flo/+/9d9fee9/releasetools.py#130)

  * MSM8996 Pro-AB ([devices](https://en.wikipedia.org/wiki/Devices_using_Qualcomm_Snapdragon_processors#Snapdragon_820_and_821_(2016)))
    - Pixel "sailfish" <a href="#doc-note-bootloader-size">(\\*)</a>:
      [sample][sample-sailfish] ([other samples][others-sailfish])
    - Pixel XL "marlin" <a href="#doc-note-bootloader-size">(\\*)</a>:
      [sample][sample-marlin] ([other samples][others-marlin])

  * MSM8998 ([devices](https://en.wikipedia.org/wiki/Devices_using_Qualcomm_Snapdragon_processors#Snapdragon_835_(2017)))
    - Pixel 2 "walleye" <a href="#doc-note-bootloader-size">(\\*)</a>: [sample][sample-walleye] ([other samples][others-walleye])
    - Pixel 2 XL "taimen": [sample][sample-taimen] ([other samples][others-taimen])

  <small id="doc-note-bootloader-size">(\\*)
  \`bootloader_size\` is equal to the size of the whole file (not just \`img_bodies\` as usual).
  </small>

  <small id="doc-note-data-after-img-bodies">(\\**)
  There are some data after the end of \`img_bodies\`.
  </small>

  ---

  On the other hand, devices with these chips **do not** use this format:

  * <del>APQ8084</del> ([devices](https://en.wikipedia.org/wiki/Devices_using_Qualcomm_Snapdragon_processors#Snapdragon_800,_801_and_805_(2013/14)))
    - Nexus 6 "shamu": [sample][foreign-sample-shamu] ([other samples][foreign-others-shamu]),
      [releasetools.py](https://android.googlesource.com/device/moto/shamu/+/df9354d/releasetools.py#12) -
      uses "Motoboot packed image format" instead

  * <del>MSM8994</del> ([devices](https://en.wikipedia.org/wiki/Devices_using_Qualcomm_Snapdragon_processors#Snapdragon_808_and_810_(2015)))
    - Nexus 6P "angler": [sample][foreign-sample-angler] ([other samples][foreign-others-angler]),
      [releasetools.py](https://android.googlesource.com/device/huawei/angler/+/cf92cd8/releasetools.py#29) -
      uses "Huawei Bootloader packed image format" instead

  [sample-mako]: https://androidfilehost.com/?fid=96039337900113996 "bootloader-mako-makoz30f.img"
  [others-mako]: https://androidfilehost.com/?w=search&s=bootloader-mako&type=files

  [sample-hammerhead]: https://androidfilehost.com/?fid=385035244224410247 "bootloader-hammerhead-hhz20h.img"
  [others-hammerhead]: https://androidfilehost.com/?w=search&s=bootloader-hammerhead&type=files

  [sample-bullhead]: https://androidfilehost.com/?fid=11410963190603870177 "bootloader-bullhead-bhz32c.img"
  [others-bullhead]: https://androidfilehost.com/?w=search&s=bootloader-bullhead&type=files

  [sample-deb]: https://androidfilehost.com/?fid=23501681358552487 "bootloader-deb-flo-04.02.img"
  [others-deb]: https://androidfilehost.com/?w=search&s=bootloader-deb-flo&type=files

  [sample-flo]: https://androidfilehost.com/?fid=23991606952593542 "bootloader-flo-flo-04.05.img"
  [others-flo]: https://androidfilehost.com/?w=search&s=bootloader-flo-flo&type=files

  [sample-sailfish]: https://androidfilehost.com/?fid=6006931924117907154 "bootloader-sailfish-8996-012001-1904111134.img"
  [others-sailfish]: https://androidfilehost.com/?w=search&s=bootloader-sailfish&type=files

  [sample-marlin]: https://androidfilehost.com/?fid=6006931924117907131 "bootloader-marlin-8996-012001-1904111134.img"
  [others-marlin]: https://androidfilehost.com/?w=search&s=bootloader-marlin&type=files

  [sample-walleye]: https://androidfilehost.com/?fid=14943124697586348540 "bootloader-walleye-mw8998-003.0085.00.img"
  [others-walleye]: https://androidfilehost.com/?w=search&s=bootloader-walleye&type=files

  [sample-taimen]: https://androidfilehost.com/?fid=14943124697586348536 "bootloader-taimen-tmz30m.img"
  [others-taimen]: https://androidfilehost.com/?w=search&s=bootloader-taimen&type=files

  [foreign-sample-shamu]: https://androidfilehost.com/?fid=745849072291678307 "bootloader-shamu-moto-apq8084-72.04.img"
  [foreign-others-shamu]: https://androidfilehost.com/?w=search&s=bootloader-shamu&type=files

  [foreign-sample-angler]: https://androidfilehost.com/?fid=11410963190603870158 "bootloader-angler-angler-03.84.img"
  [foreign-others-angler]: https://androidfilehost.com/?w=search&s=bootloader-angler&type=files

  ---

  The \`bootloader-*.img\` samples referenced above originally come from factory
  images packed in ZIP archives that can be found on the page [Factory Images
  for Nexus and Pixel Devices](https://developers.google.com/android/images) on
  the Google Developers site. Note that the codenames on that page may be
  different than the ones that are written in the list above. That's because the
  Google page indicates **ROM codenames** in headings (e.g. "occam" for Nexus 4)
  but the above list uses **model codenames** (e.g. "mako" for Nexus 4) because
  that is how the original \`bootloader-*.img\` files are identified. For most
  devices, however, these code names are the same.

doc-ref: https://android.googlesource.com/device/lge/hammerhead/+/7618a7d/releasetools.py
seq:
  - id: magic
    contents: BOOTLDR!
  - id: num_images
    type: u4
  - id: ofs_img_bodies
    -orig-id: start_offset
    type: u4
  - id: bootloader_size
    -orig-id: bootldr_size
    type: u4
    doc: |
      According to all available \`releasetools.py\` versions from AOSP (links are
      in the top-level \`/doc\`), this should determine only the size of
      \`img_bodies\` - there is [an assertion](
      https://android.googlesource.com/device/lge/hammerhead/+/7618a7d/releasetools.py#167)
      for it.

      However, files for certain Pixel devices (see \`/doc\`) apparently declare
      the entire file size here (i.e. including also fields from \`magic\` to
      \`img_headers\`). So if you interpreted \`bootloader_size\` as the size of
      \`img_bodies\` substream in these files, you would exceed the end of file.
      Although you could check that it fits in the file before attempting to
      create a substream of that size, you wouldn't know if it's meant to
      specify the size of just \`img_bodies\` or the size of the entire bootloader
      payload (whereas there may be additional data after the end of payload)
      until parsing \`img_bodies\` (or at least summing sizes from \`img_headers\`,
      but that's stupid).

      So this field isn't reliable enough to be used as the size of any
      substream. If you want to check if it has a reasonable value, do so in
      your application code.
  - id: img_headers
    -orig-id: img_info
    type: img_header
    repeat: expr
    repeat-expr: num_images
instances:
  img_bodies:
    pos: ofs_img_bodies
    type: img_body(_index)
    repeat: expr
    repeat-expr: num_images
types:
  img_header:
    -webide-representation: '{name}'
    seq:
      - id: name
        size: 64
        type: strz
      - id: len_body
        type: u4
  img_body:
    -webide-representation: '{img_header.name}: {img_header.len_body:dec} bytes'
    params:
      - id: idx
        type: s4
    seq:
      - id: body
        size: img_header.len_body
    instances:
      img_header:
        value: _root.img_headers[idx]
`
  },
  {
    id: "ksy_android_dto",
    name: "Android DTB/DTBO Partition",
    category: "Archives",
    metadata: {
      isGenerated: true,
      fileExtensions: ["img"],
      description: "Android DTB/DTBO Partition",
      originalCategory: "archive",
      filePath: "archive/android_dto.ksy",
      endian: "be"
    },
    content: `meta:
  id: android_dto
  title: Android DTB/DTBO Partition
  license: CC0-1.0
  file-extension: img
  endian: be

doc: |
  Format for Android DTB/DTBO partitions. It's kind of archive with
  dtb/dtbo files. Used only when there is a separate unique partition
  (dtb, dtbo) on an android device to organize device tree files.
  The format consists of a header with info about size and number
  of device tree entries and the entries themselves. This format
  description could be used to extract device tree entries from a
  partition images and decompile them with dtc (device tree compiler).

doc-ref:
  - https://source.android.com/docs/core/architecture/dto/partitions
  - https://android.googlesource.com/platform/system/libufdt/+/refs/tags/android-10.0.0_r47

seq:
  - id: header
    type: dt_table_header
  - id: entries
    type: dt_table_entry
    repeat: expr
    repeat-expr: header.dt_entry_count

types:
  dt_table_header:
    seq:
      - id: magic
        contents: [0xd7, 0xb7, 0xab, 0x1e]
      - id: total_size
        type: u4
        doc: includes dt_table_header + all dt_table_entry and all dtb/dtbo
      - id: header_size
        type: u4
        doc: sizeof(dt_table_header)
      - id: dt_entry_size
        type: u4
        doc: sizeof(dt_table_entry)
      - id: dt_entry_count
        type: u4
        doc: number of dt_table_entry
      - id: dt_entries_offset
        type: u4
        doc: offset to the first dt_table_entry from head of dt_table_header
      - id: page_size
        type: u4
        doc: flash page size
      - id: version
        type: u4
        doc: DTBO image version
  dt_table_entry:
    seq:
      - id: dt_size
        type: u4
        doc: size of this entry
      - id: dt_offset
        type: u4
        doc: offset from head of dt_table_header
      - id: id
        type: u4
        doc: optional, must be zero if unused
      - id: rev
        type: u4
        doc: optional, must be zero if unused
      - id: custom
        type: u4
        repeat: expr
        repeat-expr: 4
        doc: optional, must be zero if unused
    instances:
      body:
        io: _root._io
        pos: dt_offset
        size: dt_size
        doc: DTB/DTBO file
`
  },
  {
    id: "ksy_android_img",
    name: "Android Boot Image",
    category: "Archives",
    metadata: {
      isGenerated: true,
      fileExtensions: ["img"],
      description: "Android Boot Image",
      originalCategory: "archive",
      filePath: "archive/android_img.ksy",
      signature: {"offset":0,"bytes":[65,78,68,82,79,73,68,33]},
      endian: "le"
    },
    content: `meta:
  id: android_img
  title: Android Boot Image
  file-extension: img
  tags:
    - archive
    - android
  license: CC0-1.0
  endian: le
doc-ref: https://source.android.com/docs/core/architecture/bootloader/boot-image-header
seq:
  - id: magic
    contents: ANDROID!
  - id: kernel
    type: load
  - id: ramdisk
    type: load
  - id: second
    type: load
  - id: tags_load
    type: u4
  - id: page_size
    type: u4
  - id: header_version
    type: u4
  - id: os_version
    type: os_version
  - id: name
    type: strz
    size: 16
    encoding: ASCII
  - id: cmdline
    type: strz
    size: 512
    encoding: ASCII
  - id: sha
    size: 32
  - id: extra_cmdline
    type: strz
    size: 1024
    encoding: ASCII
  - id: recovery_dtbo
    type: size_offset
    if: header_version > 0
  - id: boot_header_size
    type: u4
    if: header_version > 0
  - id: dtb
    type: load_long
    if: header_version > 1
instances:
  base:
    value: kernel.addr - 0x00008000
    doc: base loading address
  kernel_offset:
    value: kernel.addr - base
    doc: kernel offset from base
  ramdisk_offset:
    value: 'ramdisk.addr > 0 ? ramdisk.addr - base : 0'
    doc: ramdisk offset from base
  second_offset:
    value: 'second.addr > 0 ? second.addr - base : 0'
    doc: 2nd bootloader offset from base
  tags_offset:
    value: tags_load - base
    doc: tags offset from base
  dtb_offset:
    value: 'dtb.addr > 0 ? dtb.addr - base : 0'
    if: header_version > 1
    doc: dtb offset from base
  kernel_img:
    pos: page_size
    size: kernel.size
  ramdisk_img:
    pos: ((page_size + kernel.size + page_size - 1) / page_size) * page_size
    size: ramdisk.size
    if: ramdisk.size > 0
  second_img:
    pos: ((page_size + kernel.size + ramdisk.size + page_size - 1) / page_size) * page_size
    size: second.size
    if: second.size > 0
  recovery_dtbo_img:
    pos: recovery_dtbo.offset
    size: recovery_dtbo.size
    if: header_version > 0 and recovery_dtbo.size > 0
  dtb_img:
    pos: ((page_size + kernel.size + ramdisk.size + second.size + recovery_dtbo.size + page_size - 1) / page_size) * page_size
    size: dtb.size
    if: header_version > 1 and dtb.size > 0
types:
  load:
    seq:
      - id: size
        type: u4
      - id: addr
        type: u4
  load_long:
    seq:
      - id: size
        type: u4
      - id: addr
        type: u8
  size_offset:
    seq:
      - id: size
        type: u4
      - id: offset
        type: u8
  os_version:
    seq:
      - id: version
        type: u4
    instances:
      major:
        value: (version >> 25) & 0x7f
      minor:
        value: (version >> 18) & 0x7f
      patch:
        value: (version >> 11) & 0x7f
      year:
        value: ((version >> 4) & 0x7f) + 2000
      month:
        value: version & 0xf
`
  },
  {
    id: "ksy_android_sparse",
    name: "Android sparse image",
    category: "Archives",
    metadata: {
      isGenerated: true,
      fileExtensions: ["img"],
      description: "Android sparse image",
      originalCategory: "archive",
      filePath: "archive/android_sparse.ksy",
      endian: "le"
    },
    content: `meta:
  id: android_sparse
  title: Android sparse image
  file-extension: img
  tags:
    - archive
    - android
  license: CC0-1.0
  ks-version: 0.9
  endian: le
doc: |
  The Android sparse format is a format to more efficiently store files
  for for example firmware updates to save on bandwidth. Files in sparse
  format first have to be converted back to their original format.

  A tool to create images for testing can be found in the Android source code tree:

  <https://android.googlesource.com/platform/system/core/+/e8d02c50d7/libsparse> - \`img2simg.c\`

  Note: this is not the same as the Android sparse data image format.
doc-ref:
  - https://android.googlesource.com/platform/system/core/+/e8d02c50d7/libsparse/sparse_format.h
  - https://web.archive.org/web/20220322054458/https://source.android.com/devices/bootloader/images#sparse-image-format
seq:
  - id: header_prefix
    type: file_header_prefix
    doc: internal; access \`_root.header\` instead
  - id: header
    size: header_prefix.len_header - header_prefix._sizeof
    type: file_header
  - id: chunks
    type: chunk
    repeat: expr
    repeat-expr: header.num_chunks
types:
  file_header_prefix:
    seq:
      - id: magic
        contents: [0x3a, 0xff, 0x26, 0xed]
      - id: version
        type: version
        doc: internal; access \`_root.header.version\` instead
      - id: len_header
        -orig-id: file_hdr_sz
        type: u2
        doc: internal; access \`_root.header.len_header\` instead
  file_header:
    seq:
      - id: len_chunk_header
        -orig-id: chunk_hdr_sz
        type: u2
        doc: size of chunk header, should be 12
      - id: block_size
        -orig-id: blk_sz
        type: u4
        valid:
          expr: _ % 4 == 0
        doc: block size in bytes, must be a multiple of 4
      - id: num_blocks
        -orig-id: total_blks
        type: u4
        doc: blocks in the original data
      - id: num_chunks
        -orig-id: total_chunks
        type: u4
      - id: checksum
        -orig-id: image_checksum
        type: u4
        doc: |
          CRC32 checksum of the original data

          In practice always 0; if checksum writing is requested, a CRC32 chunk is written
          at the end of the file instead. The canonical \`libsparse\` implementation does this
          and other implementations tend to follow it, see
          <https://gitlab.com/teskje/android-sparse-rs/-/blob/57c2577/src/write.rs#L112-114>
    instances:
      version:
        value: _root.header_prefix.version
      len_header:
        value: _root.header_prefix.len_header
        doc: size of file header, should be 28
  chunk:
    -webide-representation: '{header}'
    seq:
      - id: header
        size: _root.header.len_chunk_header
        type: chunk_header
      - id: body
        size: header.len_body
        type:
          switch-on: header.chunk_type
          cases:
            chunk_types::crc32: u4
            # byte array for all other chunk types
    types:
      chunk_header:
        -webide-representation: '{chunk_type}: {num_body_blocks:dec} blocks'
        seq:
          - id: chunk_type
            type: u2
            enum: chunk_types
          - id: reserved1
            type: u2
          - id: num_body_blocks
            -orig-id: chunk_sz
            type: u4
            doc: size of the chunk body in blocks in output image
          - id: len_chunk
            -orig-id: total_sz
            type: u4
            valid:
              eq: 'len_body_expected != -1 ? _root.header.len_chunk_header + len_body_expected : len_chunk'
            doc: in bytes of chunk input file including chunk header and data
        instances:
          len_body:
            value: len_chunk - _root.header.len_chunk_header
          len_body_expected:
            value: |
              chunk_type == chunk_types::raw ? _root.header.block_size * num_body_blocks :
              chunk_type == chunk_types::fill ? 4 :
              chunk_type == chunk_types::dont_care ? 0 :
              chunk_type == chunk_types::crc32 ? 4 :
              -1
            doc-ref:
              - https://android.googlesource.com/platform/system/core/+/e8d02c50d7/libsparse/sparse_read.cpp#184  # ::raw
              - https://android.googlesource.com/platform/system/core/+/e8d02c50d7/libsparse/sparse_read.cpp#215  # ::fill
              - https://android.googlesource.com/platform/system/core/+/e8d02c50d7/libsparse/sparse_read.cpp#249  # ::dont_care
              - https://android.googlesource.com/platform/system/core/+/e8d02c50d7/libsparse/sparse_read.cpp#270  # ::crc32
  version:
    seq:
      - id: major
        -orig-id: major_version
        type: u2
        valid: 1
      - id: minor
        -orig-id: minor_version
        type: u2
enums:
  chunk_types:
    0xcac1: raw
    0xcac2: fill
    0xcac3: dont_care
    0xcac4: crc32
`
  },
  {
    id: "ksy_cpio_old_le",
    name: "cpio archive, old binary variant, little-endian",
    category: "Archives",
    metadata: {
      isGenerated: true,
      fileExtensions: ["cpio"],
      description: "cpio archive, old binary variant, little-endian",
      originalCategory: "archive",
      filePath: "archive/cpio_old_le.ksy",
      endian: "le"
    },
    content: `meta:
  id: cpio_old_le
  title: cpio archive, old binary variant, little-endian
  file-extension: cpio
  xref:
    forensicswiki: cpio
    justsolve: Cpio
    mime: application/x-cpio
    pronom: fmt/635
    wikidata: Q285296
  license: CC0-1.0
  endian: le
seq:
  - id: files
    type: file
    repeat: eos
types:
  file:
    seq:
      - id: header
        type: file_header
      - id: path_name
        size: header.path_name_size - 1
      - id: string_terminator
        contents: [0x00]
      - id: path_name_padding
        contents: [0x00]
        if: header.path_name_size % 2 == 1
      - id: file_data
        size: header.file_size.value
      - id: file_data_padding
        contents: [0x00]
        if: header.file_size.value % 2 == 1
      - id: end_of_file_padding
        size-eos: true
        if: path_name == [0x54, 0x52, 0x41, 0x49, 0x4c, 0x45, 0x52, 0x21, 0x21, 0x21] and header.file_size.value == 0
  file_header:
    seq:
      - id: magic
        contents: [0xC7, 0x71]
      - id: device_number
        type: u2
      - id: inode_number
        type: u2
      - id: mode
        type: u2
      - id: user_id
        type: u2
      - id: group_id
        type: u2
      - id: number_of_links
        type: u2
      - id: r_device_number
        type: u2
      - id: modification_time
        type: four_byte_unsigned_integer
      - id: path_name_size
        type: u2
      - id: file_size
        type: four_byte_unsigned_integer
  four_byte_unsigned_integer:
    seq:
      - id: most_significant_bits
        type: u2
      - id: least_significant_bits
        type: u2
    instances:
      value:
        value: least_significant_bits + (most_significant_bits << 16)
`
  },
  {
    id: "ksy_gzip",
    name: "Gzip",
    category: "Archives",
    metadata: {
      isGenerated: true,
      fileExtensions: ["gz"],
      description: "",
      originalCategory: "archive",
      filePath: "archive/gzip.ksy",
      signature: {"offset":0,"bytes":[31,139]},
      endian: "le"
    },
    content: `meta:
  id: gzip
  file-extension: gz
  xref:
    forensicswiki: gzip
    justsolve: Gzip
    mime: application/gzip
    pronom: x-fmt/266
    rfc: 1952
    wikidata: Q10287816
  license: CC0-1.0
  endian: le
doc: |
  Gzip is a popular and standard single-file archiving format. It
  essentially provides a container that stores original file name,
  timestamp and a few other things (like optional comment), basic
  CRCs, etc, and a file compressed by a chosen compression algorithm.

  As of 2019, there is actually only one working solution for
  compression algorithms, so it's typically raw DEFLATE stream
  (without zlib header) in all gzipped files.
doc-ref: https://www.rfc-editor.org/rfc/rfc1952
seq:
  - id: magic
    -orig-id: ID1, ID2
    contents: [0x1f, 0x8b]
  - id: compression_method
    -orig-id: CM
    type: u1
    enum: compression_methods
    doc: |
      Compression method used to compress file body. In practice, only
      one method is widely used: 8 = deflate.
  - id: flags
    -orig-id: FLG
    type: flags
  - id: mod_time
    -orig-id: MTIME
    type: u4
    doc: Last modification time of a file archived in UNIX timestamp format.
  - id: extra_flags
    -orig-id: XFL
    type:
      switch-on: compression_method
      cases:
        'compression_methods::deflate': extra_flags_deflate
    doc: Extra flags, specific to compression method chosen.
  - id: os
    -orig-id: OS
    type: u1
    enum: oses
    doc: OS used to compress this file.
  - id: extras
    type: extras
    if: flags.has_extra
  - id: name
    terminator: 0
    if: flags.has_name
  - id: comment
    terminator: 0
    if: flags.has_comment
  - id: header_crc16
    type: u2
    if: flags.has_header_crc
  - id: body
    size: _io.size - _io.pos - 8
    doc: |
      Compressed body of a file archived. Note that we don't make an
      attempt to decompress it here.
  - id: body_crc32
    -orig-id: CRC32
    type: u4
    doc: |
      CRC32 checksum of an uncompressed file body
  - id: len_uncompressed
    -orig-id: ISIZE
    type: u4
    doc: |
      Size of original uncompressed data in bytes (truncated to 32
      bits).
enums:
  compression_methods:
    8: deflate
  oses:
    0:
      id: fat
      doc: FAT filesystem (MS-DOS, OS/2, NT/Win32)
    1:
      id: amiga
      doc: Amiga
    2:
      id: vms
      doc: VMS (or OpenVMS)
    3:
      id: unix
      doc: Unix
    4:
      id: vm_cms
      doc: VM/CMS
    5:
      id: atari_tos
      doc: Atari TOS
    6:
      id: hpfs
      doc: HPFS filesystem (OS/2, NT)
    7:
      id: macintosh
      doc: Macintosh
    8:
      id: z_system
      doc: Z-System
    9:
      id: cp_m
      doc: CP/M
    10:
      id: tops_20
      doc: TOPS-20
    11:
      id: ntfs
      doc: NTFS filesystem (NT)
    12:
      id: qdos
      doc: QDOS
    13:
      id: acorn_riscos
      doc: Acorn RISCOS
    255:
      id: unknown
types:
  flags:
    seq:
      - id: reserved1
        type: b3
      - id: has_comment
        -orig-id: FCOMMENT
        type: b1
      - id: has_name
        -orig-id: FNAME
        type: b1
      - id: has_extra
        -orig-id: FEXTRA
        type: b1
        doc: If true, optional extra fields are present in the archive.
      - id: has_header_crc
        -orig-id: FHCRC
        type: b1
        doc: |
          If true, this archive includes a CRC16 checksum for the header.
      - id: is_text
        -orig-id: FTEXT
        type: b1
        doc: |
          If true, file inside this archive is a text file from
          compressor's point of view.
  extra_flags_deflate:
    seq:
      - id: compression_strength
        type: u1
        enum: compression_strengths
    enums:
      compression_strengths:
        2: best
        4: fast
  extras:
    seq:
      - id: len_subfields
        -orig-id: XLEN
        type: u2
      - id: subfields
        size: len_subfields
        type: subfields
  subfields:
    doc: |
      Container for many subfields, constrained by size of stream.
    seq:
      - id: entries
        type: subfield
        repeat: eos
  subfield:
    doc: |
      Every subfield follows typical [TLV scheme](https://en.wikipedia.org/wiki/Type-length-value):

      * \`id\` serves role of "T"ype
      * \`len_data\` serves role of "L"ength
      * \`data\` serves role of "V"alue

      This way it's possible to for arbitrary parser to skip over
      subfields it does not support.
    seq:
      - id: id
        -orig-id: SI1, SI2
        type: u2
        doc: Subfield ID, typically two ASCII letters.
      - id: len_data
        type: u2
      - id: data
        size: len_data
`
  },
  {
    id: "ksy_lzh",
    name: "Lzh",
    category: "Archives",
    metadata: {
      isGenerated: true,
      fileExtensions: ["lzh"],
      description: "",
      originalCategory: "archive",
      filePath: "archive/lzh.ksy",
      endian: "le"
    },
    content: `meta:
  id: lzh
  application: LHA (AKA LHarc) by Yoshizaki Haruyasu
  file-extension: lzh
  xref:
    justsolve: LHA
    pronom: fmt/626
    wikidata: Q368782
  license: CC0-1.0
  imports:
    - /common/dos_datetime
  endian: le
doc: |
  LHA (LHarc, LZH) is a file format used by a popular freeware
  eponymous archiver, created in 1988 by Haruyasu Yoshizaki. Over the
  years, many ports and implementations were developed, sporting many
  extensions to original 1988 LZH.

  File format is pretty simple and essentially consists of a stream of
  records.
seq:
  - id: entries
    type: record
    repeat: eos
types:
  record:
    seq:
      - id: header_len
        type: u1
      - id: file_record
        type: file_record
        if: header_len > 0
  file_record:
    seq:
      - id: header
        size: _parent.header_len - 1
        type: header
      - id: file_uncompr_crc16
        type: u2
        if: header.header1.lha_level == 0
      - id: body
        size: header.header1.file_size_compr
  header:
    seq:
      - id: header1
        type: header1
        doc: >
          Level-neutral header, same for all LHA levels. Subsequent
          fields order and meaning varies, based on LHA level
          specified in this header.
      - id: filename_len
        type: u1
        if: header1.lha_level == 0
      - id: filename
        type: str
        size: filename_len
        encoding: ASCII
        if: header1.lha_level == 0
      - id: file_uncompr_crc16
        type: u2
        if: header1.lha_level == 2
      - id: os
        type: u1
        if: header1.lha_level == 2
      - id: ext_header_size
        type: u2
        if: header1.lha_level == 2
  header1:
    seq:
      - id: header_checksum
        type: u1
      - id: method_id
        type: str
        size: 5
        encoding: ASCII
      - id: file_size_compr
        type: u4
        doc: Compressed file size
      - id: file_size_uncompr
        type: u4
        doc: Uncompressed file size
      - id: file_timestamp
        size: 4
        type: dos_datetime
        doc: Original file date/time
      - id: attr
        type: u1
        doc: File or directory attribute
      - id: lha_level
        type: u1
`
  },
  {
    id: "ksy_mozilla_mar",
    name: "Mozilla ARchive",
    category: "Archives",
    metadata: {
      isGenerated: true,
      fileExtensions: ["mar"],
      description: "Mozilla ARchive",
      originalCategory: "archive",
      filePath: "archive/mozilla_mar.ksy",
      signature: {"offset":0,"bytes":[77,65,82,49]},
      endian: "be"
    },
    content: `meta:
  id: mozilla_mar
  title: Mozilla ARchive
  file-extension: mar
  xref:
    justsolve: Mozilla_Archive
    wikidata: Q28777700
  license: CC0-1.0
  endian: be
doc: |
  Mozilla ARchive file is Mozilla's own archive format to distribute software updates.
  Test files can be found on Mozilla's FTP site, for example:

  <http://ftp.mozilla.org/pub/firefox/nightly/partials/>
doc-ref: https://wiki.mozilla.org/Software_Update:MAR
seq:
  - id: magic
    contents: "MAR1"
  - id: ofs_index
    -orig-id: OffsetToIndex
    type: u4
  - id: file_size
    -orig-id: FileSize
    type: u8
  - id: len_signatures
    -orig-id: NumSignatures
    type: u4
  - id: signatures
    type: signature
    repeat: expr
    repeat-expr: len_signatures
  - id: len_additional_sections
    -orig-id: NumAdditionalSections
    type: u4
  - id: additional_sections
    type: additional_section
    repeat: expr
    repeat-expr: len_additional_sections
instances:
  index:
    pos: ofs_index
    type: mar_index
types:
  signature:
    seq:
      - id: algorithm
        -orig-id: SignatureAlgorithmID
        type: u4
        enum: signature_algorithms
      - id: len_signature
        -orig-id: SignatureSize
        type: u4
      - id: signature
        size: len_signature
  additional_section:
    seq:
      - id: len_block
        type: u4
      - id: block_identifier
        -orig-id: BlockIdentifier
        type: u4
        enum: block_identifiers
      - id: bytes
        size: len_block - len_block._sizeof - block_identifier._sizeof
        type:
          switch-on: block_identifier
          cases:
            block_identifiers::product_information: product_information_block
  mar_index:
    seq:
      - id: len_index
        -orig-id: IndexSize
        type: u4
      - id: index_entries
        type: index_entries
        size: len_index
  index_entries:
    seq:
      - id: index_entry
        type: index_entry
        repeat: eos
  index_entry:
    seq:
      - id: ofs_content
        -orig-id: OffsetToContent
        type: u4
      - id: len_content
        -orig-id: ContentSize
        type: u4
      - id: flags
        type: u4
        doc: File permission bits (in standard unix-style format).
      - id: file_name
        -orig-id: FileName
        type: strz
        encoding: UTF-8
    instances:
      body:
        pos: ofs_content
        io: _root._io
        size: len_content
  product_information_block:
    seq:
      - id: mar_channel_name
        -orig-id: MARChannelName
        size: 64
        type: strz
        encoding: UTF-8
      - id: product_version
        -orig-id: ProductVersion
        size: 32
        type: strz
        encoding: UTF-8
enums:
  signature_algorithms:
    1: rsa_pkcs1_sha1
    2: rsa_pkcs1_sha384
  block_identifiers:
    1: product_information
`
  },
  {
    id: "ksy_phar_without_stub",
    name: "PHP phar archive (without stub)",
    category: "Archives",
    metadata: {
      isGenerated: true,
      fileExtensions: ["phar"],
      description: "PHP phar archive (without stub)",
      originalCategory: "archive",
      filePath: "archive/phar_without_stub.ksy",
      endian: "le"
    },
    content: `meta:
  id: phar_without_stub
  title: PHP phar archive (without stub)
  application: PHP
  file-extension: phar
  xref:
    wikidata: Q1269709
  license: CC0-1.0
  ks-version: 0.9
  imports:
    - /serialization/php_serialized_value
  endian: le
doc: |
  A phar (PHP archive) file. The phar format is a custom archive format
  from the PHP ecosystem that is used to package a complete PHP library
  or application into a single self-contained archive.
  All phar archives start with an executable PHP stub, which can be used to
  allow executing or including phar files as if they were regular PHP scripts.
  PHP 5.3 and later include the phar extension, which adds native support for
  reading and manipulating phar files.

  The phar format was originally developed as part of the PEAR library
  PHP_Archive, first released in 2005. Later, a native PHP extension
  named "phar" was developed, which was first released on PECL in 2007,
  and is included with PHP 5.3 and later. The phar extension has effectively
  superseded the PHP_Archive library, which has not been updated since 2010.
  The phar extension is also no longer released independently on PECL;
  it is now developed and released as part of PHP itself.

  Because of current limitations in Kaitai Struct
  (seekaitai-io/kaitai_struct#158 and kaitai-io/kaitai_struct#538),
  the executable PHP stub that precedes the rest of the archive is not handled
  by this spec. Before parsing a phar using this spec, the stub must be
  removed manually.

  A phar's stub is terminated by the special token \`__HALT_COMPILER();\`
  (which may be followed by at most one space, the PHP tag end \`?>\`,
  and an optional line terminator). The stub termination sequence is
  immediately followed by the remaining parts of the phar format,
  as described in this spec.

  The phar stub usually contains code that loads the phar and runs
  a contained PHP file, but this is not required. A minimal valid phar stub
  is \`<?php __HALT_COMPILER();\` - such a stub makes it impossible to execute
  the phar directly, but still allows loading or manipulating it using the
  phar extension.

  Note: The phar format does not specify any encoding for text fields
  (stub, alias name, and all file names), so these fields may contain arbitrary
  binary data. The actual text encoding used in a specific phar file usually
  depends on the application that created the phar, and on the
  standard encoding of the system on which the phar was created.
doc-ref:
  - 'https://www.php.net/manual/en/phar.fileformat.php'
  - 'https://github.com/php/php-src/tree/master/ext/phar'
  - 'https://svn.php.net/viewvc/pecl/phar/'
  - 'https://svn.php.net/viewvc/pear/packages/PHP_Archive/'
seq:
  - id: manifest
    type: manifest
    doc: |
      The archive's manifest, containing general metadata about the archive
      and its files.
  - id: files
    size: manifest.file_entries[_index].len_data_compressed
    repeat: expr
    repeat-expr: manifest.num_files
    doc: |
      The contents of each file in the archive (possibly compressed,
      as indicated by the file's flags in the manifest). The files are stored
      in the same order as they appear in the manifest.
  - id: signature
    type: signature
    size-eos: true
    if: manifest.flags.has_signature
    doc: |
      The archive's signature - a digest of all archive data before
      the signature itself.

      Note: Almost all of the available "signature" types are actually hashes,
      not signatures, and cannot be used to verify that the archive has not
      been tampered with. Only the OpenSSL signature type is a true
      cryptographic signature.
enums:
  signature_type:
    0x1:
      id: md5
      -orig-id: PHAR_SIG_MD5
      doc: Indicates an MD5 hash.
    0x2:
      id: sha1
      -orig-id: PHAR_SIG_SHA1
      doc: Indicates a SHA-1 hash.
    0x4:
      id: sha256
      -orig-id: PHAR_SIG_SHA256
      doc: |
        Indicates a SHA-256 hash. Available since API version 1.1.0,
        PHP_Archive 0.12.0 and phar extension 1.1.0.
    0x8:
      id: sha512
      -orig-id: PHAR_SIG_SHA512
      doc: |
        Indicates a SHA-512 hash. Available since API version 1.1.0,
        PHP_Archive 0.12.0 and phar extension 1.1.0.
    0x10:
      id: openssl
      -orig-id: PHAR_SIG_OPENSSL
      doc: |
        Indicates an OpenSSL signature. Available since API version 1.1.1,
        PHP_Archive 0.12.0 (even though it claims to only support
        API version 1.1.0) and phar extension 1.3.0. This type is not
        documented in the phar extension's documentation of the phar format.

        Note: In older versions of the phar extension, this value was used
        for an undocumented and unimplemented "PGP" signature type
        (\`PHAR_SIG_PGP\`).
types:
  serialized_value:
    seq:
      - id: raw
        size-eos: true
        doc: The serialized value, as a raw byte array.
    instances:
      parsed:
        pos: 0
        type: php_serialized_value
        doc: The serialized value, parsed as a structure.
  file_flags:
    seq:
      - id: value
        type: u4
        doc: The unparsed flag bits.
    instances:
      permissions:
        value: value & 0x1ff
        -orig-id: PHAR_ENT_PERM_MASK
        doc: The file's permission bits.
      zlib_compressed:
        value: (value & 0x1000) != 0
        -orig-id: PHAR_ENT_COMPRESSED_GZ
        doc: Whether this file's data is stored using zlib compression.
      bzip2_compressed:
        value: (value & 0x2000) != 0
        -orig-id: PHAR_ENT_COMPRESSED_BZ2
        doc: Whether this file's data is stored using bzip2 compression.
  file_entry:
    seq:
      - id: len_filename
        type: u4
        doc: The length of the file name, in bytes.
      - id: filename
        size: len_filename
        doc: |
          The name of this file. If the name ends with a slash, this entry
          represents a directory, otherwise a regular file. Directory entries
          are supported since phar API version 1.1.1.
          (Explicit directory entries are only needed for empty directories.
          Non-empty directories are implied by the files located inside them.)
      - id: len_data_uncompressed
        type: u4
        doc: The length of the file's data when uncompressed, in bytes.
      - id: timestamp
        type: u4
        doc: |
          The time at which the file was added or last updated, as a
          Unix timestamp.
      - id: len_data_compressed
        type: u4
        doc: The length of the file's data when compressed, in bytes.
      - id: crc32
        type: u4
        doc: The CRC32 checksum of the file's uncompressed data.
      - id: flags
        type: file_flags
        doc: Flags for this file.
      - id: len_metadata
        type: u4
        doc: The length of the metadata, in bytes, or 0 if there is none.
      - id: metadata
        size: len_metadata
        type: serialized_value
        if: len_metadata != 0
        doc: |
          Metadata for this file, in the format used by PHP's
          \`serialize\` function. The meaning of the serialized data is not
          specified further, it may be used to store arbitrary custom data
          about the file.
  api_version:
    meta:
      endian: be
    doc: |
      A phar API version number. This version number is meant to indicate
      which features are used in a specific phar, so that tools reading
      the phar can easily check that they support all necessary features.

      The following API versions exist so far:

      * 0.5, 0.6, 0.7, 0.7.1: The first official API versions. At this point,
        the phar format was only used by the PHP_Archive library, and the
        API version numbers were identical to the PHP_Archive versions that
        supported them. Development of the native phar extension started around
        API version 0.7. These API versions could only be queried using the
        \`PHP_Archive::APIversion()\` method, but were not stored physically
        in archives. These API versions are not supported by this spec.
      * 0.8.0: Used by PHP_Archive 0.8.0 (released 2006-07-18) and
        later development versions of the phar extension. This is the first
        version number to be physically stored in archives. This API version
        is not supported by this spec.
      * 0.9.0: Used by later development/early beta versions of the
        phar extension. Also temporarily used by PHP_Archive 0.9.0
        (released 2006-12-15), but reverted back to API version 0.8.0 in
        PHP_Archive 0.9.1 (released 2007-01-05).
      * 1.0.0: Supported since PHP_Archive 0.10.0 (released 2007-05-29)
        and phar extension 1.0.0 (released 2007-03-28). This is the first
        stable, forwards-compatible and documented version of the format.
      * 1.1.0: Supported since PHP_Archive 0.12.0 (released 2015-07-06)
        and phar extension 1.1.0 (released 2007-04-12). Adds SHA-256 and
        SHA-512 signature types.
      * 1.1.1: Supported since phar extension 2.0.0 (released 2009-07-29 and
        included with PHP 5.3 and later). (PHP_Archive 0.12.0 also supports
        all features from API verison 1.1.1, but it reports API version 1.1.0.)
        Adds the OpenSSL signature type and support for storing
        empty directories.
    seq:
      - id: release
        type: b4
      - id: major
        type: b4
      - id: minor
        type: b4
      - id: unused
        type: b4
  global_flags:
    seq:
      - id: value
        type: u4
        doc: The unparsed flag bits.
    instances:
      any_zlib_compressed:
        value: (value & 0x1000) != 0
        -orig-id: PHAR_HDR_COMPRESSED_GZ
        doc: |
          Whether any of the files in this phar are stored using
          zlib compression.
      any_bzip2_compressed:
        value: (value & 0x2000) != 0
        -orig-id: PHAR_HDR_COMPRESSED_BZ2
        doc: |
          Whether any of the files in this phar are stored using
          bzip2 compression.
      has_signature:
        value: (value & 0x10000) != 0
        -orig-id: PHAR_HDR_SIGNATURE
        doc: Whether this phar contains a signature.
  manifest:
    seq:
      - id: len_manifest
        type: u4
        doc: |
          The length of the manifest, in bytes.

          Note: The phar extension does not allow reading manifests
          larger than 100 MiB.
      - id: num_files
        type: u4
        doc: The number of files in this phar.
      - id: api_version
        type: api_version
        doc: The API version used by this phar manifest.
      - id: flags
        type: global_flags
        doc: Global flags for this phar.
      - id: len_alias
        type: u4
        doc: The length of the alias, in bytes.
      - id: alias
        size: len_alias
        doc: |
          The phar's alias, i. e. the name under which it is loaded into PHP.
      - id: len_metadata
        type: u4
        doc: The size of the metadata, in bytes, or 0 if there is none.
      - id: metadata
        size: len_metadata
        type: serialized_value
        if: len_metadata != 0
        doc: |
          Metadata for this phar, in the format used by PHP's
          \`serialize\` function. The meaning of the serialized data is not
          specified further, it may be used to store arbitrary custom data
          about the archive.
      - id: file_entries
        type: file_entry
        repeat: expr
        repeat-expr: num_files
        doc: Manifest entries for the files contained in this phar.
  signature:
    seq:
      - id: data
        size: _io.size - _io.pos - 8
        doc: |
          The signature data. The size and contents depend on the
          signature type.
      - id: type
        type: u4
        enum: signature_type
        doc: The signature type.
      - id: magic
        contents: "GBMB"
`
  },
  {
    id: "ksy_rar",
    name: "RAR (Roshall ARchiver) archive files",
    category: "Archives",
    metadata: {
      isGenerated: true,
      fileExtensions: ["rar"],
      description: "RAR (Roshall ARchiver) archive files",
      originalCategory: "archive",
      filePath: "archive/rar.ksy",
      endian: "le"
    },
    content: `meta:
  id: rar
  title: RAR (Roshall ARchiver) archive files
  application: RAR archiver
  file-extension: rar
  xref:
    forensicswiki: rar
    justsolve: RAR
    loc: fdd000450
    mime:
      - application/vnd.rar
      - application/x-rar-compressed
    pronom:
      - x-fmt/264 # RAR 2.0
      - fmt/411 # RAR 2.9
      - fmt/613 # RAR 5.0
    wikidata: Q243303
  license: CC0-1.0
  ks-version: 0.7
  imports:
    - /common/dos_datetime
  endian: le
doc: |
  RAR is a archive format used by popular proprietary RAR archiver,
  created by Eugene Roshal. There are two major versions of format
  (v1.5-4.0 and RAR v5+).

  File format essentially consists of a linear sequence of
  blocks. Each block has fixed header and custom body (that depends on
  block type), so it's possible to skip block even if one doesn't know
  how to process a certain block type.
doc-ref: http://acritum.com/winrar/rar-format
seq:
  - id: magic
    type: magic_signature
    doc: File format signature to validate that it is indeed a RAR archive
  - id: blocks
    type:
      switch-on: magic.version
      cases:
        0: block
        1: block_v5
    repeat: eos
    doc: Sequence of blocks that constitute the RAR file
types:
  magic_signature:
    doc: |
      RAR uses either 7-byte magic for RAR versions 1.5 to 4.0, and
      8-byte magic (and pretty different block format) for v5+. This
      type would parse and validate both versions of signature. Note
      that actually this signature is a valid RAR "block": in theory,
      one can omit signature reading at all, and read this normally,
      as a block, if exact RAR version is known (and thus it's
      possible to choose correct block format).
    seq:
      - id: magic1
        contents:
          - 'Rar!'
          - 0x1a
          - 0x07
        doc: "Fixed part of file's magic signature that doesn't change with RAR version"
      - id: version
        type: u1
        doc: |
          Variable part of magic signature: 0 means old (RAR 1.5-4.0)
          format, 1 means new (RAR 5+) format
      - id: magic3
        contents: [0]
        if: version == 1
        doc: New format (RAR 5+) magic contains extra byte
  block:
    doc: |
      Basic block that RAR files consist of. There are several block
      types (see \`block_type\`), which have different \`body\` and
      \`add_body\`.
    seq:
      - id: crc16
        type: u2
        doc: CRC16 of whole block or some part of it (depends on block type)
      - id: block_type
        type: u1
        enum: block_types
      - id: flags
        type: u2
      - id: block_size
        type: u2
        doc: Size of block (header + body, but without additional content)
      - id: add_size
        type: u4
        if: has_add
        doc: Size of additional content in this block
      - id: body
        size: body_size
        type:
          switch-on: block_type
          cases:
            'block_types::file_header': block_file_header
      - id: add_body
        size: add_size
        if: has_add
        doc: Additional content in this block
    instances:
      has_add:
        value: 'flags & 0x8000 != 0'
        doc: True if block has additional content attached to it
      header_size:
        value: 'has_add ? 11 : 7'
      body_size:
        value: block_size - header_size
  block_file_header:
    seq:
      - id: low_unp_size
        type: u4
        doc: Uncompressed file size (lower 32 bits, if 64-bit header flag is present)
      - id: host_os
        type: u1
        enum: oses
        doc: Operating system used for archiving
      - id: file_crc32
        type: u4
      - id: file_time
        size: 4
        type: dos_datetime
        doc: Date and time in standard MS DOS format
      - id: rar_version
        type: u1
        doc: RAR version needed to extract file (Version number is encoded as 10 * Major version + minor version.)
      - id: method
        type: u1
        enum: methods
        doc: Compression method
      - id: name_size
        type: u2
        doc: File name size
      - id: attr
        type: u4
        doc: File attributes
      - id: high_pack_size
        type: u4
        doc: Compressed file size, high 32 bits, only if 64-bit header flag is present
        if: '_parent.flags & 0x100 != 0'
      - id: file_name
        size: name_size
      - id: salt
        type: u8
        if: '_parent.flags & 0x400 != 0'
#     - id: ext_time
#       variable size
#       if: '_parent.flags & 0x1000 != 0'
  block_v5:
    {}
    # not yet implemented
enums:
  block_types:
    0x72: marker
    0x73: archive_header
    0x74: file_header
    0x75: old_style_comment_header
    0x76: old_style_authenticity_info_76
    0x77: old_style_subblock
    0x78: old_style_recovery_record
    0x79: old_style_authenticity_info_79
    0x7a: subblock
    0x7b: terminator
  oses:
    0: ms_dos
    1: os_2
    2: windows
    3: unix
    4: mac_os
    5: beos
  methods:
    0x30: store
    0x31: fastest
    0x32: fast
    0x33: normal
    0x34: good
    0x35: best
`
  },
  {
    id: "ksy_respack",
    name: "ResPack",
    category: "Archives",
    metadata: {
      isGenerated: true,
      fileExtensions: ["cfg"],
      description: "ResPack",
      originalCategory: "archive",
      filePath: "archive/respack.ksy",
      endian: "le"
    },
    content: `meta:
  id: respack
  title: ResPack
  file-extension: cfg
  license: CC0-1.0
  encoding: UTF-8
  endian: le
doc: |
  Resource file found in CPB firmware archives, mostly used on older CoolPad
  phones and/or tablets. The only observed files are called "ResPack.cfg".
seq:
  - id: header
    type: header
  - id: json
    size: header.len_json
    type: str
types:
  header:
    seq:
      - id: magic
        contents: "RS"
      - id: unknown
        size: 8
      - id: len_json
        type: u4
      - id: md5
        size: 32
        type: str
        doc: MD5 of data that follows the header
`
  },
  {
    id: "ksy_rpm",
    name: "RPM package file",
    category: "Archives",
    metadata: {
      isGenerated: true,
      fileExtensions: ["rpm","srpm","src.rpm","drpm"],
      description: "RPM package file",
      originalCategory: "archive",
      filePath: "archive/rpm.ksy",
      endian: "be"
    },
    content: `meta:
  id: rpm
  title: RPM package file
  application: RPM Package Manager
  file-extension:
    - rpm
    - srpm
    - src.rpm
    - drpm
  xref:
    justsolve: RPM
    mime: application/x-rpm
    pronom: fmt/795 # v3
    wikidata: Q492650
  license: CC0-1.0
  ks-version: 0.9
  encoding: UTF-8
  endian: be
doc: |
  This parser is for the RPM version 3 file format which is the current version
  of the file format used by RPM 2.1 and later (including RPM version 4.x, which
  is the current version of the RPM tool). There are historical versions of the
  RPM file format, as well as a currently abandoned fork (rpm5). These formats
  are not covered by this specification.
doc-ref:
  - https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/format.md
  - https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/tags.md
  - https://refspecs.linuxbase.org/LSB_5.0.0/LSB-Core-generic/LSB-Core-generic/pkgformat.html
  - http://ftp.rpm.org/max-rpm/
seq:
  - id: lead
    type: lead
  - id: signature
    type: header(true)
  - id: signature_padding
    size: (- _io.pos) % 8
  - size: 0
    if: ofs_header < 0
  - id: header
    type: header(false)
  - size: 0
    if: ofs_payload < 0
  - id: signature_tags_steps
    type: 'signature_tags_step(_index, _index < 1 ? -1 : signature_tags_steps[_index - 1].size_tag_idx)'
    repeat: expr
    repeat-expr: signature.header_record.num_index_records
instances:
  payload:
    pos: ofs_payload
    size: len_payload
    if: has_signature_size_tag
  len_payload:
    value: 'signature_size_tag.body.as<record_type_uint32>.values[0] - len_header'
    if: has_signature_size_tag
  len_header:
    value: ofs_payload - ofs_header
  ofs_header:
    value: _io.pos
  ofs_payload:
    value: _io.pos
  has_signature_size_tag:
    value: signature_tags_steps.last.size_tag_idx != -1
  signature_size_tag:
    value: signature.index_records[signature_tags_steps.last.size_tag_idx]
    if: has_signature_size_tag
types:
  signature_tags_step:
    params:
      - id: idx
        type: s4
      - id: prev_size_tag_idx
        type: s4
    instances:
      size_tag_idx:
        value: |
          prev_size_tag_idx != -1 ? prev_size_tag_idx :
            (_parent.signature.index_records[idx].signature_tag == signature_tags::size
            and _parent.signature.index_records[idx].record_type == record_types::uint32
            and _parent.signature.index_records[idx].num_values >= 1 ? idx : -1)
  dummy: {}
  lead:
    doc: |
      In 2021, Panu Matilainen (a RPM developer) [described this
      structure](https://github.com/kaitai-io/kaitai_struct_formats/pull/469#discussion_r718288192)
      as follows:

      > The lead as a structure is 25 years obsolete, the data there is
      > meaningless. Seriously. Except to check for the magic to detect that
      > it's an rpm file in the first place, just ignore everything in it.
      > Literally everything.

      The fields with \`valid\` constraints are important, because these are the
      same validations that RPM does (which means that any valid \`.rpm\` file
      must pass them), but otherwise you should not make decisions based on the
      values given here.
    seq:
      - id: magic
        contents: [0xed, 0xab, 0xee, 0xdb]
      - id: version
        type: rpm_version
      - id: type
        type: u2
        enum: rpm_types
      - id: architecture
        -orig-id: archnum
        type: u2
        enum: architectures
      - id: package_name
        size: 66
        type: strz
      - id: os
        -orig-id: osnum
        type: u2
        enum: operating_systems
      - id: signature_type
        type: u2
        valid: 5
      - id: reserved
        size: 16
  rpm_version:
    seq:
      - id: major
        type: u1
        valid:
          min: 3
          max: 4
        doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/lib/rpmlead.c#L102
      - id: minor
        type: u1
  header:
    doc: |
      header structure used for both the "header" and "signature", but some tag
      values have different meanings in signature and header (hence they use
      different enums)
    params:
      - id: is_signature
        type: bool
    seq:
      - id: header_record
        type: header_record
      - id: index_records
        type: header_index_record
        repeat: expr
        repeat-expr: header_record.num_index_records
      - id: storage_section
        size: header_record.len_storage_section
        type: dummy
    instances:
      is_header:
        value: not is_signature
  header_index_record:
    -webide-representation: '{signature_tag} {header_tag} [{record_type}]'
    seq:
      - id: tag_raw
        type: u4
        doc: prefer to access \`signature_tag\` and \`header_tag\` instead
      - id: record_type
        type: u4
        enum: record_types
      - id: ofs_body
        type: u4
      - id: count
        type: u4
        doc: internal; access \`num_values\` and \`len_value\` instead
    instances:
      signature_tag:
        value: tag_raw
        enum: signature_tags
        if: _parent.is_signature
      header_tag:
        value: tag_raw
        enum: header_tags
        if: _parent.is_header
      num_values:
        value: count
        if: record_type != record_types::bin
      len_value:
        value: count
        if: record_type == record_types::bin
      body:
        io: _parent.storage_section._io
        pos: ofs_body
        type:
          switch-on: record_type
          cases:
            record_types::char: record_type_uint8(num_values)
            record_types::uint8: record_type_uint8(num_values)
            record_types::uint16: record_type_uint16(num_values)
            record_types::uint32: record_type_uint32(num_values)
            record_types::uint64: record_type_uint64(num_values)
            record_types::string: record_type_string
            record_types::bin: record_type_bin(len_value)
            record_types::string_array: record_type_string_array(num_values)
            record_types::i18n_string: record_type_string_array(num_values)
  record_type_uint8:
    params:
      - id: num_values
        type: u4
    seq:
      - id: values
        type: u1
        repeat: expr
        repeat-expr: num_values
  record_type_uint16:
    params:
      - id: num_values
        type: u4
    seq:
      - id: values
        type: u2
        repeat: expr
        repeat-expr: num_values
  record_type_uint32:
    params:
      - id: num_values
        type: u4
    seq:
      - id: values
        type: u4
        repeat: expr
        repeat-expr: num_values
  record_type_uint64:
    params:
      - id: num_values
        type: u4
    seq:
      - id: values
        type: u8
        repeat: expr
        repeat-expr: num_values
  record_type_string:
    seq:
      - id: values
        type: strz
        repeat: expr
        repeat-expr: 1
  record_type_bin:
    params:
      - id: len_value
        type: u4
    seq:
      - id: values
        size: len_value
        repeat: expr
        repeat-expr: 1
  record_type_string_array:
    params:
      - id: num_values
        type: u4
    seq:
      - id: values
        type: strz
        repeat: expr
        repeat-expr: num_values
  header_record:
    seq:
      - id: magic
        contents: [0x8e, 0xad, 0xe8, 0x01]
      - id: reserved
        contents: [0, 0, 0, 0]
      - id: num_index_records
        -orig-id: nindex
        type: u4
        valid:
          min: 1
      - id: len_storage_section
        -orig-id: hsize
        type: u4
        doc: |
          Size of the storage area for the data
          pointed to by the Index Records.
enums:
  rpm_types:
    0: binary
    1: source

  # these come (mostly) from <https://github.com/rpm-software-management/rpm/blob/afad3167/rpmrc.in#L170>
  # (see <https://ftp.osuosl.org/pub/rpm/max-rpm/s1-rpm-multi-build-install-detection.html#S3-RPM-MULTI-XXX-CANON>
  # for \`arch_canon\` entry explanation)
  #
  # See also
  #   - <https://github.com/eclipse/packager/blob/51ccdd3/rpm/src/main/java/org/eclipse/packager/rpm/Architecture.java>
  #   - <https://github.com/craigwblake/redline/blob/15afff5/src/main/java/org/redline_rpm/header/Architecture.java>
  #   - <https://web.archive.org/web/20210605105702/https://docs.fedoraproject.org/en-US/Fedora_Draft_Documentation/0.1/html/RPM_Guide/ch01s03.html>
  architectures:
    1:
      id: x86
      doc: x86 or x86_64
    2:
      id: alpha
      doc: Alpha or Sparc64
      doc-ref:
        - https://github.com/eclipse/packager/blob/51ccdd3/rpm/src/main/java/org/eclipse/packager/rpm/Architecture.java#L24
        - https://github.com/file/file/blob/9b2538d/magic/Magdir/rpm#L14
        - https://github.com/rpm-software-management/rpm/blob/afad3167/rpmrc.in#L188-L197
    3: sparc
    4: mips
    5: ppc
    6: m68k
    7:
      id: sgi
      -orig-id: IP
      doc: SGI Inhouse Processors (IP)
      doc-ref:
        - https://github.com/file/file/blob/9b2538d/magic/Magdir/rpm#L19
        - https://github.com/rpm-software-management/rpm/blob/afad3167/rpmrc.in#L219
    8: rs6000
    9: ia64
    10:
      id: sparc64
      doc-ref:
        - https://github.com/file/file/blob/9b2538d/magic/Magdir/rpm#L22
        - https://github.com/craigwblake/redline/blob/15afff5/src/main/java/org/redline_rpm/header/Architecture.java#L15
    11: mips64
    12: arm
    13:
      id: m68k_mint
      -orig-id: m68kmint
      doc-ref:
        - https://github.com/craigwblake/redline/blob/15afff5/src/main/java/org/redline_rpm/header/Architecture.java#L18
        - https://github.com/rpm-software-management/rpm/blob/afad3167/rpmrc.in#L240-L247
    14: s390
    15: s390x
    16: ppc64
    17: sh
    18: xtensa
    19: aarch64
    20:
      id: mips_r6
      -orig-id: mipsr6
      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/rpmrc.in#L266-L267
    21:
      id: mips64_r6
      -orig-id: mips64r6
      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/rpmrc.in#L268-L269
    22: riscv
    23: loongarch64
    255:
      id: no_arch
      -orig-id: noarch
      doc: can be installed on any architecture
      doc-ref:
        - https://github.com/file/file/blob/9b2538d/magic/Magdir/rpm#L31
        - https://github.com/rpm-software-management/rpm/blob/afad3167/lib/rpmrc.c#L1548
  operating_systems:
    # these come from <https://github.com/rpm-software-management/rpm/blob/afad3167/rpmrc.in#L277>
    # in practice it will almost always be 1
    1: linux
    2: irix
    255:
      id: no_os
      -orig-id: noos
      doc: |
        This value is pretty much a guess, based on that \`archnum\` and \`osnum\`
        values are handled by the same function \`getMachineInfo()\` (see
        \`doc-ref\` link) which uses 255 for an unknown value. Value
        \`architectures::no_arch\` can be verified with the magic file of
        \`file(1)\` and \`.rpm\` files that have \`noarch\` in their name, so it seems
        reasonable that \`no_os\` (or "\`noos\`" originally) follows the same
        pattern.

        Moreover, this value is actually used in practice, see this sample file:
        <https://github.com/craigwblake/redline/blob/15afff5/src/test/resources/rpm-3-1.0-1.somearch.rpm>
      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/lib/rpmrc.c#L1548

  signature_tags:
    # Tags from [lib/rpmtag.h](https://github.com/rpm-software-management/rpm/blob/afad3167/include/rpm/rpmtag.h#L423).
    # the first three are shared with header_tags
    62:
      id: signatures
      -orig-id: HEADER_SIGNATURES
    63:
      id: header_immutable
      -orig-id: HEADER_IMMUTABLE
    100:
      id: i18n_table
      -orig-id: HEADER_I18NTABLE
    # RPMSIGTAG_*
    # 256: RPMTAG_SIG_BASE
    264:
      id: bad_sha1_1_obsolete
      -orig-id: RPMSIGTAG_BADSHA1_1
    265:
      id: bad_sha1_2_obsolete
      -orig-id: RPMSIGTAG_BADSHA1_2
    # 266:
    #   id: pubkeys_internal
    #   -orig-id: RPMTAG_PUBKEYS
    #   doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/tags.md#internal--special
    267:
      id: dsa
      -orig-id: RPMSIGTAG_DSA
    268:
      id: rsa
      -orig-id: RPMSIGTAG_RSA
    269:
      id: sha1
      -orig-id: RPMSIGTAG_SHA1
    270:
      id: long_size
      -orig-id: RPMSIGTAG_LONGSIZE
    271:
      id: long_archive_size
      -orig-id: RPMSIGTAG_LONGARCHIVESIZE
    # 272 - reserved
    273:
      id: sha256
      -orig-id: RPMTAG_SHA256HEADER
    274:
      id: file_signatures
      -orig-id: RPMSIGTAG_FILESIGNATURES
    275:
      id: file_signature_length
      -orig-id: RPMSIGTAG_FILESIGNATURELENGTH
    276:
      id: verity_signatures
      -orig-id: RPMTAG_VERITYSIGNATURES
    277:
      id: verity_signature_algo
      -orig-id: RPMTAG_VERITYSIGNATUREALGO
    1000:
      id: size
      -orig-id: RPMSIGTAG_SIZE
      doc: Header + payload size (32bit) in bytes.
    1001:
      id: le_md5_1_obsolete
      -orig-id: RPMSIGTAG_LEMD5_1
      doc: MD5 broken on big-endian machines, take 1
    1002:
      id: pgp
      -orig-id: RPMSIGTAG_PGP
      doc: PGP 2.6.3 signature.
    1003:
      id: le_md5_2_obsolete
      -orig-id: RPMSIGTAG_LEMD5_2
      doc: MD5 broken on big-endian machines, take 2
    1004:
      id: md5
      -orig-id: RPMSIGTAG_MD5
      doc: MD5 signature
    1005:
      id: gpg
      -orig-id: RPMSIGTAG_GPG
      doc: GnuPG signature
    1006:
      id: pgp5_obsolete
      -orig-id: RPMSIGTAG_PGP5
    1007:
      id: payload_size
      -orig-id: RPMSIGTAG_PAYLOADSIZE
      doc: Uncompressed payload size (32bit) in bytes.
    1008:
      id: reserved_space
      -orig-id: RPMSIGTAG_RESERVEDSPACE
      doc: Space reserved for signatures
  header_tags:
    # Tags from [include/rpm/rpmtag.h](https://github.com/rpm-software-management/rpm/blob/afad3167/include/rpm/rpmtag.h).
    # This includes (almost) all tags. Some have \`_unimplemented\`, \`_internal\`
    # or \`_obsolete\` suffix (if more than one applies, the first applicable in
    # this order is used).
    62:
      id: signatures
      -orig-id: HEADER_SIGNATURES
    63:
      id: header_immutable
      -orig-id: HEADER_IMMUTABLE
    100:
      id: i18n_table
      -orig-id: HEADER_I18NTABLE
    # RPMTAG_*
    1000:
      id: name
      -orig-id: RPMTAG_NAME
      doc: Specifies the name of the package.
    1001:
      id: version
      -orig-id: RPMTAG_VERSION
      doc: Specifies the version of the package.
    1002:
      id: release
      -orig-id: RPMTAG_RELEASE
      doc: Specifies the release of the package.
    1003:
      id: epoch # from lib/rpmtag.h
      -orig-id: RPMTAG_EPOCH
    1004:
      id: summary
      -orig-id: RPMTAG_SUMMARY
      doc: |
        Specifies the summary description of the package. The summary
        value pointed to by this index record contains a one line
        description of the package.
    1005:
      id: description
      -orig-id: RPMTAG_DESCRIPTION
      doc: |
        Specifies the description of the package. The description value
        pointed to by this index record contains a full desription of
        the package.
    1006:
      id: build_time
      -orig-id: RPMTAG_BUILDTIME
      doc: |
        Specifies the time as seconds since the epoch
        at which the package was built.
    1007:
      id: build_host
      -orig-id: RPMTAG_BUILDHOST
      doc: Specifies the hostname of the system on which the package was built.
    1008:
      id: install_time # from lib/rpmtag.h
      -orig-id: RPMTAG_INSTALLTIME
    1009:
      id: size
      -orig-id: RPMTAG_SIZE
      doc: Specifies the sum of the sizes of the regular files in the archive.
    1010:
      id: distribution
      -orig-id: RPMTAG_DISTRIBUTION
      doc: Contains the name of the distribution on which the package was built.
    1011:
      id: vendor
      -orig-id: RPMTAG_VENDOR
      doc: Contains the name of the organization that produced the package.
    1012:
      id: gif_obsolete
      -orig-id: RPMTAG_GIF
      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/tags.md#deprecated--obsolete
    1013:
      id: xpm_obsolete
      -orig-id: RPMTAG_XPM
      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/tags.md#deprecated--obsolete
    1014:
      id: license
      -orig-id: RPMTAG_LICENSE
      doc: Specifies the license which applies to this package.
    1015:
      id: packager
      -orig-id: RPMTAG_PACKAGER
      doc: Identifies the tool used to build the package.
    1016:
      id: group
      -orig-id: RPMTAG_GROUP
      doc: Specifies the administrative group to which this package belongs.
    1017:
      id: changelog_internal
      -orig-id: RPMTAG_CHANGELOG
    1018:
      id: source # from lib/rpmtag.h
      -orig-id: RPMTAG_SOURCE
    1019:
      id: patch # from lib/rpmtag.h
      -orig-id: RPMTAG_PATCH
    1020:
      id: url
      -orig-id: RPMTAG_URL
      doc: Generic package information URL.
    1021:
      id: os
      -orig-id: RPMTAG_OS
      doc: Specifies the OS of the package.
    1022:
      id: arch
      -orig-id: RPMTAG_ARCH
      doc: Specifies the architecture of the package.
    1023:
      id: pre_install_scriptlet
      -orig-id: RPMTAG_PREIN
      doc: |
        Specifies the preinstall scriptlet. If present, then
        \`::pre_install_interpreter\` shall also be present.
    1024:
      id: post_install_scriptlet
      -orig-id: RPMTAG_POSTIN
      doc: |
        Specifies the postinstall scriptlet. If present, then
        \`::post_install_interpreter\` shall also be present.
    1025:
      id: pre_uninstall_scriptlet
      -orig-id: RPMTAG_PREUN
      doc: |
        Specifies the preuninstall scriptlet. If present, then
        \`::pre_uninstall_interpreter\` shall also be present.
    1026:
      id: post_uninstall_scriptlet
      -orig-id: RPMTAG_POSTUN
      doc: |
        Specifies the postuninstall scriptlet. If present, then
        \`::post_uninstall_interpreter\` shall also be present.
    1027:
      id: old_file_names_obsolete
      -orig-id: RPMTAG_OLDFILENAMES
      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/tags.md#deprecated--obsolete
    1028:
      id: file_sizes
      -orig-id: RPMTAG_FILESIZES
      doc: Specifies the size of each file in the archive.
    1029:
      id: file_states # from lib/rpmtag.h
      -orig-id: RPMTAG_FILESTATES
    1030:
      id: file_modes
      -orig-id: RPMTAG_FILEMODES
      doc: The mode of each file in the archive.
    1031:
      id: file_uids_internal
      -orig-id: RPMTAG_FILEUIDS
    1032:
      id: file_gids_internal
      -orig-id: RPMTAG_FILEGIDS
    1033:
      id: device_number
      -orig-id: RPMTAG_FILERDEVS
      doc: The device number from which the file was copied.
    1034:
      id: mtimes
      -orig-id: RPMTAG_FILEMTIMES
      doc: |
        The modification time in seconds since the epoch
        of each file in the archive.
    1035:
      id: file_digests
      -orig-id: RPMTAG_FILEDIGESTS
      doc: |
        The ASCII representation of the MD5 sum of the corresponding
        file contents. This value is empty if the corresponding archive
        entry is not a regular file.
    1036:
      id: link_tos
      -orig-id: RPMTAG_FILELINKTOS
      doc: The target for a symlink, otherwise NULL.
    1037:
      id: file_flags
      -orig-id: RPMTAG_FILEFLAGS
      doc: |
        Specifies the bit(s) to classify and control how files
        are to be installed.
    1038:
      id: root_internal
      -orig-id: RPMTAG_ROOT
    1039:
      id: file_owner
      -orig-id: RPMTAG_FILEUSERNAME
      doc: Specifies the owner of the corresponding file.
    1040:
      id: file_group
      -orig-id: RPMTAG_FILEGROUPNAME
      doc: Specifies the group of the corresponding file.
    1041:
      id: exclude_internal
      -orig-id: RPMTAG_EXCLUDE
    1042:
      id: exclusive_internal
      -orig-id: RPMTAG_EXCLUSIVE
    1043:
      id: icon_obsolete
      -orig-id: RPMTAG_ICON
      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/tags.md#deprecated--obsolete
    1044:
      id: source_rpm
      -orig-id: RPMTAG_SOURCERPM
      doc: Specifies the name of the source RPM.
    1045:
      id: file_verify_flags
      -orig-id: RPMTAG_FILEVERIFYFLAGS
      doc: |
        Specifies the bit(s) to control how files are to be verified
        after install, specifying which checks should be performed.
    1046:
      id: archive_size
      -orig-id: RPMTAG_ARCHIVESIZE
      doc: |
        Specifies the uncompressed size of the Payload archive,
        including the cpio headers.
    1047:
      id: provide_name
      -orig-id: RPMTAG_PROVIDENAME
      doc: The name of the dependency provided by this package.
    1048:
      id: require_flags
      -orig-id: RPMTAG_REQUIREFLAGS
      doc: Bits(s) to specify the dependency range and context.
    1049:
      id: require_name
      -orig-id: RPMTAG_REQUIRENAME
      doc: Indicates the dependencies for this package.
    1050:
      id: require_version
      -orig-id: RPMTAG_REQUIREVERSION
      doc: |
        Indicates the versions associated with the values found
        in the require_name index.
    1051:
      id: no_source # from lib/rpmtag.h
      -orig-id: RPMTAG_NOSOURCE
    1052:
      id: no_patch # from lib/rpmtag.h
      -orig-id: RPMTAG_NOPATCH
    1053:
      id: conflict_flags
      -orig-id: RPMTAG_CONFLICTFLAGS
      doc: Bits(s) to specify the conflict range and context.
    1054:
      id: conflict_name
      -orig-id: RPMTAG_CONFLICTNAME
      doc: Indicates the conflicting dependencies for this package.
    1055:
      id: conflict_version
      -orig-id: RPMTAG_CONFLICTVERSION
      doc: |
        Indicates the versions associated with the
        values found in the conflict_name index.
    1056:
      id: default_prefix_internal
      -orig-id: RPMTAG_DEFAULTPREFIX
    1057:
      id: build_root_internal
      -orig-id: RPMTAG_BUILDROOT
    1058:
      id: install_prefix_internal
      -orig-id: RPMTAG_INSTALLPREFIX
    1059:
      id: exclude_arch # from lib/rpmtag.h
      -orig-id: RPMTAG_EXCLUDEARCH
    1060:
      id: exclude_os # from lib/rpmtag.h
      -orig-id: RPMTAG_EXCLUDEOS
    1061:
      id: exclusive_arch # from lib/rpmtag.h
      -orig-id: RPMTAG_EXCLUSIVEARCH
    1063:
      id: autoreqprov_internal
      -orig-id: RPMTAG_AUTOREQPROV
    1062:
      id: exclusive_os # from lib/rpmtag.h
      -orig-id: RPMTAG_EXCLUSIVEOS
    1064:
      id: rpm_version
      -orig-id: RPMTAG_RPMVERSION
      doc: Indicates the version of RPM tool used to build this package.
    1065:
      id: trigger_scripts # from lib/rpmtag.h
      -orig-id: RPMTAG_TRIGGERSCRIPTS
    1066:
      id: trigger_name # from lib/rpmtag.h
      -orig-id: RPMTAG_TRIGGERNAME
    1067:
      id: trigger_version # from lib/rpmtag.h
      -orig-id: RPMTAG_TRIGGERVERSION
    1068:
      id: trigger_flags # from lib/rpmtag.h
      -orig-id: RPMTAG_TRIGGERFLAGS
    1069:
      id: trigger_index # from lib/rpmtag.h
      -orig-id: RPMTAG_TRIGGERINDEX
    # 1070..1078 - unassigned (missing in lib/rpmtag.h)
    1079:
      id: verify_script # from lib/rpmtag.h
      -orig-id: RPMTAG_VERIFYSCRIPT
    1080:
      id: changelog_time
      -orig-id: RPMTAG_CHANGELOGTIME
      doc: |
        Specifies the Unix time in seconds since the epoch
        associated with each entry in the Changelog file.
    1081:
      id: changelog_name
      -orig-id: RPMTAG_CHANGELOGNAME
      doc: Specifies the name of who made a change to this package.
    1082:
      id: changelog_text
      -orig-id: RPMTAG_CHANGELOGTEXT
      doc: Specifies the changes asssociated with a changelog entry.
    1083:
      id: broken_md5_internal
      -orig-id: RPMTAG_BROKENMD5
    1084:
      id: prereq_internal
      -orig-id: RPMTAG_PREREQ
    1085:
      id: pre_install_interpreter
      -orig-id: RPMTAG_PREINPROG
      doc: |
        Specifies the name of the interpreter to which the preinstall
        scriptlet will be passed. The interpreter pointed to by this
        index record shall be \`/bin/sh\`.
    1086:
      id: post_install_interpreter
      -orig-id: RPMTAG_POSTINPROG
      doc: |
        Specifies the name of the interpreter to which the postinstall
        scriptlet will be passed. The intepreter pointed to by this
        index record shall be \`/bin/sh\`.
    1087:
      id: pre_uninstall_interpreter
      -orig-id: RPMTAG_PREUNPROG
      doc: |
        Specifies the name of the interpreter to which the preuninstall
        scriptlet will be passed. The interpreter pointed to by this index
        record shall be \`/bin/sh\`.
    1088:
      id: post_uninstall_interpreter
      -orig-id: RPMTAG_POSTUNPROG
      doc: |
        Specifies the name of the interpreter to which the postuninstall
        scriptlet will be passed. The interpreter pointed to by this index
        record shall be \`/bin/sh\`.
    1089:
      id: build_archs # from lib/rpmtag.h
      -orig-id: RPMTAG_BUILDARCHS
    1090:
      id: obsolete_name # from lib/rpmtag.h
      -orig-id: RPMTAG_OBSOLETENAME
      doc: Indicates the obsoleted dependencies for this package.
    1091:
      id: verify_script_prog # from lib/rpmtag.h
      -orig-id: RPMTAG_VERIFYSCRIPTPROG
    1092:
      id: trigger_script_prog # from lib/rpmtag.h
      -orig-id: RPMTAG_TRIGGERSCRIPTPROG
    1093:
      id: doc_dir_internal
      -orig-id: RPMTAG_DOCDIR
    1094:
      id: cookie
      -orig-id: RPMTAG_COOKIE
      doc: Contains an opaque string whose contents are undefined.
    1095:
      id: file_devices
      -orig-id: RPMTAG_FILEDEVICES
      doc: Specifies the 16 bit device number from which the file was copied.
    1096:
      id: file_inodes
      -orig-id: RPMTAG_FILEINODES
      doc: |
        Specifies the inode value from the original file system
        on the the system on which it was built.
    1097:
      id: file_langs
      -orig-id: RPMTAG_FILELANGS
      doc: |
        Specifies a per-file locale marker used to install only locale
        specific subsets of files when the package is installed.
    1098:
      id: prefixes # from lib/rpmtag.h
      -orig-id: RPMTAG_PREFIXES
    1099:
      id: install_prefixes # from lib/rpmtag.h
      -orig-id: RPMTAG_INSTPREFIXES
    1100:
      id: trigger_install_internal
      -orig-id: RPMTAG_TRIGGERIN
    1101:
      id: trigger_uninstall_internal
      -orig-id: RPMTAG_TRIGGERUN
    1102:
      id: trigger_post_uninstall_internal
      -orig-id: RPMTAG_TRIGGERPOSTUN
    1103:
      id: autoreq_internal
      -orig-id: RPMTAG_AUTOREQ
    1104:
      id: autoprov_internal
      -orig-id: RPMTAG_AUTOPROV
    1105:
      id: capability_internal
      -orig-id: RPMTAG_CAPABILITY
    1106:
      id: source_package # from lib/rpmtag.h
      -orig-id: RPMTAG_SOURCEPACKAGE
    1107:
      id: old_orig_filenames_internal
      -orig-id: RPMTAG_OLDORIGFILENAMES
    1108:
      id: build_prereq_internal
      -orig-id: RPMTAG_BUILDPREREQ
    1109:
      id: build_requires_internal
      -orig-id: RPMTAG_BUILDREQUIRES
    1110:
      id: build_conflicts_internal
      -orig-id: RPMTAG_BUILDCONFLICTS
    1111:
      id: build_macros_internal
      -orig-id: RPMTAG_BUILDMACROS
    1112:
      id: provide_flags
      -orig-id: RPMTAG_PROVIDEFLAGS
      doc: Bits(s) to specify the conflict range and context.
    1113:
      id: provide_version
      -orig-id: RPMTAG_PROVIDEVERSION
      doc: |
        Indicates the versions associated with the values found
        in the provide_name index.
    1114:
      id: obsolete_flags
      -orig-id: RPMTAG_OBSOLETEFLAGS
    1115:
      id: obsolete_version
      -orig-id: RPMTAG_OBSOLETEVERSION
    1116:
      id: dir_indexes
      -orig-id: RPMTAG_DIRINDEXES
    1117:
      id: base_names
      -orig-id: RPMTAG_BASENAMES
    1118:
      id: dir_names
      -orig-id: RPMTAG_DIRNAMES
    1119:
      id: orig_dir_indexes # from lib/rpmtag.h
      -orig-id: RPMTAG_ORIGDIRINDEXES
    1120:
      id: orig_base_names # from lib/rpmtag.h
      -orig-id: RPMTAG_ORIGBASENAMES
    1121:
      id: orig_dir_names # from lib/rpmtag.h
      -orig-id: RPMTAG_ORIGDIRNAMES
    1122:
      id: opt_flags
      -orig-id: RPMTAG_OPTFLAGS
    1123:
      id: dist_url
      -orig-id: RPMTAG_DISTURL
    1124:
      id: payload_format
      -orig-id: RPMTAG_PAYLOADFORMAT
    1125:
      id: payload_compressor
      -orig-id: RPMTAG_PAYLOADCOMPRESSOR
    1126:
      id: payload_flags
      -orig-id: RPMTAG_PAYLOADFLAGS
    1127:
      id: install_color # from lib/rpmtag.h
      -orig-id: RPMTAG_INSTALLCOLOR
    1128:
      id: install_tid # from lib/rpmtag.h
      -orig-id: RPMTAG_INSTALLTID
    1129:
      id: remove_tid_obsolete
      -orig-id: RPMTAG_REMOVETID
      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/tags.md#deprecated--obsolete
    1130:
      id: sha1_rhn_internal
      -orig-id: RPMTAG_SHA1RHN
    1131:
      id: rhn_platform_internal
      -orig-id: RPMTAG_RHNPLATFORM
    1132:
      id: platform
      -orig-id: RPMTAG_PLATFORM
    # below are all from lib/rpmtag.h
    1133:
      id: patches_name_obsolete
      -orig-id: RPMTAG_PATCHESNAME
    1134:
      id: patches_flags_obsolete
      -orig-id: RPMTAG_PATCHESFLAGS
    1135:
      id: patches_version_obsolete
      -orig-id: RPMTAG_PATCHESVERSION
    1136:
      id: cache_ctime_internal
      -orig-id: RPMTAG_CACHECTIME
    1137:
      id: cache_pkg_path_internal
      -orig-id: RPMTAG_CACHEPKGPATH
    1138:
      id: cache_pkg_size_internal
      -orig-id: RPMTAG_CACHEPKGSIZE
    1139:
      id: cache_pkg_mtime_internal
      -orig-id: RPMTAG_CACHEPKGMTIME
    1140:
      id: file_colors
      -orig-id: RPMTAG_FILECOLORS
    1141:
      id: file_class
      -orig-id: RPMTAG_FILECLASS
    1142:
      id: class_dict
      -orig-id: RPMTAG_CLASSDICT
    1143:
      id: file_depends_idx
      -orig-id: RPMTAG_FILEDEPENDSX
      doc: Index into \`::depends_dict\` denoting start of this file's dependencies.
    1144:
      id: file_depends_num
      -orig-id: RPMTAG_FILEDEPENDSN
      doc: Number of file dependencies in \`::depends_dict\`, starting from \`::file_depends_idx\`
    1145:
      id: depends_dict
      -orig-id: RPMTAG_DEPENDSDICT
    1146:
      id: source_pkgid
      -orig-id: RPMTAG_SOURCEPKGID
    1147:
      id: file_contexts_obsolete
      -orig-id: RPMTAG_FILECONTEXTS
      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/tags.md#deprecated--obsolete
    1148:
      id: fs_contexts_obsolete
      -orig-id: RPMTAG_FSCONTEXTS
      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/tags.md#deprecated--obsolete
    1149:
      id: re_contexts_obsolete
      -orig-id: RPMTAG_RECONTEXTS
      doc-ref: https://github.com/rpm-software-management/rpm/blob/afad3167/docs/manual/tags.md#deprecated--obsolete
    1150:
      id: policies
      -orig-id: RPMTAG_POLICIES
    1151:
      id: pre_trans
      -orig-id: RPMTAG_PRETRANS
    1152:
      id: post_trans
      -orig-id: RPMTAG_POSTTRANS
    1153:
      id: pre_trans_prog
      -orig-id: RPMTAG_PRETRANSPROG
    1154:
      id: post_trans_prog
      -orig-id: RPMTAG_POSTTRANSPROG
    1155:
      id: dist_tag
      -orig-id: RPMTAG_DISTTAG
    1156:
      id: old_suggests_name_obsolete
      -orig-id: RPMTAG_OLDSUGGESTSNAME
    1157:
      id: old_suggests_version_obsolete
      -orig-id: RPMTAG_OLDSUGGESTSVERSION
    1158:
      id: old_suggests_flags_obsolete
      -orig-id: RPMTAG_OLDSUGGESTSFLAGS
    1159:
      id: old_enhances_name_obsolete
      -orig-id: RPMTAG_OLDENHANCESNAME
    1160:
      id: old_enhances_version_obsolete
      -orig-id: RPMTAG_OLDENHANCESVERSION
    1161:
      id: old_enhances_flags_obsolete
      -orig-id: RPMTAG_OLDENHANCESFLAGS
    1162:
      id: priority_unimplemented
      -orig-id: RPMTAG_PRIORITY
    1163:
      id: cvsid_unimplemented
      -orig-id:
        - RPMTAG_CVSID
        - RPMTAG_SVNID
    1164:
      id: blink_pkgid_unimplemented
      -orig-id: RPMTAG_BLINKPKGID
    1165:
      id: blink_hdrid_unimplemented
      -orig-id: RPMTAG_BLINKHDRID
    1166:
      id: blink_nevra_unimplemented
      -orig-id: RPMTAG_BLINKNEVRA
    1167:
      id: flink_pkgid_unimplemented
      -orig-id: RPMTAG_FLINKPKGID
    1168:
      id: flink_hdrid_unimplemented
      -orig-id: RPMTAG_FLINKHDRID
    1169:
      id: flink_nevra_unimplemented
      -orig-id: RPMTAG_FLINKNEVRA
    1170:
      id: package_origin_unimplemented
      -orig-id: RPMTAG_PACKAGEORIGIN
    1171:
      id: trigger_pre_install_internal
      -orig-id: RPMTAG_TRIGGERPREIN
    1172:
      id: build_suggests_unimplemented
      -orig-id: RPMTAG_BUILDSUGGESTS
    1173:
      id: build_enhances_unimplemented
      -orig-id: RPMTAG_BUILDENHANCES
    1174:
      id: script_states_unimplemented
      -orig-id: RPMTAG_SCRIPTSTATES
    1175:
      id: script_metrics_unimplemented
      -orig-id: RPMTAG_SCRIPTMETRICS
    1176:
      id: build_cpu_clock_unimplemented
      -orig-id: RPMTAG_BUILDCPUCLOCK
    1177:
      id: file_digest_algos_unimplemented
      -orig-id: RPMTAG_FILEDIGESTALGOS
    1178:
      id: variants_unimplemented
      -orig-id: RPMTAG_VARIANTS
    1179:
      id: xmajor_unimplemented
      -orig-id: RPMTAG_XMAJOR
    1180:
      id: xminor_unimplemented
      -orig-id: RPMTAG_XMINOR
    1181:
      id: repo_tag_unimplemented
      -orig-id: RPMTAG_REPOTAG
    1182:
      id: keywords_unimplemented
      -orig-id: RPMTAG_KEYWORDS
    1183:
      id: build_platforms_unimplemented
      -orig-id: RPMTAG_BUILDPLATFORMS
    1184:
      id: package_color_unimplemented
      -orig-id: RPMTAG_PACKAGECOLOR
    1185:
      id: package_pref_color_unimplemented
      -orig-id: RPMTAG_PACKAGEPREFCOLOR
    1186:
      id: xattrs_dict_unimplemented
      -orig-id: RPMTAG_XATTRSDICT
    1187:
      id: filex_attrsx_unimplemented
      -orig-id: RPMTAG_FILEXATTRSX
    1188:
      id: dep_attrs_dict_unimplemented
      -orig-id: RPMTAG_DEPATTRSDICT
    1189:
      id: conflict_attrsx_unimplemented
      -orig-id: RPMTAG_CONFLICTATTRSX
    1190:
      id: obsolete_attrsx_unimplemented
      -orig-id: RPMTAG_OBSOLETEATTRSX
    1191:
      id: provide_attrsx_unimplemented
      -orig-id: RPMTAG_PROVIDEATTRSX
    1192:
      id: require_attrsx_unimplemented
      -orig-id: RPMTAG_REQUIREATTRSX
    1193:
      id: build_provides_unimplemented
      -orig-id: RPMTAG_BUILDPROVIDES
    1194:
      id: build_obsoletes_unimplemented
      -orig-id: RPMTAG_BUILDOBSOLETES
    1195:
      id: db_instance
      -orig-id: RPMTAG_DBINSTANCE
    1196:
      id: nvra
      -orig-id: RPMTAG_NVRA
    # 1997..4999 - reserved
    5000:
      id: file_names
      -orig-id: RPMTAG_FILENAMES
    5001:
      id: file_provide
      -orig-id: RPMTAG_FILEPROVIDE
    5002:
      id: file_require
      -orig-id: RPMTAG_FILEREQUIRE
    5003:
      id: fs_names_unimplemented
      -orig-id: RPMTAG_FSNAMES
    5004:
      id: fs_sizes_unimplemented
      -orig-id: RPMTAG_FSSIZES
    5005:
      id: trigger_conds
      -orig-id: RPMTAG_TRIGGERCONDS
    5006:
      id: trigger_type
      -orig-id: RPMTAG_TRIGGERTYPE
    5007:
      id: orig_file_names
      -orig-id: RPMTAG_ORIGFILENAMES
    5008:
      id: long_file_sizes
      -orig-id: RPMTAG_LONGFILESIZES
    5009:
      id: long_size
      -orig-id: RPMTAG_LONGSIZE
    5010:
      id: file_caps
      -orig-id: RPMTAG_FILECAPS
    5011:
      id: file_digest_algo
      -orig-id: RPMTAG_FILEDIGESTALGO
      doc: File digest algorithm
    5012:
      id: bug_url
      -orig-id: RPMTAG_BUGURL
    5013:
      id: evr
      -orig-id: RPMTAG_EVR
    5014:
      id: nvr
      -orig-id: RPMTAG_NVR
    5015:
      id: nevr
      -orig-id: RPMTAG_NEVR
    5016:
      id: nevra
      -orig-id: RPMTAG_NEVRA
    5017:
      id: header_color
      -orig-id: RPMTAG_HEADERCOLOR
    5018:
      id: verbose
      -orig-id: RPMTAG_VERBOSE
    5019:
      id: epoch_num
      -orig-id: RPMTAG_EPOCHNUM
    5020:
      id: pre_install_flags
      -orig-id: RPMTAG_PREINFLAGS
    5021:
      id: post_install_flags
      -orig-id: RPMTAG_POSTINFLAGS
    5022:
      id: pre_uninstall_flags
      -orig-id: RPMTAG_PREUNFLAGS
    5023:
      id: post_uninstall_flags
      -orig-id: RPMTAG_POSTUNFLAGS
    5024:
      id: pre_trans_flags
      -orig-id: RPMTAG_PRETRANSFLAGS
    5025:
      id: post_trans_flags
      -orig-id: RPMTAG_POSTTRANSFLAGS
    5026:
      id: verify_script_flags
      -orig-id: RPMTAG_VERIFYSCRIPTFLAGS
    5027:
      id: trigger_script_flags
      -orig-id: RPMTAG_TRIGGERSCRIPTFLAGS
    # 5028 - unassigned (removed from lib/rpmtag.h in commit <https://github.com/rpm-software-management/rpm/commit/dc2ee980>)
    5029:
      id: collections_unimplemented
      -orig-id: RPMTAG_COLLECTIONS
    5030:
      id: policy_names
      -orig-id: RPMTAG_POLICYNAMES
    5031:
      id: policy_types
      -orig-id: RPMTAG_POLICYTYPES
    5032:
      id: policy_types_indexes
      -orig-id: RPMTAG_POLICYTYPESINDEXES
    5033:
      id: policy_flags
      -orig-id: RPMTAG_POLICYFLAGS
    5034:
      id: vcs
      -orig-id: RPMTAG_VCS
    5035:
      id: order_name
      -orig-id: RPMTAG_ORDERNAME
    5036:
      id: order_version
      -orig-id: RPMTAG_ORDERVERSION
    5037:
      id: order_flags
      -orig-id: RPMTAG_ORDERFLAGS
    5038:
      id: mssf_manifest_unimplemented
      -orig-id: RPMTAG_MSSFMANIFEST
    5039:
      id: mssf_domain_unimplemented
      -orig-id: RPMTAG_MSSFDOMAIN
    5040:
      id: inst_file_names
      -orig-id: RPMTAG_INSTFILENAMES
    5041:
      id: require_nevrs
      -orig-id: RPMTAG_REQUIRENEVRS
    5042:
      id: provide_nevrs
      -orig-id: RPMTAG_PROVIDENEVRS
    5043:
      id: obsolete_nevrs
      -orig-id: RPMTAG_OBSOLETENEVRS
    5044:
      id: conflict_nevrs
      -orig-id: RPMTAG_CONFLICTNEVRS
    5045:
      id: file_nlinks
      -orig-id: RPMTAG_FILENLINKS
    5046:
      id: recommend_name
      -orig-id: RPMTAG_RECOMMENDNAME
    5047:
      id: recommend_version
      -orig-id: RPMTAG_RECOMMENDVERSION
    5048:
      id: recommend_flags
      -orig-id: RPMTAG_RECOMMENDFLAGS
    5049:
      id: suggest_name
      -orig-id: RPMTAG_SUGGESTNAME
    5050:
      id: suggest_version
      -orig-id: RPMTAG_SUGGESTVERSION
    5051:
      id: suggest_flags
      -orig-id: RPMTAG_SUGGESTFLAGS
    5052:
      id: supplement_name
      -orig-id: RPMTAG_SUPPLEMENTNAME
    5053:
      id: supplement_version
      -orig-id: RPMTAG_SUPPLEMENTVERSION
    5054:
      id: supplement_flags
      -orig-id: RPMTAG_SUPPLEMENTFLAGS
    5055:
      id: enhance_name
      -orig-id: RPMTAG_ENHANCENAME
    5056:
      id: enhance_version
      -orig-id: RPMTAG_ENHANCEVERSION
    5057:
      id: enhance_flags
      -orig-id: RPMTAG_ENHANCEFLAGS
    5058:
      id: recommend_nevrs
      -orig-id: RPMTAG_RECOMMENDNEVRS
    5059:
      id: suggest_nevrs
      -orig-id: RPMTAG_SUGGESTNEVRS
    5060:
      id: supplement_nevrs
      -orig-id: RPMTAG_SUPPLEMENTNEVRS
    5061:
      id: enhance_nevrs
      -orig-id: RPMTAG_ENHANCENEVRS
    5062:
      id: encoding
      -orig-id: RPMTAG_ENCODING
    5063:
      id: file_trigger_install_internal
      -orig-id: RPMTAG_FILETRIGGERIN
    5064:
      id: file_trigger_uninstall_internal
      -orig-id: RPMTAG_FILETRIGGERUN
    5065:
      id: file_trigger_post_uninstall_internal
      -orig-id: RPMTAG_FILETRIGGERPOSTUN
    5066:
      id: file_trigger_scripts
      -orig-id: RPMTAG_FILETRIGGERSCRIPTS
    5067:
      id: file_trigger_script_prog
      -orig-id: RPMTAG_FILETRIGGERSCRIPTPROG
    5068:
      id: file_trigger_script_flags
      -orig-id: RPMTAG_FILETRIGGERSCRIPTFLAGS
    5069:
      id: file_trigger_name
      -orig-id: RPMTAG_FILETRIGGERNAME
    5070:
      id: file_trigger_index
      -orig-id: RPMTAG_FILETRIGGERINDEX
    5071:
      id: file_trigger_version
      -orig-id: RPMTAG_FILETRIGGERVERSION
    5072:
      id: file_trigger_flags
      -orig-id: RPMTAG_FILETRIGGERFLAGS
    5073:
      id: trans_file_trigger_install_internal
      -orig-id: RPMTAG_TRANSFILETRIGGERIN
    5074:
      id: trans_file_trigger_uninstall_internal
      -orig-id: RPMTAG_TRANSFILETRIGGERUN
    5075:
      id: trans_file_trigger_post_uninstall_internal
      -orig-id: RPMTAG_TRANSFILETRIGGERPOSTUN
    5076:
      id: trans_file_trigger_scripts
      -orig-id: RPMTAG_TRANSFILETRIGGERSCRIPTS
    5077:
      id: trans_file_trigger_script_prog
      -orig-id: RPMTAG_TRANSFILETRIGGERSCRIPTPROG
    5078:
      id: trans_file_trigger_script_flags
      -orig-id: RPMTAG_TRANSFILETRIGGERSCRIPTFLAGS
    5079:
      id: trans_file_trigger_name
      -orig-id: RPMTAG_TRANSFILETRIGGERNAME
    5080:
      id: trans_file_trigger_index
      -orig-id: RPMTAG_TRANSFILETRIGGERINDEX
    5081:
      id: trans_file_trigger_version
      -orig-id: RPMTAG_TRANSFILETRIGGERVERSION
    5082:
      id: trans_file_trigger_flags
      -orig-id: RPMTAG_TRANSFILETRIGGERFLAGS
    5083:
      id: remove_path_postfixes_internal
      -orig-id: RPMTAG_REMOVEPATHPOSTFIXES
    5084:
      id: file_trigger_priorities
      -orig-id: RPMTAG_FILETRIGGERPRIORITIES
    5085:
      id: trans_file_trigger_priorities
      -orig-id: RPMTAG_TRANSFILETRIGGERPRIORITIES
    5086:
      id: file_trigger_conds
      -orig-id: RPMTAG_FILETRIGGERCONDS
    5087:
      id: file_trigger_type
      -orig-id: RPMTAG_FILETRIGGERTYPE
    5088:
      id: trans_file_trigger_conds
      -orig-id: RPMTAG_TRANSFILETRIGGERCONDS
    5089:
      id: trans_file_trigger_type
      -orig-id: RPMTAG_TRANSFILETRIGGERTYPE
    5090:
      id: file_signatures
      -orig-id: RPMTAG_FILESIGNATURES
    5091:
      id: file_signature_length
      -orig-id: RPMTAG_FILESIGNATURELENGTH
    5092:
      id: payload_digest
      -orig-id: RPMTAG_PAYLOADDIGEST
    5093:
      id: payload_digest_algo
      -orig-id: RPMTAG_PAYLOADDIGESTALGO
    5094:
      id: auto_installed_unimplemented
      -orig-id: RPMTAG_AUTOINSTALLED
    5095:
      id: identity_unimplemented
      -orig-id: RPMTAG_IDENTITY
    5096:
      id: modularity_label
      -orig-id: RPMTAG_MODULARITYLABEL
    5097:
      id: payload_digest_alt
      -orig-id: RPMTAG_PAYLOADDIGESTALT
    5098:
      id: arch_suffix
      -orig-id: RPMTAG_ARCHSUFFIX
    5099:
      id: spec
      -orig-id: RPMTAG_SPEC
    5100:
      id: translation_url
      -orig-id: RPMTAG_TRANSLATIONURL
    5101:
      id: upstream_releases
      -orig-id: RPMTAG_UPSTREAMRELEASES
    5102:
      id: source_license_internal
      -orig-id: RPMTAG_SOURCELICENSE
    5103:
      id: pre_untrans
      -orig-id: RPMTAG_PREUNTRANS
    5104:
      id: post_untrans
      -orig-id: RPMTAG_POSTUNTRANS
    5105:
      id: pre_untrans_prog
      -orig-id: RPMTAG_PREUNTRANSPROG
    5106:
      id: post_untrans_prog
      -orig-id: RPMTAG_POSTUNTRANSPROG
    5107:
      id: pre_untrans_flags
      -orig-id: RPMTAG_PREUNTRANSFLAGS
    5108:
      id: post_untrans_flags
      -orig-id: RPMTAG_POSTUNTRANSFLAGS
    5109:
      id: sys_users
      -orig-id: RPMTAG_SYSUSERS
  record_types:
    # from LSB
    0: not_implemented
    1: char
    2: uint8
    3: uint16
    4: uint32
    5: uint64
    6: string # NUL terminated
    7: bin
    8: string_array # NUL terminated strings
    9: i18n_string # NUL terminated strings
`
  },
  {
    id: "ksy_xar",
    name: "XAR (eXtensible ARchive)",
    category: "Archives",
    metadata: {
      isGenerated: true,
      fileExtensions: ["xar","pkg","xip"],
      description: "XAR (eXtensible ARchive)",
      originalCategory: "archive",
      filePath: "archive/xar.ksy",
      endian: "be"
    },
    content: `meta:
  id: xar
  title: XAR (eXtensible ARchive)
  file-extension:
    - xar
    - pkg
    - xip
  xref:
    justsolve: Xar_(Extensible_Archive)
    mime: application/x-xar
    pronom: fmt/600
    wikidata: Q1093556
  license: CC0-1.0
  ks-version: 0.9
  encoding: UTF-8
  endian: be
doc: |
  From [Wikipedia](https://en.wikipedia.org/wiki/Xar_(archiver)):

  "XAR (short for eXtensible ARchive format) is an open source file archiver
  and the archiver's file format. It was created within the OpenDarwin project
  and is used in macOS X 10.5 and up for software installation routines, as
  well as browser extensions in Safari 5.0 and up."
doc-ref: https://github.com/mackyle/xar/wiki/xarformat
seq:
  - id: header_prefix
    type: file_header_prefix
    doc: internal; access \`_root.header\` instead
  - id: header
    size: header_prefix.len_header - header_prefix._sizeof
    type: file_header
  - id: toc
    size: header.len_toc_compressed
    type: toc_type
    process: zlib
    doc: zlib compressed XML further describing the content of the archive
instances:
  checksum_algorithm_other:
    -orig-id: XAR_CKSUM_OTHER
    value: 3
    doc-ref: https://github.com/mackyle/xar/blob/66d451d/xar/include/xar.h.in#L85
types:
  file_header_prefix:
    seq:
      - id: magic
        contents: 'xar!'
      - id: len_header
        type: u2
        doc: internal; access \`_root.header.len_header\` instead
  file_header:
    seq:
      - id: version
        type: u2
        valid: 1
      - id: len_toc_compressed
        -orig-id: toc_length_compressed
        type: u8
      - id: toc_length_uncompressed
        type: u8
      - id: checksum_algorithm_int
        type: u4
        doc: internal; access \`checksum_algorithm_name\` instead
      - id: checksum_alg_name
        size-eos: true
        type: strz
        valid:
          expr: _ != "" and _ != "none"
        if: has_checksum_alg_name
        doc: internal; access \`checksum_algorithm_name\` instead
    instances:
      checksum_algorithm_name:
        value: |
          has_checksum_alg_name ? checksum_alg_name
          : checksum_algorithm_int == checksum_algorithms_apple::none.to_i ? "none"
          : checksum_algorithm_int == checksum_algorithms_apple::sha1.to_i ? "sha1"
          : checksum_algorithm_int == checksum_algorithms_apple::md5.to_i ? "md5"
          : checksum_algorithm_int == checksum_algorithms_apple::sha256.to_i ? "sha256"
          : checksum_algorithm_int == checksum_algorithms_apple::sha512.to_i ? "sha512"
          : ""
        doc: |
          If it is not

          * \`""\` (empty string), indicating an unknown integer value (access
            \`checksum_algorithm_int\` for debugging purposes to find out
            what that value is), or
          * \`"none"\`, indicating that the TOC checksum is not provided (in that
            case, the \`<checksum>\` property or its \`style\` attribute should be
            missing, or the \`style\` attribute must be set to \`"none"\`),

          it must exactly match the \`style\` attribute value of the
          \`<checksum>\` property in the root node \`<toc>\`. See
          <https://github.com/mackyle/xar/blob/66d451d/xar/lib/archive.c#L345-L371>
          for reference.

          The \`xar\` (eXtensible ARchiver) program [uses OpenSSL's function
          \`EVP_get_digestbyname\`](
            https://github.com/mackyle/xar/blob/66d451d/xar/lib/archive.c#L328
          ) to verify this value (if it's not \`""\` or \`"none"\`, of course).
          So it's reasonable to assume that this can only have one of the values
          that OpenSSL recognizes.
      has_checksum_alg_name:
        value: |
          checksum_algorithm_int == _root.checksum_algorithm_other
          and len_header >= 32
          and len_header % 4 == 0
      len_header:
        value: _root.header_prefix.len_header
  toc_type:
    seq:
      - id: xml_string
        type: str
        size-eos: true
enums:
  # https://github.com/apple-opensource/xar/blob/03d10ac/xar/include/xar.h.in#L67-L73
  checksum_algorithms_apple:
    0: none
    1: sha1
    2: md5
    3: sha256
    4: sha512
`
  },
  {
    id: "ksy_zip",
    name: "ZIP archive file",
    category: "Archives",
    metadata: {
      isGenerated: true,
      fileExtensions: ["zip"],
      description: "ZIP archive file",
      originalCategory: "archive",
      filePath: "archive/zip.ksy",
      endian: "le"
    },
    content: `meta:
  id: zip
  title: ZIP archive file
  file-extension: zip
  xref:
    forensicswiki: zip
    iso: 21320-1
    justsolve: ZIP
    loc:
      - fdd000354
      - fdd000355
      - fdd000362
      - fdd000361
    pronom: x-fmt/263
    wikidata: Q136218
  license: CC0-1.0
  ks-version: 0.9
  imports:
    - /common/dos_datetime
  endian: le
  bit-endian: le
doc: |
  ZIP is a popular archive file format, introduced in 1989 by Phil Katz
  and originally implemented in PKZIP utility by PKWARE.

  Thanks to solid support of it in most desktop environments and
  operating systems, and algorithms / specs availability in public
  domain, it quickly became tool of choice for implementing file
  containers.

  For example, Java .jar files, OpenDocument, Office Open XML, EPUB files
  are actually ZIP archives.
doc-ref:
  - https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT
  - https://users.cs.jmu.edu/buchhofp/forensics/formats/pkzip.html
seq:
  - id: sections
    type: pk_section
    repeat: eos
types:
  pk_section:
    seq:
      - id: magic
        contents: 'PK'
      - id: section_type
        type: u2
      - id: body
        type:
          switch-on: section_type
          cases:
            0x0201: central_dir_entry
            0x0403: local_file
            0x0605: end_of_central_dir
            0x0807: data_descriptor
  data_descriptor:
    seq:
      - id: crc32
        type: u4
      - id: len_body_compressed
        type: u4
      - id: len_body_uncompressed
        type: u4
  local_file:
    seq:
      - id: header
        type: local_file_header
      - id: body
        size: header.len_body_compressed
  local_file_header:
    seq:
      - id: version
        type: u2
      - id: flags
        type: gp_flags
        size: 2
      - id: compression_method
        type: u2
        enum: compression
      - id: file_mod_time
        size: 4
        type: dos_datetime
      - id: crc32
        type: u4
      - id: len_body_compressed
        type: u4
      - id: len_body_uncompressed
        type: u4
      - id: len_file_name
        type: u2
      - id: len_extra
        type: u2
      - id: file_name
        type: str
        size: len_file_name
        encoding: UTF-8
      - id: extra
        size: len_extra
        type: extras
    types:
      gp_flags:
        -orig-id: general purpose bit flag
        doc-ref:
          - https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT - 4.4.4
          - https://users.cs.jmu.edu/buchhofp/forensics/formats/pkzip.html Local file headers
        seq:
          - id: file_encrypted
            type: b1
          - id: comp_options_raw
            type: b2
            doc: internal; access derived value instances instead
          - id: has_data_descriptor
            type: b1
          - id: reserved_1
            type: b1
          - id: comp_patched_data
            type: b1
          - id: strong_encrypt
            type: b1
          - id: reserved_2
            type: b4
          - id: lang_encoding
            type: b1
          - id: reserved_3
            type: b1
          - id: mask_header_values
            type: b1
          - id: reserved_4
            type: b2
        instances:
          deflated_mode:
            value: comp_options_raw
            enum: deflate_mode
            if: |
              _parent.compression_method == compression::deflated
              or _parent.compression_method == compression::enhanced_deflated
          imploded_dict_byte_size:
            value: '((comp_options_raw & 0b01) != 0 ? 8 : 4) * 1024'
            if: '_parent.compression_method == compression::imploded'
            doc: 8KiB or 4KiB in bytes
          imploded_num_sf_trees:
            value: '(comp_options_raw & 0b10) != 0 ? 3 : 2'
            if: '_parent.compression_method == compression::imploded'
          lzma_has_eos_marker:
            value: '(comp_options_raw & 0b01) != 0'
            if: '_parent.compression_method == compression::lzma'
        enums:
          deflate_mode:
            0: normal
            1: maximum
            2: fast
            3: super_fast
  central_dir_entry:
    doc-ref: https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT - 4.3.12
    seq:
      - id: version_made_by
        type: u2
      - id: version_needed_to_extract
        type: u2
      - id: flags
        type: u2
      - id: compression_method
        type: u2
        enum: compression
      - id: file_mod_time
        size: 4
        type: dos_datetime
      - id: crc32
        type: u4
      - id: len_body_compressed
        type: u4
      - id: len_body_uncompressed
        type: u4
      - id: len_file_name
        type: u2
      - id: len_extra
        type: u2
      - id: len_comment
        type: u2
      - id: disk_number_start
        type: u2
      - id: int_file_attr
        type: u2
      - id: ext_file_attr
        type: u4
      - id: ofs_local_header
        type: s4
      - id: file_name
        type: str
        size: len_file_name
        encoding: UTF-8
      - id: extra
        size: len_extra
        type: extras
      - id: comment
        type: str
        size: len_comment
        encoding: UTF-8
    instances:
      local_header:
        pos: ofs_local_header
        type: pk_section
  # https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT - 4.3.16
  end_of_central_dir:
    seq:
      - id: disk_of_end_of_central_dir
        type: u2
      - id: disk_of_central_dir
        type: u2
      - id: num_central_dir_entries_on_disk
        type: u2
      - id: num_central_dir_entries_total
        type: u2
      - id: len_central_dir
        type: u4
      - id: ofs_central_dir
        type: u4
      - id: len_comment
        type: u2
      - id: comment
        type: str
        size: len_comment
        encoding: UTF-8
  extras:
    seq:
      - id: entries
        type: extra_field
        repeat: eos
  extra_field:
    seq:
      - id: code
        type: u2
        enum: extra_codes
      - id: len_body
        type: u2
      - id: body
        size: len_body
        type:
          switch-on: code
          cases:
            'extra_codes::ntfs': ntfs
            'extra_codes::extended_timestamp': extended_timestamp
            'extra_codes::infozip_unix_var_size': infozip_unix_var_size
    types:
      ntfs:
        doc-ref: 'https://github.com/LuaDist/zip/blob/b710806/proginfo/extrafld.txt#L191'
        seq:
          - id: reserved
            type: u4
          - id: attributes
            type: attribute
            repeat: eos
        types:
          attribute:
            seq:
              - id: tag
                type: u2
              - id: len_body
                type: u2
              - id: body
                size: len_body
                type:
                  switch-on: tag
                  cases:
                    1: attribute_1
          attribute_1:
            seq:
              - id: last_mod_time
                type: u8
              - id: last_access_time
                type: u8
              - id: creation_time
                type: u8
      extended_timestamp:
        doc-ref: 'https://github.com/LuaDist/zip/blob/b710806/proginfo/extrafld.txt#L817'
        seq:
          - id: flags
            size: 1
            type: info_flags
          - id: mod_time
            type: u4
            if: flags.has_mod_time
            doc: Unix timestamp
          - id: access_time
            type: u4
            if: flags.has_access_time
            doc: Unix timestamp
          - id: create_time
            type: u4
            if: flags.has_create_time
            doc: Unix timestamp
        types:
          info_flags:
            seq:
              - id: has_mod_time
                type: b1
              - id: has_access_time
                type: b1
              - id: has_create_time
                type: b1
              - id: reserved
                type: b5
      infozip_unix_var_size:
        doc-ref: 'https://github.com/LuaDist/zip/blob/b710806/proginfo/extrafld.txt#L1339'
        seq:
          - id: version
            type: u1
            doc: Version of this extra field, currently 1
          - id: len_uid
            type: u1
            doc: Size of UID field
          - id: uid
            size: len_uid
            doc: UID (User ID) for a file
          - id: len_gid
            type: u1
            doc: Size of GID field
          - id: gid
            size: len_gid
            doc: GID (Group ID) for a file
enums:
  compression:
    0: none
    1: shrunk
    2: reduced_1
    3: reduced_2
    4: reduced_3
    5: reduced_4
    6: imploded
    8: deflated
    9: enhanced_deflated
    10: pkware_dcl_imploded
    12: bzip2
    14: lzma
    18: ibm_terse
    19: ibm_lz77_z
    93: zstandard
    94: mp3
    95: xz
    96: jpeg
    97: wavpack
    98: ppmd
    99: aex_encryption_marker
  extra_codes:
    # https://github.com/LuaDist/zip/blob/b710806/proginfo/extrafld.txt
    0x0001: zip64
    0x0007: av_info
#    0x0008: reserved for extended language encoding data (PFS) (see APPENDIX D)
    0x0009: os2
    0x000a: ntfs
    0x000c: openvms
    0x000d: pkware_unix
    0x000e: file_stream_and_fork_descriptors
    0x000f: patch_descriptor
    0x0014: pkcs7
    0x0015: x509_cert_id_and_signature_for_file
    0x0016: x509_cert_id_for_central_dir
    0x0017: strong_encryption_header
    0x0018: record_management_controls
    0x0019: pkcs7_enc_recip_cert_list
    0x0065: ibm_s390_uncomp
    0x0066: ibm_s390_comp
    0x4690: poszip_4690
    0x5455: extended_timestamp
    0x6542: beos
    0x756e: asi_unix
    0x7855: infozip_unix
    0x7875: infozip_unix_var_size
    0xa11e: apache_commons_compress
    0xa220: microsoft_open_packaging_growth_hint
    0xfd4a: sms_qdos
    0x9901: aex_encryption
`
  },
  {
    id: "ksy_zisofs",
    name: "zisofs",
    category: "Archives",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "zisofs",
      originalCategory: "archive",
      filePath: "archive/zisofs.ksy",
      endian: "le"
    },
    content: `meta:
  id: zisofs
  title: zisofs
  xref:
    justsolve: Zisofs
    wikidata: Q105854284
  tags:
    - archive
    - filesystem
  license: CC0-1.0
  endian: le
doc: |
  zisofs is a compression format for files on ISO9660 file system. It has
  limited support across operating systems, mainly Linux kernel. Typically a
  directory tree is first preprocessed by mkzftree (from the zisofs-tools
  package before being turned into an ISO9660 image by mkisofs, genisoimage
  or similar tool. The data is zlib compressed.

  The specification here describes the structure of a file that has been
  preprocessed by mkzftree, not of a full ISO9660 ziso. Data is not
  decompressed, as blocks with length 0 have a special meaning. Decompression
  and deconstruction of this data should be done outside of Kaitai Struct.
doc-ref: https://web.archive.org/web/20200612093441/https://dev.lovelyhq.com/libburnia/web/-/wikis/zisofs
seq:
  - id: header
    size: 16
    type: header
  - id: block_pointers
    type: u4
    repeat: expr
    repeat-expr: header.num_blocks + 1
    doc: |
      The final pointer (\`block_pointers[header.num_blocks]\`) indicates the end
      of the last block. Typically this is also the end of the file data.
instances:
  blocks:
    type: 'block(block_pointers[_index], block_pointers[_index + 1])'
    repeat: expr
    repeat-expr: header.num_blocks
types:
  header:
    seq:
      - id: magic
        contents: [0x37, 0xe4, 0x53, 0x96, 0xc9, 0xdb, 0xd6, 0x07]
      - id: uncompressed_size
        type: u4
        doc: Size of the original uncompressed file
      - id: len_header
        type: u1
        valid: 4
        doc: header_size >> 2 (currently 4)
      - id: block_size_log2
        type: u1
        valid:
          any-of: [15, 16, 17]
      - id: reserved
        contents: [0, 0]
    instances:
      block_size:
        value: 1 << block_size_log2
      num_blocks:
        value: '(uncompressed_size / block_size) + (uncompressed_size % block_size != 0 ? 1 : 0)'
        doc: ceil(uncompressed_size / block_size)
  block:
    -webide-representation: '[{ofs_start}, {ofs_end}): {len_data:dec} bytes'
    params:
      - id: ofs_start
        type: u4
      - id: ofs_end
        type: u4
    instances:
      len_data:
        value: ofs_end - ofs_start
      data:
        io: _root._io
        pos: ofs_start
        size: len_data
`
  },
  {
    id: "ksy_monomakh_sapr_chg",
    name: "Monomakh Sapr Chg",
    category: "CAD",
    metadata: {
      isGenerated: true,
      fileExtensions: ["chg"],
      description: "",
      originalCategory: "cad",
      filePath: "cad/monomakh_sapr_chg.ksy",
      endian: "le"
    },
    content: `meta:
  id: monomakh_sapr_chg
  application: MONOMAKH-SAPR
  file-extension: chg
  license: CC0-1.0
  ks-version: 0.7
  endian: le
doc: |
  CHG is a container format file used by
  [MONOMAKH-SAPR](https://www.liraland.com/mono/), a software
  package for analysis & design of reinforced concrete multi-storey
  buildings with arbitrary configuration in plan.

  CHG is a simple container, which bundles several project files
  together.

  Written and tested by Vladimir Shulzhitskiy, 2017
seq:
  - id: title
    type: str
    size: 10
    encoding: "ascii"
  - id: ent
    type: block
    repeat: eos
types:
  block:
    seq:
      - id: header
        type: str
        size: 13
        encoding: "ascii"
      - id: file_size
        type: u8
      - id: file
        size: file_size
`
  },
  {
    id: "ksy_bcd",
    name: "BCD (Binary Coded Decimals)",
    category: "Common",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "BCD (Binary Coded Decimals)",
      originalCategory: "common",
      filePath: "common/bcd.ksy"
    },
    content: `meta:
  id: bcd
  title: BCD (Binary Coded Decimals)
  xref:
    justsolve: Binary-coded_decimal
    wikidata: Q276582
  license: CC0-1.0
  ks-version: 0.8
doc: |
  BCD (Binary Coded Decimals) is a common way to encode integer
  numbers in a way that makes human-readable output somewhat
  simpler. In this encoding scheme, every decimal digit is encoded as
  either a single byte (8 bits), or a nibble (half of a byte, 4
  bits). This obviously wastes a lot of bits, but it makes translation
  into human-readable string much easier than traditional
  binary-to-decimal conversion process, which includes lots of
  divisions by 10.

  For example, encoding integer 31337 in 8-digit, 8 bits per digit,
  big endian order of digits BCD format yields

  \`\`\`
  00 00 00 03 01 03 03 07
  \`\`\`

  Encoding the same integer as 8-digit, 4 bits per digit, little
  endian order BCD format would yield:

  \`\`\`
  73 31 30 00
  \`\`\`

  Using this type of encoding in Kaitai Struct is pretty
  straightforward: one calls for this type, specifying desired
  encoding parameters, and gets result using either \`as_int\` or
  \`as_str\` attributes.
params:
  - id: num_digits
    type: u1
    doc: Number of digits in this BCD representation. Only values from 1 to 8 inclusive are supported.
  - id: bits_per_digit
    type: u1
    doc: Number of bits per digit. Only values of 4 and 8 are supported.
  - id: is_le
    type: bool
    doc: Endianness used by this BCD representation. True means little-endian, false is for big-endian.
seq:
  - id: digits
    type:
      switch-on: bits_per_digit
      cases:
        4: b4
        8: u1
    repeat: expr
    repeat-expr: num_digits
instances:
  as_int:
    value: 'is_le ? as_int_le : as_int_be'
    doc: Value of this BCD number as integer. Endianness would be selected based on \`is_le\` parameter given.
  as_int_le:
    value: >
      digits[0] +
      (num_digits < 2 ? 0 :
       (digits[1] * 10 +
        (num_digits < 3 ? 0 :
         (digits[2] * 100 +
          (num_digits < 4 ? 0 :
           (digits[3] * 1000 +
            (num_digits < 5 ? 0 :
             (digits[4] * 10000 +
              (num_digits < 6 ? 0 :
               (digits[5] * 100000 +
                (num_digits < 7 ? 0 :
                 (digits[6] * 1000000 +
                  (num_digits < 8 ? 0 :
                   (digits[7] * 10000000)
                  )
                 )
                )
               )
              )
             )
            )
           )
          )
         )
        )
       )
      )
    doc: Value of this BCD number as integer (treating digit order as little-endian).
  last_idx:
    value: num_digits - 1
    doc: Index of last digit (0-based).
  as_int_be:
    value: >
      digits[last_idx] +
      (num_digits < 2 ? 0 :
       (digits[last_idx - 1] * 10 +
        (num_digits < 3 ? 0 :
         (digits[last_idx - 2] * 100 +
          (num_digits < 4 ? 0 :
           (digits[last_idx - 3] * 1000 +
            (num_digits < 5 ? 0 :
             (digits[last_idx - 4] * 10000 +
              (num_digits < 6 ? 0 :
               (digits[last_idx - 5] * 100000 +
                (num_digits < 7 ? 0 :
                 (digits[last_idx - 6] * 1000000 +
                  (num_digits < 8 ? 0 :
                   (digits[last_idx - 7] * 10000000)
                  )
                 )
                )
               )
              )
             )
            )
           )
          )
         )
        )
       )
      )
    doc: Value of this BCD number as integer (treating digit order as big-endian).
`
  },
  {
    id: "ksy_bytes_with_io",
    name: "Byte array with an `_io` member",
    category: "Common",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Byte array with an `_io` member",
      originalCategory: "common",
      filePath: "common/bytes_with_io.ksy"
    },
    content: `meta:
  id: bytes_with_io
  title: Byte array with an \`_io\` member
  license: MIT
doc: |
  Helper type to work around Kaitai Struct not providing an \`_io\` member for plain byte arrays.
seq:
  - id: data
    size-eos: true
    doc: The actual data.
`
  },
  {
    id: "ksy_dos_datetime",
    name: "MS-DOS datetime",
    category: "Common",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "MS-DOS datetime",
      originalCategory: "common",
      filePath: "common/dos_datetime.ksy"
    },
    content: `meta:
  id: dos_datetime
  title: MS-DOS datetime
  xref:
    justsolve: MS-DOS_date/time
  tags:
    - dos
  license: CC0-1.0
  ks-version: 0.9
  bit-endian: le
doc: |
  MS-DOS date and time are packed 16-bit values that specify local date/time.
  The time is always stored in the current UTC time offset set on the computer
  which created the file. Note that the daylight saving time (DST) shifts
  also change the UTC time offset.

  For example, if you pack two files A and B into a ZIP archive, file A last modified
  at 2020-03-29 00:59 UTC+00:00 (GMT) and file B at 2020-03-29 02:00 UTC+01:00 (BST),
  the file modification times saved in MS-DOS format in the ZIP file will vary depending
  on whether the computer packing the files is set to GMT or BST at the time of ZIP creation.

    - If set to GMT:
        - file A: 2020-03-29 00:59 (UTC+00:00)
        - file B: 2020-03-29 01:00 (UTC+00:00)
    - If set to BST:
        - file A: 2020-03-29 01:59 (UTC+01:00)
        - file B: 2020-03-29 02:00 (UTC+01:00)

  It follows that you are unable to determine the actual last modified time
  of any file stored in the ZIP archive, if you don't know the locale time
  setting of the computer at the time it created the ZIP.

  This format is used in some data formats from the MS-DOS era, for example:

    - [zip](/zip/)
    - [rar](/rar/)
    - [vfat](/vfat/) (FAT12)
    - [lzh](/lzh/)
    - [cab](http://justsolve.archiveteam.org/wiki/Cabinet)

doc-ref:
  - https://learn.microsoft.com/en-us/windows/win32/sysinfo/ms-dos-date-and-time
  - https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-dosdatetimetofiletime
  - https://github.com/reactos/reactos/blob/c6b64448ce4/dll/win32/kernel32/client/time.c#L82-L87 DosDateTimeToFileTime
  - https://download.microsoft.com/download/0/8/4/084c452b-b772-4fe5-89bb-a0cbf082286a/fatgen103.doc page 25/34
-webide-representation: "{date} {time}"
seq:
  - id: time
    type: time
  - id: date
    type: date
types:
  time:
    -webide-representation: "{padded_hour}:{padded_minute}:{padded_second}"
    seq:
      - id: second_div_2
        type: b5
        valid:
          max: 29 # 0-58 seconds
      - id: minute
        type: b6
        valid:
          max: 59
      - id: hour
        type: b5
        valid:
          max: 23
    instances:
      second:
        value: 2 * second_div_2
      padded_second:
        value: '(second <= 9 ? "0" : "") + second.to_s'
      padded_minute:
        value: '(minute <= 9 ? "0" : "") + minute.to_s'
      padded_hour:
        value: '(hour <= 9 ? "0" : "") + hour.to_s'
  date:
    -webide-representation: "{padded_year}-{padded_month}-{padded_day}"
    seq:
      - id: day
        type: b5
        valid:
          min: 1
      - id: month
        type: b4
        valid:
          min: 1
          max: 12
      - id: year_minus_1980
        type: b7
    instances:
      year:
        value: 1980 + year_minus_1980
        doc: only years from 1980 to 2107 (1980 + 127) can be represented
      padded_day:
        value: '(day <= 9 ? "0" : "") + day.to_s'
      padded_month:
        value: '(month <= 9 ? "0" : "") + month.to_s'
      padded_year:
        value: |
          (year <= 999 ? "0" +
            (year <= 99 ? "0" +
              (year <= 9 ? "0" : "")
            : "")
          : "") + year.to_s
`
  },
  {
    id: "ksy_riff",
    name: "Resource Interchange File Format (RIFF)",
    category: "Common",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Resource Interchange File Format (RIFF)",
      originalCategory: "common",
      filePath: "common/riff.ksy",
      endian: "le"
    },
    content: `meta:
  id: riff
  title: Resource Interchange File Format (RIFF)
  xref:
    justsolve: RIFF
    loc: fdd000025
    wikidata: Q1196805
  license: CC0-1.0
  endian: le
doc: |
  The Resource Interchange File Format (RIFF) is a generic file container format
  for storing data in tagged chunks. It is primarily used to store multimedia
  such as sound and video, though it may also be used to store any arbitrary data.

  The Microsoft implementation is mostly known through container formats
  like AVI, ANI and WAV, which use RIFF as their basis.
doc-ref: https://www.johnloomis.org/cpe102/asgn/asgn1/riff.html
seq:
  - id: chunk
    type: chunk
instances:
  chunk_id:
    value: chunk.id
    enum: fourcc
  is_riff_chunk:
    value: 'chunk_id == fourcc::riff'
  parent_chunk_data:
    io: chunk.data_slot._io
    pos: 0
    type: parent_chunk_data
    if: is_riff_chunk
  subchunks:
    io: parent_chunk_data.subchunks_slot._io
    pos: 0
    type: chunk_type
    repeat: eos
    if: is_riff_chunk
types:
  chunk:
    seq:
      - id: id
        type: u4
      - id: len
        type: u4
      - id: data_slot
        type: slot
        size: len
      - id: pad_byte
        size: len % 2 # if size is odd, there is 1 padding byte
    types:
      slot: {} # Keeps _io for later use of same substream
  parent_chunk_data:
    seq:
      - id: form_type
        type: u4
      - id: subchunks_slot
        type: slot
        size-eos: true
    types:
      slot: {} # Keeps _io for later use of same substream

  chunk_type:
    seq:
      - id: save_chunk_ofs
        size: 0
        if: chunk_ofs < 0
      - id: chunk
        type: chunk
    instances:
      chunk_ofs:
        value: _io.pos
      chunk_id:
        value: chunk.id
        enum: fourcc
      chunk_id_readable:
        pos: chunk_ofs
        size: 4
        type: str
        encoding: ASCII
      chunk_data:
        io: chunk.data_slot._io
        pos: 0
        type:
          switch-on: chunk_id
          cases:
            'fourcc::list': list_chunk_data
  list_chunk_data:
    seq:
      - id: save_parent_chunk_data_ofs
        size: 0
        if: parent_chunk_data_ofs < 0
      - id: parent_chunk_data
        type: parent_chunk_data
    instances:
      parent_chunk_data_ofs:
        value: _io.pos
      form_type:
        value: parent_chunk_data.form_type
        enum: fourcc
      form_type_readable:
        pos: parent_chunk_data_ofs
        size: 4
        type: str
        encoding: ASCII
      subchunks:
        io: parent_chunk_data.subchunks_slot._io
        pos: 0
        type:
          switch-on: form_type
          cases:
            'fourcc::info': info_subchunk
            _: chunk_type
        repeat: eos
  info_subchunk:
    meta:
      encoding: UTF-8
    doc: |
      All registered subchunks in the INFO chunk are NULL-terminated strings,
      but the unregistered might not be. By convention, the registered
      chunk IDs are in uppercase and the unregistered IDs are in lowercase.

      If the chunk ID of an INFO subchunk contains a lowercase
      letter, this chunk is considered as unregistered and thus we can make
      no assumptions about the type of data.
    seq:
      - id: save_chunk_ofs
        size: 0
        if: chunk_ofs < 0
      - id: chunk
        type: chunk
    instances:
      chunk_ofs:
        value: _io.pos
      chunk_id_readable:
        value: id_chars.to_s('ASCII')
      chunk_data:
        io: chunk.data_slot._io
        pos: 0
        type:
          switch-on: is_unregistered_tag
          cases:
            false: strz
      id_chars:
        pos: chunk_ofs
        size: 4
      is_unregistered_tag:
        value: >-
          (id_chars[0] >= 97 and id_chars[0] <= 122) or
          (id_chars[1] >= 97 and id_chars[1] <= 122) or
          (id_chars[2] >= 97 and id_chars[2] <= 122) or
          (id_chars[3] >= 97 and id_chars[3] <= 122)
        doc: |
          Check if chunk_id contains lowercase characters ([a-z], ASCII 97 = a, ASCII 122 = z).
enums:
  fourcc:
  # little-endian
    0x46464952: riff
    0x5453494c: list
    0x4f464e49: info
`
  },
  {
    id: "ksy_utf8_string",
    name: "UTF-8-encoded string",
    category: "Common",
    metadata: {
      isGenerated: true,
      fileExtensions: ["txt"],
      description: "UTF-8-encoded string",
      originalCategory: "common",
      filePath: "common/utf8_string.ksy"
    },
    content: `meta:
  id: utf8_string
  title: UTF-8-encoded string
  file-extension: txt
  xref:
    wikidata: Q193537
  license: CC0-1.0
doc: |
  UTF-8 is a popular character encoding scheme that allows to
  represent strings as sequence of code points defined in Unicode
  standard. Its features are:

  * variable width (i.e. one code point might be represented by 1 to 4
    bytes)
  * backward compatiblity with ASCII
  * basic validity checking (and thus distinguishing from other legacy
    8-bit encodings)
  * maintaining sort order of codepoints if sorted as a byte array

  WARNING: For the vast majority of practical purposes of format
  definitions in Kaitai Struct, you'd likely NOT want to use this and
  rather just use \`type: str\` with \`encoding: utf-8\`. That will use
  native string implementations, which are most likely more efficient
  and will give you native language strings, rather than an array of
  individual codepoints.  This format definition is provided mostly
  for educational / research purposes.
seq:
  - id: codepoints
    type: utf8_codepoint(_io.pos)
    repeat: eos
types:
  utf8_codepoint:
    -webide-representation: 'U+{value_as_int:hex}'
    params:
      - id: ofs
        type: u8
    seq:
      - id: bytes
        size: len_bytes
    instances:
      byte0:
        pos: ofs
        type: u1
      len_bytes:
        value: |
          (byte0 & 0b1000_0000 == 0) ? 1 :
          (byte0 & 0b1110_0000 == 0b1100_0000) ? 2 :
          (byte0 & 0b1111_0000 == 0b1110_0000) ? 3 :
          (byte0 & 0b1111_1000 == 0b1111_0000) ? 4 :
          -1
      raw0:
        value: |
          bytes[0] & (
            len_bytes == 1 ? 0b0111_1111 :
            len_bytes == 2 ? 0b0001_1111 :
            len_bytes == 3 ? 0b0000_1111 :
            len_bytes == 4 ? 0b0000_0111 :
            0
          )
      raw1:
        value: 'bytes[1] & 0b0011_1111'
        if: len_bytes >= 2
      raw2:
        value: 'bytes[2] & 0b0011_1111'
        if: len_bytes >= 3
      raw3:
        value: 'bytes[3] & 0b0011_1111'
        if: len_bytes >= 4
      value_as_int:
        value: >
          len_bytes == 1 ? raw0 :
          len_bytes == 2 ? ((raw0 << 6) | raw1) :
          len_bytes == 3 ? ((raw0 << 12) | (raw1 << 6) | raw2) :
          len_bytes == 4 ? ((raw0 << 18) | (raw1 << 12) | (raw2 << 6) | raw3) :
          -1
`
  },
  {
    id: "ksy_vlq_base128_be",
    name: "Variable length quantity, unsigned integer, base128, big-endian",
    category: "Common",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Variable length quantity, unsigned integer, base128, big-endian",
      originalCategory: "common",
      filePath: "common/vlq_base128_be.ksy"
    },
    content: `meta:
  id: vlq_base128_be
  title: Variable length quantity, unsigned integer, base128, big-endian
  xref:
    justsolve: Variable-length_quantity
    wikidata: Q7915686
  license: CC0-1.0
  ks-version: 0.9
  bit-endian: be
doc: |
  A variable-length unsigned integer using base128 encoding. 1-byte groups
  consist of 1-bit flag of continuation and 7-bit value chunk, and are ordered
  "most significant group first", i.e. in "big-endian" manner.

  This particular encoding is specified and used in:

  * Standard MIDI file format
  * ASN.1 BER encoding
  * RAR 5.0 file format

  More information on this encoding is available at
  <https://en.wikipedia.org/wiki/Variable-length_quantity>

  This particular implementation supports serialized values to up 8 bytes long.
-webide-representation: '{value:dec}'
seq:
  - id: groups
    type: group
    repeat: until
    repeat-until: not _.has_next
types:
  group:
    -webide-representation: '{value}'
    doc: |
      One byte group, clearly divided into 7-bit "value" chunk and 1-bit "continuation" flag.
    seq:
      - id: has_next
        type: b1
        doc: If true, then we have more bytes to read
      - id: value
        type: b7
        doc: The 7-bit (base128) numeric value chunk of this group
instances:
  last:
    value: groups.size - 1
  value:
    value: |
      (groups[last].value
      + (last >= 1 ? (groups[last - 1].value << 7) : 0)
      + (last >= 2 ? (groups[last - 2].value << 14) : 0)
      + (last >= 3 ? (groups[last - 3].value << 21) : 0)
      + (last >= 4 ? (groups[last - 4].value << 28) : 0)
      + (last >= 5 ? (groups[last - 5].value << 35) : 0)
      + (last >= 6 ? (groups[last - 6].value << 42) : 0)
      + (last >= 7 ? (groups[last - 7].value << 49) : 0)).as<u8>
    doc: Resulting value as normal integer
`
  },
  {
    id: "ksy_vlq_base128_le",
    name: "Variable length quantity, unsigned/signed integer, base128, little-endian",
    category: "Common",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Variable length quantity, unsigned/signed integer, base128, little-endian",
      originalCategory: "common",
      filePath: "common/vlq_base128_le.ksy"
    },
    content: `meta:
  id: vlq_base128_le
  title: Variable length quantity, unsigned/signed integer, base128, little-endian
  xref:
    justsolve: Variable-length_quantity
    wikidata: Q6457577
  license: CC0-1.0
  ks-version: '0.10'
  bit-endian: be
doc: |
  A variable-length unsigned/signed integer using base128 encoding. 1-byte groups
  consist of 1-bit flag of continuation and 7-bit value chunk, and are ordered
  "least significant group first", i.e. in "little-endian" manner.

  This particular encoding is specified and used in:

  * DWARF debug file format, where it's dubbed "unsigned LEB128" or "ULEB128".
    <https://dwarfstd.org/doc/dwarf-2.0.0.pdf> - page 139
  * Google Protocol Buffers, where it's called "Base 128 Varints".
    <https://protobuf.dev/programming-guides/encoding/#varints>
  * Apache Lucene, where it's called "VInt"
    <https://lucene.apache.org/core/3_5_0/fileformats.html#VInt>
  * Apache Avro uses this as a basis for integer encoding, adding ZigZag on
    top of it for signed ints
    <https://avro.apache.org/docs/1.12.0/specification/#primitive-types-1>

  More information on this encoding is available at <https://en.wikipedia.org/wiki/LEB128>

  This particular implementation supports integer values up to 64 bits (i.e. the
  maximum unsigned value supported is \`2**64 - 1\`), which implies that serialized
  values can be up to 10 bytes in length.

  If the most significant 10th byte (\`groups[9]\`) is present, its \`has_next\`
  must be \`false\` (otherwise we would have 11 or more bytes, which is not
  supported) and its \`value\` can be only \`0\` or \`1\` (because a 9-byte VLQ can
  represent \`9 * 7 = 63\` bits already, so the 10th byte can only add 1 bit,
  since only integers up to 64 bits are supported). These restrictions are
  enforced by this implementation. They were inspired by the Protoscope tool,
  see <https://github.com/protocolbuffers/protoscope/blob/8e7a6aafa2c9958527b1e0747e66e1bfff045819/writer.go#L644-L648>.
-webide-representation: '{value:dec}'
seq:
  - id: groups
    # NOTE: with KSC 0.11, handling \`_index == 9\` as a special case is needed
    # for PHP, otherwise \`TypeError: Argument #3 (\$multiplier) must be of type
    # int, float given\` would occur.
    type: |
      group(
        _index,
        _index != 0 ? groups[_index - 1].interm_value : 0,
        _index != 0 ? (_index == 9 ? 0x8000_0000_0000_0000 : groups[_index - 1].multiplier * 128) : 1
      )
    repeat: until
    repeat-until: not _.has_next
types:
  group:
    -webide-representation: '{value}'
    doc: |
      One byte group, clearly divided into 7-bit "value" chunk and 1-bit "continuation" flag.
    params:
      - id: idx
        type: s4
      - id: prev_interm_value
        type: u8
      - id: multiplier
        type: u8
    seq:
      - id: has_next
        type: b1
        valid: 'idx == 9 ? false : has_next'
        doc: |
          If \`true\`, then we have more bytes to read.

          Since this implementation only supports serialized values up to 10
          bytes, this must be \`false\` in the 10th group (\`groups[9]\`).
      - id: value
        type: b7
        valid:
          # # As of KSC 0.11, this causes \`if (!(_value <= (Idx == 9 ? 1 :
          # # 127))) { throw new ValidationGreaterThanError(...); }\` to be
          # # generated in the C# code, which fails to compile with the message
          # # \`error CS0034: Operator '<=' is ambiguous on operands of type
          # # 'ulong' and 'int'\`. To work around that, we add type casting
          # # (\`.as<u8>\`).
          # max: 'idx == 9 ? 1 : 0b111_1111'
          max: '(idx == 9 ? 1 : 0b111_1111).as<u8>'
        doc: |
          The 7-bit (base128) numeric value chunk of this group

          Since this implementation only supports integer values up to 64 bits,
          the \`value\` in the 10th group (\`groups[9]\`) can only be \`0\` or \`1\`
          (otherwise the width of the represented value would be 65 bits or
          more, which is not supported).
    instances:
      interm_value:
        # We intentionally use addition (\`+\`) and multiplication (\`*\`), not
        # bitwise OR (\`|\`) and left shift (\`<<\`), in order to get better
        # precision in JavaScript, especially with respect to the Web IDE. Using
        # any bitwise operators (like \`|\` and \`<<\`) in JavaScript truncates the
        # result to a signed 32-bit integer (except \`>>>\`, which yields an
        # unsigned 32-bit integer).
        #
        # Avoiding bitwise operators allows greater precision than 32 bits. We
        # are still limited by the fact that the built-in \`Number\` type in
        # JavaScript can only exactly represent integers from \`-2**53 + 1\` to
        # \`2**53 - 1\` (these bounds are available as constants
        # \`Number.MIN_SAFE_INTEGER\` and \`Number.MAX_SAFE_INTEGER\`), so for any
        # integer that requires more than 53 bits of precision, we get
        # approximate values. But 53 bits is still better than 32.
        #
        # Full 64-bit integer support in JavaScript is only possible via the
        # \`BigInt\` type: https://github.com/kaitai-io/kaitai_struct/issues/183
        value: (prev_interm_value + value * multiplier).as<u8>
instances:
  len:
    value: groups.size
  value:
    value: groups.last.interm_value
    doc: Resulting unsigned value as normal integer
  sign_bit:
    value: '(len == 10 ? 0x8000_0000_0000_0000 : groups.last.multiplier * 0b100_0000).as<u8>'
  value_signed:
    # NOTE 1: the expression \`-(sign_bit - (value - sign_bit))\` performing
    # signed extension is carefully written to avoid overflows in statically
    # typed languages like C++ (where they would cause undefined behavior) or
    # Nim. The goal is to achieve mathematically exactly \`value - 2 * sign_bit\`.
    #
    # NOTE 2: the \`sign_bit > 0\` check is a hack for PHP (it is required only
    # because KSC 0.11 does not abstract from the fact that PHP has only
    # **signed** 64-bit integers, which should be considered a bug because it
    # reduces portability between target languages). Since PHP only has signed
    # 64-bit integers, \`sign_bit\` will be \`-0x8000_0000_0000_0000\` if
    # \`len == 10\`, so the \`value >= sign_bit\` condition that is supposed to
    # detect whether the sign bit is set will not work (in reality, it will be
    # true for any \`value\`). However, the sign extension would only cause the
    # value to overflow and become a \`float\`. The fix in this case is to return
    # \`value\` as is, since it already represents the correct signed value.
    value: 'sign_bit > 0 and value >= sign_bit ? -(sign_bit - (value - sign_bit)).as<s8> : value.as<s8>'
    # # We don't use this anymore again because of JavaScript as explained
    # # above. Since it relies on bitwise XOR (\`^\`), it would truncate the value
    # # to 32 bits in the Web IDE.
    # value: '((value ^ sign_bit).as<s8> - sign_bit.as<s8>).as<s8>'
    # doc-ref: https://graphics.stanford.edu/~seander/bithacks.html#VariableSignExtend
`
  },
  {
    id: "ksy_dbf",
    name: "Dbf",
    category: "Database",
    metadata: {
      isGenerated: true,
      fileExtensions: ["dbf"],
      description: "",
      originalCategory: "database",
      filePath: "database/dbf.ksy",
      signature: {"offset":0,"bytes":[13]},
      endian: "le"
    },
    content: `meta:
  id: dbf
  application: dBASE
  file-extension: dbf
  xref:
    justsolve: DBF
    loc: fdd000325
    mime:
      - application/dbf
      - application/dbase
    pronom:
      - x-fmt/8 # dBASE Database II
      - x-fmt/9 # dBASE Database III
      - x-fmt/271 # dBASE Database III+
      - x-fmt/10 # dBASE Database IV
      - x-fmt/272 # dBASE Database V
    wikidata: Q16545707
  license: CC0-1.0
  endian: le
doc: |
  .dbf is a relational database format introduced in DOS database
  management system dBASE in 1982.

  One .dbf file corresponds to one table and contains a series of headers,
  specification of fields, and a number of fixed-size records.
doc-ref: http://www.dbase.com/Knowledgebase/INT/db7_file_fmt.htm
seq:
  - id: header1
    type: header1
  - id: header2
    size: header1.len_header - header1._sizeof - header_terminator._sizeof
    type: header2
  - id: header_terminator
    contents: [0x0D]
  - id: records
    type: record
    size: header1.len_record
    repeat: expr
    repeat-expr: header1.num_records
types:
  header1:
    doc-ref: http://www.dbase.com/Knowledgebase/INT/db7_file_fmt.htm - section 1.1
    seq:
      - id: version
        type: u1
      - id: last_update_y
        type: u1
      - id: last_update_m
        type: u1
      - id: last_update_d
        type: u1
      - id: num_records
        type: u4
      - id: len_header
        type: u2
      - id: len_record
        type: u2
    instances:
      dbase_level:
        value: 'version & 0b111'
  header2:
    seq:
      - id: header_dbase_3
        if: _root.header1.dbase_level == 3
        type: header_dbase_3
      - id: header_dbase_7
        if: _root.header1.dbase_level == 7
        type: header_dbase_7
      - id: fields
        type: field
        repeat: eos
  header_dbase_3:
    seq:
      - id: reserved1
        size: 3
      - id: reserved2
        size: 13
      - id: reserved3
        size: 4
  header_dbase_7:
    seq:
      - id: reserved1
        contents: [0, 0]
      - id: has_incomplete_transaction
        type: u1
      - id: dbase_iv_encryption
        type: u1
      - id: reserved2
        size: 12
      - id: production_mdx
        type: u1
      - id: language_driver_id
        type: u1
      - id: reserved3
        contents: [0, 0]
      - id: language_driver_name
        size: 32
      - id: reserved4
        size: 4
  field:
    seq:
      - id: name
        type: strz
        encoding: ASCII
        size: 11
      - id: datatype
        type: u1
      - id: data_address
        type: u4
      - id: length
        type: u1
      - id: decimal_count
        type: u1
      - id: reserved1
        size: 2
      - id: work_area_id
        type: u1
      - id: reserved2
        size: 2
      - id: set_fields_flag
        type: u1
      - id: reserved3
        size: 8
  record:
    seq:
      - id: deleted
        type: u1
        enum: delete_state
      - id: record_fields
        size: _root.header2.fields[_index].length
        repeat: expr
        repeat-expr: _root.header2.fields.size
enums:
  delete_state:
    0x2a: true
    0x20: false
`
  },
  {
    id: "ksy_gettext_mo",
    name: "gettext binary database",
    category: "Database",
    metadata: {
      isGenerated: true,
      fileExtensions: ["mo"],
      description: "gettext binary database",
      originalCategory: "database",
      filePath: "database/gettext_mo.ksy"
    },
    content: `meta:
  id: gettext_mo
  title: gettext binary database
  application:
    - GNU gettext
    - libintl
  file-extension: mo
  xref:
    justsolve: Gettext_MO_(Machine_Object)_file
    wikidata:
      - Q105856977 # little-endian
      - Q105857131 # big-endian
  tags:
    - database
    - linux
  license: BSD-2-Clause
  ks-version: 0.9
  encoding: UTF-8

#  Copyright (c) 2000, 2001 Citrus Project,
#  All rights reserved.
#  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
#  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS \`\`AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

doc: |
  [GNU gettext](https://www.gnu.org/software/gettext/) is a popular
  solution in free/open source software world to do i18n/l10n of
  software, by providing translated strings that will substitute
  strings in original language (typically, English).

  gettext .mo is a binary database format which stores these string
  translation pairs in an efficient binary format, ready to be used by
  gettext-enabled software. .mo format is a result of compilation of
  text-based .po files using
  [msgfmt](https://www.gnu.org/software/gettext/manual/html_node/msgfmt-Invocation.html#msgfmt-Invocation)
  utility. The reverse conversion (.mo -> .po) is also possible using
  [msgunfmt](https://www.gnu.org/software/gettext/manual/html_node/msgunfmt-Invocation.html#msgunfmt-Invocation)
  decompiler utility.
doc-ref: https://gitlab.com/worr/libintl
seq:
  - id: signature
    size: 4
  - id: mo
    type: mo
types:
  hash_lookup_iteration:
    params:
      - id: idx
        type: u4
      - id: collision_step
        type: u4
    instances:
      original:
        value: _root.mo.originals[idx].str
      translation:
        value: _root.mo.translations[idx].str
      next_idx:
        value: "idx + collision_step - (idx >= _root.mo.num_hashtable_items - collision_step ? _root.mo.num_hashtable_items : 0)"
      next:
        pos: 0
        type: hash_lookup_iteration(_root.mo.hashtable_items[next_idx].val, collision_step)
  lookup_iteration:
    params:
      - id: current
        type: hash_lookup_iteration
      - id: query
        type: str
    instances:
      found:
        value: query == current.original
      next:
        pos: 0
        type: lookup_iteration(current.next, query)
        if: not found

  hashtable_lookup:
    doc: |
      def lookup(s:str, t:gettext_mo.GettextMo):
        try:
          l=gettext_mo.GettextMo.HashtableLookup(s, string_hash(s), t._io, _parent=t, _root=t)
          e=l.entry
          while(not e.found):
            e=e.next
          return e.current
        except:
          raise Exception("Not found "+s+" in the hashtable!")

      lookup(t.mo.originals[145].str, t)
    doc-ref: https://gitlab.com/worr/libintl/raw/master/src/lib/libintl/gettext.c
    params:
      - id: query
        type: str
      - id: hash
        type: u4
        doc-ref: https://gitlab.com/worr/libintl/raw/master/src/lib/libintl/strhash.c
        doc: |
          def string_hash(s):
            s=s.encode("utf-8")
            h = 0
            for i in range(len(s)):
              h = h << 4
              h += s[i]
              tmp = h & 0xF0000000
              if tmp != 0:
                h ^= tmp
                h ^= tmp >> 24
            return h
    instances:
      collision_step:
        value: "hash % (_root.mo.num_hashtable_items - 2) + 1"
      idx:
        value: "hash % _root.mo.num_hashtable_items"
      hash_lookup_iteration:
        pos: 0
        type: "hash_lookup_iteration(_root.mo.hashtable_items[idx].val, collision_step)"
      entry:
        pos: 0
        type: "lookup_iteration(hash_lookup_iteration, query)"

  mo:
    meta:
      endian:
        switch-on: _root.signature
        cases:
          '[0xde, 0x12, 0x04, 0x95]': le
          '[0x95, 0x04, 0x12, 0xde]': be
    seq:
      - id: version
        type: version
      - id: num_translations
        type: u4
      - id: ofs_originals
        type: u4
      - id: ofs_translations
        type: u4
      - id: num_hashtable_items
        type: u4
      - id: ofs_hashtable_items
        type: u4
    instances:
      originals:
        io: _root._io
        pos: ofs_originals
        type: descriptor
        repeat: expr
        repeat-expr: num_translations
      translations:
        io: _root._io
        pos: ofs_translations
        type: descriptor
        repeat: expr
        repeat-expr: num_translations
      hashtable_items:
        io: _root._io
        pos: ofs_hashtable_items
        type: hashtable_item
        repeat: expr
        repeat-expr: num_hashtable_items
        if: ofs_hashtable_items != 0
    types:
      version:
        seq:
          - id: version_raw
            type: u4
        instances:
          major:
            value: version_raw >> 16
          minor:
            value: version_raw & 0xffff
      hashtable_item:
        seq:
          - id: raw_val
            type: u4
        instances:
          mask:
            value: 0x80000000
          val_1:
            value: raw_val - 1
            if: raw_val != 0
          is_system_dependent:
            value: val_1 & mask == 1
            if: raw_val != 0
          val:
            value: val_1 & ~mask
            if: raw_val != 0
      descriptor:
        seq:
          - id: len_str
            type: u4
          - id: ofs_str
            type: u4
        instances:
          str:
            io: _root._io
            pos: ofs_str
            size: len_str
            type: strz
`
  },
  {
    id: "ksy_sqlite3",
    name: "SQLite3 database file",
    category: "Database",
    metadata: {
      isGenerated: true,
      fileExtensions: ["sqlite","db","db3","sqlite3"],
      description: "SQLite3 database file",
      originalCategory: "database",
      filePath: "database/sqlite3.ksy",
      signature: {"offset":0,"bytes":[null,0]},
      endian: "be"
    },
    content: `meta:
  id: sqlite3
  title: SQLite3 database file
  file-extension:
    - sqlite
    - db
    - db3
    - sqlite3
  xref:
    forensicswiki: sqlite_database_format
    justsolve: SQLite
    loc: fdd000461
    pronom: fmt/729
    wikidata: Q28600453
  license: CC0-1.0
  ks-version: '0.9'
  imports:
    - /common/vlq_base128_be
  endian: be
doc: |
  SQLite3 is a popular serverless SQL engine, implemented as a library
  to be used within other applications. It keeps its databases as
  regular disk files.

  Every database file is segmented into pages. First page (starting at
  the very beginning) is special: it contains a file-global header
  which specifies some data relevant to proper parsing (i.e. format
  versions, size of page, etc). After the header, normal contents of
  the first page follow.

  Each page would be of some type, and generally, they would be
  reached via the links starting from the first page. First page type
  (\`root_page\`) is always "btree_page".
doc-ref: https://www.sqlite.org/fileformat.html
seq:
  - id: magic
    contents: ["SQLite format 3", 0]
  - id: len_page_mod
    type: u2
    doc: |
      The database page size in bytes. Must be a power of two between
      512 and 32768 inclusive, or the value 1 representing a page size
      of 65536.
  - id: write_version
    type: u1
    enum: versions
  - id: read_version
    type: u1
    enum: versions
  - id: reserved_space
    type: u1
    doc: Bytes of unused "reserved" space at the end of each page. Usually 0.
  - id: max_payload_frac
    type: u1
    doc: Maximum embedded payload fraction. Must be 64.
  - id: min_payload_frac
    type: u1
    doc: Minimum embedded payload fraction. Must be 32.
  - id: leaf_payload_frac
    type: u1
    doc: Leaf payload fraction. Must be 32.
  - id: file_change_counter
    type: u4
  - id: num_pages
    type: u4
    doc: Size of the database file in pages. The "in-header database size".
  - id: first_freelist_trunk_page
    type: u4
    doc: Page number of the first freelist trunk page.
  - id: num_freelist_pages
    type: u4
    doc: Total number of freelist pages.
  - id: schema_cookie
    type: u4
  - id: schema_format
    type: u4
    doc: The schema format number. Supported schema formats are 1, 2, 3, and 4.
  - id: def_page_cache_size
    type: u4
    doc: Default page cache size.
  - id: largest_root_page
    type: u4
    doc: The page number of the largest root b-tree page when in auto-vacuum or incremental-vacuum modes, or zero otherwise.
  - id: text_encoding
    type: u4
    enum: encodings
    doc: The database text encoding. A value of 1 means UTF-8. A value of 2 means UTF-16le. A value of 3 means UTF-16be.
  - id: user_version
    type: u4
    doc: The "user version" as read and set by the user_version pragma.
  - id: is_incremental_vacuum
    type: u4
    doc: True (non-zero) for incremental-vacuum mode. False (zero) otherwise.
  - id: application_id
    type: u4
    doc: The "Application ID" set by PRAGMA application_id.
  - id: reserved
    size: 20
  - id: version_valid_for
    type: u4
  - id: sqlite_version_number
    type: u4
  - id: root_page
    type: btree_page
instances:
  len_page:
    value: 'len_page_mod == 1 ? 0x10000 : len_page_mod'
types:
  btree_page:
    seq:
      - id: page_type
        type: u1
      - id: first_freeblock
        type: u2
      - id: num_cells
        type: u2
      - id: ofs_cells
        type: u2
      - id: num_frag_free_bytes
        type: u1
      - id: right_ptr
        type: u4
        if: page_type == 2 or page_type == 5
      - id: cells
        type: ref_cell
        repeat: expr
        repeat-expr: num_cells
  ref_cell:
    seq:
      - id: ofs_body
        type: u2
    instances:
      body:
        pos: ofs_body
        type:
          switch-on: _parent.page_type
          cases:
            0x0d: cell_table_leaf
            0x05: cell_table_interior
            0x0a: cell_index_leaf
            0x02: cell_index_interior
  cell_table_leaf:
    doc-ref: 'https://www.sqlite.org/fileformat.html#b_tree_pages'
    seq:
      - id: len_payload
        type: vlq_base128_be
      - id: row_id
        type: vlq_base128_be
      - id: payload
        size: len_payload.value
        type: cell_payload
      # TODO: overflow
  cell_table_interior:
    doc-ref: 'https://www.sqlite.org/fileformat.html#b_tree_pages'
    seq:
      - id: left_child_page
        type: u4
      - id: row_id
        type: vlq_base128_be
  cell_index_leaf:
    doc-ref: 'https://www.sqlite.org/fileformat.html#b_tree_pages'
    seq:
      - id: len_payload
        type: vlq_base128_be
      - id: payload
        size: len_payload.value
        type: cell_payload
      # TODO: overflow
  cell_index_interior:
    doc-ref: 'https://www.sqlite.org/fileformat.html#b_tree_pages'
    seq:
      - id: left_child_page
        type: u4
      - id: len_payload
        type: vlq_base128_be
      - id: payload
        size: len_payload.value
        type: cell_payload
  cell_payload:
    doc-ref: 'https://sqlite.org/fileformat2.html#record_format'
    seq:
      - id: len_header_and_len
        type: vlq_base128_be
      - id: column_serials
        size: len_header_and_len.value - 1
        type: serials
      - id: column_contents
        repeat: expr
        repeat-expr: column_serials.entries.size
        type: column_content(column_serials.entries[_index])
  serials:
    seq:
      - id: entries
        type: serial
        repeat: eos
  serial:
    seq:
      - id: code
        type: vlq_base128_be
    instances:
      is_blob:
        value: 'code.value >= 12 and (code.value % 2 == 0)'
      is_string:
        value: 'code.value >= 13 and (code.value % 2 == 1)'
      len_content:
        value: (code.value - 12) / 2
        if: code.value >= 12
  column_content:
    params:
      - id: serial_type
        type: serial
    seq:
      - id: as_int
        type:
          switch-on: serial_type.code.value
          cases:
            1: u1
            2: u2
            3: b24
            4: u4
            5: b48
            6: u8
        if: serial_type.code.value >= 1 and serial_type.code.value <= 6
      - id: as_float
        type: f8
        if: serial_type.code.value == 7
      - id: as_blob
        size: serial_type.len_content
        if: serial_type.is_blob
      - id: as_str
        type: str
        size: serial_type.len_content
        encoding: UTF-8
#        if: _root.text_encoding == encodings::utf_8 and serial_type.is_string
enums:
  versions:
    1: legacy
    2: wal
  encodings:
    1: utf_8
    2: utf_16le
    3: utf_16be
`
  },
  {
    id: "ksy_tsm",
    name: "InfluxDB TSM file",
    category: "Database",
    metadata: {
      isGenerated: true,
      fileExtensions: ["tsm"],
      description: "InfluxDB TSM file",
      originalCategory: "database",
      filePath: "database/tsm.ksy",
      endian: "be"
    },
    content: `meta:
  id: tsm
  title: InfluxDB TSM file
  application: InfluxDB
  file-extension: tsm
  xref:
    wikidata: Q29168491
  license: MIT
  endian: be
doc: |
  InfluxDB is a scalable database optimized for storage of time
  series, real-time application metrics, operations monitoring events,
  etc, written in Go.

  Data is stored in .tsm files, which are kept pretty simple
  conceptually. Each .tsm file contains a header and footer, which
  stores offset to an index. Index is used to find a data block for a
  requested time boundary.
seq:
  - id: header
    type: header
instances:
  index:
    pos: _io.size - 8
    type: index
types:
  header:
    seq:
      - id: magic
        contents: [0x16, 0xd1, 0x16, 0xd1]
      - id: version
        type: u1
  index:
    seq:
      - id: offset
        type: u8
    instances:
      entries:
        pos: offset
        type: index_header
        repeat: until
        repeat-until: _io.pos == _io.size - 8
    types:
      index_header:
        seq:
          - id: key_len
            type: u2
          - id: key
            type: str
            encoding: UTF-8
            size: key_len
          - id: type
            type: u1
          - id: entry_count
            type: u2

          - id: index_entries
            type: index_entry
            repeat: expr
            repeat-expr: entry_count

        types:
          index_entry:
            seq:
              - id: min_time
                type: u8
              - id: max_time
                type: u8
              - id: block_offset
                type: u8
              - id: block_size
                type: u4

            types:
              block_entry:
                seq:
                  - id: crc32
                    type: u4
                  - id: data
                    size: _parent.block_size - 4

            instances:
              block:
                io: _root._io
                pos: block_offset
                type: block_entry
`
  },
  {
    id: "ksy_android_nanoapp_header",
    name: "Android nanoapp header",
    category: "Executable",
    metadata: {
      isGenerated: true,
      fileExtensions: ["napp_header"],
      description: "Android nanoapp header",
      originalCategory: "executable",
      filePath: "executable/android_nanoapp_header.ksy",
      signature: {"offset":0,"bytes":[78,65,78,79]},
      endian: "le"
    },
    content: `meta:
  id: android_nanoapp_header
  title: Android nanoapp header
  file-extension: napp_header
  tags:
    - android
    - executable
  license: Apache-2.0
  ks-version: 0.9
  endian: le
doc-ref: https://android.googlesource.com/platform/system/chre/+/a7ff61b9/build/build_template.mk#130
seq:
  - id: header_version
    type: u4
    valid: 1
  - id: magic
    contents: "NANO"
  - id: app_id
    type: u8
  - id: app_version
    type: u4
  - id: flags
    type: u4
  - id: hub_type
    type: u8
  - id: chre_api_major_version
    type: u1
  - id: chre_api_minor_version
    type: u1
  - id: reserved
    contents: [0, 0, 0, 0, 0, 0]
instances:
  is_signed:
    value: flags & 0x1 != 0
  is_encrypted:
    value: flags & 0x2 != 0
  is_tcm_capable:
    value: flags & 0x4 != 0
`
  },
  {
    id: "ksy_dex",
    name: "Android Dalvik VM executable (dex)",
    category: "Executable",
    metadata: {
      isGenerated: true,
      fileExtensions: ["dex"],
      description: "Android Dalvik VM executable (dex)",
      originalCategory: "executable",
      filePath: "executable/dex.ksy",
      endian: "le"
    },
    content: `meta:
  id: dex
  title: Android Dalvik VM executable (dex)
  file-extension: dex
  xref:
    justsolve: Dalvik_Executable
    pronom: fmt/694
    wikidata: Q29000585
  tags:
    - android
    - executable
  license: Apache-2.0
  imports:
    - /common/vlq_base128_le
  endian: le
doc: |
  Android OS applications executables are typically stored in its own
  format, optimized for more efficient execution in Dalvik virtual
  machine.

  This format is loosely similar to Java .class file format and
  generally holds the similar set of data: i.e. classes, methods,
  fields, annotations, etc.
doc-ref: https://source.android.com/docs/core/runtime/dex-format
seq:
  - id: header
    type: header_item
instances:
  string_ids:
    pos: header.string_ids_off
    type: string_id_item
    repeat: expr
    repeat-expr: header.string_ids_size
    doc: |
      string identifiers list.

      These are identifiers for all the strings used by this file, either for
      internal naming (e.g., type descriptors) or as constant objects referred to by code.

      This list must be sorted by string contents, using UTF-16 code point values
      (not in a locale-sensitive manner), and it must not contain any duplicate entries.
  type_ids:
    pos: header.type_ids_off
    type: type_id_item
    repeat: expr
    repeat-expr: header.type_ids_size
    doc: |
      type identifiers list.

      These are identifiers for all types (classes, arrays, or primitive types)
      referred to by this file, whether defined in the file or not.

      This list must be sorted by string_id index, and it must not contain any duplicate entries.
  proto_ids:
    pos: header.proto_ids_off
    type: proto_id_item
    repeat: expr
    repeat-expr: header.proto_ids_size
    doc: |
      method prototype identifiers list.

      These are identifiers for all prototypes referred to by this file.

      This list must be sorted in return-type (by type_id index) major order,
      and then by argument list (lexicographic ordering, individual arguments
      ordered by type_id index). The list must not contain any duplicate entries.
  field_ids:
    pos: header.field_ids_off
    type: field_id_item
    repeat: expr
    repeat-expr: header.field_ids_size
    doc: |
      field identifiers list.

      These are identifiers for all fields referred to by this file, whether defined in the file or not.

      This list must be sorted, where the defining type (by type_id index)
      is the major order, field name (by string_id index) is the intermediate
      order, and type (by type_id index) is the minor order.

      The list must not contain any duplicate entries.
  method_ids:
    pos: header.method_ids_off
    type: method_id_item
    repeat: expr
    repeat-expr: header.method_ids_size
    doc: |
      method identifiers list.

      These are identifiers for all methods referred to by this file,
      whether defined in the file or not.

      This list must be sorted, where the defining type (by type_id index
      is the major order, method name (by string_id index) is the intermediate
      order, and method prototype (by proto_id index) is the minor order.

      The list must not contain any duplicate entries.
  class_defs:
    pos: header.class_defs_off
    type: class_def_item
    repeat: expr
    repeat-expr: header.class_defs_size
    doc: |
      class definitions list.

      The classes must be ordered such that a given class's superclass and
      implemented interfaces appear in the list earlier than the referring class.

      Furthermore, it is invalid for a definition for the same-named class to
      appear more than once in the list.
  #call_site_ids:
  #  pos: header.???
  #  type: call_site_id_item
  #  repeat: expr
  #  repeat-expr: header.???
  #  doc: |
  #    call site identifiers list.
  #
  #    These are identifiers for all call sites referred to by this file,
  #    whether defined in the file or not.
  #
  #    This list must be sorted in ascending order of call_site_off.
  link_data:
    pos: header.link_off
    size: header.link_size
    doc: |
      data used in statically linked files.

      The format of the data in this section is left unspecified by this document.

      This section is empty in unlinked files, and runtime implementations may
      use it as they see fit.
  data:
    pos: header.data_off
    size: header.data_size
    doc: |
      data area, containing all the support data for the tables listed above.

      Different items have different alignment requirements, and padding bytes
      are inserted before each item if necessary to achieve proper alignment.
  map:
    pos: header.map_off
    type: map_list
types:
  header_item:
    seq:
      - id: magic
        contents: "dex\\n"
      - id: version_str
        size: 4
        type: strz
        encoding: ascii
      - id: checksum
        type: u4
        doc: |
          adler32 checksum of the rest of the file (everything but magic and this field);
          used to detect file corruption
      - id: signature
        size: 20
        doc: |
          SHA-1 signature (hash) of the rest of the file (everything but magic, checksum,
          and this field); used to uniquely identify files
      - id: file_size
        type: u4
        doc: |
          size of the entire file (including the header), in bytes
      - id: header_size
        type: u4
        # guard: 0x70
        doc: |
          size of the header (this entire section), in bytes. This allows for at
          least a limited amount of backwards/forwards compatibility without
          invalidating the format.
      - id: endian_tag
        type: u4
        enum: endian_constant
      - id: link_size
        type: u4
        doc: |
          size of the link section, or 0 if this file isn't statically linked
      - id: link_off
        type: u4
        doc: |
          offset from the start of the file to the link section, or 0 if link_size == 0.
          The offset, if non-zero, should be to an offset into the link_data section.
          The format of the data pointed at is left unspecified by this document;
          this header field (and the previous) are left as hooks for use by runtime implementations.
      - id: map_off
        type: u4
        doc: |
          offset from the start of the file to the map item.
          The offset, which must be non-zero, should be to an offset into the data
          section, and the data should be in the format specified by "map_list" below.
      - id: string_ids_size
        type: u4
        doc: |
          count of strings in the string identifiers list
      - id: string_ids_off
        type: u4
        doc: |
          offset from the start of the file to the string identifiers list,
          or 0 if string_ids_size == 0 (admittedly a strange edge case).
          The offset, if non-zero, should be to the start of the string_ids section.
      - id: type_ids_size
        type: u4
        doc: |
          count of elements in the type identifiers list, at most 65535
      - id: type_ids_off
        type: u4
        doc: |
          offset from the start of the file to the type identifiers list,
          or 0 if type_ids_size == 0 (admittedly a strange edge case).
          The offset, if non-zero, should be to the start of the type_ids section.
      - id: proto_ids_size
        type: u4
        doc: |
          count of elements in the prototype identifiers list, at most 65535
      - id: proto_ids_off
        type: u4
        doc: |
          offset from the start of the file to the prototype identifiers list,
          or 0 if proto_ids_size == 0 (admittedly a strange edge case).
          The offset, if non-zero, should be to the start of the proto_ids section.
      - id: field_ids_size
        type: u4
        doc: |
          count of elements in the field identifiers list
      - id: field_ids_off
        type: u4
        doc: |
          offset from the start of the file to the field identifiers list,
          or 0 if field_ids_size == 0.
          The offset, if non-zero, should be to the start of the field_ids section.
      - id: method_ids_size
        type: u4
        doc: |
          count of elements in the method identifiers list
      - id: method_ids_off
        type: u4
        doc: |
          offset from the start of the file to the method identifiers list,
          or 0 if method_ids_size == 0.
          The offset, if non-zero, should be to the start of the method_ids section.
      - id: class_defs_size
        type: u4
        doc: |
          count of elements in the class definitions list
      - id: class_defs_off
        type: u4
        doc: |
          offset from the start of the file to the class definitions list,
          or 0 if class_defs_size == 0 (admittedly a strange edge case).
          The offset, if non-zero, should be to the start of the class_defs section.
      - id: data_size
        type: u4
        doc: |
          Size of data section in bytes. Must be an even multiple of sizeof(uint).
      - id: data_off
        type: u4
        doc: |
          offset from the start of the file to the start of the data section.
    enums:
      endian_constant:
        0x12345678: endian_constant
        0x78563412: reverse_endian_constant
  string_id_item:
    -webide-representation: "{value.data} (offs={string_data_off})"
    seq:
      - id: string_data_off
        type: u4
        doc: |
          offset from the start of the file to the string data for this item.
          The offset should be to a location in the data section, and the data
          should be in the format specified by "string_data_item" below.
          There is no alignment requirement for the offset.
    types:
      string_data_item:
        -webide-representation: "{data}"
        seq:
          - id: utf16_size
            type: vlq_base128_le
          - id: data
            size: utf16_size.value
            type: str
            encoding: ascii
    instances:
      value:
        pos: string_data_off
        type: string_data_item
        -webide-parse-mode: eager
  type_id_item:
    -webide-representation: "{type_name}"
    seq:
      - id: descriptor_idx
        type: u4
        doc: |
          index into the string_ids list for the descriptor string of this type.
          The string must conform to the syntax for TypeDescriptor, defined above.
    instances:
      type_name:
        value: _root.string_ids[descriptor_idx].value.data
        -webide-parse-mode: eager
  proto_id_item:
    -webide-representation: "shorty_idx={shorty_idx} return_type_idx={return_type_idx} parameters_off={parameters_off}"
    seq:
      - id: shorty_idx
        type: u4
        doc: |
          index into the string_ids list for the short-form descriptor string of this prototype.
          The string must conform to the syntax for ShortyDescriptor, defined above,
          and must correspond to the return type and parameters of this item.
      - id: return_type_idx
        type: u4
        doc: |
          index into the type_ids list for the return type of this prototype
      - id: parameters_off
        type: u4
        doc: |
          offset from the start of the file to the list of parameter types for this prototype,
          or 0 if this prototype has no parameters.
          This offset, if non-zero, should be in the data section, and the data
          there should be in the format specified by "type_list" below.
          Additionally, there should be no reference to the type void in the list.
    instances:
      shorty_desc:
        value: _root.string_ids[shorty_idx].value.data
        doc: short-form descriptor string of this prototype, as pointed to by shorty_idx
      params_types:
        io: _root._io
        pos: parameters_off
        type: type_list
        if: parameters_off != 0
        doc: list of parameter types for this prototype
      return_type:
        value: _root.type_ids[return_type_idx].type_name
        doc: return type of this prototype
  field_id_item:
    -webide-representation: "class_idx={class_idx} type_idx={type_idx} name_idx={name_idx}"
    seq:
      - id: class_idx
        type: u2
        doc: |
          index into the type_ids list for the definer of this field.
          This must be a class type, and not an array or primitive type.
      - id: type_idx
        type: u2
        doc: |
          index into the type_ids list for the type of this field
      - id: name_idx
        type: u4
        doc: |
          index into the string_ids list for the name of this field.
          The string must conform to the syntax for MemberName, defined above.
    instances:
      class_name:
        value: _root.type_ids[class_idx].type_name
        doc: the definer of this field
      type_name:
        value: _root.type_ids[type_idx].type_name
        doc: the type of this field
      field_name:
        value: _root.string_ids[name_idx].value.data
        doc: the name of this field
  method_id_item:
    -webide-representation: "class_idx={class_idx} proto_idx={proto_idx} name_idx={name_idx}"
    seq:
      - id: class_idx
        type: u2
        doc: |
          index into the type_ids list for the definer of this method.
          This must be a class or array type, and not a primitive type.
      - id: proto_idx
        type: u2
        doc: |
          index into the proto_ids list for the prototype of this method
      - id: name_idx
        type: u4
        doc: |
          index into the string_ids list for the name of this method.
          The string must conform to the syntax for MemberName, defined above.
    instances:
      class_name:
        value: _root.type_ids[class_idx].type_name
        doc: the definer of this method
      proto_desc:
        value: _root.proto_ids[proto_idx].shorty_desc
        doc: the short-form descriptor of the prototype of this method
      method_name:
        value: _root.string_ids[name_idx].value.data
        doc: the name of this method
  class_def_item:
    -webide-representation: "{access_flags} {type_name}"
    seq:
      - id: class_idx
        type: u4
        doc: |
          index into the type_ids list for this class.

          This must be a class type, and not an array or primitive type.
      - id: access_flags
        type: u4
        enum: class_access_flags
        doc: |
          access flags for the class (public, final, etc.).

          See "access_flags Definitions" for details.
      - id: superclass_idx
        type: u4
        doc: |
          index into the type_ids list for the superclass,
          or the constant value NO_INDEX if this class has no superclass
          (i.e., it is a root class such as Object).

          If present, this must be a class type, and not an array or primitive type.
      - id: interfaces_off
        type: u4
        doc: |
          offset from the start of the file to the list of interfaces, or 0 if there are none.

          This offset should be in the data section, and the data there should
          be in the format specified by "type_list" below. Each of the elements
          of the list must be a class type (not an array or primitive type),
          and there must not be any duplicates.
      - id: source_file_idx
        type: u4
        doc: |
          index into the string_ids list for the name of the file containing
          the original source for (at least most of) this class, or the
          special value NO_INDEX to represent a lack of this information.

          The debug_info_item of any given method may override this source file,
          but the expectation is that most classes will only come from one source file.
      - id: annotations_off
        type: u4
        doc: |
          offset from the start of the file to the annotations structure for
          this class, or 0 if there are no annotations on this class.

          This offset, if non-zero, should be in the data section, and the data
          there should be in the format specified by "annotations_directory_item"
          below,with all items referring to this class as the definer.
      - id: class_data_off
        type: u4
        doc: |
          offset from the start of the file to the associated class data for this
          item, or 0 if there is no class data for this class.

          (This may be the case, for example, if this class is a marker interface.)

          The offset, if non-zero, should be in the data section, and the data
          there should be in the format specified by "class_data_item" below,
          with all items referring to this class as the definer.
      - id: static_values_off
        type: u4
        doc: |
          offset from the start of the file to the list of initial values for
          static fields, or 0 if there are none (and all static fields are to be
          initialized with 0 or null).

          This offset should be in the data section, and the data there should
          be in the format specified by "encoded_array_item" below.

          The size of the array must be no larger than the number of static fields
          declared by this class, and the elements correspond to the static fields
          in the same order as declared in the corresponding field_list.

          The type of each array element must match the declared type of its
          corresponding field.

          If there are fewer elements in the array than there are static fields,
          then the leftover fields are initialized with a type-appropriate 0 or null.
    instances:
      type_name:
        value: _root.type_ids[class_idx].type_name
        -webide-parse-mode: eager
      class_data:
        pos: class_data_off
        type: class_data_item
        if: class_data_off != 0
      static_values:
        pos: static_values_off
        type: encoded_array_item
        if: static_values_off != 0
  encoded_array_item:
    seq:
      - id: value
        type: encoded_array
  annotation_element:
    seq:
      - id: name_idx
        type: vlq_base128_le
        doc: |
          element name, represented as an index into the string_ids section.

          The string must conform to the syntax for MemberName, defined above.
      - id: value
        type: encoded_value
        doc: |
          element value
  encoded_annotation:
    seq:
      - id: type_idx
        type: vlq_base128_le
        doc: |
          type of the annotation.

          This must be a class (not array or primitive) type.
      - id: size
        type: vlq_base128_le
        doc: |
          number of name-value mappings in this annotation
      - id: elements
        type: annotation_element
        repeat: expr
        repeat-expr: size.value
        doc: |
          elements of the annotation, represented directly in-line (not as offsets).

          Elements must be sorted in increasing order by string_id index.
  encoded_value:
    -webide-representation: "{value_type}: {value} (arg={value_arg})"
    seq:
      - id: value_arg
        type: b3
      - id: value_type
        type: b5
        enum: value_type_enum
      - id: value
        type:
          switch-on: value_type
          cases:
            # TODO: dynamic sizes
            value_type_enum::byte:          s1
            value_type_enum::short:         s2
            value_type_enum::char:          u2
            value_type_enum::int:           s4
            value_type_enum::long:          s8
            value_type_enum::float:         f4
            value_type_enum::double:        f8
            value_type_enum::method_type:   u4
            value_type_enum::method_handle: u4
            value_type_enum::string:        u4
            value_type_enum::type:          u4
            value_type_enum::field:         u4
            value_type_enum::method:        u4
            value_type_enum::enum:          u4
            value_type_enum::array:         encoded_array
            value_type_enum::annotation:    encoded_annotation
    enums:
      value_type_enum:
        0x00: byte
        0x02: short
        0x03: char
        0x04: int
        0x06: long
        0x10: float
        0x11: double
        0x15: method_type
        0x16: method_handle
        0x17: string
        0x18: type
        0x19: field
        0x1a: method
        0x1b: enum
        0x1c: array
        0x1d: annotation
        0x1e: "null"
        0x1f: boolean
  encoded_array:
    seq:
      - id: size
        type: vlq_base128_le
      - id: values
        type: encoded_value
        repeat: expr
        repeat-expr: size.value
  call_site_id_item:
    seq:
      - id: call_site_off
        type: u4
        doc: |
          offset from the start of the file to call site definition.

          The offset should be in the data section, and the data there should
          be in the format specified by "call_site_item" below.
  encoded_field:
    seq:
      - id: field_idx_diff
        type: vlq_base128_le
        doc: |
          index into the field_ids list for the identity of this field
          (includes the name and descriptor), represented as a difference
          from the index of previous element in the list.

          The index of the first element in a list is represented directly.
      - id: access_flags
        type: vlq_base128_le
        doc: |
          access flags for the field (public, final, etc.).

          See "access_flags Definitions" for details.
  encoded_method:
    seq:
      - id: method_idx_diff
        type: vlq_base128_le
        doc: |
          index into the method_ids list for the identity of this method
          (includes the name and descriptor), represented as a difference
          from the index of previous element in the list.

          The index of the first element in a list is represented directly.
      - id: access_flags
        type: vlq_base128_le
        doc: |
          access flags for the field (public, final, etc.).

          See "access_flags Definitions" for details.
      - id: code_off
        type: vlq_base128_le
        doc: |
          offset from the start of the file to the code structure for this method,
          or 0 if this method is either abstract or native.

          The offset should be to a location in the data section.

          The format of the data is specified by "code_item" below.
  class_data_item:
    seq:
      - id: static_fields_size
        type: vlq_base128_le
        doc: |
          the number of static fields defined in this item
      - id: instance_fields_size
        type: vlq_base128_le
        doc: |
          the number of instance fields defined in this item
      - id: direct_methods_size
        type: vlq_base128_le
        doc: |
          the number of direct methods defined in this item
      - id: virtual_methods_size
        type: vlq_base128_le
        doc: |
          the number of virtual methods defined in this item
      - id: static_fields
        type: encoded_field
        repeat: expr
        repeat-expr: static_fields_size.value
        doc: |
          the defined static fields, represented as a sequence of encoded elements.

          The fields must be sorted by field_idx in increasing order.
      - id: instance_fields
        type: encoded_field
        repeat: expr
        repeat-expr: instance_fields_size.value
        doc: |
          the defined instance fields, represented as a sequence of encoded elements.

          The fields must be sorted by field_idx in increasing order.
      - id: direct_methods
        type: encoded_method
        repeat: expr
        repeat-expr: direct_methods_size.value
        doc: |
          the defined direct (any of static, private, or constructor) methods,
          represented as a sequence of encoded elements.

          The methods must be sorted by method_idx in increasing order.
      - id: virtual_methods
        type: encoded_method
        repeat: expr
        repeat-expr: virtual_methods_size.value
        doc: |
          the defined virtual (none of static, private, or constructor) methods,
          represented as a sequence of encoded elements.

          This list should not include inherited methods unless overridden by
          the class that this item represents.

          The methods must be sorted by method_idx in increasing order.

          The method_idx of a virtual method must not be the same as any direct method.
  map_item:
    -webide-representation: "{type}: offs={offset}, size={size}"
    seq:
      - id: type
        type: u2
        enum: map_item_type
        doc: |
          type of the items; see table below
      - id: unused
        type: u2
        doc: |
          (unused)
      - id: size
        type: u4
        doc: |
          count of the number of items to be found at the indicated offset
      - id: offset
        type: u4
        doc: |
          offset from the start of the file to the items in question
    enums:
      map_item_type:
        0x0000: header_item
        0x0001: string_id_item
        0x0002: type_id_item
        0x0003: proto_id_item
        0x0004: field_id_item
        0x0005: method_id_item
        0x0006: class_def_item
        0x0007: call_site_id_item
        0x0008: method_handle_item
        0x1000: map_list
        0x1001: type_list
        0x1002: annotation_set_ref_list
        0x1003: annotation_set_item
        0x2000: class_data_item
        0x2001: code_item
        0x2002: string_data_item
        0x2003: debug_info_item
        0x2004: annotation_item
        0x2005: encoded_array_item
        0x2006: annotations_directory_item
  map_list:
    seq:
      - id: size
        type: u4
      - id: list
        type: map_item
        repeat: expr
        repeat-expr: size
  type_item:
    seq:
      - id: type_idx
        type: u2
    instances:
      value:
        value: _root.type_ids[type_idx].type_name
  type_list:
    seq:
      - id: size
        type: u4
      - id: list
        type: type_item
        repeat: expr
        repeat-expr: size
enums:
  class_access_flags:
    0x0001: public     # public: visible everywhere
    0x0002: private    # * private: only visible to defining class
    0x0004: protected  # * protected: visible to package and subclasses
    0x0008: static     # * static: is not constructed with an outer this reference
    0x0010: final      # final: not subclassable
    0x0200: interface  # interface: multiply-implementable abstract class
    0x0400: abstract   # abstract: not directly instantiable
    0x1000: synthetic  # not directly defined in source code
    0x2000: annotation # declared as an annotation class
    0x4000: enum       # declared as an enumerated type
`
  },
  {
    id: "ksy_dos_mz",
    name: "DOS MZ executable",
    category: "Executable",
    metadata: {
      isGenerated: true,
      fileExtensions: ["exe","ovl"],
      description: "DOS MZ executable",
      originalCategory: "executable",
      filePath: "executable/dos_mz.ksy",
      endian: "le"
    },
    content: `meta:
  id: dos_mz
  title: DOS MZ executable
  file-extension:
    - exe
    - ovl
  xref:
    justsolve: MS-DOS_EXE
    pronom: x-fmt/409
    wikidata: Q1882110
  tags:
    - dos
  license: CC0-1.0
  ks-version: 0.9
  encoding: ASCII
  endian: le
doc: |
  DOS MZ file format is a traditional format for executables in MS-DOS
  environment. Many modern formats (i.e. Windows PE) still maintain
  compatibility stub with this format.

  As opposed to .com file format (which basically sports one 64K code
  segment of raw CPU instructions), DOS MZ .exe file format allowed
  more flexible memory management, loading of larger programs and
  added support for relocations.
doc-ref: http://www.delorie.com/djgpp/doc/exe/
seq:
  - id: header
    type: exe_header
  - id: body
    size: header.len_body
instances:
  relocations:
    pos: header.mz.ofs_relocations
    io: header._io
    type: relocation
    repeat: expr
    repeat-expr: header.mz.num_relocations
    if: header.mz.ofs_relocations != 0
types:
  exe_header:
    seq:
      - id: mz
        type: mz_header
      - id: rest_of_header
        size: mz.len_header - mz._sizeof
    instances:
      len_body:
        value: '(mz.last_page_extra_bytes == 0 ? mz.num_pages * 512 : (mz.num_pages - 1) * 512 + mz.last_page_extra_bytes) - mz.len_header'
  mz_header:
    seq:
      - id: magic
        size: 2
        type: str
        valid:
          any-of:
            - '"MZ"'
            - '"ZM"'
      - id: last_page_extra_bytes
        type: u2
      - id: num_pages
        type: u2
      - id: num_relocations
        type: u2
      - id: header_size
        type: u2
      - id: min_allocation
        type: u2
      - id: max_allocation
        type: u2
      - id: initial_ss
        type: u2
      - id: initial_sp
        type: u2
      - id: checksum
        type: u2
      - id: initial_ip
        type: u2
      - id: initial_cs
        type: u2
      - id: ofs_relocations
        type: u2
      - id: overlay_id
        type: u2
    instances:
      len_header:
        value: header_size * 16
  relocation:
    seq:
      - id: ofs
        type: u2
      - id: seg
        type: u2
`
  },
  {
    id: "ksy_elf",
    name: "Executable and Linkable Format",
    category: "Executable",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Executable and Linkable Format",
      originalCategory: "executable",
      filePath: "executable/elf.ksy",
      signature: {"offset":0,"bytes":[127,14]}
    },
    content: `meta:
  id: elf
  title: Executable and Linkable Format
  application: SVR4 ABI and up, many *nix systems
  xref:
    justsolve: Executable_and_Linkable_Format
    mime:
      - application/x-elf
      - application/x-coredump
      - application/x-executable
      - application/x-object
      - application/x-sharedlib
    pronom:
      - fmt/688 # 32bit Little Endian
      - fmt/689 # 32bit Big Endian
      - fmt/690 # 64bit Little Endian
      - fmt/691 # 64bit Big Endian
    wikidata: Q1343830
  tags:
    - executable
    - linux
  license: CC0-1.0
  ks-version: 0.9
doc-ref:
  - https://sourceware.org/git/?p=glibc.git;a=blob;f=elf/elf.h;hb=0f62fe0532
  - https://refspecs.linuxfoundation.org/elf/gabi4+/contents.html
  - https://docs.oracle.com/en/operating-systems/solaris/oracle-solaris/11.4/linkers-libraries/elf-application-binary-interface.html
seq:
  - id: magic
    -orig-id: e_ident[EI_MAG0]..e_ident[EI_MAG3]
    size: 4
    contents: [0x7f, "ELF"]
    doc: File identification, must be 0x7f + "ELF".
  - id: bits
    -orig-id: e_ident[EI_CLASS]
    type: u1
    enum: bits
    doc: |
      File class: designates target machine word size (32 or 64
      bits). The size of many integer fields in this format will
      depend on this setting.
  - id: endian
    -orig-id: e_ident[EI_DATA]
    type: u1
    enum: endian
    doc: Endianness used for all integers.
  - id: ei_version
    -orig-id: e_ident[EI_VERSION]
    type: u1
    valid: 1
    doc: ELF header version.
  - id: abi
    -orig-id: e_ident[EI_OSABI]
    type: u1
    enum: os_abi
    doc: |
      Specifies which OS- and ABI-related extensions will be used
      in this ELF file.
  - id: abi_version
    -orig-id: e_ident[EI_ABIVERSION]
    type: u1
    doc: |
      Version of ABI targeted by this ELF file. Interpretation
      depends on \`abi\` attribute.
  - id: pad
    -orig-id: e_ident[EI_PAD]..e_ident[EI_NIDENT - 1]
    contents: [0, 0, 0, 0, 0, 0, 0]
  - id: header
    type: endian_elf
instances:
  sh_idx_lo_reserved:
    -orig-id: SHN_LORESERVE
    value: 0xff00
  sh_idx_lo_proc:
    -orig-id: SHN_LOPROC
    value: 0xff00
  sh_idx_hi_proc:
    -orig-id: SHN_HIPROC
    value: 0xff1f
  sh_idx_lo_os:
    -orig-id: SHN_LOOS
    value: 0xff20
  sh_idx_hi_os:
    -orig-id: SHN_HIOS
    value: 0xff3f
  sh_idx_hi_reserved:
    -orig-id: SHN_HIRESERVE
    value: 0xffff
types:
  phdr_type_flags:
    params:
      - id: value
        type: u4
    instances:
      read:
        value: value & 0x04 != 0
      write:
        value: value & 0x02 != 0
      execute:
        value: value & 0x01 != 0
      mask_proc:
        value: value & 0xf0000000 != 0
  section_header_flags:
    params:
      - id: value
        type: u4
    instances:
      write:
        value: value & 0x01 != 0
        doc: "writable"
      alloc:
        value: value & 0x02 != 0
        doc: "occupies memory during execution"
      exec_instr:
        value: value & 0x04 != 0
        doc: "executable"
      merge:
        value: value & 0x10 != 0
        doc: "might be merged"
      strings:
        value: value & 0x20 != 0
        doc: "contains nul-terminated strings"
      info_link:
        value: value & 0x40 != 0
        doc: "'sh_info' contains SHT index"
      link_order:
        value: value & 0x80 != 0
        doc: "preserve order after combining"
      os_non_conforming:
        value: value & 0x100 != 0
        doc: "non-standard OS specific handling required"
      group:
        value: value & 0x200 != 0
        doc: "section is member of a group"
      tls:
        value: value & 0x400 != 0
        doc: "section hold thread-local data"
      ordered:
        value: value & 0x04000000 != 0
        doc: "special ordering requirement (Solaris)"
      exclude:
        value: value & 0x08000000 != 0
        doc: "section is excluded unless referenced or allocated (Solaris)"
      mask_os:
        value: value & 0x0ff00000 != 0
        doc: "OS-specific"
      mask_proc:
        value: value & 0xf0000000 != 0
        doc: "Processor-specific"
  dt_flag_values:
    doc-ref:
      - 'https://refspecs.linuxbase.org/elf/gabi4+/ch5.dynamic.html Figure 5-11: DT_FLAGS values'
      - https://github.com/golang/go/blob/48dfddbab3/src/debug/elf/elf.go#L1079-L1095
      - https://docs.oracle.com/en/operating-systems/solaris/oracle-solaris/11.4/linkers-libraries/dynamic-section.html#GUID-4336A69A-D905-4FCE-A398-80375A9E6464__CHAPTER7-TBL-5
    params:
      - id: value
        type: u4
    instances:
      origin:
        value: value & 0x00000001 != 0
        doc: object may reference the \$ORIGIN substitution string
      symbolic:
        value: value & 0x00000002 != 0
        doc: symbolic linking
      textrel:
        value: value & 0x00000004 != 0
        doc: relocation entries might request modifications to a non-writable segment
      bind_now:
        value: value & 0x00000008 != 0
        doc: |
          all relocations for this object must be processed before returning
          control to the program
      static_tls:
        value: value & 0x00000010 != 0
        doc: object uses static thread-local storage scheme
  dt_flag_1_values:
    params:
      - id: value
        type: u4
    instances:
      now:
        value: value & 0x00000001 != 0
        doc: "Set RTLD_NOW for this object."
      rtld_global:
        value: value & 0x00000002 != 0
        doc: "Set RTLD_GLOBAL for this object."
      group:
        value: value & 0x00000004 != 0
        doc: "Set RTLD_GROUP for this object."
      nodelete:
        value: value & 0x00000008 != 0
        doc: "Set RTLD_NODELETE for this object."
      loadfltr:
        value: value & 0x00000010 != 0
        doc: "Trigger filtee loading at runtime."
      initfirst:
        value: value & 0x00000020 != 0
        doc: "Set RTLD_INITFIRST for this object"
      noopen:
        value: value & 0x00000040 != 0
        doc: "Set RTLD_NOOPEN for this object."
      origin:
        value: value & 0x00000080 != 0
        doc: "\$ORIGIN must be handled."
      direct:
        value: value & 0x00000100 != 0
        doc: "Direct binding enabled."
      trans:
        value: value & 0x00000200 != 0
      interpose:
        value: value & 0x00000400 != 0
        doc: "Object is used to interpose."
      nodeflib:
        value: value & 0x00000800 != 0
        doc: "Ignore default lib search path."
      nodump:
        value: value & 0x00001000 != 0
        doc: "Object can't be dldump'ed."
      confalt:
        value: value & 0x00002000 != 0
        doc: "Configuration alternative created."
      endfiltee:
        value: value & 0x00004000 != 0
        doc: "Filtee terminates filters search."
      dispreldne:
        value: value & 0x00008000 != 0
        doc: "Disp reloc applied at build time."
      disprelpnd:
        value: value & 0x00010000 != 0
        doc: "Disp reloc applied at run-time."
      nodirect:
        value: value & 0x00020000 != 0
        doc: "Object has no-direct binding."
      ignmuldef:
        value: value & 0x00040000 != 0
      noksyms:
        value: value & 0x00080000 != 0
      nohdr:
        value: value & 0x00100000 != 0
      edited:
        value: value & 0x00200000 != 0
        doc: "Object is modified after built."
      noreloc:
        value: value & 0x00400000 != 0
      symintpose:
        value: value & 0x00800000 != 0
        doc: "Object has individual interposers."
      globaudit:
        value: value & 0x01000000 != 0
        doc: "Global auditing required."
      singleton:
        value: value & 0x02000000 != 0
        doc: "Singleton symbols are used."
      stub:
        value: value & 0x04000000 != 0
      pie:
        value: value & 0x08000000 != 0
  endian_elf:
    meta:
      endian:
        switch-on: _root.endian
        cases:
          'endian::le': le
          'endian::be': be
    seq:
      - id: e_type
        type: u2
        enum: obj_type
      - id: machine
        type: u2
        enum: machine
      - id: e_version
        type: u4
      # e_entry
      - id: entry_point
        type:
          switch-on: _root.bits
          cases:
            'bits::b32': u4
            'bits::b64': u8
      # e_phoff
      - id: ofs_program_headers
        type:
          switch-on: _root.bits
          cases:
            'bits::b32': u4
            'bits::b64': u8
      # e_shoff
      - id: ofs_section_headers
        type:
          switch-on: _root.bits
          cases:
            'bits::b32': u4
            'bits::b64': u8
      # e_flags
      - id: flags
        size: 4
      # e_ehsize
      - id: e_ehsize
        type: u2
      # e_phentsize
      - id: program_header_size
        type: u2
      # e_phnum
      - id: num_program_headers
        type: u2
      # e_shentsize
      - id: section_header_size
        type: u2
      # e_shnum
      - id: num_section_headers
        type: u2
      # e_shstrndx
      - id: section_names_idx
        type: u2
    types:
      # Elf(32|64)_Phdr
      program_header:
        seq:
          # p_type
          - id: type
            type: u4
            enum: ph_type
          # p_flags
          - id: flags64
            type: u4
            if: _root.bits == bits::b64
          # p_offset
          - id: offset
            type:
              switch-on: _root.bits
              cases:
                'bits::b32': u4
                'bits::b64': u8
          # p_vaddr
          - id: vaddr
            type:
              switch-on: _root.bits
              cases:
                'bits::b32': u4
                'bits::b64': u8
          # p_paddr
          - id: paddr
            type:
              switch-on: _root.bits
              cases:
                'bits::b32': u4
                'bits::b64': u8
          # p_filesz
          - id: filesz
            type:
              switch-on: _root.bits
              cases:
                'bits::b32': u4
                'bits::b64': u8
          # p_memsz
          - id: memsz
            type:
              switch-on: _root.bits
              cases:
                'bits::b32': u4
                'bits::b64': u8
          # p_flags
          - id: flags32
            type: u4
            if: _root.bits == bits::b32
          # p_align
          - id: align
            type:
              switch-on: _root.bits
              cases:
                'bits::b32': u4
                'bits::b64': u8
        instances:
          flags_obj:
            type:
              switch-on: _root.bits
              cases:
                'bits::b32': phdr_type_flags(flags32)
                'bits::b64': phdr_type_flags(flags64)
            -webide-parse-mode: eager
        -webide-representation: "{type} - f:{flags_obj:flags} (o:{offset}, s:{filesz:dec})"
      section_header:
        -orig-id: Elf(32|64)_Shdr
        seq:
          - id: ofs_name
            -orig-id: sh_name
            type: u4
          - id: type
            -orig-id: sh_type
            type: u4
            enum: sh_type
          - id: flags
            -orig-id: sh_flags
            type:
              switch-on: _root.bits
              cases:
                'bits::b32': u4
                'bits::b64': u8
          - id: addr
            -orig-id: sh_addr
            type:
              switch-on: _root.bits
              cases:
                'bits::b32': u4
                'bits::b64': u8
          - id: ofs_body
            -orig-id: sh_offset
            type:
              switch-on: _root.bits
              cases:
                'bits::b32': u4
                'bits::b64': u8
          - id: len_body
            -orig-id: sh_size
            type:
              switch-on: _root.bits
              cases:
                'bits::b32': u4
                'bits::b64': u8
          - id: linked_section_idx
            -orig-id: sh_link
            type: u4
          - id: info
            -orig-id: sh_info
            size: 4
          - id: align
            -orig-id: sh_addralign
            type:
              switch-on: _root.bits
              cases:
                'bits::b32': u4
                'bits::b64': u8
          - id: entry_size
            -orig-id: sh_entsize
            type:
              switch-on: _root.bits
              cases:
                'bits::b32': u4
                'bits::b64': u8
        instances:
          body:
            io: _root._io
            pos: ofs_body
            size: len_body
            type:
              switch-on: type
              cases:
                'sh_type::dynamic': dynamic_section
                'sh_type::strtab': strings_struct
                'sh_type::dynsym': dynsym_section
                'sh_type::symtab': dynsym_section
                'sh_type::note': note_section
                'sh_type::rel': relocation_section(false)
                'sh_type::rela': relocation_section(true)
            if: type != sh_type::nobits
          linked_section:
            value: _root.header.section_headers[linked_section_idx]
            if: |
              linked_section_idx != section_header_idx_special::undefined.to_i
              and linked_section_idx < _root.header.num_section_headers
            doc: may reference a later section header, so don't try to access too early (use only lazy \`instances\`)
            doc-ref: https://refspecs.linuxfoundation.org/elf/gabi4+/ch4.sheader.html#sh_link
          name:
            io: _root.header.section_names._io
            pos: ofs_name
            type: strz
            encoding: ASCII
            -webide-parse-mode: eager
          flags_obj:
            type: section_header_flags(flags)
            -webide-parse-mode: eager
        -webide-representation: "{name} ({type}) - f:{flags_obj:flags} (o:{offset}, s:{size:dec})"
      strings_struct:
        seq:
          - id: entries
            type: strz
            repeat: eos
            # For an explanation of why UTF-8 instead of ASCII, see the comment
            # on the \`name\` attribute in the \`dynsym_section_entry\` type.
            encoding: UTF-8
      dynamic_section:
        seq:
          - id: entries
            type: dynamic_section_entry
            repeat: eos
        instances:
          is_string_table_linked:
            value: _parent.linked_section.type == sh_type::strtab
      dynamic_section_entry:
        doc-ref:
          - https://docs.oracle.com/en/operating-systems/solaris/oracle-solaris/11.4/linkers-libraries/dynamic-section.html
          - https://refspecs.linuxfoundation.org/elf/gabi4+/ch5.dynamic.html#dynamic_section
        -webide-representation: "{tag_enum}: {value_or_ptr} {value_str} {flag_1_values:flags}"
        seq:
          - id: tag
            type:
              switch-on: _root.bits
              cases:
                'bits::b32': u4
                'bits::b64': u8
          - id: value_or_ptr
            type:
              switch-on: _root.bits
              cases:
                'bits::b32': u4
                'bits::b64': u8
        instances:
          tag_enum:
            value: tag
            enum: dynamic_array_tags
          flag_values:
            type: dt_flag_values(value_or_ptr)
            if: "tag_enum == dynamic_array_tags::flags"
            -webide-parse-mode: eager
          flag_1_values:
            type: dt_flag_1_values(value_or_ptr)
            if: "tag_enum == dynamic_array_tags::flags_1"
            -webide-parse-mode: eager
          value_str:
            io: _parent._parent.linked_section.body.as<strings_struct>._io
            pos: value_or_ptr
            type: strz
            encoding: ASCII
            if: is_value_str and _parent.is_string_table_linked
            -webide-parse-mode: eager
          is_value_str:
            value: |
              value_or_ptr != 0 and (
                tag_enum == dynamic_array_tags::needed or
                tag_enum == dynamic_array_tags::soname or
                tag_enum == dynamic_array_tags::rpath or
                tag_enum == dynamic_array_tags::runpath or
                tag_enum == dynamic_array_tags::sunw_auxiliary or
                tag_enum == dynamic_array_tags::sunw_filter or
                tag_enum == dynamic_array_tags::auxiliary or
                tag_enum == dynamic_array_tags::filter or
                tag_enum == dynamic_array_tags::config or
                tag_enum == dynamic_array_tags::depaudit or
                tag_enum == dynamic_array_tags::audit
              )
      dynsym_section:
        seq:
          - id: entries
            type: dynsym_section_entry
            repeat: eos
        instances:
          is_string_table_linked:
            value: _parent.linked_section.type == sh_type::strtab
      dynsym_section_entry:
        -orig-id:
          - Elf32_Sym
          - Elf64_Sym
        doc-ref:
          - https://docs.oracle.com/en/operating-systems/solaris/oracle-solaris/11.4/linkers-libraries/symbol-table-section.html
          - https://refspecs.linuxfoundation.org/elf/gabi4+/ch4.symtab.html
        -webide-representation: 'v:{value} s:{size:dec} t:{type} b:{bind} vis:{visibility} i:{sh_idx:dec}[={sh_idx_special}] n:{name}'
        seq:
          - id: ofs_name
            -orig-id: st_name
            type: u4

          - id: value_b32
            type: u4
            if: _root.bits == bits::b32
          - id: size_b32
            type: u4
            if: _root.bits == bits::b32

          - id: bind
            -orig-id: ELF32_ST_BIND(st_info)
            type: b4
            enum: symbol_binding
          - id: type
            -orig-id: ELF32_ST_TYPE(st_info)
            type: b4
            enum: symbol_type
          - id: other
            type: u1
            doc: don't read this field, access \`visibility\` instead
          - id: sh_idx
            -orig-id: st_shndx
            type: u2
            doc: section header index

          - id: value_b64
            type: u8
            if: _root.bits == bits::b64
          - id: size_b64
            type: u8
            if: _root.bits == bits::b64
        instances:
          value:
            value: |
              _root.bits == bits::b32 ? value_b32 :
              _root.bits == bits::b64 ? value_b64 :
              0
          size:
            value: |
              _root.bits == bits::b32 ? size_b32 :
              _root.bits == bits::b64 ? size_b64 :
              0
          name:
            io: _parent._parent.linked_section.body.as<strings_struct>._io
            pos: ofs_name
            type: strz
            # UTF-8 is used (instead of ASCII) because Golang binaries may
            # contain specific Unicode code points in symbol identifiers.
            #
            # See
            # * <https://go.dev/doc/asm#symbols>: "the assembler allows the
            #   middle dot character U+00B7 and the division slash U+2215 in
            #   identifiers"
            # * <https://github.com/kaitai-io/kaitai_struct_formats/issues/520>
            encoding: UTF-8
            if: ofs_name != 0 and _parent.is_string_table_linked
            -webide-parse-mode: eager
          visibility:
            value: other & 0x03
            enum: symbol_visibility
          sh_idx_special:
            value: sh_idx
            enum: section_header_idx_special
          is_sh_idx_reserved:
            value: |
              sh_idx >= _root.sh_idx_lo_reserved and
              sh_idx <= _root.sh_idx_hi_reserved
          is_sh_idx_proc:
            value: |
              sh_idx >= _root.sh_idx_lo_proc and
              sh_idx <= _root.sh_idx_hi_proc
          is_sh_idx_os:
            value: |
              sh_idx >= _root.sh_idx_lo_os and
              sh_idx <= _root.sh_idx_hi_os
      note_section:
        seq:
          - id: entries
            type: note_section_entry
            repeat: eos
      note_section_entry:
        doc-ref:
          - https://docs.oracle.com/en/operating-systems/solaris/oracle-solaris/11.4/linkers-libraries/note-section.html
          # The following source claims that note's \`name\` and \`descriptor\` should be padded
          # to 8 bytes in 64-bit ELFs, not always to 4 - although this seems to be an idea of
          # the original spec, it did not catch on in the real world and most implementations
          # always use 4-byte alignment - see
          # <https://fa.linux.kernel.narkive.com/2Za5xb58/patch-01-02-elf-always-define-elf-addr-t-in-linux-elf-h#post13>
          - https://refspecs.linuxfoundation.org/elf/gabi4+/ch5.pheader.html#note_section
        seq:
          - id: len_name
            type: u4
          - id: len_descriptor
            type: u4
          - id: type
            type: u4
          - id: name
            size: len_name
            terminator: 0
            doc: |
              Although the ELF specification seems to hint that the \`note_name\` field
              is ASCII this isn't the case for Linux binaries that have a
              \`.gnu.build.attributes\` section.
            doc-ref: https://fedoraproject.org/wiki/Toolchain/Watermark#Proposed_Specification_for_non-loaded_notes
          - id: name_padding
            size: -len_name % 4
          - id: descriptor
            size: len_descriptor
          - id: descriptor_padding
            size: -len_descriptor % 4
      relocation_section:
        doc-ref:
          - https://docs.oracle.com/en/operating-systems/solaris/oracle-solaris/11.4/linkers-libraries/relocation-sections.html
          - https://refspecs.linuxfoundation.org/elf/gabi4+/ch4.reloc.html
        params:
          - id: has_addend
            type: bool
        seq:
          - id: entries
            type: relocation_section_entry
            repeat: eos
      relocation_section_entry:
        seq:
          - id: offset
            type:
              switch-on: _root.bits
              cases:
                'bits::b32': u4
                'bits::b64': u8
          - id: info
            type:
              switch-on: _root.bits
              cases:
                'bits::b32': u4
                'bits::b64': u8
          - id: addend
            type:
              switch-on: _root.bits
              cases:
                'bits::b32': s4
                'bits::b64': s8
            if: _parent.has_addend
    instances:
      program_headers:
        pos: ofs_program_headers
        size: program_header_size
        type: program_header
        repeat: expr
        repeat-expr: num_program_headers
      section_headers:
        pos: ofs_section_headers
        size: section_header_size
        type: section_header
        repeat: expr
        repeat-expr: num_section_headers
      section_names:
        pos: section_headers[section_names_idx].ofs_body
        size: section_headers[section_names_idx].len_body
        type: strings_struct
        if: |
          section_names_idx != section_header_idx_special::undefined.to_i
          and section_names_idx < _root.header.num_section_headers
enums:
  # EI_CLASS
  bits:
    # ELFCLASS32
    1: b32
    # ELFCLASS64
    2: b64
  # EI_DATA
  endian:
    # ELFDATA2LSB
    1: le
    # ELFDATA2MSB
    2: be
  os_abi:
    0: system_v
    1: hp_ux
    2: netbsd
    3: gnu
    6: solaris
    7: aix
    8: irix
    9: freebsd
    0xa: tru64 # Compaq TRU64 UNIX
    0xb: modesto # Novell Modesto
    0xc: openbsd
    0xd: openvms
    0xe: nsk # Hewlett-Packard Non-Stop Kernel
    0xf: aros # Amiga Research OS
    0x10: fenixos # The FenixOS highly scalable multi-core OS
    0x11: cloudabi # Nuxi CloudABI
    0x12: openvos # Stratus Technologies OpenVOS
  # e_type
  obj_type:
    # ET_NONE
    0: no_file_type
    # ET_REL
    1: relocatable
    # ET_EXEC
    2: executable
    # ET_DYN
    3: shared
    # ET_CORE
    4: core
  # https://www.sco.com/developers/gabi/latest/ch4.eheader.html
  # https://sourceware.org/git/?p=glibc.git;a=blob;f=elf/elf.h;hb=0f62fe0532
  # https://github.com/NationalSecurityAgency/ghidra/blob/f5615aa240/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/elf/ElfConstants.java#L158-L510
  # https://github.com/llvm/llvm-project/blob/f6928cf45516/llvm/include/llvm/BinaryFormat/ELF.h#L130
  machine:
    0:
      id: no_machine
      -orig-id: EM_NONE
      doc: No machine
    1:
      id: m32
      doc: AT&T WE 32100
    2:
      id: sparc
      doc: Sun SPARC
    3:
      id: x86
      -orig-id: EM_386
      doc: Intel 80386
    4:
      id: m68k
      -orig-id: EM_68K
      doc: Motorola m68k family
    5:
      id: m88k
      -orig-id: EM_88K
      doc: Motorola m88k family
    6:
      id: iamcu
      doc: |
        Intel MCU

        was assigned to \`EM_486\` (for Intel i486), but that value was deprecated
        and replaced with this one
      doc-ref:
        - https://sourceware.org/bugzilla/show_bug.cgi?id=18404
        - https://gcc.gnu.org/legacy-ml/gcc/2015-05/msg00090.html
        - https://github.com/gcc-mirror/gcc/blob/240f07805d/libgo/go/debug/elf/elf.go#L389
    7:
      id: i860
      -orig-id: EM_860
      doc: Intel 80860
    8:
      id: mips
      doc: MIPS R3000 big-endian
    9:
      id: s370
      doc: IBM System/370
    10:
      id: mips_rs3_le
      doc: MIPS R3000 little-endian
    15:
      id: parisc
      doc: Hewlett-Packard PA-RISC
    17:
      id: vpp500
      doc: Fujitsu VPP500
    18:
      id: sparc32plus
      doc: Sun's "v8plus"
    19:
      id: i960
      -orig-id: EM_960
      doc: Intel 80960
    20:
      id: powerpc
      -orig-id: EM_PPC
      doc: PowerPC
    21:
      id: powerpc64
      -orig-id: EM_PPC64
      doc: PowerPC 64-bit
    22:
      id: s390
      doc: IBM System/390
    23:
      id: spu
      doc: IBM SPU/SPC
    36:
      id: v800
      doc: NEC V800 series
    37:
      id: fr20
      doc: Fujitsu FR20
    38:
      id: rh32
      doc: TRW RH-32
    39:
      id: rce
      doc: Motorola RCE
    40:
      id: arm
      doc: ARM
    41:
      id: old_alpha
      -orig-id: EM_FAKE_ALPHA
      doc: DEC Alpha
    42:
      id: superh
      -orig-id: EM_SH
      doc: Hitachi SH
    43:
      id: sparc_v9
      -orig-id: EM_SPARCV9
      doc: SPARC v9 64-bit
    44:
      id: tricore
      doc: Siemens TriCore
    45:
      id: arc
      doc: Argonaut RISC Core
    46:
      id: h8_300
      doc: Hitachi H8/300
    47:
      id: h8_300h
      doc: Hitachi H8/300H
    48:
      id: h8s
      doc: Hitachi H8S
    49:
      id: h8_500
      doc: Hitachi H8/500
    50:
      id: ia_64
      doc: Intel IA-64 processor architecture
    51:
      id: mips_x
      doc: Stanford MIPS-X
    52:
      id: coldfire
      doc: Motorola ColdFire
    53:
      id: m68hc12
      -orig-id: EM_68HC12
      doc: Motorola M68HC12
    54:
      id: mma
      doc: Fujitsu MMA Multimedia Accelerator
    55:
      id: pcp
      doc: Siemens PCP
    56:
      id: ncpu
      doc: Sony nCPU embedded RISC processor
    57:
      id: ndr1
      doc: Denso NDR1 microprocessor
    58:
      id: starcore
      doc: Motorola Star*Core processor
    59:
      id: me16
      doc: Toyota ME16 processor
    60:
      id: st100
      doc: STMicroelectronics ST100 processor
    61:
      id: tinyj
      doc: Advanced Logic Corp. TinyJ embedded processor family
    62:
      id: x86_64
      doc: AMD x86-64 architecture
    63:
      id: pdsp
      doc: Sony DSP Processor
    64:
      id: pdp10
      doc: Digital Equipment Corp. PDP-10
    65:
      id: pdp11
      doc: Digital Equipment Corp. PDP-11
    66:
      id: fx66
      doc: Siemens FX66 microcontroller
    67:
      id: st9plus
      doc: STMicroelectronics ST9+ 8/16 bit microcontroller
    68:
      id: st7
      doc: STMicroelectronics ST7 8-bit microcontroller
    69:
      id: mc68hc16
      -orig-id: EM_68HC16
      doc: Motorola MC68HC16 microcontroller
    70:
      id: mc68hc11
      -orig-id: EM_68HC11
      doc: Motorola MC68HC11 microcontroller
    71:
      id: mc68hc08
      -orig-id: EM_68HC08
      doc: Motorola MC68HC08 microcontroller
    72:
      id: mc68hc05
      -orig-id: EM_68HC05
      doc: Motorola MC68HC05 microcontroller
    73:
      id: svx
      doc: Silicon Graphics SVx
    74:
      id: st19
      doc: STMicroelectronics ST19 8-bit microcontroller
    75:
      id: vax
      doc: Digital VAX
    76:
      id: cris
      doc: Axis Communications 32-bit embedded processor
    77:
      id: javelin
      doc: Infineon Technologies 32-bit embedded processor
    78:
      id: firepath
      doc: Element 14 64-bit DSP Processor
    79:
      id: zsp
      doc: LSI Logic 16-bit DSP Processor
    80:
      id: mmix
      doc: Donald Knuth's educational 64-bit processor
    81:
      id: huany
      doc: Harvard University machine-independent object files
    82:
      id: prism
      doc: SiTera Prism
    83:
      id: avr
      doc: Atmel AVR 8-bit microcontroller
    84:
      id: fr30
      doc: Fujitsu FR30
    85:
      id: d10v
      doc: Mitsubishi D10V
    86:
      id: d30v
      doc: Mitsubishi D30V
    87:
      id: v850
      doc: NEC v850
    88:
      id: m32r
      doc: Mitsubishi M32R
    89:
      id: mn10300
      doc: Matsushita MN10300
    90:
      id: mn10200
      doc: Matsushita MN10200
    91:
      id: picojava
      -orig-id: EM_PJ
      doc: picoJava
    92:
      id: openrisc
      doc: OpenRISC 32-bit embedded processor
    93:
      id: arc_compact
      doc: 'ARC International ARCompact processor (old spelling/synonym: EM_ARC_A5)'
    94:
      id: xtensa
      doc: Tensilica Xtensa Architecture
    95:
      id: videocore
      doc: Alphamosaic VideoCore processor
    96:
      id: tmm_gpp
      doc: Thompson Multimedia General Purpose Processor
    97:
      id: ns32k
      doc: National Semiconductor 32000 series
    98:
      id: tpc
      doc: Tenor Network TPC processor
    99:
      id: snp1k
      doc: Trebia SNP 1000 processor
    100:
      id: st200
      doc: STMicroelectronics ST200
    101:
      id: ip2k
      doc: Ubicom IP2xxx microcontroller family
    102:
      id: max
      doc: MAX processor
    103:
      id: compact_risc
      -orig-id: EM_CR
      doc: National Semiconductor CompactRISC microprocessor
    104:
      id: f2mc16
      doc: Fujitsu F2MC16
    105:
      id: msp430
      doc: Texas Instruments embedded microcontroller MSP430
    106:
      id: blackfin
      doc: Analog Devices Blackfin (DSP) processor
    107:
      id: se_c33
      doc: Seiko Epson S1C33 family
    108:
      id: sep
      doc: Sharp embedded microprocessor
    109:
      id: arca
      doc: Arca RISC microprocessor
    110:
      id: unicore
      doc: microprocessor series from PKU-Unity Ltd. and MPRC of Peking University
    111:
      id: excess
      doc: 'eXcess: 16/32/64-bit configurable embedded CPU'
    112:
      id: dxp
      doc: Icera Semiconductor Inc. Deep Execution Processor
    113:
      id: altera_nios2
      doc: Altera Nios II soft-core processor
    114:
      id: crx
      doc: National Semiconductor CompactRISC CRX microprocessor
    115:
      id: xgate
      doc: Motorola XGATE embedded processor
    116:
      id: c166
      doc: Infineon C16x/XC16x processor
    117:
      id: m16c
      doc: Renesas M16C series microprocessors
    118:
      id: dspic30f
      doc: Microchip Technology dsPIC30F Digital Signal Controller
    119:
      id: freescale_ce
      -orig-id: EM_CE
      doc: Freescale Communication Engine RISC core
    120:
      id: m32c
      doc: Renesas M32C series microprocessors
    131:
      id: tsk3000
      doc: Altium TSK3000 core
    132:
      id: rs08
      doc: Freescale RS08 embedded processor
    133:
      id: sharc
      doc: Analog Devices SHARC family of 32-bit DSP processors
    134:
      id: ecog2
      doc: Cyan Technology eCOG2 microprocessor
    135:
      id: score7
      doc: Sunplus S+core7 RISC processor
    136:
      id: dsp24
      doc: New Japan Radio (NJR) 24-bit DSP Processor
    137:
      id: videocore3
      doc: Broadcom VideoCore III processor
    138:
      id: latticemico32
      doc: RISC processor for Lattice FPGA architecture
    139:
      id: se_c17
      doc: Seiko Epson C17 family
    140:
      id: ti_c6000
      doc: Texas Instruments TMS320C6000 DSP family
    141:
      id: ti_c2000
      doc: Texas Instruments TMS320C2000 DSP family
    142:
      id: ti_c5500
      doc: Texas Instruments TMS320C55x DSP family
    143:
      id: ti_arp32
      doc: Texas Instruments Application Specific RISC Processor, 32bit fetch
    144:
      id: ti_pru
      doc: Texas Instruments Programmable Realtime Unit
    160:
      id: mmdsp_plus
      doc: STMicroelectronics 64bit VLIW Data Signal Processor
    161:
      id: cypress_m8c
      doc: Cypress M8C microprocessor
    162:
      id: r32c
      doc: Renesas R32C series microprocessors
    163:
      id: trimedia
      doc: NXP Semiconductors TriMedia architecture family
    164:
      id: qdsp6
      doc: Qualcomm Hexagon processor
    165:
      id: i8051
      -orig-id: EM_8051
      doc: Intel 8051 and variants
    166:
      id: stxp7x
      doc: STMicroelectronics STxP7x family of configurable and extensible RISC processors
    167:
      id: nds32
      doc: Andes Technology compact code size embedded RISC processor family
    168:
      id: ecog1x
      doc: Cyan Technology eCOG1X family
    169:
      id: maxq30
      doc: Dallas Semiconductor MAXQ30 Core Micro-controllers
    170:
      id: ximo16
      doc: New Japan Radio (NJR) 16-bit DSP Processor
    171:
      id: manik
      doc: M2000 Reconfigurable RISC Microprocessor
    172:
      id: craynv2
      doc: Cray Inc. NV2 vector architecture
    173:
      id: rx
      doc: Renesas RX family
    174:
      id: metag
      doc: Imagination Technologies META processor architecture
    175:
      id: mcst_elbrus
      doc: MCST Elbrus general purpose hardware architecture
    176:
      id: ecog16
      doc: Cyan Technology eCOG16 family
    177:
      id: cr16
      doc: National Semiconductor CompactRISC CR16 16-bit microprocessor
    178:
      id: etpu
      doc: Freescale Extended Time Processing Unit
    179:
      id: sle9x
      doc: Infineon Technologies SLE9X core
    180:
      id: l10m
      doc: Intel L10M
    181:
      id: k10m
      doc: Intel K10M
    183:
      id: aarch64
      doc: ARM AArch64
    185:
      id: avr32
      doc: Atmel Corporation 32-bit microprocessor family
    186:
      id: stm8
      doc: STMicroeletronics STM8 8-bit microcontroller
    187:
      id: tile64
      doc: Tilera TILE64 multicore architecture family
    188:
      id: tilepro
      doc: Tilera TILEPro multicore architecture family
    189:
      id: microblaze
      doc: Xilinx MicroBlaze 32-bit RISC soft processor core
    190:
      id: cuda
      doc: NVIDIA CUDA architecture
    191:
      id: tilegx
      doc: Tilera TILE-Gx multicore architecture family
    192:
      id: cloudshield
      doc: CloudShield architecture family
    193:
      id: corea_1st
      doc: KIPO-KAIST Core-A 1st generation processor family
    194:
      id: corea_2nd
      doc: KIPO-KAIST Core-A 2nd generation processor family
    195:
      id: arcv2
      doc: Synopsys ARCv2 ISA
    196:
      id: open8
      doc: Open8 8-bit RISC soft processor core
    197:
      id: rl78
      doc: Renesas RL78 family
    198:
      id: videocore5
      doc: Broadcom VideoCore V processor
    199:
      id: renesas_78kor
      -orig-id: EM_78KOR
      doc: Renesas 78KOR family
    200:
      id: freescale_56800ex
      -orig-id: EM_56800EX
      doc: Freescale 56800EX Digital Signal Controller (DSC)
    201:
      id: ba1
      doc: Beyond BA1 CPU architecture
    202:
      id: ba2
      doc: Beyond BA2 CPU architecture
    203:
      id: xcore
      doc: XMOS xCORE processor family
    204:
      id: mchp_pic
      doc: Microchip 8-bit PIC(r) family
    205:
      id: intelgt
      doc: Intel Graphics Technology
      doc-ref: https://sourceware.org/git/?p=glibc.git;a=blob;f=elf/elf.h;hb=0f62fe0532#l339
    206:
      id: intel206
      doc: Reserved by Intel
    207:
      id: intel207
      doc: Reserved by Intel
    208:
      id: intel208
      doc: Reserved by Intel
    209:
      id: intel209
      doc: Reserved by Intel
    210:
      id: km32
      doc: KM211 KM32 32-bit processor
    211:
      id: kmx32
      doc: KM211 KMX32 32-bit processor
    212:
      id: kmx16
      -orig-id: EM_EMX16
      doc: KM211 KMX16 16-bit processor
    213:
      id: kmx8
      -orig-id: EM_EMX8
      doc: KM211 KMX8 8-bit processor
    214:
      id: kvarc
      doc: KM211 KVARC processor
    215:
      id: cdp
      doc: Paneve CDP architecture family
    216:
      id: coge
      doc: Cognitive Smart Memory Processor
    217:
      id: cool
      doc: Bluechip Systems CoolEngine
    218:
      id: norc
      doc: Nanoradio Optimized RISC
    219:
      id: csr_kalimba
      doc: CSR Kalimba architecture family
    220:
      id: z80
      doc: Zilog Z80
    221:
      id: visium
      doc: Controls and Data Services VISIUMcore
    222:
      id: ft32
      doc: FTDI Chip FT32
    223:
      id: moxie
      doc: Moxie processor
    224:
      id: amd_gpu
      -orig-id: EM_AMDGPU
      doc: AMD GPU architecture
    243:
      id: riscv
      doc: RISC-V
    244:
      id: lanai
      doc: Lanai 32-bit processor
      doc-ref: https://github.com/llvm/llvm-project/blob/f6928cf45516/llvm/include/llvm/BinaryFormat/ELF.h#L319
    245:
      id: ceva
      doc: CEVA Processor Architecture Family
      doc-ref: https://groups.google.com/g/generic-abi/c/cmq1LFFpWqU
    246:
      id: ceva_x2
      doc: CEVA X2 Processor Family
      doc-ref: https://groups.google.com/g/generic-abi/c/cmq1LFFpWqU
    247:
      id: bpf
      doc: Linux BPF - in-kernel virtual machine
    248:
      id: graphcore_ipu
      doc: Graphcore Intelligent Processing Unit
      doc-ref: https://groups.google.com/g/generic-abi/c/cmq1LFFpWqU
    249:
      id: img1
      doc: Imagination Technologies
      doc-ref: https://groups.google.com/g/generic-abi/c/cmq1LFFpWqU
    250:
      id: nfp
      doc: Netronome Flow Processor (NFP)
      doc-ref: https://groups.google.com/g/generic-abi/c/cmq1LFFpWqU
    251:
      id: ve
      doc: NEC SX-Aurora Vector Engine (VE) processor
      doc-ref: https://github.com/llvm/llvm-project/blob/f6928cf45516/llvm/include/llvm/BinaryFormat/ELF.h#L321
    252:
      id: csky
      doc: C-SKY 32-bit processor
    253:
      id: arc_compact3_64
      -orig-id: EM_ARC_COMPACT3_64
      doc: Synopsys ARCv3 64-bit ISA/HS6x cores
      doc-ref:
        - https://gitlab.com/gnutools/binutils-gdb/-/blob/4ffb22ec40/include/elf/common.h#L350
        - https://github.com/file/file/blob/9b2538d/magic/Magdir/elf#L301
        - https://bugs.astron.com/view.php?id=251
    254:
      id: mcs6502
      doc: MOS Technology MCS 6502 processor
      doc-ref: https://gitlab.com/gnutools/binutils-gdb/-/blob/4ffb22ec40/include/elf/common.h#L351
    255:
      id: arc_compact3
      -orig-id: EM_ARC_COMPACT3
      doc: Synopsys ARCv3 32-bit
      doc-ref:
        - https://gitlab.com/gnutools/binutils-gdb/-/blob/4ffb22ec40/include/elf/common.h#L352
        - https://github.com/file/file/blob/9b2538d/magic/Magdir/elf#L303
        - https://bugs.astron.com/view.php?id=251
    256:
      id: kvx
      doc: Kalray VLIW core of the MPPA processor family
      doc-ref: https://gitlab.com/gnutools/binutils-gdb/-/blob/4ffb22ec40/include/elf/common.h#L353
    257:
      id: wdc65816
      -orig-id: EM_65816
      doc: WDC 65816/65C816
      doc-ref: https://gitlab.com/gnutools/binutils-gdb/-/blob/4ffb22ec40/include/elf/common.h#L354
    258:
      id: loongarch
      -orig-id: EM_LOONGARCH
      doc: LoongArch
      doc-ref: https://gitlab.com/gnutools/binutils-gdb/-/blob/4ffb22ec40/include/elf/common.h#L355
    259:
      id: kf32
      -orig-id: EM_KF32
      doc: ChipON KungFu32
      doc-ref:
        - https://gitlab.com/gnutools/binutils-gdb/-/blob/4ffb22ec40/include/elf/common.h#L356
        - https://groups.google.com/g/generic-abi/c/n8tLQxj02YY
    260:
      id: u16_u8core
      -orig-id: EM_U16_U8CORE
      doc: LAPIS nX-U16/U8
      doc-ref:
        - https://gitlab.com/gnutools/binutils-gdb/-/blob/dfbcbf85ea/include/elf/common.h#L357
    261:
      id: tachyum
      -orig-id: EM_TACHYUM
      doc: Tachyum
      doc-ref:
        - https://gitlab.com/gnutools/binutils-gdb/-/blob/dfbcbf85ea/include/elf/common.h#L358
    262:
      id: nxp_56800ef
      -orig-id: EM_56800EF
      doc: NXP 56800EF Digital Signal Controller (DSC)
      doc-ref:
        - https://gitlab.com/gnutools/binutils-gdb/-/blob/dfbcbf85ea/include/elf/common.h#L359
    # unofficial values
    # https://gitlab.com/gnutools/binutils-gdb/-/blob/4ffb22ec40/include/elf/common.h#L358
    0x1057:
      id: avr_old
      -orig-id: EM_AVR_OLD
    0x1059:
      id: msp430_old
      -orig-id: EM_MSP430_OLD
    0x1223:
      id: adapteva_epiphany
      -orig-id: EM_ADAPTEVA_EPIPHANY
      doc: Adapteva's Epiphany architecture.
    0x2530:
      id: mt
      -orig-id: EM_MT
      doc: Morpho MT
    0x3330:
      id: cygnus_fr30
      -orig-id: EM_CYGNUS_FR30
    0x4157:
      id: webassembly
      -orig-id: EM_WEBASSEMBLY
      doc: Unofficial value for Web Assembly binaries, as used by LLVM.
    0x4688:
      id: xc16x
      -orig-id: EM_XC16X
      doc: Infineon Technologies 16-bit microcontroller with C166-V2 core
    0x4def:
      id: s12z
      -orig-id: EM_S12Z
      doc: The Freescale toolchain generates elf files with this value.
    0x5441:
      id: cygnus_frv
      -orig-id: EM_CYGNUS_FRV
    0x5aa5:
      id: dlx
      -orig-id: EM_DLX
      doc: openDLX
    0x7650:
      id: cygnus_d10v
      -orig-id: EM_CYGNUS_D10V
    0x7676:
      id: cygnus_d30v
      -orig-id: EM_CYGNUS_D30V
    0x8217:
      id: ip2k_old
      -orig-id: EM_IP2K_OLD
    0x9025:
      id: cygnus_powerpc
      -orig-id: EM_CYGNUS_POWERPC
    0x9026:
      id: alpha
      -orig-id: EM_ALPHA
    0x9041:
      id: cygnus_m32r
      -orig-id: EM_CYGNUS_M32R
    0x9080:
      id: cygnus_v850
      -orig-id: EM_CYGNUS_V850
    0xa390:
      id: s390_old
      -orig-id: EM_S390_OLD
    0xabc7:
      id: xtensa_old
      -orig-id: EM_XTENSA_OLD
    0xad45:
      id: xstormy16
      -orig-id: EM_XSTORMY16
    0xbaab:
      id: microblaze_old
      -orig-id: EM_MICROBLAZE_OLD
    0xbeef:
      id: cygnus_mn10300
      -orig-id: EM_CYGNUS_MN10300
    0xdead:
      id: cygnus_mn10200
      -orig-id: EM_CYGNUS_MN10200
    0xfeb0:
      id: m32c_old
      -orig-id: EM_M32C_OLD
      doc: Renesas M32C and M16C
    0xfeba:
      id: iq2000
      -orig-id: EM_IQ2000
      doc: Vitesse IQ2000
    0xfebb:
      id: nios32
      -orig-id: EM_NIOS32
    0xf00d:
      id: cygnus_mep
      -orig-id: EM_CYGNUS_MEP
      doc: Toshiba MeP
    0xfeed:
      id: moxie_old
      -orig-id: EM_MOXIE_OLD
      doc: Old, unofficial value for Moxie
  ph_type:
    0: null_type
    1: load
    2: dynamic
    3: interp
    4: note
    5: shlib
    6: phdr
    7: tls
    # 0x60000000: lo_os
    0x65041580: pax_flags
    # 0x6fffffff: hi_os
    # 0x70000000: lo_proc
    0x70000001: arm_exidx
    # 0x7fffffff: hi_proc
    0x6474e550: gnu_eh_frame
    0x6474e551: gnu_stack
    0x6474e552: gnu_relro
    0x6474e553: gnu_property
  # https://docs.oracle.com/en/operating-systems/solaris/oracle-solaris/11.4/linkers-libraries/section-headers.html#GUID-2CBE4879-2E76-426E-BB7F-CF0CB1D87C52__CHAPTER6-73445
  # https://github.com/illumos/illumos-gate/blob/1d806c5f41/usr/src/boot/sys/sys/elf_common.h#L377-L462
  sh_type:
    0: null_type
    1: progbits
    2: symtab
    3: strtab
    4: rela
    5: hash
    6: dynamic
    7: note
    8: nobits
    9: rel
    10: shlib
    11: dynsym
    14: init_array
    15: fini_array
    16: preinit_array
    17: group
    18: symtab_shndx
    19: relr
    # 0x60000000: lo_os
    # 0x6fffffef: lo_sunw
    0x6fffffec:
      id: sunw_symnsort
      doc-ref: https://docs.oracle.com/en/operating-systems/solaris/oracle-solaris/11.4/linkers-libraries/section-headers.html#GUID-2CBE4879-2E76-426E-BB7F-CF0CB1D87C52__CHAPTER6-73445
    0x6fffffed:
      id: sunw_phname
      doc-ref: https://docs.oracle.com/en/operating-systems/solaris/oracle-solaris/11.4/linkers-libraries/section-headers.html#GUID-2CBE4879-2E76-426E-BB7F-CF0CB1D87C52__CHAPTER6-73445
    0x6fffffee:
      id: sunw_ancillary
      doc-ref: https://docs.oracle.com/en/operating-systems/solaris/oracle-solaris/11.4/linkers-libraries/section-headers.html#GUID-2CBE4879-2E76-426E-BB7F-CF0CB1D87C52__CHAPTER6-73445
    0x6fffffef: sunw_capchain
    0x6ffffff0: sunw_capinfo
    0x6ffffff1: sunw_symsort
    0x6ffffff2: sunw_tlssort
    0x6ffffff3: sunw_ldynsym
    0x6ffffff4: sunw_dof
    0x6ffffff5: sunw_cap
    # 0x6ffffff5: gnu_attributes
    0x6ffffff6: sunw_signature
    # 0x6ffffff6: gnu_hash
    # 0x6ffffff7: gnu_liblist
    0x6ffffff7: sunw_annotate
    0x6ffffff8: sunw_debugstr
    0x6ffffff9: sunw_debug
    0x6ffffffa: sunw_move
    0x6ffffffb: sunw_comdat
    0x6ffffffc: sunw_syminfo
    0x6ffffffd: sunw_verdef
    # 0x6ffffffd: gnu_verdef
    0x6ffffffe: sunw_verneed
    # 0x6ffffffe: gnu_verneed
    0x6fffffff: sunw_versym
    # 0x6fffffff: gnu_versym
    # 0x6fffffff: hi_sunw
    # 0x6fffffff: hi_os
    # 0x70000000: lo_proc
    0x70000000: sparc_gotdata
    0x70000001: amd64_unwind
    # 0x70000001: arm_exidx
    0x70000002: arm_preemptmap
    0x70000003: arm_attributes
    0x70000004:
      id: arm_debugoverlay
      doc-ref: https://github.com/illumos/illumos-gate/blob/1d806c5f41/usr/src/boot/sys/sys/elf_common.h#L425
    0x70000005:
      id: arm_overlaysection
      doc-ref: https://github.com/illumos/illumos-gate/blob/1d806c5f41/usr/src/boot/sys/sys/elf_common.h#L426
    # 0x7fffffff: hi_proc
    # 0x80000000: lo_user
    # 0xffffffff: hi_user
  # https://docs.oracle.com/en/operating-systems/solaris/oracle-solaris/11.4/linkers-libraries/symbol-table-section.html#GUID-DBDD92CB-D58A-4CB5-861F-8868D8CB4552__CHAPTER7-27
  symbol_visibility:
    0: default
    1: internal
    2: hidden
    3: protected
    4: exported
    5: singleton
    6: eliminate
  # https://docs.oracle.com/en/operating-systems/solaris/oracle-solaris/11.4/linkers-libraries/symbol-table-section.html#GUID-DBDD92CB-D58A-4CB5-861F-8868D8CB4552__CHAPTER6-TBL-21
  symbol_binding:
    0:
      id: local
      doc: not visible outside the object file containing their definition
    1:
      id: global_symbol
      -affected-by: 90
      doc: |
        visible to all object files being combined

        As of KSC 0.9, this enum key can't be called \`global\` because it would
        cause a syntax error in Python (it is a keyword).
    2:
      id: weak
      doc: like \`symbol_binding::global_symbol\`, but their definitions have lower precedence
    # 10: lo_os
    10:
      id: os10
      doc: reserved for operating system-specific semantics
    11:
      id: os11
      doc: reserved for operating system-specific semantics
    12:
      id: os12
      doc: reserved for operating system-specific semantics
    # 12: hi_os
    # 13: lo_proc
    13:
      id: proc13
      doc: reserved for processor-specific semantics
    14:
      id: proc14
      doc: reserved for processor-specific semantics
    15:
      id: proc15
      doc: reserved for processor-specific semantics
    # 15: hi_proc
  # https://docs.oracle.com/en/operating-systems/solaris/oracle-solaris/11.4/linkers-libraries/symbol-table-section.html#GUID-DBDD92CB-D58A-4CB5-861F-8868D8CB4552__CHAPTER6-TBL-22
  symbol_type:
    0: no_type
    1:
      id: object
      doc: associated with a data object, such as a variable, an array, and so on
    2:
      id: func
      doc: associated with a function or other executable code
    3:
      id: section
      doc: associated with a section
    4:
      id: file
      doc: symbol's name gives the name of the source file associated with the object file
    5:
      id: common
      doc: labels an uninitialized common block
    6:
      id: tls
      doc: specifies a thread-local storage entity
    8:
      id: relc
      doc: complex relocation expression
      doc-ref: https://sourceware.org/git/?p=binutils-gdb.git;a=blob;f=include/elf/common.h;h=0d381f0d27;hb=HEAD#l1009
    9:
      id: srelc
      doc: signed complex relocation expression
      doc-ref: https://sourceware.org/git/?p=binutils-gdb.git;a=blob;f=include/elf/common.h;h=0d381f0d27;hb=HEAD#l1010
    # 10: lo_os
    10:
      id: gnu_ifunc
      doc: |
        reserved for OS-specific semantics

        \`STT_GNU_IFUNC\` is a GNU extension to ELF format that adds support for "indirect functions"
    11:
      id: os11
      doc: reserved for OS-specific semantics
    12:
      id: os12
      doc: reserved for OS-specific semantics
    # 12: hi_os
    # 13: lo_proc
    13:
      id: proc13
      doc: reserved for processor-specific semantics
    14:
      id: proc14
      doc: reserved for processor-specific semantics
    15:
      id: proc15
      doc: reserved for processor-specific semantics
    # 15: hi_proc
  # https://docs.oracle.com/en/operating-systems/solaris/oracle-solaris/11.4/linkers-libraries/section-headers.html#GUID-2CBE4879-2E76-426E-BB7F-CF0CB1D87C52__CHAPTER6-TBL-16
  # see also \`_root.sh_idx_*\` instances
  section_header_idx_special:
    0:
      id: undefined
      -orig-id: SHN_UNDEF
    # 0xff00: lo_reserve
    # 0xff00: lo_proc
    0xff00: before
    0xff01: after
    0xff02: amd64_lcommon
    # 0xff1f: hi_proc
    # 0xff20: lo_os
    # 0xff3f: lo_sunw
    0xff3f: sunw_ignore
    # 0xff3f: hi_sunw
    # 0xff3f: hi_os
    0xfff1: abs
    0xfff2: common
    0xffff: xindex
    # 0xffff: hi_reserve
  # https://docs.oracle.com/en/operating-systems/solaris/oracle-solaris/11.4/linkers-libraries/dynamic-section.html#GUID-4336A69A-D905-4FCE-A398-80375A9E6464__CHAPTER6-TBL-52
  # https://sourceware.org/git/?p=glibc.git;a=blob;f=elf/elf.h;hb=0f62fe0532#l853
  dynamic_array_tags:
    0: "null"            # Marks end of dynamic section
    1: needed            # Name of needed library
    2: pltrelsz          # Size in bytes of PLT relocs
    3: pltgot            # Processor defined value
    4: hash              # Address of symbol hash table
    5: strtab            # Address of string table
    6: symtab            # Address of symbol table
    7: rela              # Address of Rela relocs
    8: relasz            # Total size of Rela relocs
    9: relaent           # Size of one Rela reloc
    10: strsz            # Size of string table
    11: syment           # Size of one symbol table entry
    12: init             # Address of init function
    13: fini             # Address of termination function
    14: soname           # Name of shared object
    15: rpath            # Library search path (deprecated)
    16: symbolic         # Start symbol search here
    17: rel              # Address of Rel relocs
    18: relsz            # Total size of Rel relocs
    19: relent           # Size of one Rel reloc
    20: pltrel           # Type of reloc in PLT
    21: debug            # For debugging; unspecified
    22: textrel          # Reloc might modify .text
    23: jmprel           # Address of PLT relocs
    24: bind_now         # Process relocations of object
    25: init_array       # Array with addresses of init fct
    26: fini_array       # Array with addresses of fini fct
    27: init_arraysz     # Size in bytes of DT_INIT_ARRAY
    28: fini_arraysz     # Size in bytes of DT_FINI_ARRAY
    29: runpath          # Library search path
    30: flags            # Flags for the object being loaded
    32: preinit_array    # Array with addresses of preinit fct
    33: preinit_arraysz  # Size in bytes of DT_PREINIT_ARRAY
    34: symtab_shndx     # Address of SYMTAB_SHNDX section
    35: relrsz
    36: relr
    37: relrent
    # 38: encoding  # special value (marker):
                    # Values \`v >= ::encoding and v < ::lo_os\` follow the rules
                    # for the interpretation of the d_un union as follows:
                    # even number == 'd_ptr', odd number == 'd_val' or none
                    # <https://github.com/tianocore/edk2-archive/blob/072289f45c/ArmPlatformPkg/Library/ArmShellCmdRunAxf/elf_common.h#L336-L340>
    # 0x6000000d: lo_os
    0x6000000d: sunw_auxiliary
    0x6000000e:
      id: sunw_rtldinf
      doc-ref:
        - https://github.com/gcc-mirror/gcc/blob/240f07805d/libphobos/libdruntime/core/sys/solaris/sys/link.d#L76
        - https://github.com/illumos/illumos-gate/blob/1d806c5f41/usr/src/uts/common/sys/link.h#L135
    0x6000000f:
      id: sunw_filter
      doc: |
        Note: <https://docs.oracle.com/en/operating-systems/solaris/oracle-solaris/11.4/linkers-libraries/dynamic-section.html#GUID-4336A69A-D905-4FCE-A398-80375A9E6464__CHAPTER6-TBL-52>
        states that \`DT_SUNW_FILTER\` has the value \`0x6000000e\`, but this is
        apparently only a human error - that would make the value collide with
        the previous one (\`DT_SUNW_RTLDINF\`) and there is not even a single
        source supporting this other than verbatim copies of the same table.
      doc-ref:
        - https://github.com/gcc-mirror/gcc/blob/240f07805d/libphobos/libdruntime/core/sys/solaris/sys/link.d#L77
        - https://github.com/illumos/illumos-gate/blob/1d806c5f41/usr/src/uts/common/sys/link.h#L136
    0x60000010: sunw_cap
    0x60000011: sunw_symtab
    0x60000012: sunw_symsz
    # 0x60000013: sunw_encoding  # DT_* encoding rules apply again for values
                                 # \`v >= ::sunw_encoding and v <= ::hi_os\` (see
                                 # \`::encoding\` description)
    0x60000013: sunw_sortent
    0x60000014: sunw_symsort
    0x60000015: sunw_symsortsz
    0x60000016: sunw_tlssort
    0x60000017: sunw_tlssortsz
    0x60000018: sunw_capinfo
    0x60000019: sunw_strpad
    0x6000001a: sunw_capchain
    0x6000001b: sunw_ldmach
    0x6000001c: sunw_symtab_shndx
    0x6000001d: sunw_capchainent
    0x6000001e: sunw_deferred
    0x6000001f: sunw_capchainsz
    0x60000020: sunw_phname
    0x60000021: sunw_parent
    0x60000023: sunw_sx_aslr
    0x60000025: sunw_relax
    0x60000027: sunw_kmod
    0x60000029: sunw_sx_nxheap
    0x6000002b: sunw_sx_nxstack
    0x6000002d: sunw_sx_adiheap
    0x6000002f: sunw_sx_adistack
    0x60000031: sunw_sx_ssbd
    0x60000032: sunw_symnsort
    0x60000033: sunw_symnsortsz
    # 0x6ffff000: hi_os
    # 0x6ffffd00: val_rng_lo  # Values \`v >= ::val_rng_lo and v <= ::val_rng_hi\`
                              # use the 'd_val' field of the dynamic structure
    0x6ffffdf4:
      id: gnu_flags_1
      doc-ref: https://sourceware.org/git/?p=binutils-gdb.git;a=blob;f=include/elf/common.h;h=0d381f0d27;hb=HEAD#l1091
    0x6ffffdf5: gnu_prelinked   # Prelinking timestamp
    0x6ffffdf6: gnu_conflictsz  # Size of conflict section
    0x6ffffdf7: gnu_liblistsz   # Size of library list
    0x6ffffdf8: checksum
    0x6ffffdf9: pltpadsz
    0x6ffffdfa: moveent
    0x6ffffdfb: movesz
    0x6ffffdfc: feature_1       # Feature selection (DTF_*).
    0x6ffffdfd: posflag_1       # Flags for DT_* entries, effecting the following DT_* entry.
    0x6ffffdfe: syminsz         # Size of syminfo table (in bytes)
    0x6ffffdff: syminent        # Entry size of syminfo
    # 0x6ffffdff: val_rng_hi
    # 0x6ffffe00: addr_rng_lo  # Values \`v >= ::addr_rng_lo and v <= ::addr_rng_hi\`
                               # use the 'd_ptr' field of the dynamic structure
    0x6ffffef5: gnu_hash
    0x6ffffef6: tlsdesc_plt
    0x6ffffef7: tlsdesc_got
    0x6ffffef8: gnu_conflict
    0x6ffffef9: gnu_liblist
    0x6ffffefa: config
    0x6ffffefb: depaudit
    0x6ffffefc: audit
    0x6ffffefd: pltpad
    0x6ffffefe: movetab
    0x6ffffeff: syminfo
    # 0x6ffffeff: addr_rng_hi
    0x6ffffff0: versym
    0x6ffffff9: relacount
    0x6ffffffa: relcount
    0x6ffffffb: flags_1
    0x6ffffffc: verdef
    0x6ffffffd: verdefnum
    0x6ffffffe: verneed
    0x6fffffff: verneednum
    # 0x70000000: lo_proc
    0x70000001:
      id: sparc_register
      doc-ref: https://github.com/illumos/illumos-gate/blob/1d806c5f41/usr/src/boot/sys/sys/elf_common.h#L634-L635
    0x07000001:
      id: deprecated_sparc_register
      doc: |
        DT_SPARC_REGISTER was originally assigned 0x7000001. It is processor
        specific, and should have been in the range DT_LOPROC-DT_HIPROC
        instead of here. When the error was fixed,
        DT_DEPRECATED_SPARC_REGISTER was created to maintain backward
        compatability.
      doc-ref:
        - https://github.com/illumos/illumos-gate/blob/1d806c5f41/usr/src/cmd/sgs/libconv/common/dynamic.c#L522-L528
        - https://github.com/illumos/illumos-gate/blob/1d806c5f41/usr/src/boot/sys/sys/elf_common.h#L634-L635
    0x7ffffffd: auxiliary
    0x7ffffffe: used
    0x7fffffff: filter
    # 0x7fffffff: hi_proc
`
  },
  {
    id: "ksy_java_class",
    name: "Java Class",
    category: "Executable",
    metadata: {
      isGenerated: true,
      fileExtensions: ["class"],
      description: "",
      originalCategory: "executable",
      filePath: "executable/java_class.ksy",
      signature: {"offset":0,"bytes":[202,254,186,190]},
      endian: "be"
    },
    content: `meta:
  id: java_class
  file-extension: class
  xref:
    justsolve: Java
    pronom: x-fmt/415
    wikidata: Q2193155
  license: CC0-1.0
  endian: be
doc-ref:
  - https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-4.html
  - https://docs.oracle.com/javase/specs/jls/se6/jls3.pdf
  - https://github.com/openjdk/jdk/blob/jdk-21%2B14/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/runtime/ClassConstants.java
  - https://github.com/openjdk/jdk/blob/jdk-21%2B14/src/java.base/share/native/include/classfile_constants.h.template
  - https://github.com/openjdk/jdk/blob/jdk-21%2B14/src/hotspot/share/classfile/classFileParser.cpp
seq:
  - id: magic
    contents: [0xca, 0xfe, 0xba, 0xbe]
  - id: version_minor
    type: u2
  - id: version_major
    type: u2
    valid:
      # https://github.com/file/file/blob/905ca555/magic/Magdir/cafebabe#L11-L12
      min: 43
  - id: constant_pool_count
    type: u2
  - id: constant_pool
    type: 'constant_pool_entry(_index != 0 ? constant_pool[_index - 1].is_two_entries : false)'
    repeat: expr
    repeat-expr: constant_pool_count - 1
  - id: access_flags
    type: u2
  - id: this_class
    type: u2
  - id: super_class
    type: u2
  - id: interfaces_count
    type: u2
  - id: interfaces
    type: u2
    repeat: expr
    repeat-expr: interfaces_count
  - id: fields_count
    type: u2
  - id: fields
    type: field_info
    repeat: expr
    repeat-expr: fields_count
  - id: methods_count
    type: u2
  - id: methods
    type: method_info
    repeat: expr
    repeat-expr: methods_count
  - id: attributes_count
    type: u2
  - id: attributes
    type: attribute_info
    repeat: expr
    repeat-expr: attributes_count
types:
  constant_pool_entry:
    doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4
    params:
      - id: is_prev_two_entries
        type: bool
    seq:
      - id: tag
        type: u1
        enum: tag_enum
        if: not is_prev_two_entries
      - id: cp_info
        type:
          switch-on: tag
          cases:
            tag_enum::class_type: class_cp_info
            tag_enum::field_ref: field_ref_cp_info
            tag_enum::method_ref: method_ref_cp_info
            tag_enum::interface_method_ref: interface_method_ref_cp_info
            tag_enum::string: string_cp_info
            tag_enum::integer: integer_cp_info
            tag_enum::float: float_cp_info
            tag_enum::long: long_cp_info
            tag_enum::double: double_cp_info
            tag_enum::name_and_type: name_and_type_cp_info
            tag_enum::utf8: utf8_cp_info
            tag_enum::method_handle: method_handle_cp_info
            tag_enum::method_type: method_type_cp_info
            tag_enum::invoke_dynamic: invoke_dynamic_cp_info
            tag_enum::dynamic: dynamic_cp_info
            tag_enum::module: module_package_cp_info
            tag_enum::package: module_package_cp_info
        if: not is_prev_two_entries
    instances:
      is_two_entries:
        value: 'is_prev_two_entries ? false : tag == tag_enum::long or tag == tag_enum::double'
    enums:
      tag_enum:
        1:
          id: utf8
          -orig-id: CONSTANT_Utf8
        3:
          id: integer
          -orig-id: CONSTANT_Integer
        4:
          id: float
          -orig-id: CONSTANT_Float
        5:
          id: long
          -orig-id: CONSTANT_Long
        6:
          id: double
          -orig-id: CONSTANT_Double
        7:
          id: class_type
          -orig-id: CONSTANT_Class
        8:
          id: string
          -orig-id: CONSTANT_String
        9:
          id: field_ref
          -orig-id: CONSTANT_Fieldref
        10:
          id: method_ref
          -orig-id: CONSTANT_Methodref
        11:
          id: interface_method_ref
          -orig-id: CONSTANT_InterfaceMethodref
        12:
          id: name_and_type
          -orig-id: CONSTANT_NameAndType
        15:
          id: method_handle
          -orig-id: CONSTANT_MethodHandle
        16:
          id: method_type
          -orig-id: CONSTANT_MethodType
        17:
          id: dynamic
          -orig-id: CONSTANT_Dynamic
        18:
          id: invoke_dynamic
          -orig-id: CONSTANT_InvokeDynamic
        19:
          id: module
          -orig-id: CONSTANT_Module
        20:
          id: package
          -orig-id: CONSTANT_Package

  version_guard:
    doc: |
      \`class\` file format version 45.3 (appeared in the very first publicly
      known release of Java SE AND JDK 1.0.2, released 23th January 1996) is so
      ancient that it's taken for granted. Earlier formats seem to be
      undocumented. Changes of \`version_minor\` don't change \`class\` format.
      Earlier \`version_major\`s likely belong to Oak programming language, the
      proprietary predecessor of Java.
    doc-ref:
      - "James Gosling, Bill Joy and Guy Steele. The Java Language Specification. English. Ed. by Lisa Friendly. Addison-Wesley, Aug. 1996, p. 825. ISBN: 0-201-63451-1."
      - "Frank Yellin and Tim Lindholm. The Java Virtual Machine Specification. English. Ed. by Lisa Friendly. Addison-Wesley, Sept. 1996, p. 475. ISBN: 0-201-63452-X."
    params:
      - id: major
        type: u2
    seq:
      - size: 0
        valid:
          expr: _root.version_major >= major

  class_cp_info:
    -orig-id: CONSTANT_Class_info
    doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.1
    seq:
      - id: name_index
        type: u2
    instances:
      name_as_info:
        value: _root.constant_pool[name_index - 1].cp_info.as<utf8_cp_info>
      name_as_str:
        value: name_as_info.value
  field_ref_cp_info:
    -orig-id: CONSTANT_Fieldref_info
    doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.2
    seq:
      - id: class_index
        type: u2
      - id: name_and_type_index
        type: u2
    instances:
      class_as_info:
        value: _root.constant_pool[class_index - 1].cp_info.as<class_cp_info>
      name_and_type_as_info:
        value: _root.constant_pool[name_and_type_index - 1].cp_info.as<name_and_type_cp_info>
  method_ref_cp_info:
    -orig-id: CONSTANT_Methodref_info
    doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.2
    seq:
      - id: class_index
        type: u2
      - id: name_and_type_index
        type: u2
    instances:
      class_as_info:
        value: _root.constant_pool[class_index - 1].cp_info.as<class_cp_info>
      name_and_type_as_info:
        value: _root.constant_pool[name_and_type_index - 1].cp_info.as<name_and_type_cp_info>
  interface_method_ref_cp_info:
    -orig-id: CONSTANT_InterfaceMethodref_info
    doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.2
    seq:
      - id: class_index
        type: u2
      - id: name_and_type_index
        type: u2
    instances:
      class_as_info:
        value: _root.constant_pool[class_index - 1].cp_info.as<class_cp_info>
      name_and_type_as_info:
        value: _root.constant_pool[name_and_type_index - 1].cp_info.as<name_and_type_cp_info>
  string_cp_info:
    -orig-id: CONSTANT_String_info
    doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.3
    seq:
      - id: string_index
        type: u2
  integer_cp_info:
    -orig-id: CONSTANT_Integer_info
    doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.4
    seq:
      - id: value
        type: u4
  float_cp_info:
    -orig-id: CONSTANT_Float_info
    doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.5
    seq:
      - id: value
        type: f4
  long_cp_info:
    -orig-id: CONSTANT_Long_info
    doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.5
    seq:
      - id: value
        type: u8
  double_cp_info:
    -orig-id: CONSTANT_Double_info
    doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.6
    seq:
      - id: value
        type: f8
  name_and_type_cp_info:
    -orig-id: CONSTANT_NameAndType_info
    doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.6
    seq:
      - id: name_index
        type: u2
      - id: descriptor_index
        type: u2
    instances:
      name_as_info:
        value: _root.constant_pool[name_index - 1].cp_info.as<utf8_cp_info>
      name_as_str:
        value: name_as_info.value
      descriptor_as_info:
        value: _root.constant_pool[descriptor_index - 1].cp_info.as<utf8_cp_info>
      descriptor_as_str:
        value: descriptor_as_info.value
  utf8_cp_info:
    -orig-id: CONSTANT_Utf8_info
    doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.7
    seq:
      - id: str_len
        type: u2
      - id: value
        type: str
        size: str_len
        encoding: UTF-8
  method_handle_cp_info:
    -orig-id: CONSTANT_MethodHandle_info
    doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.8
    seq:
      - type: version_guard(51)
      - id: reference_kind
        type: u1
        enum: reference_kind_enum
      - id: reference_index
        type: u2
    enums:
      reference_kind_enum:
        1: get_field
        2: get_static
        3: put_field
        4: put_static
        5: invoke_virtual
        6: invoke_static
        7: invoke_special
        8: new_invoke_special
        9: invoke_interface
  method_type_cp_info:
    -orig-id: CONSTANT_MethodType_info
    doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.9
    seq:
      - type: version_guard(51)
      - id: descriptor_index
        type: u2
  dynamic_cp_info:
    -orig-id: CONSTANT_Dynamic_info
    doc-ref: https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-4.html#jvms-4.4.10
    seq:
      - type: version_guard(55)
      - id: bootstrap_method_attr_index
        type: u2
      - id: name_and_type_index
        type: u2
  invoke_dynamic_cp_info:
    -orig-id: CONSTANT_InvokeDynamic_info
    doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.4.10
    seq:
      - type: version_guard(51)
      - id: bootstrap_method_attr_index
        type: u2
      - id: name_and_type_index
        type: u2
  module_package_cp_info:
    -orig-id:
      - CONSTANT_Module_info
      - CONSTANT_Package_info
    doc: |
      Project Jigsaw modules introduced in Java 9
    doc-ref:
      - https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-3.html#jvms-3.16
      - https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-4.html#jvms-4.4.11
      - https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-4.html#jvms-4.4.12
    seq:
      - type: version_guard(53)
      - id: name_index
        type: u2
    instances:
      name_as_info:
        value: _root.constant_pool[name_index - 1].cp_info.as<utf8_cp_info>
      name_as_str:
        value: name_as_info.value
  field_info:
    -orig-id: field_info
    doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.5
    seq:
      - id: access_flags
        type: u2
      - id: name_index
        type: u2
      - id: descriptor_index
        type: u2
      - id: attributes_count
        type: u2
      - id: attributes
        type: attribute_info
        repeat: expr
        repeat-expr: attributes_count
    instances:
      name_as_str:
        value: _root.constant_pool[name_index - 1].cp_info.as<utf8_cp_info>.value
  attribute_info:
    -orig-id: attribute_info
    doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.7
    seq:
      - id: name_index
        type: u2
      - id: attribute_length
        type: u4
      - id: info
        size: attribute_length
        type:
          switch-on: name_as_str
          cases:
            '"Code"': attr_body_code # 4.7.3
            '"Exceptions"': attr_body_exceptions # 4.7.5
            '"SourceFile"': attr_body_source_file # 4.7.10
            '"LineNumberTable"': attr_body_line_number_table # 4.7.12
    instances:
      name_as_str:
        value: _root.constant_pool[name_index - 1].cp_info.as<utf8_cp_info>.value
    types:
      attr_body_code:
        doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.7.3
        seq:
          - id: max_stack
            type: u2
          - id: max_locals
            type: u2
          - id: code_length
            type: u4
          - id: code
            size: code_length
          - id: exception_table_length
            type: u2
          - id: exception_table
            type: exception_entry
            repeat: expr
            repeat-expr: exception_table_length
          - id: attributes_count
            type: u2
          - id: attributes
            type: attribute_info
            repeat: expr
            repeat-expr: attributes_count
        types:
          exception_entry:
            doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.7.3
            seq:
              - id: start_pc
                type: u2
                doc: |
                  Start of a code region where exception handler is being
                  active, index in code array (inclusive)
              - id: end_pc
                type: u2
                doc: |
                  End of a code region where exception handler is being
                  active, index in code array (exclusive)
              - id: handler_pc
                type: u2
                doc: Start of exception handler code, index in code array
              - id: catch_type
                type: u2
                doc: |
                  Exception class that this handler catches, index in constant
                  pool, or 0 (catch all exceptions handler, used to implement
                  \`finally\`).
            instances:
              catch_exception:
                value: _root.constant_pool[catch_type - 1]
                if: catch_type != 0
      attr_body_exceptions:
        doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.7.5
        seq:
          - id: number_of_exceptions
            type: u2
          - id: exceptions
            type: exception_table_entry
            repeat: expr
            repeat-expr: number_of_exceptions
        types:
          exception_table_entry:
            seq:
              - id: index
                type: u2
            instances:
              as_info:
                value: _root.constant_pool[index - 1].cp_info.as<class_cp_info>
              name_as_str:
                value: as_info.name_as_str
      attr_body_source_file:
        doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.7.10
        seq:
          - id: sourcefile_index
            type: u2
        instances:
          sourcefile_as_str:
            value: _root.constant_pool[sourcefile_index - 1].cp_info.as<utf8_cp_info>.value
      attr_body_line_number_table:
        doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.7.12
        seq:
          - id: line_number_table_length
            type: u2
          - id: line_number_table
            type: line_number_table_entry
            repeat: expr
            repeat-expr: line_number_table_length
        types:
          line_number_table_entry:
            seq:
              - id: start_pc
                type: u2
              - id: line_number
                type: u2
  method_info:
    -orig-id: method_info
    doc-ref: https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.6
    seq:
      - id: access_flags
        type: u2
      - id: name_index
        type: u2
      - id: descriptor_index
        type: u2
      - id: attributes_count
        type: u2
      - id: attributes
        type: attribute_info
        repeat: expr
        repeat-expr: attributes_count
    instances:
      name_as_str:
        value: _root.constant_pool[name_index - 1].cp_info.as<utf8_cp_info>.value
`
  },
  {
    id: "ksy_mach_o",
    name: "Mach O",
    category: "Executable",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "",
      originalCategory: "executable",
      filePath: "executable/mach_o.ksy",
      endian: "le"
    },
    content: `meta:
  id: mach_o
  xref:
    justsolve: Mach-O
    pronom:
      - fmt/692 # Mach-O 32bit
      - fmt/693 # Mach-O 64bit
    wikidata: Q2627217
  license: MIT
  ks-version: 0.9
  imports:
    - /serialization/asn1/asn1_der
  endian: le
doc-ref:
  - https://www.stonedcoder.org/~kd/lib/MachORuntime.pdf
  - https://opensource.apple.com/source/python_modules/python_modules-43/Modules/macholib-1.5.1/macholib-1.5.1.tar.gz
  - https://github.com/comex/cs/blob/07a88f9/macho_cs.py
  - https://opensource.apple.com/source/Security/Security-55471/libsecurity_codesigning/requirements.grammar.auto.html
  - https://github.com/apple/darwin-xnu/blob/xnu-2782.40.9/bsd/sys/codesign.h
  - https://opensource.apple.com/source/dyld/dyld-852/src/ImageLoaderMachO.cpp.auto.html
  - https://opensource.apple.com/source/dyld/dyld-852/src/ImageLoaderMachOCompressed.cpp.auto.html
seq:
  - id: magic
    type: u4be
    enum: magic_type
  - id: header
    type: mach_header
  - id: load_commands
    type: load_command
    repeat: expr
    repeat-expr: header.ncmds
enums:
  magic_type:
    # Note that for multiarch (a.k.a. fat) Mach-O files, which are the primary
    # kind you find on macOS today, you should instead use mach_o_fat.ksy, which
    # parses the fat header and embeds mach_o.ksy to parse each arch.
    0xFEEDFACE: macho_be_x86 # MH_MAGIC:    mach-o, big-endian,    x86
    0xCEFAEDFE: macho_le_x86 # MH_CIGAM:    mach-o, little-endian, x86
    0xFEEDFACF: macho_be_x64 # MH_MAGIC_64: mach-o, big-endian,    x64
    0xCFFAEDFE: macho_le_x64 # MH_CIGAM_64: mach-o, little-endian, x64
  cpu_type:
    0xffffffff: any
    1:          vax
    2:          romp
    4:          ns32032
    5:          ns32332
    7:          i386
    8:          mips
    9:          ns32532
    11:         hppa
    12:         arm
    13:         mc88000
    14:         sparc
    15:         i860
    16:         i860_little
    17:         rs6000
    18:         powerpc
    0x1000000:  abi64     # flag
    0x1000007:  x86_64    # abi64 | i386
    0x1000012:  powerpc64 # abi64 | powerpc
    0x100000c:  arm64     # abi64 | arm
  file_type:
    # https://opensource.apple.com/source/xnu/xnu-1456.1.26/EXTERNAL_HEADERS/mach-o/loader.h
    0x1: object      # relocatable object file
    0x2: execute     # demand paged executable file
    0x3: fvmlib      # fixed VM shared library file
    0x4: core        # core file
    0x5: preload     # preloaded executable file
    0x6: dylib       # dynamically bound shared library
    0x7: dylinker    # dynamic link editor
    0x8: bundle      # dynamically bound bundle file
    0x9: dylib_stub  # shared library stub for static linking only, no section contents
    0xa: dsym        # companion file with only debug sections
    0xb: kext_bundle # x86_64 kexts
  load_command_type:
    # https://opensource.apple.com/source/xnu/xnu-1456.1.26/EXTERNAL_HEADERS/mach-o/loader.h
    0x80000000: req_dyld
    0x1       : segment        # segment of this file to be mapped
    0x2       : symtab         # link-edit stab symbol table info
    0x3       : symseg         # link-edit gdb symbol table info (obsolete)
    0x4       : thread         # thread
    0x5       : unix_thread    # unix thread (includes a stack)
    0x6       : load_fvm_lib   # load a specified fixed VM shared library
    0x7       : id_fvm_lib     # fixed VM shared library identification
    0x8       : ident          # object identification info (obsolete)
    0x9       : fvm_file       # fixed VM file inclusion (internal use)
    0xa       : prepage        # prepage command (internal use)
    0xb       : dysymtab       # dynamic link-edit symbol table info
    0xc       : load_dylib     # load a dynamically linked shared library
    0xd       : id_dylib       # dynamically linked shared lib ident
    0xe       : load_dylinker  # load a dynamic linker
    0xf       : id_dylinker    # dynamic linker identification
    0x10      : prebound_dylib # modules prebound for a dynamically
    # linked shared library
    0x11      : routines           # image routines
    0x12      : sub_framework      # sub framework
    0x13      : sub_umbrella       # sub umbrella
    0x14      : sub_client         # sub client
    0x15      : sub_library        # sub library
    0x16      : twolevel_hints     # two-level namespace lookup hints
    0x17      : prebind_cksum      # prebind checksum
    0x80000018: load_weak_dylib    # load a dynamically linked shared library that is allowed to be missing (all symbols are weak imported)
    0x19      : segment_64         # 64-bit segment of this file to be mapped
    0x1a      : routines_64        # 64-bit image routines
    0x1b      : uuid               # the uuid
    0x8000001c: rpath              # runpath additions
    0x1d      : code_signature     # local of code signature
    0x1e      : segment_split_info # local of info to split segments
    0x8000001f: reexport_dylib     # load and re-export dylib
    0x20      : lazy_load_dylib    # delay load of dylib until first use
    0x21      : encryption_info    # encrypted segment information
    0x22      : dyld_info          # compressed dyld information
    0x80000022: dyld_info_only     # compressed dyld information only
    0x80000023: load_upward_dylib
    0x24      : version_min_macosx
    0x25      : version_min_iphoneos
    0x26      : function_starts
    0x27      : dyld_environment
    0x80000028: main
    0x29      : data_in_code
    0x2A      : source_version
    0x2B      : dylib_code_sign_drs
    0x2C      : encryption_info_64
    0x2D      : linker_option
    0x2E      : linker_optimization_hint
    0x2F      : version_min_tvos
    0x30      : version_min_watchos
    0x32      : build_version # LC_BUILD_VERSION
types:
  macho_flags:
    -webide-representation: "{this:flags}"
    params:
      - id: value
        type: u4
    instances:
      no_undefs:
        value: value & 0x1 != 0
        doc: "the object file has no undefined references"
      incr_link:
        value: value & 0x2 != 0
        doc: "the object file is the output of an incremental link against a base file and can't be link edited again"
      dyld_link:
        value: value & 0x4 != 0
        doc: "the object file is input for the dynamic linker and can't be staticly link edited again"
      bind_at_load:
        value: value & 0x8 != 0
        doc: "the object file's undefined references are bound by the dynamic linker when loaded."
      prebound:
        value: value & 0x10 != 0
        doc: "the file has its dynamic undefined references prebound."
      split_segs:
        value: value & 0x20 != 0
        doc: "the file has its read-only and read-write segments split"
      lazy_init:
        value: value & 0x40 != 0
        doc: "the shared library init routine is to be run lazily via catching memory faults to its writeable segments (obsolete)"
      two_level:
        value: value & 0x80 != 0
        doc: "the image is using two-level name space bindings"
      force_flat:
        value: value & 0x100 != 0
        doc: "the executable is forcing all images to use flat name space bindings"
      no_multi_defs:
        value: value & 0x200 != 0
        doc: "this umbrella guarantees no multiple defintions of symbols in its sub-images so the two-level namespace hints can always be used."
      no_fix_prebinding:
        value: value & 0x400 != 0
        doc: "do not have dyld notify the prebinding agent about this executable"
      prebindable:
        value: value & 0x800 != 0
        doc: "the binary is not prebound but can have its prebinding redone. only used when MH_PREBOUND is not set."
      all_mods_bound:
        value: value & 0x1000 != 0
        doc: "indicates that this binary binds to all two-level namespace modules of its dependent libraries. only used when MH_PREBINDABLE and MH_TWOLEVEL are both set."
      subsections_via_symbols:
        value: value & 0x2000 != 0
        doc: "safe to divide up the sections into sub-sections via symbols for dead code stripping"
      canonical:
        value: value & 0x4000 != 0
        doc: "the binary has been canonicalized via the unprebind operation"
      weak_defines:
        value: value & 0x8000 != 0
        doc: "the final linked image contains external weak symbols"
      binds_to_weak:
        value: value & 0x10000 != 0
        doc: "the final linked image uses weak symbols"
      allow_stack_execution:
        value: value & 0x20000 != 0
        doc: "When this bit is set, all stacks in the task will be given stack execution privilege.  Only used in MH_EXECUTE filetypes."
      root_safe:
        value: value & 0x40000 != 0
        doc: "When this bit is set, the binary declares it is safe for use in processes with uid zero"
      setuid_safe:
        value: value & 0x80000 != 0
        doc: "When this bit is set, the binary declares it is safe for use in processes when issetugid() is true"
      no_reexported_dylibs:
        value: value & 0x100000 != 0
        doc: "When this bit is set on a dylib, the static linker does not need to examine dependent dylibs to see if any are re-exported"
      pie:
        value: value & 0x200000 != 0
        doc: "When this bit is set, the OS will load the main executable at a random address. Only used in MH_EXECUTE filetypes."
      dead_strippable_dylib:
        value: value & 0x400000 != 0
      has_tlv_descriptors:
        value: value & 0x800000 != 0
      no_heap_execution:
        value: value & 0x1000000 != 0
      app_extension_safe:
        value: value & 0x2000000 != 0
  mach_header:
    seq:
      - id: cputype
        type: u4
        enum: cpu_type
      - id: cpusubtype
        type: u4
      - id: filetype
        type: u4
        enum: file_type
      - id: ncmds
        type: u4
      - id: sizeofcmds
        type: u4
      - id: flags
        type: u4
      - id: reserved
        type: u4
        if: _root.magic == magic_type::macho_be_x64 or _root.magic == magic_type::macho_le_x64
    instances:
      flags_obj:
        type: macho_flags(flags)
        -webide-parse-mode: eager
  load_command:
    -webide-representation: '{type}: {body}'
    seq:
      - id: type
        type: u4
        enum: load_command_type
      - id: size
        -orig-id: cmdsize
        type: u4
      - id: body
        size: size - 8
        type:
          switch-on: type
          cases:
            'load_command_type::segment_64'              : segment_command_64
            'load_command_type::dyld_info'               : dyld_info_command
            'load_command_type::dyld_info_only'          : dyld_info_command
            'load_command_type::symtab'                  : symtab_command
            'load_command_type::dysymtab'                : dysymtab_command
            'load_command_type::load_dylinker'           : dylinker_command
            'load_command_type::id_dylinker'             : dylinker_command
            'load_command_type::dyld_environment'        : dylinker_command
            'load_command_type::uuid'                    : uuid_command
            'load_command_type::version_min_macosx'      : version_min_command
            'load_command_type::version_min_iphoneos'    : version_min_command
            'load_command_type::version_min_tvos'        : version_min_command
            'load_command_type::version_min_watchos'     : version_min_command
            'load_command_type::source_version'          : source_version_command
            'load_command_type::main'                    : entry_point_command
            'load_command_type::load_dylib'              : dylib_command
            'load_command_type::load_upward_dylib'       : dylib_command
            'load_command_type::id_dylib'                : dylib_command
            'load_command_type::load_weak_dylib'         : dylib_command
            'load_command_type::lazy_load_dylib'         : dylib_command
            'load_command_type::reexport_dylib'          : dylib_command
            'load_command_type::rpath'                   : rpath_command
            'load_command_type::function_starts'         : linkedit_data_command
            'load_command_type::data_in_code'            : linkedit_data_command
            'load_command_type::dylib_code_sign_drs'     : linkedit_data_command
            'load_command_type::linker_optimization_hint': linkedit_data_command
            'load_command_type::segment_split_info'      : linkedit_data_command
            'load_command_type::code_signature'          : code_signature_command
            'load_command_type::encryption_info_64'      : encryption_info_command
            'load_command_type::encryption_info'         : encryption_info_command
            'load_command_type::twolevel_hints'          : twolevel_hints_command
            'load_command_type::linker_option'           : linker_option_command
            'load_command_type::sub_framework'           : sub_command
            'load_command_type::sub_umbrella'            : sub_command
            'load_command_type::sub_client'              : sub_command
            'load_command_type::sub_library'             : sub_command
            'load_command_type::routines_64'             : routines_command_64
            'load_command_type::routines'                : routines_command
            'load_command_type::build_version'           : build_version_command
            'load_command_type::segment'                 : segment_command
  vm_prot:
    seq:
      - id: strip_read
        type: b1
        doc: Special marker to support execute-only protection.
        -orig-id: VM_PROT_STRIP_READ
      - id: is_mask
        doc: Indicates to use value as a mask against the actual protection bits.
        -orig-id: VM_PROT_IS_MASK
        type: b1
      - id: reserved0
        type: b1
        doc: Reserved (unused) bit.
      - id: copy
        type: b1
        doc: Used when write permission can not be obtained, to mark the entry as COW.
        -orig-id: VM_PROT_COPY
      - id: no_change
        type: b1
        doc: Used only by memory_object_lock_request to indicate no change to page locks.
        -orig-id: VM_PROT_NO_CHANGE
      - id: execute
        type: b1
        doc: Execute permission.
        -orig-id: VM_PROT_EXECUTE
      - id: write
        type: b1
        doc: Write permission.
        -orig-id: VM_PROT_WRITE
      - id: read
        type: b1
        doc: Read permission.
        -orig-id: VM_PROT_READ
      - id: reserved1
        type: b24
        doc: Reserved (unused) bits.
  uleb128:
    -webide-representation: "{value:dec}"
    seq:
      - id: b1
        type: u1
      - id: b2
        type: u1
        if: "b1 & 0x80 != 0"
      - id: b3
        type: u1
        if: "b2 & 0x80 != 0"
      - id: b4
        type: u1
        if: "b3 & 0x80 != 0"
      - id: b5
        type: u1
        if: "b4 & 0x80 != 0"
      - id: b6
        type: u1
        if: "b5 & 0x80 != 0"
      - id: b7
        type: u1
        if: "b6 & 0x80 != 0"
      - id: b8
        type: u1
        if: "b7 & 0x80 != 0"
      - id: b9
        type: u1
        if: "b8 & 0x80 != 0"
      - id: b10
        type: u1
        if: "b9 & 0x80 != 0"
    instances:
      value:
        value: >
          ((b1  % 128) <<  0) + ((b1 & 0x80 == 0) ? 0 :
          ((b2  % 128) <<  7) + ((b2 & 0x80 == 0) ? 0 :
          ((b3  % 128) << 14) + ((b3 & 0x80 == 0) ? 0 :
          ((b4  % 128) << 21) + ((b4 & 0x80 == 0) ? 0 :
          ((b5  % 128) << 28) + ((b5 & 0x80 == 0) ? 0 :
          ((b6  % 128) << 35) + ((b6 & 0x80 == 0) ? 0 :
          ((b7  % 128) << 42) + ((b7 & 0x80 == 0) ? 0 :
          ((b8  % 128) << 49) + ((b8 & 0x80 == 0) ? 0 :
          ((b9  % 128) << 56) + ((b8 & 0x80 == 0) ? 0 :
          ((b10 % 128) << 63))))))))))
        -webide-parse-mode: eager
  segment_command_64:
    -webide-representation: '{segname} ({initprot}): offs={fileoff}, size={filesize}'
    seq:
      - id: segname
        type: str
        size: 16
        pad-right: 0
        encoding: ascii
      - id: vmaddr
        type: u8
      - id: vmsize
        type: u8
      - id: fileoff
        type: u8
      - id: filesize
        type: u8
      - id: maxprot
        type: vm_prot
      - id: initprot
        type: vm_prot
      - id: nsects
        type: u4
      - id: flags
        type: u4
      - id: sections
        type: section_64
        repeat: expr
        repeat-expr: nsects
    types:
      section_64:
        -webide-representation: '{sect_name}: offs={offset}, size={size}'
        seq:
          - id: sect_name
            -orig-id: sectname
            size: 16
            type: str
            pad-right: 0
            encoding: ascii
          - id: seg_name
            -orig-id: segname
            size: 16
            type: str
            pad-right: 0
            encoding: ascii
          - id: addr
            type: u8
          - id: size
            type: u8
          - id: offset
            type: u4
          - id: align
            type: u4
          - id: reloff
            type: u4
          - id: nreloc
            type: u4
          - id: flags
            type: u4
          - id: reserved1
            type: u4
          - id: reserved2
            type: u4
          - id: reserved3
            type: u4
        instances:
          data:
            io: _root._io
            pos: offset
            size: size
            type:
              switch-on: sect_name
              cases:
                "'__cstring'":        string_list
                "'__objc_methname'":  string_list
                "'__objc_classname'": string_list
                "'__objc_methtype'":  string_list
                "'__nl_symbol_ptr'":  pointer_list
                "'__got'":            pointer_list
                "'__la_symbol_ptr'":  pointer_list
                "'__cfstring'":       cf_string_list
                "'__objc_classlist'": pointer_list
                "'__objc_nlclslist'": pointer_list
                "'__objc_protolist'": pointer_list
                "'__objc_imageinfo'": pointer_list
                "'__objc_selrefs'":   pointer_list
                "'__objc_protorefs'": pointer_list
                "'__objc_classrefs'": pointer_list
                "'__objc_superrefs'": pointer_list
                "'__eh_frame'":       eh_frame
        types:
          # https://reviews.llvm.org/D15502#b8fe88d5
          eh_frame:
            seq:
              - id: items
                type: eh_frame_item
                repeat: eos
          eh_frame_item:
            -webide-representation: '{body}'
            seq:
              - id: length
                type: u4
              - id: length64
                type: u8
                if: length == 0xffffffff
              - id: id
                type: u4
              - id: body
                size: length - 4
                if: length > 0
                type:
                  switch-on: id
                  cases:
                    0: cie
            types:
              char_chain:
                seq:
                  - id: chr
                    type: u1
                  - id: next
                    type: char_chain
                    if: chr != 0
              cie:
                -webide-representation: 'v:{version:dec} aug:{augmentation_string} code:{code_alignment_factor} data:{data_alignment_factor} returnReg:{return_address_register}'
                seq:
                  - id: version
                    type: u1
                  #- id: augmentation_string
                  #  type: strz
                  #  encoding: ascii
                  - id: aug_str
                    type: char_chain
                  #- id: eh_data
                  #  type: u8
                  #  if: "'eh' in augmentation_string"
                  - id: code_alignment_factor
                    type: uleb128
                  - id: data_alignment_factor
                    type: uleb128
                  - id: return_address_register
                    type: u1
                  - id: augmentation
                    type: augmentation_entry
                    if: 'aug_str.chr == 122'
              augmentation_entry:
                seq:
                  - id: length
                    type: uleb128
                  - id: fde_pointer_encoding
                    type: u1
                    if: _parent.aug_str.next.chr == 82
          string_list:
            seq:
              - id: strings
                type: strz
                encoding: ascii
                repeat: eos
          pointer_list:
            seq:
              - id: items
                type: u8
                repeat: eos
          cf_string:
            -webide-representation: "isa={isa}, info={info}, data={data}, length={length}"
            seq:
              - id: isa
                type: u8
              - id: info
                type: u8
              - id: data
                type: u8
              - id: length
                type: u8
          cf_string_list:
            seq:
              - id: items
                type: cf_string
                repeat: eos
  dyld_info_command:
    -webide-representation: 'rebase={rebase_off}, bind={bind_off}, weakBind={weak_bind_off}, lazyBind={lazy_bind_off}, export={export_off}'
    seq:
      - id: rebase_off
        type: u4
      - id: rebase_size
        type: u4
      - id: bind_off
        type: u4
      - id: bind_size
        type: u4
      - id: weak_bind_off
        type: u4
      - id: weak_bind_size
        type: u4
      - id: lazy_bind_off
        type: u4
      - id: lazy_bind_size
        type: u4
      - id: export_off
        type: u4
      - id: export_size
        type: u4
    instances:
      rebase:
        io: _root._io
        pos: rebase_off
        size: rebase_size
        type: rebase_data
        if: rebase_size != 0
      bind:
        io: _root._io
        pos: bind_off
        size: bind_size
        type: bind_data
        if: bind_size != 0
      weak_bind:
        io: _root._io
        pos: weak_bind_off
        size: weak_bind_size
        type: bind_data
        if: weak_bind_size != 0
      lazy_bind:
        io: _root._io
        pos: lazy_bind_off
        size: lazy_bind_size
        type: bind_data
        if: lazy_bind_size != 0
      exports:
        io: _root._io
        pos: export_off
        size: export_size
        type: export_node
        if: export_size != 0
    types:
      rebase_data:
        seq:
          - id: items
            type: rebase_item
            repeat: until
            repeat-until: _.opcode == opcode::done
        types:
          rebase_item:
            -webide-representation: "{opcode}, imm:{immediate}, uleb:{uleb}, skip:{skip}"
            seq:
              - id: opcode_and_immediate
                type: u1
              - id: uleb
                type: uleb128
                if: >
                  opcode == opcode::set_segment_and_offset_uleb or
                  opcode == opcode::add_address_uleb or
                  opcode == opcode::do_rebase_uleb_times or
                  opcode == opcode::do_rebase_add_address_uleb or
                  opcode == opcode::do_rebase_uleb_times_skipping_uleb
              - id: skip
                type: uleb128
                if: "opcode == opcode::do_rebase_uleb_times_skipping_uleb"
            instances:
              opcode:
                value: "opcode_and_immediate & 0xf0"
                enum: opcode
                -webide-parse-mode: eager
              immediate:
                value: "opcode_and_immediate & 0x0f"
                -webide-parse-mode: eager
        enums:
          opcode:
            0x00: done
            0x10: set_type_immediate
            0x20: set_segment_and_offset_uleb
            0x30: add_address_uleb
            0x40: add_address_immediate_scaled
            0x50: do_rebase_immediate_times
            0x60: do_rebase_uleb_times
            0x70: do_rebase_add_address_uleb
            0x80: do_rebase_uleb_times_skipping_uleb
      bind_item:
        -webide-representation: "{opcode}, imm:{immediate}, uleb:{uleb}, skip:{skip}, symbol:{symbol}"
        seq:
          - id: opcode_and_immediate
            type: u1
          - id: uleb
            type: uleb128
            if: >
              opcode == bind_opcode::set_dylib_ordinal_uleb or
              opcode == bind_opcode::set_append_sleb or
              opcode == bind_opcode::set_segment_and_offset_uleb or
              opcode == bind_opcode::add_address_uleb or
              opcode == bind_opcode::do_bind_add_address_uleb or
              opcode == bind_opcode::do_bind_uleb_times_skipping_uleb
          - id: skip
            type: uleb128
            if: "opcode == bind_opcode::do_bind_uleb_times_skipping_uleb"
          - id: symbol
            type: strz
            if: "opcode == bind_opcode::set_symbol_trailing_flags_immediate"
            encoding: ascii
        instances:
          opcode:
            value: "opcode_and_immediate & 0xf0"
            enum: bind_opcode
            -webide-parse-mode: eager
          immediate:
            value: "opcode_and_immediate & 0x0f"
            -webide-parse-mode: eager
      bind_data:
        seq:
          - id: items
            type: bind_item
            repeat: eos
      export_node:
        -webide-representation: "{children_count} children, term_size={terminal_size.value}"
        seq:
          - id: terminal_size
            type: uleb128
          - id: children_count
            type: u1
          - id: children
            type: child
            repeat: expr
            repeat-expr: children_count
          - id: terminal
            size: terminal_size.value
        types:
          child:
            -webide-representation: "{name}: {node_offset}"
            seq:
              - id: name
                type: strz
                encoding: ascii
              - id: node_offset
                type: uleb128
            instances:
              value:
                pos: node_offset.value
                type: export_node
    enums:
      bind_opcode:
        0x00: done
        0x10: set_dylib_ordinal_immediate
        0x20: set_dylib_ordinal_uleb
        0x30: set_dylib_special_immediate
        0x40: set_symbol_trailing_flags_immediate
        0x50: set_type_immediate
        0x60: set_append_sleb
        0x70: set_segment_and_offset_uleb
        0x80: add_address_uleb
        0x90: do_bind
        0xa0: do_bind_add_address_uleb
        0xb0: do_bind_add_address_immediate_scaled
        0xc0: do_bind_uleb_times_skipping_uleb
  symtab_command:
    -webide-representation: "symbols: {n_syms:dec}, strtab: {str_off}"
    seq:
      - id: sym_off
        -orig-id: symoff
        type: u4
      - id: n_syms
        -orig-id: nsyms
        type: u4
      - id: str_off
        -orig-id: stroff
        type: u4
      - id: str_size
        -orig-id: strsize
        type: u4
    instances:
      symbols:
        io: _root._io
        pos: sym_off
        type:
          switch-on: _root.magic
          cases:
            magic_type::macho_le_x64 : nlist_64
            magic_type::macho_be_x64 : nlist_64
            magic_type::macho_le_x86 : nlist
            magic_type::macho_be_x86 : nlist
        repeat: expr
        repeat-expr: n_syms
      strs:
        io: _root._io
        pos: str_off
        size: str_size
        type: str_table
    types:
      str_table:
        seq:
            # NOTE:  This may not always be a u4, I've also seen " " (0x20 0x00)
          - id: unknown
            type: u4
          - id: items
            type: strz
            encoding: utf-8
            repeat: until
            repeat-until: _ == ""
            eos-error: false
      nlist_64:
        -webide-representation: "un={un} type={type} sect={sect} desc={desc} value={value}"
        seq:
          - id: un
            type: u4
          - id: type
            type: u1
          - id: sect
            type: u1
          - id: desc
            type: u2
          - id: value
            type: u8
        instances:
          name:
            pos: _parent.str_off + un
            type: strz
            encoding: utf-8
            if: un != 0
      nlist:
        -webide-representation: "un={un} type={type} sect={sect} desc={desc} value={value}"
        seq:
          - id: un
            type: u4
          - id: type
            type: u1
          - id: sect
            type: u1
          - id: desc
            type: u2
          - id: value
            type: u4
        instances:
          name:
            pos: _parent.str_off + un
            type: strz
            encoding: utf-8
            if: un != 0
  dysymtab_command:
    seq:
      - id: i_local_sym
        -orig-id: ilocalsym
        type: u4
      - id: n_local_sym
        -orig-id: nlocalsym
        type: u4
      - id: i_ext_def_sym
        -orig-id: iextdefsym
        type: u4
      - id: n_ext_def_sym
        -orig-id: nextdefsym
        type: u4
      - id: i_undef_sym
        -orig-id: iundefsym
        type: u4
      - id: n_undef_sym
        -orig-id: nundefsym
        type: u4
      - id: toc_off
        -orig-id: tocoff
        type: u4
      - id: n_toc
        -orig-id: ntoc
        type: u4
      - id: mod_tab_off
        -orig-id: modtaboff
        type: u4
      - id: n_mod_tab
        -orig-id: nmodtab
        type: u4
      - id: ext_ref_sym_off
        -orig-id: extrefsymoff
        type: u4
      - id: n_ext_ref_syms
        -orig-id: nextrefsyms
        type: u4
      - id: indirect_sym_off
        -orig-id: indirectsymoff
        type: u4
      - id: n_indirect_syms
        -orig-id: nindirectsyms
        type: u4
      - id: ext_rel_off
        -orig-id: extreloff
        type: u4
      - id: n_ext_rel
        -orig-id: nextrel
        type: u4
      - id: loc_rel_off
        -orig-id: locreloff
        type: u4
      - id: n_loc_rel
        -orig-id: nlocrel
        type: u4
    instances:
      indirect_symbols:
        io: _root._io
        pos: indirect_sym_off
        type: u4
        repeat: expr
        repeat-expr: n_indirect_syms
  lc_str:
    -webide-representation: '{value}'
    seq:
      - id: length
        -orig-id: offset
        type: u4
      - id: value
        -orig-id: ptr
        type: strz
        encoding: UTF-8
  dylinker_command:
    -webide-representation: '{name}'
    seq:
      - id: name
        type: lc_str
  uuid_command:
    -webide-representation: 'uuid={uuid}'
    seq:
      - id: uuid
        size: 16
  version:
    -webide-representation: '{major:dec}.{minor:dec}'
    seq:
      - id: p1
        type: u1
      - id: minor
        type: u1
      - id: major
        type: u1
      - id: release
        type: u1
  encryption_info_command:
    seq:
      - id: cryptoff
        type: u4
      - id: cryptsize
        type: u4
      - id: cryptid
        type: u4
      - id: pad
        type: u4
        if: _root.magic == magic_type::macho_be_x64 or _root.magic == magic_type::macho_le_x64
  twolevel_hints_command:
    seq:
      - id: offset
        type: u4
      - id: num_hints
        -orig-id: nhints
        type: u4
  linker_option_command:
    seq:
      - id: num_strings
        -orig-id: count
        type: u4
      - id: strings
        type: strz
        encoding: utf-8
        repeat: expr
        repeat-expr: num_strings
  sub_command:
    seq:
      - id: name
        type: lc_str
  routines_command_64:
    seq:
      - id: init_address
        type: u8
      - id: init_module
        type: u8
      - id: reserved
        size: 48 # u8 * 6
  routines_command:
    seq:
      - id: init_address
        type: u4
      - id: init_module
        type: u4
      - id: reserved
        size: 24 # u4 * 6
  version_min_command:
    -webide-representation: 'v:{version}, r:{reserved}'
    seq:
      - id: version
        type: version
      - id: sdk
        type: version
  source_version_command:
    -webide-representation: 'v:{version:dec}'
    seq:
      - id: version
        type: u8
  entry_point_command:
    -webide-representation: 'entry_off={entry_off}, stack_size={stack_size}'
    seq:
      - id: entry_off
        -orig-id: entryoff
        type: u8
      - id: stack_size
        -orig-id: stacksize
        type: u8
  dylib_command:
    -webide-representation: '{name}'
    seq:
      - id: name_offset
        type: u4
      - id: timestamp
        type: u4
      - id: current_version
        type: u4
      - id: compatibility_version
        type: u4
      - id: name
        type: strz
        encoding: utf-8
  rpath_command:
    -webide-representation: '{path}'
    seq:
      - id: path_offset
        type: u4
      - id: path
        type: strz
        encoding: utf-8
  linkedit_data_command:
    -webide-representation: 'offs={data_off}, size={data_size}'
    seq:
      - id: data_off
        -orig-id: dataoff
        type: u4
      - id: data_size
        -orig-id: datasize
        type: u4
  code_signature_command:
    -webide-representation: 'offs={data_off}, size={data_size}'
    seq:
      - id: data_off
        type: u4
      - id: data_size
        type: u4
    instances:
      code_signature:
        io: _root._io
        pos: data_off
        size: data_size
        type: cs_blob
  cs_blob:
    seq:
      - id: magic
        type: u4be
        enum: cs_magic
      - id: length
        type: u4be
      - id: body
        size: length - 8
        type:
          switch-on: magic
          cases:
            'cs_magic::requirement'       : requirement
            'cs_magic::requirements'      : requirements
            'cs_magic::code_directory'    : code_directory
            'cs_magic::entitlements'      : entitlements
            'cs_magic::der_entitlements'  : asn1_der
            'cs_magic::blob_wrapper'      : blob_wrapper
            'cs_magic::embedded_signature': super_blob
            'cs_magic::detached_signature': super_blob
    enums:
      cs_magic:
        0xfade0c00: requirement        # CSMAGIC_REQUIREMENT
        0xfade0c01: requirements       # CSMAGIC_REQUIREMENTS
        0xfade0c02: code_directory     # CSMAGIC_CODEDIRECTORY
        0xfade7171: entitlements       # CSMAGIC_EMBEDDED_ENTITLEMENTS
        0xfade7172: der_entitlements   # CSMAGIC_EMBEDDED_DER_ENTITLEMENTS
        0xfade0b01: blob_wrapper       # CSMAGIC_BLOBWRAPPER
        0xfade0cc0: embedded_signature # CSMAGIC_EMBEDDED_SIGNATURE
        0xfade0cc1: detached_signature # CSMAGIC_DETACHED_SIGNATURE
    types:
      code_directory:
        seq:
          - id: version
            type: u4be
          - id: flags
            type: u4be
          - id: hash_offset
            type: u4be
          - id: ident_offset
            type: u4be
          - id: n_special_slots
            type: u4be
          - id: n_code_slots
            type: u4be
          - id: code_limit
            type: u4be
          - id: hash_size
            type: u1
          - id: hash_type
            type: u1
          - id: spare1
            type: u1
          - id: page_size
            type: u1
          - id: spare2
            type: u4be
          - id: scatter_offset
            type: u4be
            if: version >= 0x20100
          - id: team_id_offset
            type: u4be
            if: version >= 0x20200
        instances:
          ident:
            pos: ident_offset - 8
            type: strz
            encoding: utf-8
            -webide-parse-mode: eager
          team_id:
            pos: team_id_offset - 8
            type: strz
            encoding: utf-8
            -webide-parse-mode: eager
          hashes:
            pos: hash_offset - 8 - hash_size * n_special_slots
            size: hash_size
            repeat: expr
            repeat-expr: n_special_slots + n_code_slots
      blob_index:
        seq:
          - id: type
            type: u4be
            enum: csslot_type
          - id: offset
            type: u4be
        instances:
          blob:
            io: _parent._io
            pos: offset - 8
            size-eos: true
            type: cs_blob
        enums:
          csslot_type:
            0:       code_directory             # CSSLOT_CODEDIRECTORY
            1:       info_slot                  # CSSLOT_INFOSLOT
            2:       requirements               # CSSLOT_REQUIREMENTS
            3:       resource_dir               # CSSLOT_RESOURCEDIR
            4:       application                # CSSLOT_APPLICATION
            5:       entitlements               # CSSLOT_ENTITLEMENTS
            7:       der_entitlements           # CSSLOT_DER_ENTITLEMENTS
            0x1000:  alternate_code_directories # CSSLOT_ALTERNATE_CODEDIRECTORIES
            0x10000: signature_slot             # CSSLOT_SIGNATURESLOT
      data:
        -webide-representation: "{value}"
        seq:
          - id: length
            type: u4be
          - id: value
            size: length
          - id: padding
            size: -length % 4
      match:
        -webide-representation: "{match_op} {data.value:str}"
        seq:
          - id: match_op
            type: u4be
            enum: op
          - id: data
            type: data
            if: 'match_op != op::exists'
        enums:
          op:
            0: exists
            1: equal
            2: contains
            3: begins_with
            4: ends_with
            5: less_than
            6: greater_than
            7: less_equal
            8: greater_equal
      expr:
        -webide-representation: '{data}'
        seq:
          - id: op
            type: u4be
            enum: op_enum
          - id: data
            type:
              switch-on: op
              cases:
                #'op_enum::false'               : 'false'
                #'op_enum::true'                : 'true'
                'op_enum::ident'               : ident_expr
                #'op_enum::apple_anchor'        : 'anchor apple'
                'op_enum::anchor_hash'         : anchor_hash_expr
                'op_enum::info_key_value'      : data
                'op_enum::and_op'              : and_expr
                'op_enum::or_op'               : or_expr
                'op_enum::cd_hash'             : data
                'op_enum::not_op'              : expr
                'op_enum::info_key_field'      : info_key_field_expr
                'op_enum::cert_field'          : cert_field_expr
                'op_enum::trusted_cert'        : cert_slot_expr
                #'op_enum::trusted_certs'       : 'anchor trusted'
                'op_enum::cert_generic'        : cert_generic_expr
                'op_enum::apple_generic_anchor': apple_generic_anchor_expr
                'op_enum::entitlement_field'   : entitlement_field_expr
        enums:
          op_enum:
            0: 'false'               # unconditionally false
            1: 'true'                # unconditionally true
            2: ident                 # match canonical code [string]
            3: apple_anchor          # signed by Apple as Apple's product ("anchor apple")
            4: anchor_hash           # match anchor [cert hash]
            5: info_key_value        # *legacy* - use opInfoKeyField [key; value]
            6: and_op                # binary prefix expr AND expr [expr; expr]
            7: or_op                 # binary prefix expr OR expr
            8: cd_hash               # match hash of CodeDirectory directly
            9: not_op                # logical inverse
            10: info_key_field       # Info.plist key field [string; match suffix]
            11: cert_field           # Certificate field [cert index; field name; match suffix]
            12: trusted_cert         # require trust settings to approve one particular cert [cert index]
            13: trusted_certs        # require trust settings to approve the cert chain
            14: cert_generic         # Certificate component by OID [cert index; oid; match suffix]
            15: apple_generic_anchor # signed by Apple in any capacity ("anchor apple generic")
            16: entitlement_field    # entitlement dictionary field [string; match suffix]
          cert_slot:
            0xffffffff: anchor_cert
            0: left_cert
        types:
          ident_expr:
            -webide-representation: "identifier {identifier.value:str}"
            seq:
              - id: identifier
                type: data
          apple_generic_anchor_expr:
            -webide-representation: "anchor apple generic"
            instances:
              value:
                value: '"anchor apple generic"'
          cert_slot_expr:
            seq:
              - id: value
                type: u4be
                enum: cert_slot
          and_expr:
            -webide-representation: "({left}) AND ({right})"
            seq:
              - id: left
                type: expr
              - id: right
                type: expr
          or_expr:
            -webide-representation: "({left}) OR ({right})"
            seq:
              - id: left
                type: expr
              - id: right
                type: expr
          anchor_hash_expr:
            seq:
              - id: cert_slot
                type: u4be
                enum: cert_slot
              - id: data
                type: data
          info_key_field_expr:
            seq:
              - id: data
                type: data
              - id: match
                type: match
          entitlement_field_expr:
            seq:
              - id: data
                type: data
              - id: match
                type: match
          cert_field_expr:
            -webide-representation: "{cert_slot}[{data.value:str}] {match}"
            seq:
              - id: cert_slot
                type: u4be
                enum: cert_slot
              - id: data
                type: data
              - id: match
                type: match
          cert_generic_expr:
            -webide-representation: "{cert_slot}[{data.value:hex}] {match}"
            seq:
              - id: cert_slot
                type: u4be
                enum: cert_slot
              - id: data
                type: data
              - id: match
                type: match
      requirement:
        seq:
          - id: kind
            type: u4be
          - id: expr
            type: expr
      entitlements:
        -webide-representation: "{data:str}"
        seq:
          - id: data
            size-eos: true
      requirements_blob_index:
        seq:
          - id: type
            type: u4be
            enum: requirement_type
          - id: offset
            type: u4be
        instances:
          value:
            pos: offset - 8
            type: cs_blob
        enums:
          requirement_type:
            1: host        # kSecHostRequirementType
            2: guest       # kSecGuestRequirementType
            3: designated  # kSecDesignatedRequirementtype
            4: library     # kSecLibraryRequirementType
      requirements:
        seq:
          - id: count
            type: u4be
          - id: items
            type: requirements_blob_index
            repeat: expr
            repeat-expr: count
      blob_wrapper:
        seq:
          - id: data
            size-eos: true
      super_blob:
        seq:
          - id: count
            type: u4be
          - id: blobs
            type: blob_index
            repeat: expr
            repeat-expr: count
  build_version_command:
    seq:
      - id: platform
        type: u4
      - id: minos
        type: u4
      - id: sdk
        type: u4
      - id: ntools
        type: u4
      - id: tools
        type: build_tool_version
        repeat: expr
        repeat-expr: ntools
    types:
      build_tool_version:
        seq:
          - id: tool
            type: u4
          - id: version
            type: u4
  segment_command:
    seq:
      - id: segname
        type: str
        size: 16
        pad-right: 0
        encoding: ascii
      - id: vmaddr
        type: u4
      - id: vmsize
        type: u4
      - id: fileoff
        type: u4
      - id: filesize
        type: u4
      - id: maxprot
        type: vm_prot
      - id: initprot
        type: vm_prot
      - id: nsects
        type: u4
      - id: flags
        type: u4
      - id: sections
        type: section
        repeat: expr
        repeat-expr: nsects
    types:
      section:
        seq:
          - id: sect_name
            -orig-id: sectname
            size: 16
            type: str
            pad-right: 0
            encoding: ascii
          - id: seg_name
            -orig-id: segname
            size: 16
            type: str
            pad-right: 0
            encoding: ascii
          - id: addr
            type: u4
          - id: size
            type: u4
          - id: offset
            type: u4
          - id: align
            type: u4
          - id: reloff
            type: u4
          - id: nreloc
            type: u4
          - id: flags
            type: u4
          - id: reserved1
            type: u4
          - id: reserved2
            type: u4
        instances:
          data:
            io: _root._io
            pos: offset
            size: size
`
  },
  {
    id: "ksy_mach_o_fat",
    name: "macOS Mach-O multiarch (\"fat\") binary",
    category: "Executable",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "macOS Mach-O multiarch (\"fat\") binary",
      originalCategory: "executable",
      filePath: "executable/mach_o_fat.ksy",
      signature: {"offset":0,"bytes":[202,254,186,190]},
      endian: "be"
    },
    content: `meta:
  id: mach_o_fat
  title: macOS Mach-O multiarch ("fat") binary
  license: CC0-1.0
  imports:
    - mach_o
  endian: be

doc: |
  This is a simple container format that encapsulates multiple Mach-O files,
  each generally for a different architecture. XNU can execute these files just
  like single-arch Mach-Os and will pick the appropriate entry.

doc-ref: https://opensource.apple.com/source/xnu/xnu-7195.121.3/EXTERNAL_HEADERS/mach-o/fat.h.auto.html

seq:
  - id: magic
    contents: [0xca, 0xfe, 0xba, 0xbe]
  - id: num_fat_arch
    -orig-id: nfat_arch
    type: u4
  - id: fat_archs
    type: fat_arch
    repeat: expr
    repeat-expr: num_fat_arch

types:
  fat_arch:
    seq:
      - id: cpu_type
        -orig-id: cputype
        type: u4
        enum: mach_o::cpu_type
      - id: cpu_subtype
        -orig-id: cpusubtype
        type: u4
      - id: ofs_object
        -orig-id: offset
        type: u4
      - id: len_object
        -orig-id: size
        type: u4
      - id: align
        type: u4

    instances:
      object:
        pos: ofs_object
        size: len_object
        type: mach_o
`
  },
  {
    id: "ksy_microsoft_pe",
    name: "Microsoft PE (Portable Executable) file format",
    category: "Executable",
    metadata: {
      isGenerated: true,
      fileExtensions: ["exe","dll","sys"],
      description: "Microsoft PE (Portable Executable) file format",
      originalCategory: "executable",
      filePath: "executable/microsoft_pe.ksy",
      endian: "le"
    },
    content: `meta:
  id: microsoft_pe
  title: Microsoft PE (Portable Executable) file format
  application: Microsoft Windows
  file-extension:
    - exe
    - dll
    - sys
  xref:
    justsolve: Portable_Executable
    pronom: x-fmt/411
    wikidata: Q1076355
  tags:
    - executable
    - windows
  license: CC0-1.0
  ks-version: 0.7
  endian: le
doc-ref: https://learn.microsoft.com/en-us/windows/win32/debug/pe-format
seq:
  - id: mz
    type: mz_placeholder
instances:
  pe:
    pos: mz.ofs_pe
    type: pe_header
enums:
  pe_format:
    0x107: rom_image
    0x10b: pe32
    0x20b: pe32_plus
types:
  mz_placeholder:
    seq:
      - id: magic
        contents: "MZ"
      - id: data1
        size: 0x3a
      - id: ofs_pe
        type: u4
        doc: In PE file, an offset to PE header
  pe_header:
    seq:
      - id: pe_signature
        contents: ["PE", 0, 0]
      - id: coff_hdr
        type: coff_header
      - id: optional_hdr
        type: optional_header
        size: coff_hdr.size_of_optional_header
      - id: sections
        repeat: expr
        repeat-expr: coff_hdr.number_of_sections
        type: section
    instances:
      certificate_table:
        pos: optional_hdr.data_dirs.certificate_table.virtual_address
        size: optional_hdr.data_dirs.certificate_table.size
        type: certificate_table
        if: optional_hdr.data_dirs.certificate_table.virtual_address != 0
  coff_header:
    doc-ref: 3.3. COFF File Header (Object and Image)
    seq:
      - id: machine
        type: u2
        enum: machine_type
      - id: number_of_sections
        type: u2
      - id: time_date_stamp
        type: u4
      - id: pointer_to_symbol_table
        type: u4
      - id: number_of_symbols
        type: u4
      - id: size_of_optional_header
        type: u2
      - id: characteristics
        type: u2
    instances:
      symbol_table_size:
        value: number_of_symbols * 18
      symbol_name_table_offset:
        value: pointer_to_symbol_table + symbol_table_size
      symbol_name_table_size:
        pos: symbol_name_table_offset
        type: u4
      symbol_table:
        pos: pointer_to_symbol_table
        type: coff_symbol
        repeat: expr
        repeat-expr: number_of_symbols
    enums:
      # Don't forget to update the \`machine_type\` enum in \`executable/uefi_te.ksy\` when
      # you modify this one.
      #
      # https://learn.microsoft.com/en-us/windows/win32/debug/pe-format#machine-types
      machine_type:
        0x0:
          id: unknown
          doc: The content of this field is assumed to be applicable to any machine type
        0x184:
          id: alpha
          doc: Alpha AXP, 32-bit address space
        0x284:
          id: alpha64_or_axp64
          -orig-id:
            - IMAGE_FILE_MACHINE_ALPHA64
            - IMAGE_FILE_MACHINE_AXP64
          doc: |
            > Alpha 64, 64-bit address space
            or
            > AXP 64 (Same as Alpha 64)
        0x1d3:
          id: am33
          doc: Matsushita AM33
        0x8664:
          id: amd64
          doc: x64
        0x1c0:
          id: arm
          doc: ARM little endian
        0xaa64:
          id: arm64
          doc: ARM64 little endian
        0x1c4:
          id: arm_nt
          -orig-id: IMAGE_FILE_MACHINE_ARMNT
          doc: ARM Thumb-2 little endian
        0xebc:
          id: ebc
          doc: EFI byte code
        0x14c:
          id: i386
          doc: Intel 386 or later processors and compatible processors
        0x200:
          id: ia64
          doc: Intel Itanium processor family
        0x6232:
          id: loongarch32
          doc: LoongArch 32-bit processor family
        0x6264:
          id: loongarch64
          doc: LoongArch 64-bit processor family
        0x9041:
          id: m32r
          doc: Mitsubishi M32R little endian
        0x266:
          id: mips16
          doc: MIPS16
        0x366:
          id: mips_fpu
          -orig-id: IMAGE_FILE_MACHINE_MIPSFPU
          doc: MIPS with FPU
        0x466:
          id: mips16_fpu
          -orig-id: IMAGE_FILE_MACHINE_MIPSFPU16
          doc: MIPS16 with FPU
        0x1f0:
          id: powerpc
          doc: Power PC little endian
        0x1f1:
          id: powerpc_fp
          -orig-id: IMAGE_FILE_MACHINE_POWERPCFP
          doc: Power PC with floating point support
        0x166:
          id: r4000
          doc: MIPS little endian
        0x5032:
          id: riscv32
          doc: RISC-V 32-bit address space
        0x5064:
          id: riscv64
          doc: RISC-V 64-bit address space
        0x5128:
          id: riscv128
          doc: RISC-V 128-bit address space
        0x1a2:
          id: sh3
          doc: Hitachi SH3
        0x1a3:
          id: sh3_dsp
          -orig-id: IMAGE_FILE_MACHINE_SH3DSP
          doc: Hitachi SH3 DSP
        0x1a6:
          id: sh4
          doc: Hitachi SH4
        0x1a8:
          id: sh5
          doc: Hitachi SH5
        0x1c2:
          id: thumb
          doc: Thumb
        0x169:
          id: wce_mips_v2
          -orig-id: IMAGE_FILE_MACHINE_WCEMIPSV2
          doc: MIPS little-endian WCE v2
  coff_symbol:
    seq:
      - id: name_annoying
        type: annoyingstring
        size: 8
      #- id: name_zeroes
      #  type: u4
      #- id: name_offset
      #  type: u4
      - id: value
        type: u4
      - id: section_number
        type: u2
      - id: type
        type: u2
      - id: storage_class
        type: u1
      - id: number_of_aux_symbols
        type: u1
    instances:
      #effective_name:
      #  value: name_zeroes == 0 ? name_from_offset : '"fixme"'
      #name_from_offset:
      #  io: _root._io
      #  pos: name_zeroes == 0 ? _parent.symbol_name_table_offset + name_offset : 0
      #  type: str
      #  terminator: 0
      #  encoding: ascii
      section:
        value: _root.pe.sections[section_number - 1]
      data:
        pos: section.pointer_to_raw_data + value
        size: 1
  annoyingstring:
    -webide-representation: '{name}'
    instances:
      name_zeroes:
        pos: 0
        type: u4
      name_offset:
        pos: 4
        type: u4
      name_from_offset:
        io: _root._io
        pos: 'name_zeroes == 0 ? _parent._parent.symbol_name_table_offset + name_offset : 0'
        type: str
        terminator: 0
        eos-error: false
        encoding: ascii
        if: name_zeroes == 0
      name_from_short:
        pos: 0
        type: str
        terminator: 0
        eos-error: false
        encoding: ascii
        if: name_zeroes != 0
      name:
        value: 'name_zeroes == 0 ? name_from_offset : name_from_short'
  optional_header:
    seq:
      - id: std
        type: optional_header_std
      - id: windows
        type: optional_header_windows
      - id: data_dirs
        type: optional_header_data_dirs
  optional_header_std:
    seq:
      - id: format
        type: u2
        enum: pe_format
      - id: major_linker_version
        type: u1
      - id: minor_linker_version
        type: u1
      - id: size_of_code
        type: u4
      - id: size_of_initialized_data
        type: u4
      - id: size_of_uninitialized_data
        type: u4
      - id: address_of_entry_point
        type: u4
      - id: base_of_code
        type: u4
      - id: base_of_data
        type: u4
        if: format == pe_format::pe32
  optional_header_windows:
    seq:
      - id: image_base_32
        type: u4
        if: _parent.std.format == pe_format::pe32
      - id: image_base_64
        type: u8
        if: _parent.std.format == pe_format::pe32_plus
      - id: section_alignment
        type: u4
      - id: file_alignment
        type: u4
      - id: major_operating_system_version
        type: u2
      - id: minor_operating_system_version
        type: u2
      - id: major_image_version
        type: u2
      - id: minor_image_version
        type: u2
      - id: major_subsystem_version
        type: u2
      - id: minor_subsystem_version
        type: u2
      - id: win32_version_value
        type: u4
      - id: size_of_image
        type: u4
      - id: size_of_headers
        type: u4
      - id: check_sum
        type: u4
      - id: subsystem
        type: u2
        enum: subsystem_enum
      - id: dll_characteristics
        type: u2
      - id: size_of_stack_reserve_32
        type: u4
        if: _parent.std.format == pe_format::pe32
      - id: size_of_stack_reserve_64
        type: u8
        if: _parent.std.format == pe_format::pe32_plus
      - id: size_of_stack_commit_32
        type: u4
        if: _parent.std.format == pe_format::pe32
      - id: size_of_stack_commit_64
        type: u8
        if: _parent.std.format == pe_format::pe32_plus
      - id: size_of_heap_reserve_32
        type: u4
        if: _parent.std.format == pe_format::pe32
      - id: size_of_heap_reserve_64
        type: u8
        if: _parent.std.format == pe_format::pe32_plus
      - id: size_of_heap_commit_32
        type: u4
        if: _parent.std.format == pe_format::pe32
      - id: size_of_heap_commit_64
        type: u8
        if: _parent.std.format == pe_format::pe32_plus
      - id: loader_flags
        type: u4
      - id: number_of_rva_and_sizes
        type: u4
    enums:
      subsystem_enum:
        0: unknown
        1: native
        2: windows_gui
        3: windows_cui
        7: posix_cui
        9: windows_ce_gui
        10: efi_application
        11: efi_boot_service_driver
        12: efi_runtime_driver
        13: efi_rom
        14: xbox
        16: windows_boot_application
  optional_header_data_dirs:
    seq:
      - id: export_table
        type: data_dir
      - id: import_table
        type: data_dir
      - id: resource_table
        type: data_dir
      - id: exception_table
        type: data_dir
      - id: certificate_table
        type: data_dir
      - id: base_relocation_table
        type: data_dir
      - id: debug
        type: data_dir
      - id: architecture
        type: data_dir
      - id: global_ptr
        type: data_dir
      - id: tls_table
        type: data_dir
      - id: load_config_table
        type: data_dir
      - id: bound_import
        type: data_dir
      - id: iat
        type: data_dir
      - id: delay_import_descriptor
        type: data_dir
      - id: clr_runtime_header
        type: data_dir
  data_dir:
    seq:
      - id: virtual_address
        type: u4
      - id: size
        type: u4
  section:
    -webide-representation: "{name}"
    seq:
      - id: name
        type: str
        encoding: UTF-8
        size: 8
        pad-right: 0
      - id: virtual_size
        type: u4
      - id: virtual_address
        type: u4
      - id: size_of_raw_data
        type: u4
      - id: pointer_to_raw_data
        type: u4
      - id: pointer_to_relocations
        type: u4
      - id: pointer_to_linenumbers
        type: u4
      - id: number_of_relocations
        type: u2
      - id: number_of_linenumbers
        type: u2
      - id: characteristics
        type: u4
    instances:
      body:
        pos: pointer_to_raw_data
        size: size_of_raw_data
  certificate_table:
    seq:
      - id: items
        type: certificate_entry
        repeat: eos
  certificate_entry:
    doc-ref: 'https://learn.microsoft.com/en-us/windows/win32/debug/pe-format#the-attribute-certificate-table-image-only'
    enums:
      certificate_revision:
        0x0100:
          id: revision_1_0
          doc: |
            Version 1, legacy version of the Win_Certificate structure.
            It is supported only for purposes of verifying legacy Authenticode signatures
        0x0200:
          id: revision_2_0
          doc: Version 2 is the current version of the Win_Certificate structure.
      certificate_type_enum:
        0x0001:
          id: x509
          doc: |
            bCertificate contains an X.509 Certificate
            Not Supported
        0x0002:
          id: pkcs_signed_data
          doc: 'bCertificate contains a PKCS#7 SignedData structure'
        0x0003:
          id: reserved_1
          doc: 'Reserved'
        0x0004:
          id: ts_stack_signed
          doc: |
            Terminal Server Protocol Stack Certificate signing
            Not Supported
    seq:
      - id: length
        -orig-id: dwLength
        type: u4
        doc: Specifies the length of the attribute certificate entry.
      - id: revision
        -orig-id: wRevision
        type: u2
        enum: certificate_revision
        doc: Contains the certificate version number.
      - id: certificate_type
        -orig-id: wCertificateType
        type: u2
        enum: certificate_type_enum
        doc: Specifies the type of content in bCertificate
      - id: certificate_bytes
        -orig-id: bCertificate
        size: length - 8
        doc: Contains a certificate, such as an Authenticode signature.
`
  },
  {
    id: "ksy_python_pyc_27",
    name: "Python Pyc 27",
    category: "Executable",
    metadata: {
      isGenerated: true,
      fileExtensions: ["pyc"],
      description: "",
      originalCategory: "executable",
      filePath: "executable/python_pyc_27.ksy",
      endian: "le"
    },
    content: `# https://web.archive.org/web/20170825122655/http://demoseen.com/blog/2010-02-20_Python_Marshal_Format.html
# https://github.com/python/cpython/blob/main/Lib/dis.py
# https://github.com/python/cpython/blob/main/Lib/opcode.py
# https://github.com/python/cpython/blob/2.7/Lib/dis.py
# https://github.com/python/cpython/blob/2.7/Lib/opcode.py
meta:
  id: python_pyc_27
  application: Python
  file-extension: pyc
  xref:
    justsolve: Python
    pronom: fmt/939
    mime: application/x-python-code
    wikidata: Q28009469
  license: CC0-1.0
  endian: le
doc: |
  Python interpreter runs .py files in 2 step process: first, it
  produces bytecode, which it then executes. Translation of .py source
  into bytecode is time-consuming, so Python dumps compiled bytecode
  into .pyc files, to be reused from cache at later time if possible.

  .pyc file is essentially a raw dump of \`py_object\` (see \`body\`) with
  a simple header prepended.
seq:
  - id: version_magic
    type: u2
    enum: version
  - id: crlf
    type: u2
  - id: modification_timestamp
    type: u4
  - id: body
    type: py_object
types:
  assembly:
    seq:
      - id: string_magic
        contents: "s"
      - id: length
        type: u4
      - id: items
        size: length
        type: op_args
  op_args:
    seq:
      - id: items
        type: op_arg
        repeat: eos
  op_arg:
    -webide-representation: "{op_code} {arg}"
    seq:
      - id: op_code
        type: u1
        enum: op_code_enum
      - id: arg
        type: u2
        if: "op_code.to_i >= op_code_enum::store_name.to_i" # store_name == have_arguments
    enums:
      op_code_enum:
        0  : stop_code
        1  : pop_top
        2  : rot_two
        3  : rot_three
        4  : dup_top
        5  : rot_four
        9  : nop
        10 : unary_positive
        11 : unary_negative
        12 : unary_not
        13 : unary_convert
        15 : unary_invert
        19 : binary_power
        20 : binary_multiply
        21 : binary_divide
        22 : binary_modulo
        23 : binary_add
        24 : binary_subtract
        25 : binary_subscr
        26 : binary_floor_divide
        27 : binary_true_divide
        28 : inplace_floor_divide
        29 : inplace_true_divide
        30 : slice_0
        31 : slice_1
        32 : slice_2
        33 : slice_3
        40 : store_slice_0
        41 : store_slice_1
        42 : store_slice_2
        43 : store_slice_3
        50 : delete_slice_0
        51 : delete_slice_1
        52 : delete_slice_2
        53 : delete_slice_3
        54 : store_map
        55 : inplace_add
        56 : inplace_subtract
        57 : inplace_multiply
        58 : inplace_divide
        59 : inplace_modulo
        60 : store_subscr
        61 : delete_subscr
        62 : binary_lshift
        63 : binary_rshift
        64 : binary_and
        65 : binary_xor
        66 : binary_or
        67 : inplace_power
        68 : get_iter
        70 : print_expr
        71 : print_item
        72 : print_newline
        73 : print_item_to
        74 : print_newline_to
        75 : inplace_lshift
        76 : inplace_rshift
        77 : inplace_and
        78 : inplace_xor
        79 : inplace_or
        80 : break_loop
        81 : with_cleanup
        82 : load_locals
        83 : return_value
        84 : import_star
        85 : exec_stmt
        86 : yield_value
        87 : pop_block
        88 : end_finally
        89 : build_class
        90 : store_name           # Index in name list
        91 : delete_name          # ""
        92 : unpack_sequence      # Number of tuple items
        93 : for_iter
        94 : list_append
        95 : store_attr           # Index in name list
        96 : delete_attr          # ""
        97 : store_global         # ""
        98 : delete_global        # ""
        99 : dup_topx             # number of items to duplicate
        100: load_const           # Index in const list
        101: load_name            # Index in name list
        102: build_tuple          # Number of tuple items
        103: build_list           # Number of list items
        104: build_set            # Number of set items
        105: build_map            # Number of dict entries (upto 255)
        106: load_attr            # Index in name list
        107: compare_op           # Comparison operator
        108: import_name          # Index in name list
        109: import_from          # Index in name list
        110: jump_forward         # Number of bytes to skip
        111: jump_if_false_or_pop # Target byte offset from beginning of code
        112: jump_if_true_or_pop  # ""
        113: jump_absolute        # ""
        114: pop_jump_if_false    # ""
        115: pop_jump_if_true     # ""
        116: load_global          # Index in name list
        119: continue_loop        # Target address
        120: setup_loop           # Distance to target address
        121: setup_except         # ""
        122: setup_finally        # ""
        124: load_fast            # Local variable number
        125: store_fast           # Local variable number
        126: delete_fast          # Local variable number
        130: raise_varargs        # Number of raise arguments (1, 2, or 3)
        131: call_function        # #args + (#kwargs << 8)
        132: make_function        # Number of args with default values
        133: build_slice          # Number of items
        134: make_closure
        135: load_closure
        136: load_deref
        137: store_deref
        140: call_function_var    # #args + (#kwargs << 8)
        141: call_function_kw     # #args + (#kwargs << 8)
        142: call_function_var_kw # #args + (#kwargs << 8)
        143: setup_with
        145: extended_arg
        146: set_add
        147: map_add
  code_object:
    -webide-representation: "{name.value}"
    seq:
      - id: arg_count   # argcount
        type: u4
      - id: local_count # nlocals
        type: u4
      - id: stack_size
        type: u4
      - id: flags
        type: u4
        enum: flags_enum
      - id: code
        type: assembly
      - id: consts
        type: py_object
      - id: names
        type: py_object
      - id: var_names
        type: py_object
      - id: free_vars
        type: py_object
      - id: cell_vars
        type: py_object
      - id: filename
        type: py_object
      - id: name
        type: py_object
      - id: first_line_no
        type: u4
      - id: lnotab
        type: py_object
    enums:
      flags_enum:
        0x04: has_args
        0x08: has_kwargs
        0x20: generator
  py_object:
    -webide-representation: "{type}: {value}"
    seq:
      - id: type
        type: u1
        enum: object_type
      - id: value
        type:
          switch-on: type
          cases:
            "object_type::code_object": code_object
            "object_type::string":      py_string
            "object_type::string_ref":  string_ref
            "object_type::interned":    interned_string
            "object_type::tuple":       tuple
            "object_type::int":         u4
            "object_type::py_false":    py_false
            "object_type::py_true":     py_true
            "object_type::none":        py_none
    types:
      py_string:
        -webide-representation: "{data}"
        seq:
          - id: length
            type: u4
          - id: data
            size: length
      interned_string:
        -webide-representation: "{data}"
        seq:
          - id: length
            type: u4
          - id: data
            type: str
            size: length
            encoding: utf-8
      string_ref:
        -webide-representation: "#{interned_list_index:dec}"
        seq:
          - id: interned_list_index
            type: u4
      unicode_string:
        -webide-representation: "{data}"
        seq:
          - id: length
            type: u4
          - id: data
            size: length
            type: str
            encoding: utf-8
      tuple:
        -webide-representation: "{count:dec} items"
        seq:
          - id: count
            type: u4
          - id: items
            type: py_object
            repeat: expr
            repeat-expr: count
      py_none:
        -webide-representation: "None"
      py_true:
        -webide-representation: "true"
      py_false:
        -webide-representation: "false"
    enums:
      object_type:
        40: tuple             # (
        70: py_false          # F
        78: none              # N
        82: string_ref        # R
        84: py_true           # T
        99: code_object       # c
        105: int              # i
        115: string           # s
        116: interned         # t
        117: unicode_string   # u
enums:
  # https://github.com/python/cpython/blob/v2.7.18/Python/import.c
  version:
    20121: v15
    50428: v16
    50823: v20
    60202: v21
    60717: v22
    62011: v23_a0
    62021: v23_a0b
    62041: v24_a0
    62051: v24_a3
    62061: v24_b1
    62071: v25_a0
    62081: v25_a0b
    62091: v25_a0c
    62092: v25_a0d
    62101: v25_b3
    62111: v25_b3b
    62121: v25_c1
    62131: v25_c2
    62151: v26_a0
    62161: v26_a1
    62171: v27_a0
    62181: v27_a0b
    62191: v27_a0c
    62201: v27_a0d
    62211: v27_a0e
`
  },
  {
    id: "ksy_swf",
    name: "Adobe Flash (AKA Shockwave Flash, Macromedia Flash)",
    category: "Executable",
    metadata: {
      isGenerated: true,
      fileExtensions: ["swf"],
      description: "Adobe Flash (AKA Shockwave Flash, Macromedia Flash)",
      originalCategory: "executable",
      filePath: "executable/swf.ksy",
      signature: {"offset":0,"bytes":[87,83]},
      endian: "le"
    },
    content: `meta:
  id: swf
  title: Adobe Flash (AKA Shockwave Flash, Macromedia Flash)
  file-extension: swf
  xref:
    justsolve: SWF
    pronom: fmt/507
      # - fmt/{505..507} # Adobe Flash {8..10}
      # - fmt/{757..776} # Adobe Flash {11..30}
    loc:
      - fdd000130 # SWF 7
      - fdd000248 # SWF 8
    mime: application/x-shockwave-flash
    wikidata: Q594447
  tags:
    - executable
    - media
  license: CC0-1.0
  endian: le
#  imports:
#    - abc_bytecode
doc: |
  SWF files are used by Adobe Flash (AKA Shockwave Flash, Macromedia
  Flash) to encode rich interactive multimedia content and are,
  essentially, a container for special bytecode instructions to play
  back that content. In early 2000s, it was dominant rich multimedia
  web format (.swf files were integrated into web pages and played
  back with a browser plugin), but its usage largely declined in
  2010s, as HTML5 and performant browser-native solutions
  (i.e. JavaScript engines and graphical approaches, such as WebGL)
  emerged.

  There are a lot of versions of SWF (~36), format is somewhat
  documented by Adobe.
doc-ref: https://open-flash.github.io/mirrors/swf-spec-19.pdf
seq:
  - id: compression
    -orig-id: Signature
    type: u1
    enum: compressions
  - id: signature
    -orig-id: Signature
    contents: "WS"
  - id: version
    -orig-id: Version
    type: u1
  - id: len_file
    -orig-id: FileLength
    type: u4
  - id: plain_body
    size-eos: true
    type: swf_body
    if: compression == compressions::none
  - id: zlib_body
    size-eos: true
    process: zlib
    type: swf_body
    if: compression == compressions::zlib
types:
  swf_body:
    seq:
      - id: rect
        type: rect
      - id: frame_rate
        type: u2
      - id: frame_count
        type: u2
      - id: file_attributes_tag
        type: tag
        if: _root.version >= 8
      - id: tags
        type: tag
        repeat: eos
  rect:
    seq:
      - id: b1
        type: u1
      - id: skip
        size: num_bytes
    instances:
      num_bits:
        value: b1 >> 3
      num_bytes:
        value: ((num_bits * 4 - 3) + 7) / 8
  rgb:
    seq:
      - id: r
        type: u1
      - id: g
        type: u1
      - id: b
        type: u1
  tag:
    seq:
      - id: record_header
        type: record_header
      - id: tag_body
        size: record_header.len
        type:
          switch-on: record_header.tag_type
          cases:
            'tag_type::define_sound': define_sound_body
            'tag_type::do_abc': do_abc_body
            'tag_type::script_limits': script_limits_body
            'tag_type::symbol_class': symbol_class_body
            'tag_type::set_background_color': rgb
            'tag_type::export_assets': symbol_class_body
  define_sound_body:
    seq:
      - id: id
        -orig-id: SoundId
        type: u2
      - id: format
        -orig-id: SoundFormat
        type: b4
      - id: sampling_rate
        -orig-id: SoundRate
        type: b2
        enum: sampling_rates
        doc: Sound sampling rate, as per enum. Ignored for Nellymoser and Speex codecs.
      - id: bits_per_sample
        -orig-id: SoundSize
        type: b1
        enum: bps
      - id: num_channels
        -orig-id: SoundType
        type: b1
        enum: channels
      - id: num_samples
        type: u4
    enums:
      sampling_rates:
        0: rate_5_5_khz
        1: rate_11_khz
        2: rate_22_khz
        3: rate_44_khz
      bps:
        0: sound_8_bit
        1: sound_16_bit
      channels:
        0: mono
        1: stereo
  do_abc_body:
    seq:
      - id: flags
        type: u4
      - id: name
        type: strz
        encoding: ASCII
      - id: abcdata
        size-eos: true
        #type: abc_bytecode
  script_limits_body:
    seq:
      - id: max_recursion_depth
        type: u2
      - id: script_timeout_seconds
        type: u2
  symbol_class_body:
    seq:
      - id: num_symbols
        type: u2
      - id: symbols
        type: symbol
        repeat: expr
        repeat-expr: num_symbols
    types:
      symbol:
        seq:
          - id: tag
            type: u2
          - id: name
            type: strz
            encoding: ASCII
  record_header:
    seq:
      - id: tag_code_and_length
        type: u2
      - id: big_len
        type: s4
        if: small_len == 0x3f
    instances:
      tag_type:
        value: 'tag_code_and_length >> 6'
        enum: tag_type
      small_len:
        value: 'tag_code_and_length & 0b111111'
      len:
        value: 'small_len == 0x3f ? big_len : small_len'
enums:
  compressions:
    0x46: none # F
    0x43: zlib # C
    0x5a: lzma # Z
  tag_type:
    0: end_of_file
    4: place_object
    5: remove_object
    9: set_background_color
    14: define_sound
    26: place_object2
    28: remove_object2
    43: frame_label
    56: export_assets
    65: script_limits
    69: file_attributes
    70: place_object3
    76: symbol_class
    77: metadata
    78: define_scaling_grid
    82: do_abc
    86: define_scene_and_frame_label_data
`
  },
  {
    id: "ksy_uefi_te",
    name: "TE (Terse Executable) file",
    category: "Executable",
    metadata: {
      isGenerated: true,
      fileExtensions: ["efi","te"],
      description: "TE (Terse Executable) file",
      originalCategory: "executable",
      filePath: "executable/uefi_te.ksy",
      endian: "le"
    },
    content: `meta:
  id: uefi_te
  title: TE (Terse Executable) file
  application: UEFI
  file-extension:
    - efi
    - te
  xref:
    wikidata: Q83443959
  tags:
    - executable
    - firmware
  license: CC0-1.0
  ks-version: 0.7
  endian: le
doc: |
  This type of executables could be found inside the UEFI firmware. The UEFI
  firmware is stored in SPI flash memory, which is a chip soldered on a
  system's motherboard. UEFI firmware is very modular: it usually contains
  dozens, if not hundreds, of executables. To store all these separates files,
  the firmware is laid out in volumes using the Firmware File System (FFS), a
  file system specifically designed to store firmware images. The volumes
  contain files that are identified by GUIDs and each of these files contain
  one or more sections holding the data. One of these sections contains the
  actual executable image. Most of the executable images follow the PE format.
  However, some of them follow the TE format.

  The Terse Executable (TE) image format was created as a mechanism to reduce
  the overhead of the PE/COFF headers in PE32/PE32+ images, resulting in a
  corresponding reduction of image sizes for executables running in the PI
  (Platform Initialization) Architecture environment. Reducing image size
  provides an opportunity for use of a smaller system flash part.

  So the TE format is basically a stripped version of PE.

doc-ref: https://uefi.org/sites/default/files/resources/PI_Spec_1_6.pdf
seq:
  - id: te_hdr
    size: 0x28
    type: te_header
  - id: sections
    type: section
    repeat: expr
    repeat-expr: te_hdr.num_sections
types:
  te_header:
    seq:
      - id: magic
        contents: "VZ"
      - id: machine
        type: u2
        enum: machine_type
      - id: num_sections
        type: u1
      - id: subsystem
        type: u1
        enum: subsystem_enum
      - id: stripped_size
        type: u2
      - id: entry_point_addr
        type: u4
      - id: base_of_code
        type: u4
      - id: image_base
        type: u8
      - id: data_dirs
        type: header_data_dirs
    enums:
      # Don't forget to update the \`machine_type\` enum in \`executable/microsoft_pe.ksy\` when
      # you modify this one.
      #
      # https://learn.microsoft.com/en-us/windows/win32/debug/pe-format#machine-types
      machine_type:
        0x0:
          id: unknown
          doc: The content of this field is assumed to be applicable to any machine type
        0x184:
          id: alpha
          doc: Alpha AXP, 32-bit address space
        0x284:
          id: alpha64_or_axp64
          -orig-id:
            - IMAGE_FILE_MACHINE_ALPHA64
            - IMAGE_FILE_MACHINE_AXP64
          doc: |
            > Alpha 64, 64-bit address space
            or
            > AXP 64 (Same as Alpha 64)
        0x1d3:
          id: am33
          doc: Matsushita AM33
        0x8664:
          id: amd64
          doc: x64
        0x1c0:
          id: arm
          doc: ARM little endian
        0xaa64:
          id: arm64
          doc: ARM64 little endian
        0x1c4:
          id: arm_nt
          -orig-id: IMAGE_FILE_MACHINE_ARMNT
          doc: ARM Thumb-2 little endian
        0xebc:
          id: ebc
          doc: EFI byte code
        0x14c:
          id: i386
          doc: Intel 386 or later processors and compatible processors
        0x200:
          id: ia64
          doc: Intel Itanium processor family
        0x6232:
          id: loongarch32
          doc: LoongArch 32-bit processor family
        0x6264:
          id: loongarch64
          doc: LoongArch 64-bit processor family
        0x9041:
          id: m32r
          doc: Mitsubishi M32R little endian
        0x266:
          id: mips16
          doc: MIPS16
        0x366:
          id: mips_fpu
          -orig-id: IMAGE_FILE_MACHINE_MIPSFPU
          doc: MIPS with FPU
        0x466:
          id: mips16_fpu
          -orig-id: IMAGE_FILE_MACHINE_MIPSFPU16
          doc: MIPS16 with FPU
        0x1f0:
          id: powerpc
          doc: Power PC little endian
        0x1f1:
          id: powerpc_fp
          -orig-id: IMAGE_FILE_MACHINE_POWERPCFP
          doc: Power PC with floating point support
        0x166:
          id: r4000
          doc: MIPS little endian
        0x5032:
          id: riscv32
          doc: RISC-V 32-bit address space
        0x5064:
          id: riscv64
          doc: RISC-V 64-bit address space
        0x5128:
          id: riscv128
          doc: RISC-V 128-bit address space
        0x1a2:
          id: sh3
          doc: Hitachi SH3
        0x1a3:
          id: sh3_dsp
          -orig-id: IMAGE_FILE_MACHINE_SH3DSP
          doc: Hitachi SH3 DSP
        0x1a6:
          id: sh4
          doc: Hitachi SH4
        0x1a8:
          id: sh5
          doc: Hitachi SH5
        0x1c2:
          id: thumb
          doc: Thumb
        0x169:
          id: wce_mips_v2
          -orig-id: IMAGE_FILE_MACHINE_WCEMIPSV2
          doc: MIPS little-endian WCE v2
      subsystem_enum:
        0: unknown
        1: native
        2: windows_gui
        3: windows_cui
        7: posix_cui
        9: windows_ce_gui
        10: efi_application
        11: efi_boot_service_driver
        12: efi_runtime_driver
        13: efi_rom
        14: xbox
        16: windows_boot_application
  header_data_dirs:
    seq:
      - id: base_relocation_table
        type: data_dir
      - id: debug
        type: data_dir
  data_dir:
    seq:
      - id: virtual_address
        type: u4
      - id: size
        type: u4
  section:
    seq:
      - id: name
        type: str
        encoding: UTF-8
        size: 8
        pad-right: 0
      - id: virtual_size
        type: u4
      - id: virtual_address
        type: u4
      - id: size_of_raw_data
        type: u4
      - id: pointer_to_raw_data
        type: u4
      - id: pointer_to_relocations
        type: u4
      - id: pointer_to_linenumbers
        type: u4
      - id: num_relocations
        type: u2
      - id: num_linenumbers
        type: u2
      - id: characteristics
        type: u4
    instances:
      body:
        pos: pointer_to_raw_data - _root.te_hdr.stripped_size + _root.te_hdr._io.size
        size: size_of_raw_data
`
  },
  {
    id: "ksy_amlogic_emmc_partitions",
    name: "Amlogic proprietary eMMC partition table",
    category: "File System",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Amlogic proprietary eMMC partition table",
      originalCategory: "filesystem",
      filePath: "filesystem/amlogic_emmc_partitions.ksy",
      signature: {"offset":0,"bytes":[null,0]},
      endian: "le"
    },
    content: `meta:
  id: amlogic_emmc_partitions
  title: Amlogic proprietary eMMC partition table
  license: CC0-1.0
  ks-version: 0.9
  encoding: UTF-8
  endian: le
  bit-endian: le

doc: |
  This is an unnamed and undocumented partition table format implemented by
  the bootloader and kernel that Amlogic provides for their Linux SoCs (Meson
  series at least, and probably others). They appear to use this rather than GPT,
  the industry standard, because their BootROM loads and executes the next stage
  loader from offset 512 (0x200) on the eMMC, which is exactly where the GPT
  header would have to start. So instead of changing their BootROM, Amlogic
  devised this partition table, which lives at an offset of 36MiB (0x240_0000)
  on the eMMC and so doesn't conflict. This parser expects as input just the
  partition table from that offset. The maximum number of partitions in a table
  is 32, which corresponds to a maximum table size of 1304 bytes (0x518).

doc-ref:
  - http://aml-code.amlogic.com/kernel/common.git/tree/include/linux/mmc/emmc_partitions.h?id=18a4a87072ababf76ea08c8539e939b5b8a440ef
  - http://aml-code.amlogic.com/kernel/common.git/tree/drivers/amlogic/mmc/emmc_partitions.c?id=18a4a87072ababf76ea08c8539e939b5b8a440ef

seq:
  - id: magic
    contents: ["MPT", 0]
  - id: version
    size: 12
    type: strz
  - id: num_partitions
    -orig-id: part_num
    type: s4
    valid:
      min: 1
      max: 32
  - id: checksum
    type: u4
    doc: |
      To calculate this, treat the first (and only the first) partition
      descriptor in the table below as an array of unsigned little-endian
      32-bit integers. Sum all those integers mod 2^32, then multiply the
      result by the total number of partitions, also mod 2^32. Amlogic
      likely meant to include all the partition descriptors in the sum,
      but their code as written instead repeatedly loops over the first
      one, once for each partition in the table.
  - id: partitions
    type: partition
    repeat: expr
    repeat-expr: num_partitions

types:
  partition:
    seq:
      - id: name
        size: 16
        type: strz
      - id: size
        type: u8
      - id: offset
        type: u8
        doc: |
          The start of the partition relative to the start of the eMMC, in bytes
      - id: flags
        size: 4
        type: part_flags
      - id: padding
        size: 4

    types:
      part_flags:
        seq:
          - id: is_code
            -orig-id: STORE_CODE
            type: b1
          - id: is_cache
            -orig-id: STORE_CACHE
            type: b1
          - id: is_data
            -orig-id: STORE_DATA
            type: b1
`
  },
  {
    id: "ksy_android_super",
    name: "Android Dynamic Partitions metadata",
    category: "File System",
    metadata: {
      isGenerated: true,
      fileExtensions: ["img"],
      description: "Android Dynamic Partitions metadata",
      originalCategory: "filesystem",
      filePath: "filesystem/android_super.ksy",
      endian: "le"
    },
    content: `meta:
  id: android_super
  title: Android Dynamic Partitions metadata
  application: Android
  file-extension: img
  tags:
    - android
    - filesystem
  license: CC0-1.0
  ks-version: 0.9
  bit-endian: le
  endian: le

doc: |
  The metadata stored by Android at the beginning of a "super" partition, which
  is what it calls a disk partition that holds one or more Dynamic Partitions.
  Dynamic Partitions do more or less the same thing that LVM does on Linux,
  allowing Android to map ranges of non-contiguous extents to a single logical
  device. This metadata holds that mapping.

doc-ref:
  - https://source.android.com/docs/core/ota/dynamic_partitions
  - https://android.googlesource.com/platform/system/core/+/refs/tags/android-11.0.0_r8/fs_mgr/liblp/include/liblp/metadata_format.h

instances:
  root:
    pos: 0x1000
    type: root

types:
  root:
    seq:
      - id: primary_geometry
        size: 0x1000
        type: geometry

      - id: backup_geometry
        type: geometry
        size: 0x1000

      - id: primary_metadata
        size: primary_geometry.metadata_max_size
        type: metadata
        repeat: expr
        repeat-expr: primary_geometry.metadata_slot_count

      - id: backup_metadata
        # These attributes are intentionally taken from primary_geometry, even
        # for backup_metadata. The first non-corrupt geometry specifier dictates
        # the layout of both primary and backup metadata.
        size: primary_geometry.metadata_max_size
        type: metadata
        repeat: expr
        repeat-expr: primary_geometry.metadata_slot_count

  geometry:
    seq:
      - id: magic
        contents: 'gDla'
      - id: struct_size
        type: u4
      - id: checksum
        size: 32
        doc: |
          SHA-256 hash of struct_size bytes from beginning of geometry,
          calculated as if checksum were zeroed out
      - id: metadata_max_size
        type: u4
      - id: metadata_slot_count
        type: u4
      - id: logical_block_size
        type: u4

  metadata:
    seq:
      - id: magic
        contents: '0PLA'
      - id: major_version
        type: u2
      - id: minor_version
        type: u2
      - id: header_size
        type: u4
      - id: header_checksum
        size: 32
        doc: |
          SHA-256 hash of header_size bytes from beginning of metadata,
          calculated as if header_checksum were zeroed out
      - id: tables_size
        type: u4
      - id: tables_checksum
        size: 32
        doc: SHA-256 hash of tables_size bytes from end of header
      - id: partitions
        type: table_descriptor(table_kind::partitions)
      - id: extents
        type: table_descriptor(table_kind::extents)
      - id: groups
        type: table_descriptor(table_kind::groups)
      - id: block_devices
        type: table_descriptor(table_kind::block_devices)

    enums:
      table_kind:
        0: partitions
        1: extents
        2: groups
        3: block_devices

    types:
      table_descriptor:
        params:
          - id: kind
            type: u1
            enum: table_kind
            -affected-by: 135

        seq:
          - id: offset
            type: u4
          - id: num_entries
            type: u4
          - id: entry_size
            type: u4

        instances:
          table:
            pos: _parent.header_size + offset
            size: entry_size
            type:
              switch-on: kind
              cases:
                'table_kind::partitions': partition
                'table_kind::extents': extent
                'table_kind::groups': group
                'table_kind::block_devices': block_device
            repeat: expr
            repeat-expr: num_entries

      partition:
        seq:
          - id: name
            size: 36
            type: strz
            encoding: UTF-8
          - id: attr_readonly
            type: b1
          - id: attr_slot_suffixed
            type: b1
          - id: attr_updated
            type: b1
          - id: attr_disabled
            type: b1
          - id: attrs_reserved
            type: b28
          - id: first_extent_index
            type: u4
          - id: num_extents
            type: u4
          - id: group_index
            type: u4

      extent:
        seq:
          - id: num_sectors
            type: u8
          - id: target_type
            type: u4
            enum: target_type
          - id: target_data
            type: u8
          - id: target_source
            type: u4

        enums:
          target_type:
            0: linear
            1: zero

      group:
        seq:
          - id: name
            size: 36
            type: strz
            encoding: UTF-8
          - id: flag_slot_suffixed
            type: b1
          - id: flags_reserved
            type: b31
          - id: maximum_size
            type: u8

      block_device:
        seq:
          - id: first_logical_sector
            type: u8
          - id: alignment
            type: u4
          - id: alignment_offset
            type: u4
          - id: size
            type: u8
          - id: partition_name
            size: 36
            type: strz
            encoding: UTF-8
          - id: flag_slot_suffixed
            type: b1
          - id: flags_reserved
            type: b31
`
  },
  {
    id: "ksy_apm_partition_table",
    name: "APM (Apple Partition Map) partition table",
    category: "File System",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "APM (Apple Partition Map) partition table",
      originalCategory: "filesystem",
      filePath: "filesystem/apm_partition_table.ksy",
      endian: "be"
    },
    content: `meta:
  id: apm_partition_table
  title: APM (Apple Partition Map) partition table
  xref:
    forensicswiki: apm
    justsolve: Apple_Partition_Map
    wikidata: Q375944
  tags:
    - filesystem
    - macos
  license: CC0-1.0
  encoding: ascii
  endian: be
doc-ref: https://en.wikipedia.org/wiki/Apple_Partition_Map
instances:
  sector_size:
    value: 0x200
    doc: |
      0x200 (512) bytes for disks, 0x1000 (4096) bytes is not supported by APM
      0x800 (2048) bytes for CDROM
  partition_lookup:
    io: _root._io
    pos: _root.sector_size
    size: sector_size
    type: partition_entry
    doc: |
      Every partition entry contains the number of partition entries.
      We parse the first entry, to know how many to parse, including the first one.
      No logic is given what to do if other entries have a different number.
  partition_entries:
    io: _root._io
    pos: _root.sector_size
    size: sector_size
    type: partition_entry
    repeat: expr
    repeat-expr: _root.partition_lookup.number_of_partitions
types:
  partition_entry:
    seq:
      - id: magic
        contents: [ 0x50, 0x4d ]
      - id: reserved_1
        size: 0x2
      - id: number_of_partitions
        type: u4
      - id: partition_start
        type: u4
        doc: "First sector"
      - id: partition_size
        type: u4
        doc: "Number of sectors"
      - id: partition_name
        type: strz
        size: 0x20
      - id: partition_type
        type: strz
        size: 0x20
      - id: data_start
        type: u4
        doc: "First sector"
      - id: data_size
        type: u4
        doc: "Number of sectors"
      - id: partition_status
        type: u4
      - id: boot_code_start
        type: u4
        doc: "First sector"
      - id: boot_code_size
        type: u4
        doc: "Number of bytes"
      - id: boot_loader_address
        type: u4
        doc: "Address of bootloader code"
      - id: reserved_2
        size: 0x4
      - id: boot_code_entry
        type: u4
        doc: "Boot code entry point"
      - id: reserved_3
        size: 0x4
      - id: boot_code_cksum
        type: u4
        doc: "Boot code checksum"
      - id: processor_type
        type: strz
        size: 0x10
      # Skipping the remaining of the sector, it should be all 0x00
    instances:
      partition:
        io: _root._io
        pos: partition_start * _root.sector_size
        size: partition_size * _root.sector_size
        if: 'partition_status & 1 != 0'
      data:
        io: _root._io
        pos: data_start * _root.sector_size
        size: data_size * _root.sector_size
      boot_code:
        io: _root._io
        pos: boot_code_start * _root.sector_size
        size: boot_code_size
`
  },
  {
    id: "ksy_apple_single_double",
    name: "AppleSingle / AppleDouble",
    category: "File System",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "AppleSingle / AppleDouble",
      originalCategory: "filesystem",
      filePath: "filesystem/apple_single_double.ksy",
      endian: "be"
    },
    content: `meta:
  id: apple_single_double
  title: AppleSingle / AppleDouble
  xref:
    forensicswiki: appledouble_header_file
    justsolve: AppleDouble
    rfc: 1740
    wikidata: Q4781113
  tags:
    - filesystem
    - macos
  license: CC0-1.0
  endian: be
doc: |
  AppleSingle and AppleDouble files are used by certain Mac
  applications (e.g. Finder) to store Mac-specific file attributes on
  filesystems that do not support that.

  Syntactically, both formats are the same, the only difference is how
  they are being used:

  * AppleSingle means that only one file will be created on external
    filesystem that will hold both the data (AKA "data fork" in Apple
    terminology), and the attributes (AKA "resource fork").
  * AppleDouble means that two files will be created: a normal file
    that keeps the data ("data fork") is kept separately from an
    auxiliary file that contains attributes ("resource fork"), which
    is kept with the same name, but starting with an extra dot and
    underscore \`._\` to keep it hidden.

  In modern practice (Mac OS X), Finder only uses AppleDouble to keep
  compatibility with other OSes, as virtually nobody outside of Mac
  understands how to access data in AppleSingle container.
doc-ref: http://kaiser-edv.de/documents/AppleSingle_AppleDouble.pdf
seq:
  - id: magic
    type: u4
    enum: file_type
  - id: version
    type: u4
  - id: reserved
    size: 16
    doc: Must be all 0.
  - id: num_entries
    type: u2
  - id: entries
    type: entry
    repeat: expr
    repeat-expr: num_entries
enums:
  file_type:
    0x00051600: apple_single
    0x00051607: apple_double
types:
  entry:
    seq:
      - id: type
        type: u4
        enum: types
      - id: ofs_body
        type: u4
      - id: len_body
        type: u4
    instances:
      body:
        pos: ofs_body
        size: len_body
        type:
          switch-on: type
          cases:
            'types::finder_info': finder_info
    enums:
      types:
        1:
          id: data_fork
        2:
          id: resource_fork
        3:
          id: real_name
          doc: File name on a file system that supports all the attributes.
        4:
          id: comment
        5:
          id: icon_bw
        6:
          id: icon_color
        8:
          id: file_dates_info
          doc: File creation, modification, access date/timestamps.
        9:
          id: finder_info
        10:
          id: macintosh_file_info
        11:
          id: prodos_file_info
        12:
          id: msdos_file_info
        13:
          id: afp_short_name
        14:
          id: afp_file_info
        15:
          id: afp_directory_id
  finder_info:
    -orig-id: FInfo
    doc: Information specific to Finder
    doc-ref: older Inside Macintosh, Volume II page 84 or Volume IV page 104.
    seq:
      - id: file_type
        -orig-id: fdType
        size: 4
      - id: file_creator
        -orig-id: fdCreator
        size: 4
      - id: flags
        -orig-id: fdFlags
        type: u2
      - id: location
        -orig-id: fdLocation
        type: point
        doc: File icon's coordinates when displaying this folder.
      - id: folder_id
        -orig-id: fdFldr
        type: u2
        doc: File folder ID (=window).
  point:
    doc: Specifies 2D coordinate in QuickDraw grid.
    seq:
      - id: x
        type: u2
      - id: y
        type: u2
`
  },
  {
    id: "ksy_btrfs_stream",
    name: "Btrfs Stream",
    category: "File System",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "",
      originalCategory: "filesystem",
      filePath: "filesystem/btrfs_stream.ksy",
      endian: "le"
    },
    content: `meta:
  id: btrfs_stream
  application: Btrfs
  xref:
    wikidata: Q283820
  tags:
    - filesystem
    - linux
  license: CC0-1.0
  endian: le
doc: |
  Btrfs is a copy on write file system based on B-trees focusing on fault tolerance, repair and easy
  administration. Btrfs is intended to address the lack of pooling, snapshots, checksums, and
  integral multi-device spanning in Linux file systems.
  Given any pair of subvolumes (or snapshots), Btrfs can generate a binary diff between them by
  using the \`btrfs send\` command that can be replayed later by using \`btrfs receive\`, possibly on a
  different Btrfs file system. The \`btrfs send\` command creates a set of data modifications required
  for converting one subvolume into another.
  This spec can be used to disassemble the binary diff created by the \`btrfs send\` command.
  If you want a text representation you may want to checkout \`btrfs receive --dump\` instead.
doc-ref: https://archive.kernel.org/oldwiki/btrfs.wiki.kernel.org/index.php/Design_notes_on_Send/Receive.html

seq:
  - id: header
    type: send_stream_header
  - id: commands
    type: send_command
    repeat: eos
types:
  send_stream_header:
    seq:
      - id: magic
        contents: ['btrfs-stream', 0x00]
      - id: version
        type: u4le
  send_command:
    seq:
      - id: len_data
        type: u4le
      - id: type
        type: u2le
        enum: command
      - id: checksum
        size: 4
        doc: CRC32 checksum of a whole send command, including the header, with this attribute set to 0.
      - id: data
        type: tlvs
        size: len_data
    types:
      tlvs:
        seq:
          - id: tlv
            type: tlv
            repeat: eos
      tlv:
        seq:
          - id: type
            enum: attribute
            type: u2le
          - id: length
            type: u2le
          - id: value
            size: length
            type:
              switch-on: type
              cases:
                #'attribute::unspec':
                'attribute::uuid': uuid
                'attribute::ctransid': u8le
                #'attribute:ino':
                'attribute::size': u8le
                'attribute::mode': u8le
                'attribute::uid': u8le
                'attribute::gid': u8le
                'attribute::rdev': u8le
                'attribute::ctime': timespec
                'attribute::mtime': timespec
                'attribute::atime': timespec
                'attribute::otime': timespec
                'attribute::xattr_name': string
                #'attribute::xattr_data':
                'attribute::path': string
                'attribute::path_to': string
                'attribute::path_link': string
                'attribute::file_offset': u8le
                #'attribute::data':
                'attribute::clone_uuid': uuid
                'attribute::clone_ctransid': u8le
                'attribute::clone_path': string
                'attribute::clone_offset': u8le
                'attribute::clone_len': u8le
      timespec:
        seq:
          - id: ts_sec
            type: s8le
          - id: ts_nsec
            type: s4le
      string:
        seq:
          - id: string
            type: str
            size-eos: true
            encoding: UTF-8
      uuid:
        seq:
          - id: uuid
            size: 16

# enum btrfs_send_cmd
# https://git.kernel.org/pub/scm/linux/kernel/git/kdave/btrfs-progs.git/tree/kernel-shared/send.h?id=979bda6f#n69
enums:
  command:
    0x00: unspec
    0x01: subvol
    0x02: snapshot
    0x03: mkfile
    0x04: mkdir
    0x05: mknod
    0x06: mkfifo
    0x07: mksock
    0x08: symlink
    0x09: rename
    0x0a: link
    0x0b: unlink
    0x0c: rmdir
    0x0d: set_xattr
    0x0e: remove_xattr
    0x0f: write
    0x10: clone
    0x11: truncate
    0x12: chmod
    0x13: chown
    0x14: utimes
    0x15: end
    0x16: update_extent
  attribute:
    0x00: unspec
    0x01: uuid
    0x02: ctransid
    0x03: ino
    0x04: size
    0x05: mode
    0x06: uid
    0x07: gid
    0x08: rdev
    0x09: ctime
    0x0a: mtime
    0x0b: atime
    0x0c: otime
    0x0d: xattr_name
    0x0e: xattr_data
    0x0f: path
    0x10: path_to
    0x11: path_link
    0x12: file_offset
    0x13: data
    0x14: clone_uuid
    0x15: clone_ctransid
    0x16: clone_path
    0x17: clone_offset
    0x18: clone_len
`
  },
  {
    id: "ksy_cramfs",
    name: "Cramfs",
    category: "File System",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "",
      originalCategory: "filesystem",
      filePath: "filesystem/cramfs.ksy",
      endian: "le"
    },
    content: `meta:
  id: cramfs
  xref:
    justsolve: Cramfs
    wikidata: Q747406
  tags:
    - filesystem
    - linux
  license: MIT
  endian: le
seq:
  - id: super_block
    type: super_block_struct

instances:
  page_size:
    value: 4096

types:
  super_block_struct:
    seq:
      - id: magic
        contents: [0x45, 0x3D, 0xCD, 0x28]
      - id: size
        type: u4
      - id: flags
        type: u4
      - id: future
        type: u4
      - id: signature
        contents: 'Compressed ROMFS'
      - id: fsid
        type: info
      - id: name
        type: str
        size: 16
        encoding: ASCII
      - id: root
        type: inode
    instances:
      # flags
      flag_fsid_v2:
        value: (flags >>  0) & 1
      flag_sorted_dirs:
        value: (flags >>  1) & 1
      flag_holes:
        value: (flags >>  8) & 1
      flag_wrong_signature:
        value: (flags >>  9) & 1
      flag_shifted_root_offset:
        value: (flags >> 10) & 1

  info:
    seq:
      - id: crc
        type: u4
      - id: edition
        type: u4
      - id: blocks
        type: u4
      - id: files
        type: u4

  inode:
    seq:
      - id: mode
        type: u2
      - id: uid
        type: u2
      - id: size_gid
        type: u4
      - id: namelen_offset
        type: u4
      - id: name
        type: str
        size: namelen
        encoding: utf-8
    instances:
      # -- [mode] --
      type:
        value: (mode >> 12) & 0b1111
        enum: file_type
      attr:
        value: (mode >> 9) & 0b0111
      perm_u:
        value: (mode >> 6) & 0b0111
      perm_g:
        value: (mode >> 3) & 0b0111
      perm_o:
        value: mode & 0b0111
      # -- [size_gid] --
      size:
        value: size_gid & 0xFFFFFF
      gid:
        value: size_gid >> 24
      # -- [namelen_offset] --
      namelen:
        value: (namelen_offset & 0x3F) << 2
      offset:
        value: ((namelen_offset >> 6) & 0x3FFFFFF) << 2
      # -- [type dependent data] --
      as_reg_file:
        io: _root._io
        pos: offset
        type: chunked_data_inode
      as_symlink:
        io: _root._io
        pos: offset
        type: chunked_data_inode
      as_dir:
        io: _root._io
        pos: offset
        size: size
        type: dir_inode
    enums:
      file_type:
        1: fifo
        2: chrdev
        4: dir
        6: blkdev
        8: reg_file
        10: symlink
        12: socket

  chunked_data_inode:
    seq:
      - id: block_end_index
        type: u4
        repeat: expr
        repeat-expr: (_parent.size + _root.page_size - 1) / _root.page_size

      # Correct decoding can't yet be described -- raw data for now.
      - id: raw_blocks
        size-eos: true

      #- id: raw_blocks
      #  size: block_end_index[i] - _io.pos
      #  repeat: expr
      #  repeat-expr: (_parent.size + _root.page_size - 1) / _root.page_size

  dir_inode:
    seq:
      - id: children
        repeat: eos
        type: inode
        if: _io.size > 0
`
  },
  {
    id: "ksy_ext2",
    name: "ext2 filesystem",
    category: "File System",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "ext2 filesystem",
      originalCategory: "filesystem",
      filePath: "filesystem/ext2.ksy",
      endian: "le"
    },
    content: `meta:
  id: ext2
  title: ext2 filesystem
  xref:
    forensicswiki: extended_file_system_(ext)
    justsolve: Ext2
    wikidata: Q283527
  tags:
    - filesystem
    - linux
  license: CC0-1.0
  endian: le
instances:
  # https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/Documentation/filesystems/ext2.rst?id=a9edc03f13db#n116
  bg1:
    pos: 1024
    type: block_group
  root_dir:
    value: bg1.block_groups[0].inodes[1].as_dir
types:
  block_group:
    seq:
      - id: super_block
        type: super_block_struct
        size: 1024
      # https://www.nongnu.org/ext2-doc/ext2.html#BLOCK-GROUP-DESCRIPTOR-TABLE
      - id: block_groups
        type: bgd
        repeat: expr
        repeat-expr: super_block.block_group_count
  # https://www.nongnu.org/ext2-doc/ext2.html#super_block
  # https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/fs/ext2/ext2.h?id=cd913c76f489#n412
  # https://ext4.wiki.kernel.org/index.php/Ext4_Disk_Layout#The_Super_Block
  super_block_struct:
    seq:
      - id: inodes_count
        type: u4
      - id: blocks_count
        type: u4
      - id: r_blocks_count
        type: u4
      - id: free_blocks_count
        type: u4
      - id: free_inodes_count
        type: u4
      - id: first_data_block
        type: u4
      - id: log_block_size
        type: u4
      - id: log_frag_size
        type: u4
      - id: blocks_per_group
        type: u4
      - id: frags_per_group
        type: u4
      - id: inodes_per_group
        type: u4
      - id: mtime
        type: u4
      - id: wtime
        type: u4
      - id: mnt_count
        type: u2
      - id: max_mnt_count
        type: u2
      - id: magic
        contents: [0x53, 0xef]
      - id: state
        type: u2
        enum: state_enum
      - id: errors
        type: u2
        enum: errors_enum
      - id: minor_rev_level
        type: u2
      - id: lastcheck
        type: u4
      - id: checkinterval
        type: u4
      - id: creator_os
        type: u4
      - id: rev_level
        type: u4
      - id: def_resuid
        type: u2
      - id: def_resgid
        type: u2
#    -- EXT2_DYNAMIC_REV Specific --
      - id: first_ino
        type: u4
      - id: inode_size
        type: u2
      - id: block_group_nr
        type: u2
      - id: feature_compat
        type: u4
      - id: feature_incompat
        type: u4
      - id: feature_ro_compat
        type: u4
      - id: uuid
        size: 16
      - id: volume_name
        size: 16
      - id: last_mounted
        size: 64
      - id: algo_bitmap
        type: u4
#    -- Performance Hints --
      - id: prealloc_blocks
        type: u1
      - id: prealloc_dir_blocks
        type: u1
      - id: padding1
        size: 2
#    -- Journaling Support --
      - id: journal_uuid
        size: 16
      - id: journal_inum
        type: u4
      - id: journal_dev
        type: u4
      - id: last_orphan
        type: u4
#    -- Directory Indexing Support --
      - id: hash_seed
        type: u4
        repeat: expr
        repeat-expr: 4
      - id: def_hash_version
        type: u1
    instances:
      block_size:
        value: 1024 << log_block_size
      block_group_count:
        value: blocks_count / blocks_per_group
    enums:
      state_enum:
        1: valid_fs
        2: error_fs
      errors_enum:
        1: act_continue
        2: act_ro
        3: act_panic
  # https://www.nongnu.org/ext2-doc/ext2.html#BLOCK-GROUP-DESCRIPTOR-STRUCTURE
  # https://web.archive.org/web/20160804172310/http://virtualblueness.net/Ext2fs-overview/Ext2fs-overview-0.1-7.html
  bgd:
    seq:
      - id: block_bitmap_block
        type: u4
      - id: inode_bitmap_block
        type: u4
      - id: inode_table_block
        type: u4
      - id: free_blocks_count
        type: u2
      - id: free_inodes_count
        type: u2
      - id: used_dirs_count
        type: u2
      - id: pad_reserved
        size: 2 + 12
    instances:
      block_bitmap:
        pos: block_bitmap_block * _root.bg1.super_block.block_size
        size: 1024
      inode_bitmap:
        pos: inode_bitmap_block * _root.bg1.super_block.block_size
        size: 1024
      # https://www.nongnu.org/ext2-doc/ext2.html#INODE-TABLE
      # https://web.archive.org/web/20161114202411/http://www.virtualblueness.net/Ext2fs-overview/Ext2fs-overview-0.1-10.html
      inodes:
        pos: inode_table_block * _root.bg1.super_block.block_size
        type: inode
        repeat: expr
        repeat-expr: _root.bg1.super_block.inodes_per_group
  inode:
    seq:
      - id: mode
        type: u2
      - id: uid
        type: u2
      - id: size
        type: u4
      - id: atime
        type: u4
      - id: ctime
        type: u4
      - id: mtime
        type: u4
      - id: dtime
        type: u4
      - id: gid
        type: u2
      - id: links_count
        type: u2
      - id: blocks
        type: u4
      - id: flags
        type: u4
      - id: osd1
        type: u4
      - id: block
        type: block_ptr
        repeat: expr
        repeat-expr: 15
      - id: generation
        type: u4
      - id: file_acl
        type: u4
      - id: dir_acl
        type: u4
      - id: faddr
        type: u4
      - id: osd2
        size: 12
    instances:
      as_dir:
        io: 'block[0].body._io'
        pos: 0
        type: dir
  block_ptr:
    seq:
      - id: ptr
        type: u4
    instances:
      body:
        pos: ptr * _root.bg1.super_block.block_size
        size: _root.bg1.super_block.block_size
        type: raw_block
  raw_block:
    seq:
      - id: body
        size: _root.bg1.super_block.block_size
  # https://www.nongnu.org/ext2-doc/ext2.html#LINKED-DIRECTORY-ENTRY-STRUCTURE
  dir:
    seq:
      - id: entries
        type: dir_entry
        repeat: eos
  dir_entry:
    seq:
      - id: inode_ptr
        type: u4
      - id: rec_len
        type: u2
      - id: name_len
        type: u1
      - id: file_type
        type: u1
        enum: file_type_enum
      - id: name
        size: name_len
        type: str
        encoding: UTF-8
      - id: padding
        size: rec_len - name_len - 8
    instances:
      inode:
        value: '_root.bg1.block_groups[(inode_ptr - 1) / _root.bg1.super_block.inodes_per_group].inodes[(inode_ptr - 1) % _root.bg1.super_block.inodes_per_group]'
    enums:
      # https://www.nongnu.org/ext2-doc/ext2.html#IFDIR-FILE-TYPE
      file_type_enum:
        0: unknown
        1: reg_file
        2: dir
        3: chrdev
        4: blkdev
        5: fifo
        6: sock
        7: symlink
`
  },
  {
    id: "ksy_gpt_partition_table",
    name: "GPT (GUID) partition table",
    category: "File System",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "GPT (GUID) partition table",
      originalCategory: "filesystem",
      filePath: "filesystem/gpt_partition_table.ksy",
      endian: "le"
    },
    content: `meta:
  id: gpt_partition_table
  title: GPT (GUID) partition table
  xref:
    forensicswiki: gpt
    justsolve: GUID_Partition_Table
    wikidata: Q603889
  license: CC0-1.0
  endian: le
doc-ref: https://en.wikipedia.org/wiki/GUID_Partition_Table
instances:
  sector_size:
    value: 0x200
    # Default is 0x200 for 512 byte sectors, set to 0x1000 to parse 4096 byte sectors.
  primary:
    io: _root._io
    pos: _root.sector_size
    type: partition_header
  backup:
    io: _root._io
    pos: _io.size - _root.sector_size
    type: partition_header
types:
  partition_entry:
    seq:
      - id: type_guid
        size: 0x10
      - id: guid
        size: 0x10
      - id: first_lba
        type: u8
      - id: last_lba
        type: u8
      - id: attributes
        type: u8
      - id: name
        type: str
        encoding: UTF-16LE
        size: 0x48
  partition_header:
    seq:
      - id: signature
        contents: [0x45, 0x46, 0x49, 0x20, 0x50, 0x41, 0x52, 0x54]
      - id: revision
        type: u4
      - id: header_size
        type: u4
      - id: crc32_header
        type: u4
      - id: reserved
        type: u4
      - id: current_lba
        type: u8
      - id: backup_lba
        type: u8
      - id: first_usable_lba
        type: u8
      - id: last_usable_lba
        type: u8
      - id: disk_guid
        size: 0x10
      - id: entries_start
        type: u8
      - id: entries_count
        type: u4
      - id: entries_size
        type: u4
      - id: crc32_array
        type: u4
      # The document states "Reserved; must be zeroes for the rest of the block".
      # It would be pointless to process a data structure that must be zeroed.
    instances:
      entries:
        io: _root._io
        pos: entries_start * _root.sector_size
        size: entries_size
        type: partition_entry
        repeat: expr
        repeat-expr: entries_count
`
  },
  {
    id: "ksy_iso9660",
    name: "ISO9660 CD filesystem",
    category: "File System",
    metadata: {
      isGenerated: true,
      fileExtensions: ["iso"],
      description: "ISO9660 CD filesystem",
      originalCategory: "filesystem",
      filePath: "filesystem/iso9660.ksy"
    },
    content: `meta:
  id: iso9660
  title: ISO9660 CD filesystem
  file-extension: iso
  xref:
    justsolve: ISO_9660
    loc: fdd000348
    pronom: fmt/468
    wikidata: Q815645
  license: CC0-1.0
doc: |
  ISO9660 is standard filesystem used on read-only optical discs
  (mostly CD-ROM). The standard was based on earlier High Sierra
  Format (HSF), proposed for CD-ROMs in 1985, and, after several
  revisions, it was accepted as ISO9960:1998.

  The format emphasizes portability (thus having pretty minimal
  features and very conservative file names standards) and sequential
  access (which favors disc devices with relatively slow rotation
  speed).
types:
  vol_desc:
    seq:
      - id: type
        type: u1
      - id: magic
        contents: "CD001"
      - id: version
        type: u1
      - id: vol_desc_boot_record
        type: vol_desc_boot_record
        if: type == 0
      - id: vol_desc_primary
        type: vol_desc_primary
        if: type == 1
  vol_desc_boot_record:
    seq:
      - id: boot_system_id
        type: str
        size: 32
        encoding: UTF-8
      - id: boot_id
        type: str
        size: 32
        encoding: UTF-8
  vol_desc_primary:
    doc-ref: 'https://wiki.osdev.org/ISO_9660#The_Primary_Volume_Descriptor'
    seq:
      - id: unused1
        contents: [0]
      - id: system_id
        type: str
        size: 32
        encoding: UTF-8
      - id: volume_id
        type: str
        size: 32
        encoding: UTF-8
      - id: unused2
        contents: [0, 0, 0, 0, 0, 0, 0, 0]
      - id: vol_space_size
        type: u4bi
      - id: unused3
        contents: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      - id: vol_set_size
        type: u2bi
      - id: vol_seq_num
        type: u2bi
      - id: logical_block_size
        type: u2bi
      - id: path_table_size
        type: u4bi
      - id: lba_path_table_le
        type: u4le
      - id: lba_opt_path_table_le
        type: u4le
      - id: lba_path_table_be
        type: u4be
      - id: lba_opt_path_table_be
        type: u4be
      - id: root_dir
        type: dir_entry
        size: 34
      - id: vol_set_id
        type: str
        size: 128
        encoding: UTF-8
      - id: publisher_id
        type: str
        size: 128
        encoding: UTF-8
      - id: data_preparer_id
        type: str
        size: 128
        encoding: UTF-8
      - id: application_id
        type: str
        size: 128
        encoding: UTF-8
      - id: copyright_file_id
        type: str
        size: 38
        encoding: UTF-8
      - id: abstract_file_id
        type: str
        size: 36
        encoding: UTF-8
      - id: bibliographic_file_id
        type: str
        size: 37
        encoding: UTF-8
      - id: vol_create_datetime
        type: dec_datetime
      - id: vol_mod_datetime
        type: dec_datetime
      - id: vol_expire_datetime
        type: dec_datetime
      - id: vol_effective_datetime
        type: dec_datetime
      - id: file_structure_version
        type: u1
      - id: unused4
        type: u1
      - id: application_area
        size: 512
    instances:
      path_table:
        pos: lba_path_table_le * _root.sector_size
        size: path_table_size.le
        type: path_table_le
  dir_entries:
    seq:
      - id: entries
        type: dir_entry
        repeat: until
        repeat-until: _.len == 0
  dir_entry:
    seq:
      - id: len
        type: u1
      - id: body
        type: dir_entry_body
        size: len - 1
        if: len > 0
  dir_entry_body:
    seq:
      - id: len_ext_attr_rec
        type: u1
      - id: lba_extent
        type: u4bi
      - id: size_extent
        type: u4bi
      - id: datetime
        type: datetime
      - id: file_flags
        type: u1
      - id: file_unit_size
        type: u1
      - id: interleave_gap_size
        type: u1
      - id: vol_seq_num
        type: u2bi
      - id: len_file_name
        type: u1
      - id: file_name
        type: str
        encoding: UTF-8
        size: len_file_name
      - id: padding
        type: u1
        if: len_file_name % 2 == 0
      - id: rest
        size-eos: true
    instances:
      extent_as_dir:
        io: _root._io
        pos: lba_extent.le * _root.sector_size
        size: size_extent.le
        type: dir_entries
        if: file_flags & 2 != 0
      extent_as_file:
        io: _root._io
        pos: lba_extent.le * _root.sector_size
        size: size_extent.le
        if: file_flags & 2 == 0
  ## AKA "Path Table Entry"
  path_table_le:
    doc-ref: 'https://wiki.osdev.org/ISO_9660#The_Path_Table'
    seq:
      - id: entries
        type: path_table_entry_le
        repeat: eos
  path_table_entry_le:
    seq:
      - id: len_dir_name
        type: u1
      - id: len_ext_attr_rec
        type: u1
      - id: lba_extent
        type: u4le
      - id: parent_dir_idx
        type: u2le
      - id: dir_name
        type: str
        encoding: UTF-8
        size: len_dir_name
      - id: padding
        type: u1
        if: len_dir_name % 2 == 1
  datetime:
    seq:
      - id: year
        type: u1
      - id: month
        type: u1
      - id: day
        type: u1
      - id: hour
        type: u1
      - id: minute
        type: u1
      - id: sec
        type: u1
      - id: timezone
        type: u1
  dec_datetime:
    doc-ref: 'https://wiki.osdev.org/ISO_9660#Date.2Ftime_format'
    seq:
      - id: year
        type: str
        size: 4
        encoding: ASCII
      - id: month
        type: str
        size: 2
        encoding: ASCII
      - id: day
        type: str
        size: 2
        encoding: ASCII
      - id: hour
        type: str
        size: 2
        encoding: ASCII
      - id: minute
        type: str
        size: 2
        encoding: ASCII
      - id: sec
        type: str
        size: 2
        encoding: ASCII
      - id: sec_hundreds
        type: str
        size: 2
        encoding: ASCII
      - id: timezone
        type: u1
  u2bi:
    seq:
      - id: le
        type: u2le
      - id: be
        type: u2be
  u4bi:
    seq:
      - id: le
        type: u4le
      - id: be
        type: u4be
instances:
  sector_size:
    value: 2048
  primary_vol_desc:
    pos: 0x010 * sector_size
    type: vol_desc
`
  },
  {
    id: "ksy_luks",
    name: "Linux Unified Key Setup",
    category: "File System",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Linux Unified Key Setup",
      originalCategory: "filesystem",
      filePath: "filesystem/luks.ksy",
      endian: "be"
    },
    content: `meta:
  id: luks
  title: Linux Unified Key Setup
  xref:
    forensicswiki: linux_unified_key_setup_(luks)
    justsolve: LUKS
    wikidata: Q29000504
  tags:
    - filesystem
    - linux
  license: CC0-1.0
  encoding: ASCII
  endian: be
doc: |
  Linux Unified Key Setup (LUKS) is a format specification for storing disk
  encryption parameters and up to 8 user keys (which can unlock the master key).
doc-ref: https://gitlab.com/cryptsetup/cryptsetup/-/wikis/LUKS-standard/on-disk-format.pdf
seq:
  - id: partition_header
    type: partition_header
types:
  partition_header:
    seq:
      - id: magic
        contents: [0x4C, 0x55, 0x4B, 0x53, 0xBA, 0xBE]
      - id: version
        contents: [0x00, 0x01]
      - id: cipher_name_specification
        type: str
        size: 32
      - id: cipher_mode_specification
        type: str
        size: 32
      - id: hash_specification
        type: str
        size: 32
      - id: payload_offset
        type: u4
      - id: number_of_key_bytes
        type: u4
      - id: master_key_checksum
        size: 20
      - id: master_key_salt_parameter
        size: 32
      - id: master_key_iterations_parameter
        type: u4
      - id: uuid
        type: str
        size: 40
      - id: key_slots
        type: key_slot
        repeat: expr
        repeat-expr: 8
    types:
      key_slot:
        seq:
          - id: state_of_key_slot
            type: u4
            enum: key_slot_states
          - id: iteration_parameter
            type: u4
          - id: salt_parameter
            size: 32
          - id: start_sector_of_key_material
            type: u4
          - id: number_of_anti_forensic_stripes
            type: u4
        instances:
          key_material:
            pos: start_sector_of_key_material * 512
            size: _parent.number_of_key_bytes * number_of_anti_forensic_stripes
        enums:
          key_slot_states:
            0x0000DEAD: disabled_key_slot
            0x00AC71F3: enabled_key_slot
instances:
  payload:
    pos: partition_header.payload_offset * 512
    size-eos: true
`
  },
  {
    id: "ksy_lvm2",
    name: "Logical Volume Manager version 2",
    category: "File System",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Logical Volume Manager version 2",
      originalCategory: "filesystem",
      filePath: "filesystem/lvm2.ksy",
      endian: "le"
    },
    content: `meta:
  id: lvm2
  title: Logical Volume Manager version 2
  application:
    - linux
    - grub2
    - lvm tools
    - libvslvm
  xref:
    forensicswiki: linux_logical_volume_manager_(lvm)
    wikidata: Q6667482 # software, not format
  tags:
    - filesystem
    - linux
  license: GFDL-1.3-or-later
  encoding: ascii
  endian: le
doc: |
  ### Building a test file

  \`\`\`
  dd if=/dev/zero of=image.img bs=512 count=\$(( 4 * 1024 * 2 ))
  sudo losetup /dev/loop1 image.img
  sudo pvcreate /dev/loop1
  sudo vgcreate vg_test /dev/loop1
  sudo lvcreate --name lv_test1 vg_test
  sudo losetup -d /dev/loop1
  \`\`\`
doc-ref: https://github.com/libyal/libvslvm/blob/main/documentation/Logical%20Volume%20Manager%20(LVM)%20format.asciidoc
seq:
  - id: pv
    type: physical_volume
    doc: Physical volume
instances:
  sector_size:
    value: 512 # TODO: how about 4k sectors?
types:
  physical_volume:
    seq:
      - id: empty_sector
        size: _root.sector_size
      - id: label
        type: label
    types:
      label:
        seq:
          - id: label_header
            type: label_header
          - id: volume_header
            type: volume_header
        types:
          label_header:
            seq:
              - id: signature
                contents: "LABELONE"
              - id: sector_number
                type: u8
                doc: "The sector number of the physical volume label header"
              - id: checksum
                type: u4
                doc: "CRC-32 for offset 20 to end of the physical volume label sector"
              - id: label_header_
                type: label_header_
            types:
              label_header_:
                seq:
                  - id: data_offset
                    type: u4
                    doc: "The offset, in bytes, relative from the start of the physical volume label header where data is stored"
                  - id: type_indicator
                    contents: "LVM2 001"

          volume_header:
            seq:
              - id: id
                type: str
                size: 32
                doc: >
                  Contains a UUID stored as an ASCII string.
                  The physical volume identifier can be used to uniquely identify a physical volume. The physical volume identifier is stored as: 9LBcEB7PQTGIlLI0KxrtzrynjuSL983W but is equivalent to its formatted variant: 9LBcEB-7PQT-GIlL-I0Kx-rtzr-ynju-SL983W, which is used in the metadata.
              - id: size
                type: u8
                doc: "Physical Volume size. Value in bytes"
              - id: data_area_descriptors
                type: data_area_descriptor
                repeat: until
                repeat-until: _.size != 0 and _.offset != 0
                doc: "The last descriptor in the list is terminator and consists of 0-byte values."
              - id: metadata_area_descriptors
                type: metadata_area_descriptor
                repeat: until
                repeat-until: _.size != 0 and _.offset != 0
            types:
              data_area_descriptor:
                seq:
                  - id: offset
                    type: u8
                    doc: The offset, in bytes, relative from the start of the physical volume
                  - id: size
                    type: u8
                    doc: >
                      Value in bytes.
                      Can be 0. [yellow-background]*Does this represent all remaining available space?*
                instances:
                  data:
                    pos: offset
                    size: size
                    type: str
                    if: size != 0
              metadata_area_descriptor:
                seq:
                  - id: offset
                    type: u8
                    doc: The offset, in bytes, relative from the start of the physical volume
                  - id: size
                    type: u8
                    doc: Value in bytes
                instances:
                  data:
                    pos: offset
                    size: size
                    type: metadata_area
                    if: size != 0
              metadata_area:
                doc: "According to \`[REDHAT]\` the metadata area is a circular buffer. New metadata is appended to the old metadata and then the pointer to the start of it is updated. The metadata area, therefore, can contain copies of older versions of the metadata."
                seq:
                  - id: header
                    type: metadata_area_header
                types:
                  metadata_area_header:
                    seq:
                      - id: checksum
                        type: metadata_area_header
                        doc: "CRC-32 for offset 4 to end of the metadata area header"
                      - id: signature
                        contents: " LVM2 x[5A%r0N*>"
                      - id: version
                        type: u4
                      - id: metadata_area_offset
                        type: u8
                        doc: "The offset, in bytes, of the metadata area relative from the start of the physical volume"
                      - id: metadata_area_size
                        type: u8
                      - id: raw_location_descriptors
                        type: raw_location_descriptor
                        doc: "The last descriptor in the list is terminator and consists of 0-byte values."
                        repeat: until
                        repeat-until: _.offset != 0 and _.size != 0 and _.checksum != 0 # and _.flags != 0
                    instances:
                      metadata:
                        pos: metadata_area_offset
                        size: metadata_area_size
                    types:
                      raw_location_descriptor:
                        -orig-id: "raw_locn"
                        doc: "The data area size can be 0. It is assumed it represents the remaining  available data."
                        seq:
                          - id: offset
                            type: u8
                            doc: "The data area offset, in bytes, relative from the start of the metadata area"
                          - id: size
                            type: u8
                            doc: "data area size in bytes"
                          - id: checksum
                            type: u4
                            doc: "CRC-32 of *TODO (metadata?)*"
                          - id: flags
                            type: u4
                            enum: raw_location_descriptor_flags
                        enums:
                          raw_location_descriptor_flags:
                            0x00000001: raw_location_ignored #The raw location descriptor should be ignored.
`
  },
  {
    id: "ksy_mbr_partition_table",
    name: "MBR (Master Boot Record) partition table",
    category: "File System",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "MBR (Master Boot Record) partition table",
      originalCategory: "filesystem",
      filePath: "filesystem/mbr_partition_table.ksy",
      signature: {"offset":0,"bytes":[85,170]},
      endian: "le"
    },
    content: `meta:
  id: mbr_partition_table
  title: MBR (Master Boot Record) partition table
  xref:
    forensicswiki: master_boot_record
    justsolve: Master_Boot_Record
    wikidata: Q624752
  tags:
    - dos
  license: CC0-1.0
  endian: le
doc: |
  MBR (Master Boot Record) partition table is a traditional way of
  MS-DOS to partition larger hard disc drives into distinct
  partitions.

  This table is stored in the end of the boot sector (first sector) of
  the drive, after the bootstrap code. Original DOS 2.0 specification
  allowed only 4 partitions per disc, but DOS 3.2 introduced concept
  of "extended partitions", which work as nested extra "boot records"
  which are pointed to by original ("primary") partitions in MBR.
seq:
  - id: bootstrap_code
    size: 0x1be
  - id: partitions
    type: partition_entry
    repeat: expr
    repeat-expr: 4
  - id: boot_signature
    contents: [0x55, 0xaa]
types:
  partition_entry:
    seq:
      - id: status
        type: u1
      - id: chs_start
        type: chs
      - id: partition_type
        type: u1
      - id: chs_end
        type: chs
      - id: lba_start
        type: u4
      - id: num_sectors
        type: u4
  chs:
    seq:
      - id: head
        type: u1
      - id: b2
        type: u1
      - id: b3
        type: u1
    instances:
      sector:
        value: 'b2 & 0b111111'
      cylinder:
        value: 'b3 + ((b2 & 0b11000000) << 2)'
`
  },
  {
    id: "ksy_tr_dos_image",
    name: "TR-DOS flat-file disk image",
    category: "File System",
    metadata: {
      isGenerated: true,
      fileExtensions: ["trd"],
      description: "TR-DOS flat-file disk image",
      originalCategory: "filesystem",
      filePath: "filesystem/tr_dos_image.ksy",
      endian: "le"
    },
    content: `meta:
  id: tr_dos_image
  title: "TR-DOS flat-file disk image"
  file-extension: trd
  xref:
    justsolve: TRD
  license: CC0-1.0
  endian: le
doc: |
  .trd file is a raw dump of TR-DOS (ZX-Spectrum) floppy. .trd files are
  headerless and contain consequent "logical tracks", each logical track
  consists of 16 256-byte sectors.

  Logical tracks are defined the same way as used by TR-DOS: for single-side
  floppies it's just a physical track number, for two-side floppies sides are
  interleaved, i.e. logical_track_num = (physical_track_num << 1) | side

  So, this format definition is more for TR-DOS filesystem than for .trd files,
  which are formatless.

  Strings (file names, disk label, disk password) are padded with spaces and use
  ZX Spectrum character set, including UDGs, block drawing chars and Basic
  tokens. ASCII range is mostly standard ASCII, with few characters (^, \`, DEL)
  replaced with (up arrow, pound, copyright symbol).

  .trd file can be smaller than actual floppy disk, if last logical tracks are
  empty (contain no file data) they can be omitted.
seq:
  - id: files
    type: file
    repeat: until
    # After 128 files there is disk info entry, which also has 0x00 terminator
    # in the same position as file name. So usually even with 128 files you can
    # just read until 0x00.
    repeat-until: _.is_terminator
instances:
  volume_info:
    pos: 0x800
    type: volume_info
types:
  file:
    seq:
      - id: name
        # It uses custom type due to limitation of streams: there's no way to
        # extract first byte from byte array directly
        type: filename
        size: 8
      - id: extension
        type: u1
      - id: position_and_length
        type:
          switch-on: extension
          cases:
            0x42: position_and_length_basic # 'B'
            0x43: position_and_length_code  # 'C'
            0x23: position_and_length_print # '#'
            _: position_and_length_generic
      - id: length_sectors
        type: u1
      - id: starting_sector
        type: u1
      - id: starting_track
        type: u1
    instances:
      is_deleted:
        value: name.first_byte == 0x01
      is_terminator:
        value: name.first_byte == 0x00
      contents:
        pos: starting_track * 256 * 16 + starting_sector * 256
        size: length_sectors * 256
  position_and_length_basic:
    seq:
      - id: program_and_data_length
        type: u2
      - id: program_length
        type: u2
  position_and_length_code:
    seq:
      - id: start_address
        type: u2
        doc: Default memory address to load this byte array into
      - id: length
        type: u2
  position_and_length_print:
    seq:
      - id: extent_no
        type: u1
      - id: reserved
        type: u1
      - id: length
        type: u2
  position_and_length_generic: # used for standard 'D' type and unknown types
    seq:
      - id: reserved
        type: u2
      - id: length
        type: u2
  volume_info:
    seq:
      # This is 0x00 at the same position as first character of filename in
      # file entries for convenience. When disk has 128 files, it acts as
      # "last file" terminator.
      - id: catalog_end
        contents: [0]
      - id: unused
        size: 224
      - id: first_free_sector_sector
        type: u1
      - id: first_free_sector_track
        doc: |
          track number is logical, for double-sided disks it's
          (physical_track << 1) | side, the same way that tracks are stored
          sequentially in .trd file
        type: u1
      - id: disk_type
        type: u1
        enum: disk_type
      - id: num_files
        doc: |
          Number of non-deleted files. Directory can have more than
          number_of_files entries due to deleted files
        type: u1
      - id: num_free_sectors
        type: u2
      - id: tr_dos_id
        contents: [0x10]
      - id: unused_2
        size: 2
      - id: password
        size: 9
      - id: unused_3
        size: 1
      - id: num_deleted_files
        type: u1
      - id: label
        size: 8
      - id: unused_4
        size: 3
    instances:
      num_tracks:
        value: "disk_type.to_i & 0x01 != 0 ? 40 : 80"
      num_sides:
        value: "disk_type.to_i & 0x08 != 0 ? 1 : 2"
  filename:
    seq:
      - id: name
        size: 8
    instances:
      first_byte:
        pos: 0
        type: u1

enums:
  disk_type:
    0x16: type_80_tracks_double_side
    0x17: type_40_tracks_double_side
    0x18: type_80_tracks_single_side
    0x19: type_40_tracks_single_side
`
  },
  {
    id: "ksy_vdi",
    name: "VirtualBox Disk Image",
    category: "File System",
    metadata: {
      isGenerated: true,
      fileExtensions: ["vdi"],
      description: "VirtualBox Disk Image",
      originalCategory: "filesystem",
      filePath: "filesystem/vdi.ksy",
      endian: "le"
    },
    content: `meta:
  id: vdi
  title: VirtualBox Disk Image
  application:
    - VirtualBox
    - QEMU
    - VMWare Workstation
  file-extension: vdi
  xref:
    justsolve: VDI
    forensicswiki: virtual_disk_image_(vdi)
    pronom: fmt/726
    wikidata: Q29209126
  license: GPL-3.0-or-later
  encoding: utf-8
  endian: le
doc-ref: https://github.com/qemu/qemu/blob/master/block/vdi.c
#  - https://github.com/qemu/qemu/blob/master/block/vdi.c
#  - https://www.virtualbox.org/browser/vbox/trunk/src/VBox/Storage/VDI.cpp
#  - https://forums.virtualbox.org/viewtopic.php?t=8046
doc: |
  A native VirtualBox file format

  Images for testing can be downloaded from

   * <https://www.osboxes.org/virtualbox-images/>
   * <https://virtualboxes.org/images/>

  or you can convert images of other formats.
seq:
  - id: header
    type: header

instances:
  block_discarded:
    value: "0xfffffffe"
  block_unallocated:
    value: "0xffffffff"
  blocks_map:
    -orig-id: bmap
    pos: header.blocks_map_offset
    size: header.blocks_map_size
    type: blocks_map
    doc: >
      block_index = offset_in_virtual_disk / block_size
      actual_data_offset = blocks_map[block_index]*block_size+metadata_size+offset_in_block

      The blocks_map will take up blocks_in_image_max * sizeof(uint32_t) bytes;
      since the blocks_map is read and written in a single operation, its size needs to be limited to INT_MAX; furthermore, when opening an image, the blocks_map size is rounded up to be aligned on BDRV_SECTOR_SIZE.
      Therefore this should satisfy the following: blocks_in_image_max * sizeof(uint32_t) + BDRV_SECTOR_SIZE == INT_MAX + 1 (INT_MAX + 1 is the first value not representable as an int)
      This guarantees that any value below or equal to the constant will, when multiplied by sizeof(uint32_t) and rounded up to a BDRV_SECTOR_SIZE boundary, still be below or equal to INT_MAX.
  disk:
    pos: header.blocks_offset
    #size: header.header_main.disk_size
    type: disk
types:
  header:
    seq:
      - id: text
        type: str
        size: 0x40

      - id: signature
        contents: [0x7F, 0x10, 0xDA, 0xBE]

      - id: version
        type: version

      - id: header_size_optional
        type: u4
        if: subheader_size_is_dynamic

      - id: header_main
        size: header_size
        type: header_main
    instances:
      subheader_size_is_dynamic:
        value: version.major>=1
      header_size:
        value: '(subheader_size_is_dynamic ? header_size_optional : 336)'

      blocks_map_size:
        value: ( ( header_main.blocks_in_image * 4 + header_main.geometry.sector_size - 1 ) / header_main.geometry.sector_size ) * header_main.geometry.sector_size
      blocks_map_offset:
        value: header_main.blocks_map_offset

      blocks_offset:
        -orig-id: data_offset
        value: header_main.offset_data
      block_size:
        value: header_main.block_metadata_size + header_main.block_data_size

    types:
      uuid:
        seq:
          - id: uuid
            size: 16
      version:
        seq:
          - id: major
            type: u2
          - id: minor
            type: u2
      header_main:
        seq:
          - id: image_type
            type: u4
            enum: image_type

          - id: image_flags
            type: flags

          - id: description
            type: str
            size: 256

          - id: blocks_map_offset
            -orig-id: offset_bmap
            type: u4
            if: _parent.version.major>=1

          - id: offset_data
            type: u4
            if: _parent.version.major>=1

          - id: geometry
            type: geometry

          - id: reserved1
            -orig-id: unused1
            type: u4
            if: _parent.version.major>=1

          - id: disk_size
            type: u8

          - id: block_data_size
            -orig-id: block_size
            type: u4
            doc: "Size of block (bytes)."

          - id: block_metadata_size
            -orig-id: block_extra
            type: u4
            if: _parent.version.major>=1

          - id: blocks_in_image
            type: u4

          - id: blocks_allocated
            type: u4

          - id: uuid_image
            type: uuid

          - id: uuid_last_snap
            type: uuid

          - id: uuid_link
            type: uuid

          - id: uuid_parent
            type: uuid
            if: _parent.version.major>=1

          - id: lchc_geometry
            type: geometry
            if: _parent.version.major>=1 and _io.pos + 16 <= _io.size

          #- id: reserved2
          #  -orig_id: unused2
          #  size: _io.size - _io.pos
        types:
          geometry:
            seq:
              - id: cylinders
                type: u4

              - id: heads
                type: u4

              - id: sectors
                type: u4

              - id: sector_size
                type: u4
          flags:
            seq: #little endian assummed
              - id: reserved0
                type: b15
              - id: zero_expand
                type: b1
              - id: reserved1
                type: b6
              - id: diff
                type: b1
              - id: fixed
                type: b1
              - id: reserved2
                type: b8
  blocks_map:
    seq:
      - id: index
        type: block_index
        repeat: expr
        repeat-expr: _root.header.header_main.blocks_in_image
    types:
      block_index:
        seq:
          - id: index
            type: u4
        instances:
          is_allocated:
            value: index < _root.block_discarded
          block:
            #io: _root.disk._io
            value: _root.disk.blocks[index]
            if: is_allocated
  disk:
    seq:
      - id: blocks
        type: block
        repeat: expr
        repeat-expr: _root.header.header_main.blocks_in_image
    types:
      block:
        seq:
          - id: metadata
            size: _root.header.header_main.block_metadata_size
          - id: data
            size: _root.header.header_main.block_data_size
            type: sector
            repeat: eos
        types:
          sector:
            seq:
              - id: data
                size: _root.header.header_main.geometry.sector_size

enums:
  image_type:
    1: dynamic
    2: static
    3: undo
    4: diff
`
  },
  {
    id: "ksy_vfat",
    name: "Vfat",
    category: "File System",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "",
      originalCategory: "filesystem",
      filePath: "filesystem/vfat.ksy",
      endian: "le"
    },
    content: `meta:
  id: vfat
  # actually FAT12
  xref:
    forensicswiki: fat
    justsolve: FAT
    wikidata: Q190167
  tags:
    - dos
  license: CC0-1.0
  ks-version: 0.9
  imports:
    - /common/dos_datetime
  endian: le
  bit-endian: le
doc-ref: https://download.microsoft.com/download/0/8/4/084c452b-b772-4fe5-89bb-a0cbf082286a/fatgen103.doc
seq:
  - id: boot_sector
    type: boot_sector
instances:
  fats:
    pos: boot_sector.pos_fats
    size: boot_sector.size_fat
    repeat: expr
    repeat-expr: boot_sector.bpb.num_fats
  root_dir:
    pos: boot_sector.pos_root_dir
    size: boot_sector.size_root_dir
    type: root_directory
types:
  boot_sector:
    seq:
      - id: jmp_instruction
        size: 3
      - id: oem_name
        type: str
        encoding: ASCII
        pad-right: 0x20
        size: 8
      - id: bpb
        type: bios_param_block
        doc: Basic BIOS parameter block, present in all versions of FAT
      - id: ebpb_fat16
        type: ext_bios_param_block_fat16
        if: not is_fat32
        doc: FAT12/16-specific extended BIOS parameter block
      - id: ebpb_fat32
        type: ext_bios_param_block_fat32
        if: is_fat32
        doc: FAT32-specific extended BIOS parameter block
    instances:
      is_fat32:
        value: bpb.max_root_dir_rec == 0
        doc: |
          Determines if filesystem is FAT32 (true) or FAT12/16 (false)
          by analyzing some preliminary conditions in BPB. Used to
          determine whether we should parse post-BPB data as
          \`ext_bios_param_block_fat16\` or \`ext_bios_param_block_fat32\`.
      pos_fats:
        value: bpb.bytes_per_ls * bpb.num_reserved_ls
        doc: Offset of FATs in bytes from start of filesystem
      ls_per_fat:
        value: 'is_fat32 ? ebpb_fat32.ls_per_fat : bpb.ls_per_fat'
      size_fat:
        value: bpb.bytes_per_ls * ls_per_fat
        doc: Size of one FAT in bytes
      pos_root_dir:
        value: bpb.bytes_per_ls * (bpb.num_reserved_ls + ls_per_fat * bpb.num_fats)
        doc: Offset of root directory in bytes from start of filesystem
      ls_per_root_dir:
        -orig-id: RootDirSectors
        value: (bpb.max_root_dir_rec * 32 + bpb.bytes_per_ls - 1) / bpb.bytes_per_ls
        doc: Size of root directory in logical sectors
        doc-ref: 'FAT: General Overview of On-Disk Format, section "FAT Data Structure"'
      size_root_dir:
        value: ls_per_root_dir * bpb.bytes_per_ls
        doc: Size of root directory in bytes
  bios_param_block:
    seq:
      # Basic BIOS Parameter block, DOS 2.0+
      - id: bytes_per_ls
        -orig-id: BPB_BytsPerSec
        type: u2
        doc: Bytes per logical sector
      - id: ls_per_clus
        -orig-id: BPB_SecPerClus
        type: u1
        doc: Logical sectors per cluster
      - id: num_reserved_ls
        -orig-id: BPB_RsvdSecCnt
        type: u2
        doc: |
          Count of reserved logical sectors. The number of logical
          sectors before the first FAT in the file system image.
      - id: num_fats
        -orig-id: BPB_NumFATs
        type: u1
        doc: Number of File Allocation Tables
      - id: max_root_dir_rec
        -orig-id: BPB_RootEntCnt
        type: u2
        doc: |
          Maximum number of FAT12 or FAT16 root directory entries. 0
          for FAT32, where the root directory is stored in ordinary
          data clusters.
      - id: total_ls_2
        -orig-id: BPB_TotSec16
        type: u2
        doc: Total logical sectors (if zero, use total_ls_4)
      - id: media_code
        -orig-id: BPB_Media
        type: u1
        doc: Media descriptor
      - id: ls_per_fat
        -orig-id: BPB_FATSz16
        type: u2
        doc: |
          Logical sectors per File Allocation Table for
          FAT12/FAT16. FAT32 sets this to 0 and uses the 32-bit value
          at offset 0x024 instead.
      # FIXME: DOS 3.0 and 3.2 BPBs continuation should follow here
      # and they differ from DOS 3.31+ that most modern
      # implementations use. We'll skip them for now, as they seem to
      # be very rare.
      #
      # DOS 3.31+ BPB
      - id: ps_per_track
        -orig-id: BPB_SecPerTrk
        type: u2
        doc: |
          Physical sectors per track for disks with INT 13h CHS
          geometry, e.g., 15 for a "1.20 MB" (1200 KB) floppy. A zero
          entry indicates that this entry is reserved, but not used.
      - id: num_heads
        -orig-id: BPB_NumHeads
        type: u2
        doc: |
          Number of heads for disks with INT 13h CHS geometry,[9]
          e.g., 2 for a double sided floppy.
      - id: num_hidden_sectors
        -orig-id: BPB_HiddSec
        type: u4
        doc: |
          Number of hidden sectors preceding the partition that
          contains this FAT volume. This field should always be zero
          on media that are not partitioned. This DOS 3.0 entry is
          incompatible with a similar entry at offset 0x01C in BPBs
          since DOS 3.31.  It must not be used if the logical sectors
          entry at offset 0x013 is zero.
      - id: total_ls_4
        -orig-id: BPB_TotSec32
        type: u4
        doc: |
          Total logical sectors including hidden sectors. This DOS 3.2
          entry is incompatible with a similar entry at offset 0x020
          in BPBs since DOS 3.31. It must not be used if the logical
          sectors entry at offset 0x013 is zero.
  ext_bios_param_block_fat16:
    doc: |
      Extended BIOS Parameter Block (DOS 4.0+, OS/2 1.0+). Used only
      for FAT12 and FAT16.
    seq:
      - id: phys_drive_num
        type: u1
        doc: |
          Physical drive number (0x00 for (first) removable media,
          0x80 for (first) fixed disk as per INT 13h).
      - id: reserved1
        type: u1
      - id: ext_boot_sign
        type: u1
        doc: |
          Should be 0x29 to indicate that an EBPB with the following 3
          entries exists.
      - id: volume_id
        size: 4
        doc: |
          Volume ID (serial number).

          Typically the serial number "xxxx-xxxx" is created by a
          16-bit addition of both DX values returned by INT 21h/AH=2Ah
          (get system date) and INT 21h/AH=2Ch (get system time) for
          the high word and another 16-bit addition of both CX values
          for the low word of the serial number. Alternatively, some
          DR-DOS disk utilities provide a /# option to generate a
          human-readable time stamp "mmdd-hhmm" build from BCD-encoded
          8-bit values for the month, day, hour and minute instead of
          a serial number.
      - id: partition_volume_label
        size: 11
        type: str
        encoding: ASCII
        pad-right: 0x20
      - id: fs_type_str
        size: 8
        type: str
        encoding: ASCII
        pad-right: 0x20
  ext_bios_param_block_fat32:
    doc: Extended BIOS Parameter Block for FAT32
    seq:
      - id: ls_per_fat
        type: u4
        doc: |
          Logical sectors per file allocation table (corresponds with
          the old entry \`ls_per_fat\` in the DOS 2.0 BPB).
      - id: has_active_fat
        type: b1
        doc: |
          If true, then there is "active" FAT, which is designated in
          \`active_fat\` attribute. If false, all FATs are mirrored as
          usual.
      - id: reserved1
        type: b3
      - id: active_fat_id
        type: b4
        doc: |
          Zero-based number of active FAT, if \`has_active_fat\`
          attribute is true.
      - id: reserved2
        contents: [0]
      - id: fat_version
        type: u2
      - id: root_dir_start_clus
        type: u4
        doc: |
          Cluster number of root directory start, typically 2 if it
          contains no bad sector. (Microsoft's FAT32 implementation
          imposes an artificial limit of 65,535 entries per directory,
          whilst many third-party implementations do not.)
      - id: ls_fs_info
        type: u2
        doc: |
          Logical sector number of FS Information Sector, typically 1,
          i.e., the second of the three FAT32 boot sectors. Values
          like 0 and 0xFFFF are used by some FAT32 implementations to
          designate abscence of FS Information Sector.
      - id: boot_sectors_copy_start_ls
        type: u2
        doc: |
          First logical sector number of a copy of the three FAT32
          boot sectors, typically 6.
      - id: reserved3
        size: 12
      - id: phys_drive_num
        type: u1
        doc: |
          Physical drive number (0x00 for (first) removable media,
          0x80 for (first) fixed disk as per INT 13h).
      - id: reserved4
        type: u1
      - id: ext_boot_sign
        type: u1
        doc: |
          Should be 0x29 to indicate that an EBPB with the following 3
          entries exists.
      - id: volume_id
        size: 4
        doc: |
          Volume ID (serial number).

          Typically the serial number "xxxx-xxxx" is created by a
          16-bit addition of both DX values returned by INT 21h/AH=2Ah
          (get system date) and INT 21h/AH=2Ch (get system time) for
          the high word and another 16-bit addition of both CX values
          for the low word of the serial number. Alternatively, some
          DR-DOS disk utilities provide a /# option to generate a
          human-readable time stamp "mmdd-hhmm" build from BCD-encoded
          8-bit values for the month, day, hour and minute instead of
          a serial number.
      - id: partition_volume_label
        size: 11
        type: str
        encoding: ASCII
        pad-right: 0x20
      - id: fs_type_str
        size: 8
        type: str
        encoding: ASCII
        pad-right: 0x20
  root_directory:
    seq:
      - id: records
        type: root_directory_rec
        repeat: expr
        repeat-expr: _root.boot_sector.bpb.max_root_dir_rec
  root_directory_rec:
    seq:
      - id: file_name
        size: 11
      - id: attrs
        size: 1
        type: attr_flags
      - id: reserved
        size: 10
      - id: last_write_time
        size: 4
        type: dos_datetime
      - id: start_clus
        type: u2
      - id: file_size
        type: u4
    types:
      attr_flags:
        seq:
          - id: read_only
            type: b1
          - id: hidden
            type: b1
          - id: system
            type: b1
          - id: volume_id
            type: b1
          - id: is_directory
            type: b1
          - id: archive
            type: b1
          - id: reserved
            type: b2
        instances:
          long_name:
            value: |
              read_only
              and hidden
              and system
              and volume_id
`
  },
  {
    id: "ksy_vmware_vmdk",
    name: "VMWare Virtual Disk",
    category: "File System",
    metadata: {
      isGenerated: true,
      fileExtensions: ["vmdk"],
      description: "VMWare Virtual Disk",
      originalCategory: "filesystem",
      filePath: "filesystem/vmware_vmdk.ksy",
      signature: {"offset":0,"bytes":[75,68,77,86]},
      endian: "le"
    },
    content: `meta:
  id: vmware_vmdk
  title: VMWare Virtual Disk
  file-extension: vmdk
  xref:
    forensicswiki: vmware_virtual_disk_format_(vmdk)
    justsolve: VMDK
    wikidata: Q2658179
  license: CC0-1.0
  endian: le
doc-ref: 'https://github.com/libyal/libvmdk/blob/main/documentation/VMWare%20Virtual%20Disk%20Format%20(VMDK).asciidoc#41-file-header'
seq:
  - id: magic
    contents: "KDMV"
  - id: version
    type: s4
  - id: flags
    type: header_flags
  - id: size_max
    type: s8
    doc: Maximum number of sectors in a given image file (capacity)
  - id: size_grain
    type: s8
  - id: start_descriptor
    type: s8
    doc: Embedded descriptor file start sector number (0 if not available)
  - id: size_descriptor
    type: s8
    doc: Number of sectors that embedded descriptor file occupies
  - id: num_grain_table_entries
    type: s4
    doc: Number of grains table entries
  - id: start_secondary_grain
    type: s8
    doc: Secondary (backup) grain directory start sector number
  - id: start_primary_grain
    type: s8
    doc: Primary grain directory start sector number
  - id: size_metadata
    type: s8
  - id: is_dirty
    type: u1
  - id: stuff
    size: 4
  - id: compression_method
    type: u2
    enum: compression_methods
enums:
  compression_methods:
    0: none
    1: deflate
instances:
  len_sector:
    value: 0x200
  descriptor:
    pos: start_descriptor * _root.len_sector
    size: size_descriptor * _root.len_sector
  grain_primary:
    pos: start_primary_grain * _root.len_sector
    size: size_grain * _root.len_sector
  grain_secondary:
    pos: start_secondary_grain * _root.len_sector
    size: size_grain * _root.len_sector
types:
  header_flags:
    doc-ref: 'https://github.com/libyal/libvmdk/blob/main/documentation/VMWare%20Virtual%20Disk%20Format%20(VMDK).asciidoc#411-flags'
    seq:
      - id: reserved1
        type: b5
      - id: zeroed_grain_table_entry
        # 0x00000004
        type: b1
      - id: use_secondary_grain_dir
        # 0x00000002
        type: b1
      - id: valid_new_line_detection_test
        # 0x00000001
        type: b1
      - id: reserved2
        type: u1
      - id: reserved3
        type: b6
      - id: has_metadata
        # 0x00020000
        type: b1
      - id: has_compressed_grain
        # 0x00010000
        type: b1
      - id: reserved4
        type: u1
`
  },
  {
    id: "ksy_zx_spectrum_tap",
    name: "ZX Spectrum tape file",
    category: "File System",
    metadata: {
      isGenerated: true,
      fileExtensions: ["tap"],
      description: "ZX Spectrum tape file",
      originalCategory: "filesystem",
      filePath: "filesystem/zx_spectrum_tap.ksy",
      endian: "le"
    },
    content: `meta:
  id: zx_spectrum_tap
  title: ZX Spectrum tape file
  file-extension: tap
  xref:
    justsolve: TAP_(ZX_Spectrum)
    pronom: fmt/801
    wikidata: Q34748140
  license: CC0-1.0
  endian: le
doc: |
  TAP files are used by emulators of ZX Spectrum computer (released in
  1982 by Sinclair Research). TAP file stores blocks of data as if
  they are written to magnetic tape, which was used as primary media
  for ZX Spectrum. Contents of this file can be viewed as a very
  simple linear filesystem, storing named files with some basic
  metainformation prepended as a header.
doc-ref: https://sinclair.wiki.zxnet.co.uk/wiki/TAP_format
seq:
  - id: blocks
    type: block
    repeat: eos
enums:
  flag_enum:
    0x00: header
    0xFF: data
  header_type_enum:
    0: program
    1: num_array
    2: char_array
    3: bytes
types:
  block:
    seq:
      - id: len_block
        type: u2
      - id: flag
        type: u1
        enum: flag_enum
      - id: header
        type: header
        if: len_block == 0x13 and flag == flag_enum::header
      - id: data
        size: header.len_data + 4
        if: len_block == 0x13
      - id: headerless_data
        size: len_block - 1
        if: flag == flag_enum::data
  header:
    seq:
      - id: header_type
        type: u1
        enum: header_type_enum
      - id: filename
        size: 10
        pad-right: 0x20
      - id: len_data
        type: u2
      - id: params
        type:
          switch-on: header_type
          cases:
            'header_type_enum::program': program_params
            'header_type_enum::num_array': array_params
            'header_type_enum::char_array': array_params
            'header_type_enum::bytes': bytes_params
      - id: checksum
        type: u1
        doc: Bitwise XOR of all bytes including the flag byte
  program_params:
    seq:
      - id: autostart_line
        type: u2
      - id: len_program
        type: u2
  array_params:
    seq:
      - id: reserved
        type: u1
      - id: var_name
        type: u1
        doc: Variable name (1..26 meaning A\$..Z\$ +192)
      - id: reserved1
        contents: [0x00, 0x80]
  bytes_params:
    seq:
      - id: start_address
        type: u2
      - id: reserved
        size: 2
`
  },
  {
    id: "ksy_andes_firmware",
    name: "Andes Firmware Image layout as seen in MT76 Wifi Chipsets",
    category: "Firmware",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Andes Firmware Image layout as seen in MT76 Wifi Chipsets",
      originalCategory: "firmware",
      filePath: "firmware/andes_firmware.ksy",
      endian: "le"
    },
    content: `meta:
  id: andes_firmware
  title: Andes Firmware Image layout as seen in MT76 Wifi Chipsets
  application: Firmware Image wifi chipset
  license: CC0-1.0
  endian: le
doc: Firmware image found with MediaTek MT76xx wifi chipsets.
seq:
  - id: image_header
    type: image_header
    size: 32
  - id: ilm
    size: image_header.ilm_len
  - id: dlm
    size: image_header.dlm_len
types:
  image_header:
    seq:
      - id: ilm_len
        type: u4
      - id: dlm_len
        type: u4
      - id: fw_ver
        type: u2
      - id: build_ver
        type: u2
      - id: extra
        type: u4
      - id: build_time
        type: str
        size: 16
        encoding: UTF-8
`
  },
  {
    id: "ksy_broadcom_trx",
    name: "Broadcom devices .trx firmware packaging",
    category: "Firmware",
    metadata: {
      isGenerated: true,
      fileExtensions: ["trx"],
      description: "Broadcom devices .trx firmware packaging",
      originalCategory: "firmware",
      filePath: "firmware/broadcom_trx.ksy",
      endian: "le"
    },
    content: `meta:
  id: broadcom_trx
  title: Broadcom devices .trx firmware packaging
  file-extension: trx
  license: GPL-2.0-or-later
  ks-version: 0.9
  bit-endian: le
  encoding: utf-8
  endian: le

-license: |
  Copyright (C) 2004  Manuel Novoa III  <mjn3@codepoet.org>

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
  USA

doc: |
  .trx file format is widely used for distribution of firmware
  updates for Broadcom devices. The most well-known are ASUS routers.

  Fundamentally, it includes a footer which acts as a safeguard
  against installing a firmware package on a wrong hardware model or
  version, and a header which list numerous partitions packaged inside
  a single .trx file.

  trx files not necessarily contain all these headers.

doc-ref:
  - https://github.com/openwrt/firmware-utils/blob/a2c80c5/src/trx.c
  - https://web.archive.org/web/20190127154419/https://openwrt.org/docs/techref/header
  - https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/Documentation/devicetree/bindings/mtd/partitions/brcm,trx.txt

instances:
  header:
    pos: 0
    type: header
  tail:
    pos: _io.size - sizeof<tail>
    type: tail

types:
  revision:
    seq:
      - id: major
        type: u1
      - id: minor
        type: u1
  version:
    seq:
      - id: major
        type: u1
      - id: minor
        type: u1
      - id: patch
        type: u1
      - id: tweak
        type: u1

  tail:
    doc: "A safeguard against installation of firmware to an incompatible device"
    seq:
      - id: version
        type: version
        doc: "1.9.2.7 by default"
      - id: product_id
        type: strz
        size: 12
      - id: comp_hw
        type: hw_comp_info
        repeat: expr
        repeat-expr: 4
        doc: "0.02 - 2.99"
      - id: reserved
        size: 32
    types:
      hw_comp_info:
        seq:
          - id: min
            type: revision
          - id: max
            type: revision

  header:
    seq:
      - id: magic
        contents: "HDR0"
      - id: len
        type: u4
        doc: Length of file including header
      - id: crc32
        type: u4
        doc: "CRC from \`version\` (??? todo: see the original and disambiguate) to end of file"
      - id: version
        type: u2
      - id: flags
        type: flags
      - id: partitions
        type: partition(_index)
        doc: "Offsets of partitions from start of header"
        repeat: until
        repeat-until: _index >= 4 or not _.is_present

    types:
      partition:
        params:
          - id: idx
            type: u1
        seq:
          - id: ofs_body
            type: u4
        instances:
          is_present:
            value: ofs_body != 0
          is_last:
            value: "(idx == _parent.partitions.size - 1) or (not _parent.partitions[idx + 1].is_present)"
            if: is_present
          len_body:
            value: "is_last ? (_root._io.size - ofs_body) : _parent.partitions[idx + 1].ofs_body"
            if: is_present
          body:
            io: _root._io
            pos: ofs_body
            size: len_body
            if: is_present
      flags:
        seq:
          - id: flags
            type: b1
            repeat: expr
            repeat-expr: 16
`
  },
  {
    id: "ksy_ines",
    name: "Ines",
    category: "Firmware",
    metadata: {
      isGenerated: true,
      fileExtensions: ["nes"],
      description: "",
      originalCategory: "firmware",
      filePath: "firmware/ines.ksy"
    },
    content: `# TODO: Support NES 2.0
meta:
  id: ines
  file-extension: nes
  license: WTFPL
  encoding: ASCII
doc-ref: https://www.nesdev.org/wiki/INES
seq:
  - id: header
    size: 16
    type: header
  - id: trainer
    size: 512
    if: header.f6.trainer
  - id: prg_rom
    size: header.len_prg_rom * 16384
  - id: chr_rom
    size: header.len_chr_rom * 8192
  - id: playchoice10
    type: playchoice10
    if: header.f7.playchoice10
  - id: title
    size-eos: true # Usually only 128/127 bytes
    type: str
    if: not _io.eof
types:
  header:
    seq:
      - id: magic
        contents: [NES, 0x1A]
      - id: len_prg_rom
        type: u1
        doc: Size of PRG ROM in 16 KB units
      - id: len_chr_rom
        type: u1
        doc: Size of CHR ROM in 8 KB units (Value 0 means the board uses CHR RAM)
      - id: f6
        size: 1
        type: f6
      - id: f7
        size: 1
        type: f7
      - id: len_prg_ram
        type: u1
        doc: Size of PRG RAM in 8 KB units (Value 0 infers 8 KB for compatibility; see PRG RAM circuit on nesdev.com)
      - id: f9
        size: 1
        type: f9
      - id: f10
        size: 1
        type: f10
        doc: this one is unofficial
      - id: reserved
        contents: [0, 0, 0, 0, 0]
    instances:
      # TODO: Add an enum for mapper. https://www.nesdev.org/wiki/List_of_mappers
      mapper:
        value: f6.lower_mapper | (f7.upper_mapper << 4)
        doc-ref: https://www.nesdev.org/wiki/Mapper
    types:
      f6:
        doc-ref: https://www.nesdev.org/wiki/INES#Flags_6
        seq:
          - id: lower_mapper
            type: b4
            doc: Lower nibble of mapper number
          - id: four_screen
            type: b1
            doc: Ignore mirroring control or above mirroring bit; instead provide four-screen VRAM
          - id: trainer
            type: b1
            doc: 512-byte trainer at \$7000-\$71FF (stored before PRG data)
          - id: has_battery_ram
            type: b1
            doc: If on the cartridge contains battery-backed PRG RAM (\$6000-7FFF) or other persistent memory
          - id: mirroring
            type: b1
            enum: mirroring
            doc: if 0, horizontal arrangement. if 1, vertical arrangement
        enums:
          mirroring:
            0: horizontal
            1: vertical
      f7:
        doc-ref: https://www.nesdev.org/wiki/INES#Flags_7
        seq:
          - id: upper_mapper
            type: b4
            doc: Upper nibble of mapper number
          - id: format
            type: b2
            doc: If equal to 2, flags 8-15 are in NES 2.0 format
          - id: playchoice10
            type: b1
            doc: Determines if it made for a Nintendo PlayChoice-10 or not
          - id: vs_unisystem
            type: b1
            doc: Determines if it is made for a Nintendo VS Unisystem or not
      f9:
        doc-ref: https://www.nesdev.org/wiki/INES#Flags_9
        seq:
          # TODO: enforce zero (similarly to "contents", but on bit level)
          - id: reserved
            type: b7
          - id: tv_system
            type: b1
            enum: tv_system
            doc: if 0, NTSC. If 1, PAL.
        enums:
          tv_system:
            0: ntsc
            1: pal
      f10:
        doc-ref: https://www.nesdev.org/wiki/INES#Flags_10
        seq:
          # TODO: enforce zero (similarly to "contents", but on bit level)
          - id: reserved1
            type: b2
          - id: bus_conflict
            type: b1
            doc: If 0, no bus conflicts. If 1, bus conflicts.
          # TODO: 0 = true, 1 = false in this case
          - id: prg_ram
            type: b1
            doc: If 0, PRG ram is present. If 1, not present.
          # TODO: enforce zero (similarly to "contents", but on bit level)
          - id: reserved2
            type: b2
          - id: tv_system
            type: b2
            enum: tv_system
            doc: if 0, NTSC. If 2, PAL. If 1 or 3, dual compatible.
        enums:
          tv_system:
            0: ntsc
            1: dual1
            2: pal
            3: dual2
  playchoice10:
    doc-ref: https://www.nesdev.org/wiki/PC10_ROM-Images
    seq:
      - id: inst_rom
        size: 8192
      - id: prom
        type: prom
    types:
      prom:
        seq:
          - id: data
            size: 16
          - id: counter_out
            size: 16
`
  },
  {
    id: "ksy_uimage",
    name: "U-Boot Image wrapper",
    category: "Firmware",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "U-Boot Image wrapper",
      originalCategory: "firmware",
      filePath: "firmware/uimage.ksy",
      endian: "be"
    },
    content: `meta:
  id: uimage
  title: U-Boot Image wrapper
  license: CC0-1.0
  endian: be
doc: |
  The new uImage format allows more flexibility in handling images of various
  types (kernel, ramdisk, etc.), it also enhances integrity protection of images
  with sha1 and md5 checksums.
doc-ref: https://source.denx.de/u-boot/u-boot/-/raw/e4dba4ba6f/include/image.h
seq:
  - id: header
    type: uheader
  - id: data
    size: header.len_image
types:
  uheader:
    seq:
      - id: magic
        contents: [0x27, 0x05, 0x19, 0x56]
      - id: header_crc
        type: u4
      - id: timestamp
        type: u4
      - id: len_image
        type: u4
      - id: load_address
        type: u4
      - id: entry_address
        type: u4
      - id: data_crc
        type: u4
      - id: os_type
        type: u1
        enum: uimage_os
      - id: architecture
        type: u1
        enum: uimage_arch
      - id: image_type
        type: u1
        enum: uimage_type
      - id: compression_type
        type: u1
        enum: uimage_comp
      - id: name
        size: 32
        encoding: UTF-8
        type: strz
enums:
  uimage_os:
    0:
      id: invalid
      doc: Invalid OS
    1:
      id: openbsd
      doc: OpenBSD
    2:
      id: netbsd
      doc: NetBSD
    3:
      id: freebsd
      doc: FreeBSD
    4:
      id: bsd4_4
      doc: 4.4BSD
    5:
      id: linux
      doc: Linux
    6:
      id: svr4
      doc: SVR4
    7:
      id: esix
      doc: Esix
    8:
      id: solaris
      doc: Solaris
    9:
      id: irix
      doc: Irix
    10:
      id: sco
      doc: SCO
    11:
      id: dell
      doc: Dell
    12:
      id: ncr
      doc: NCR
    13:
      id: lynxos
      doc: LynxOS
    14:
      id: vxworks
      doc: VxWorks
    15:
      id: psos
      doc: pSOS
    16:
      id: qnx
      doc: QNX
    17:
      id: u_boot
      doc: Firmware
    18:
      id: rtems
      doc: RTEMS
    19:
      id: artos
      doc: ARTOS
    20:
      id: unity
      doc: Unity OS
    21:
      id: integrity
      doc: INTEGRITY
    22:
      id: ose
      doc: OSE
    23:
      id: plan9
      doc: Plan 9
    24:
      id: openrtos
      doc: OpenRTOS
    25:
      id: arm_trusted_firmware
      doc: ARM Trusted Firmware
    26:
      id: tee
      doc: Trusted Execution Environment
    27:
      id: opensbi
      doc: RISC-V OpenSBI
    28:
      id: efi
      doc: EFI Firmware (e.g. GRUB2)
  uimage_arch:
    0:
      id: invalid
      doc: Invalid CPU
    1:
      id: alpha
      doc: Alpha
    2:
      id: arm
      doc: ARM
    3:
      id: i386
      doc: Intel x86
    4:
      id: ia64
      doc: IA64
    5:
      id: mips
      doc: MIPS
    6:
      id: mips64
      doc: MIPS 64 Bit
    7:
      id: ppc
      doc: PowerPC
    8:
      id: s390
      doc: IBM S390
    9:
      id: sh
      doc: SuperH
    10:
      id: sparc
      doc: Sparc
    11:
      id: sparc64
      doc: Sparc 64 Bit
    12:
      id: m68k
      doc: M68K
    13:
      id: nios
      doc: Nios-32
    14:
      id: microblaze
      doc: MicroBlaze
    15:
      id: nios2
      doc: Nios-II
    16:
      id: blackfin
      doc: Blackfin
    17:
      id: avr32
      doc: AVR32
    18:
      id: st200
      doc: STMicroelectronics ST200
    19:
      id: sandbox
      doc: Sandbox architecture (test only)
    20:
      id: nds32
      doc: ANDES Technology - NDS32
    21:
      id: openrisc
      doc: OpenRISC 1000
    22:
      id: arm64
      doc: ARM64
    23:
      id: arc
      doc: Synopsys DesignWare ARC
    24:
      id: x86_64
      doc: AMD x86_64, Intel and Via
    25:
      id: xtensa
      doc: Xtensa
    26:
      id: riscv
      doc: RISC-V
  uimage_comp:
    0:
      id: none
      doc: No Compression Used
    1: gzip
    2: bzip2
    3: lzma
    4: lzo
    5: lz4
    6: zstd
  uimage_type:
    0:
      id: invalid
      doc: Invalid Image
    1:
      id: standalone
      doc: Standalone Program
    2:
      id: kernel
      doc: OS Kernel Image
    3:
      id: ramdisk
      doc: RAMDisk Image
    4:
      id: multi
      doc: Multi-File Image
    5:
      id: firmware
      doc: Firmware Image
    6:
      id: script
      doc: Script file
    7:
      id: filesystem
      doc: Filesystem Image (any type)
    8:
      id: flatdt
      doc: Binary Flat Device Tree Blob
    9:
      id: kwbimage
      doc: Kirkwood Boot Image
    10:
      id: imximage
      doc: Freescale IMXBoot Image
    11:
      id: ublimage
      doc: Davinci UBL Image
    12:
      id: omapimage
      doc: TI OMAP Config Header Image
    13:
      id: aisimage
      doc: TI Davinci AIS Image
    14:
      id: kernel_noload
      doc: OS Kernel Image, can run from any load address
    15:
      id: pblimage
      doc: Freescale PBL Boot Image
    16:
      id: mxsimage
      doc: Freescale MXSBoot Image
    17:
      id: gpimage
      doc: TI Keystone GPHeader Image
    18:
      id: atmelimage
      doc: ATMEL ROM bootable Image
    19:
      id: socfpgaimage
      doc: Altera SOCFPGA CV/AV Preloader
    20:
      id: x86_setup
      doc: x86 setup.bin Image
    21:
      id: lpc32xximage
      doc: x86 setup.bin Image
    22:
      id: loadable
      doc: A list of typeless images
    23:
      id: rkimage
      doc: Rockchip Boot Image
    24:
      id: rksd
      doc: Rockchip SD card
    25:
      id: rkspi
      doc: Rockchip SPI image
    26:
      id: zynqimage
      doc: Xilinx Zynq Boot Image
    27:
      id: zynqmpimage
      doc: Xilinx ZynqMP Boot Image
    28:
      id: zynqmpbif
      doc: Xilinx ZynqMP Boot Image (bif)
    29:
      id: fpga
      doc: FPGA Image
    30:
      id: vybridimage
      doc: VYBRID .vyb Image
    31:
      id: tee
      doc: Trusted Execution Environment OS Image
    32:
      id: firmware_ivt
      doc: Firmware Image with HABv4 IVT
    33:
      id: pmmc
      doc: TI Power Management Micro-Controller Firmware
    34:
      id: stm32image
      doc: STMicroelectronics STM32 Image
    35:
      id: socfpgaimage_v1
      doc: Altera SOCFPGA A10 Preloader
    36:
      id: mtkimage
      doc: MediaTek BootROM loadable Image
    37:
      id: imx8mimage
      doc: Freescale IMX8MBoot Image
    38:
      id: imx8image
      doc: Freescale IMX8Boot Image
    39:
      id: copro
      doc: Coprocessor Image for remoteproc
    40:
      id: sunxi_egon
      doc: Allwinner eGON Boot Image
`
  },
  {
    id: "ksy_grub2_font",
    name: "GRUB 2 font",
    category: "Fonts",
    metadata: {
      isGenerated: true,
      fileExtensions: ["pf2"],
      description: "GRUB 2 font",
      originalCategory: "font",
      filePath: "font/grub2_font.ksy",
      signature: {"offset":0,"bytes":[15,0,0,0,4,null]},
      endian: "be"
    },
    content: `meta:
  id: grub2_font
  title: GRUB 2 font
  application: GRUB 2
  file-extension: pf2
  xref:
    justsolve: PFF2
    wikidata: Q29650337
  tags:
    - font
  license: CC0-1.0
  encoding: ASCII
  endian: be
doc: |
  Bitmap font format for the GRUB 2 bootloader.
doc-ref: https://grub.gibibit.com/New_font_format
seq:
  - id: magic
    contents: ["FILE", 0, 0, 0, 4, "PFF2"]
    size: 12
  - id: sections
    type: section
    repeat: until
    repeat-until: _.section_type == "DATA"
    doc: |
      The "DATA" section acts as a terminator. The documentation says:
      "A marker that indicates the remainder of the file is data accessed
      via the character index (CHIX) section. When reading this font file,
      the rest of the file can be ignored when scanning the sections."
types:
  section:
    seq:
      - id: section_type
        size: 4
        type: str
      - id: len_body
        type: u4
        doc: Should be set to \`0xFFFF_FFFF\` for \`section_type != "DATA"\`
      - id: body
        size: len_body
        type:
          switch-on: section_type
          cases:
            '"NAME"': name_section
            '"FAMI"': fami_section
            '"WEIG"': weig_section
            '"SLAN"': slan_section
            '"PTSZ"': ptsz_section
            '"MAXW"': maxw_section
            '"MAXH"': maxh_section
            '"ASCE"': asce_section
            '"DESC"': desc_section
            '"CHIX"': chix_section
        if: section_type != "DATA"
  name_section:
    seq:
      - id: font_name
        type: strz
  fami_section:
    seq:
      - id: font_family_name
        type: strz
  weig_section:
    seq:
      - id: font_weight
        type: strz
  slan_section:
    seq:
      - id: font_slant
        type: strz
  ptsz_section:
    seq:
      - id: font_point_size
        type: u2
  maxw_section:
    seq:
      - id: maximum_character_width
        type: u2
  maxh_section:
    seq:
      - id: maximum_character_height
        type: u2
  asce_section:
    seq:
      - id: ascent_in_pixels
        type: u2
  desc_section:
    seq:
      - id: descent_in_pixels
        type: u2
  chix_section:
    seq:
      - id: characters
        type: character
        repeat: eos
    types:
      character:
        seq:
          - id: code_point
            type: u4
            doc: Unicode code point
          - id: flags
            type: u1
          - id: ofs_definition
            type: u4
        instances:
          definition:
            io: _root._io
            pos: ofs_definition
            type: character_definition
      character_definition:
        seq:
          - id: width
            type: u2
          - id: height
            type: u2
          - id: x_offset
            type: s2
          - id: y_offset
            type: s2
          - id: device_width
            type: s2
          - id: bitmap_data
            size: (width * height + 7) / 8 # ceiled integer division
            doc: |
              A two-dimensional bitmap, one bit per pixel. It is organized as
              row-major, top-down, left-to-right. The most significant bit of
              each byte corresponds to the leftmost or uppermost pixel from all
              bits of the byte. If a bit is set (1, \`true\`), the pixel is set to
              the font color, if a bit is clear (0, \`false\`), the pixel is
              transparent.

              Rows are **not** padded to byte boundaries (i.e., a
              single byte may contain bits belonging to multiple rows). The last
              byte of the bitmap _is_ padded with zero bits at all unused least
              significant bit positions so that the bitmap ends on a byte
              boundary.
`
  },
  {
    id: "ksy_pcf_font",
    name: "Portable Compiled Format (PCF) font",
    category: "Fonts",
    metadata: {
      isGenerated: true,
      fileExtensions: ["pcf"],
      description: "Portable Compiled Format (PCF) font",
      originalCategory: "font",
      filePath: "font/pcf_font.ksy",
      signature: {"offset":0,"bytes":[1,252]},
      endian: "le"
    },
    content: `meta:
  id: pcf_font
  title: Portable Compiled Format (PCF) font
  file-extension: pcf
  xref:
    justsolve: PCF
    wikidata: Q3398726
  license: CC0-1.0
  ks-version: 0.9
  imports:
    - /common/bytes_with_io
  encoding: UTF-8
  endian: le
doc: |
  Portable Compiled Format (PCF) font is a bitmap font format
  originating from X11 Window System. It matches BDF format (which is
  text-based) closely, but instead being binary and
  platform-independent (as opposed to previously used SNF binary
  format) due to introduced features to handle different endianness
  and bit order.

  The overall composition of the format is straightforward: it's more
  or less classic directory of type-offset-size pointers, pointing to
  what PCF format calls "tables". Each table carries a certain
  piece of information related to the font (metadata properties,
  metrics, bitmaps, mapping of glyphs to characters, etc).
doc-ref: https://fontforge.org/docs/techref/pcf-format.html
seq:
  - id: magic
    -orig-id: header
    contents: [0x1, "fcp"]
  - id: num_tables
    -orig-id: table_count
    type: u4
  - id: tables
    type: table
    repeat: expr
    repeat-expr: num_tables
types:
  table:
    doc: |
      Table offers a offset + length pointer to a particular
      table. "Type" of table references certain enum. Applications can
      ignore enum values which they don't support.
    -webide-representation: "{type}"
    seq:
      - id: type
        type: u4
        enum: types
      - id: format
        type: format
      - id: len_body
        -orig-id: size
        type: u4
      - id: ofs_body
        -orig-id: offset
        type: u4
    instances:
      body:
        pos: ofs_body
        size: len_body
        type:
          switch-on: type
          cases:
            'types::properties': properties
            # TODO: accelerators
            # TODO: metrics
            # TODO: ink_metrics
            'types::bitmaps': bitmaps
            'types::bdf_encodings': bdf_encodings
            'types::swidths': swidths
            'types::glyph_names': glyph_names
            # TODO: bdf_accelerators
    types:
      properties:
        doc: |
          Array of properties (key-value pairs), used to convey different X11
          settings of a font. Key is always an X font atom.
        doc-ref: 'https://fontforge.org/docs/techref/pcf-format.html#properties-table'
        -webide-representation: "{num_props:dec} properties"
        seq:
          - id: format
            type: format
          - id: num_props
            type: u4
          - id: props
            type: prop
            repeat: expr
            repeat-expr: num_props
          - id: padding
            size: '(num_props & 3) == 0 ? 0 : (4 - (num_props & 3))'
            # In reality: align to next 4-byte boundary
          - id: len_strings
            type: u4
          - id: strings
            size: len_strings
            type: bytes_with_io
            doc: |
              Strings buffer. Never used directly, but instead is
              addressed by offsets from the properties.
        types:
          prop:
            doc: |
              Property is a key-value pair, "key" being always a
              string and "value" being either a string or a 32-bit
              integer based on an additinal flag (\`is_string\`).

              Simple offset-based mechanism is employed to keep this
              type's sequence fixed-sized and thus have simple access
              to property key/value by index.
            -webide-representation: "{name} => {str_value}/{int_value}"
            seq:
              - id: ofs_name
                type: u4
                doc: Offset to name in the strings buffer.
              - id: is_string
                -orig-id: isStringProp
                type: u1
                doc: |
                  Designates if value is an integer (zero) or a string (non-zero).
              - id: value_or_ofs_value
                type: u4
                doc: |
                  If the value is an integer (\`is_string\` is false),
                  then it's stored here. If the value is a string
                  (\`is_string\` is true), then it stores offset to the
                  value in the strings buffer.
            instances:
              name:
                io: _parent.strings._io
                pos: ofs_name
                type: strz
                doc: |
                  Name of the property addressed in the strings buffer.
                -webide-parse-mode: eager
              str_value:
                io: _parent.strings._io
                pos: value_or_ofs_value
                type: strz
                if: is_string != 0
                doc: |
                  Value of the property addressed in the strings
                  buffer, if this is a string value.
                -webide-parse-mode: eager
              int_value:
                value: value_or_ofs_value
                if: is_string == 0
                doc: |
                  Value of the property, if this is an integer value.
                -webide-parse-mode: eager

              # As of Kaitai Struct 0.9, \`value\` fails with:
              #
              #     "can't combine output types: StrFromBytesType(BytesTerminatedType(0,false,true,true,None),UTF-8) vs IntMultiType(false,Width4,Some(LittleEndian))"
              #
              # ... so currently it's commented out.

              #value:
              #  value: '(is_string != 0) ? str_value : int_value'
      bitmaps:
        doc: |
          Table containing uncompressed glyph bitmaps.
        doc-ref: 'https://fontforge.org/docs/techref/pcf-format.html#the-bitmap-table'
        seq:
          - id: format
            type: format
          - id: num_glyphs
            -orig-id: glyph_count
            type: u4
          - id: offsets
            type: u4
            repeat: expr
            repeat-expr: num_glyphs
          - id: bitmap_sizes
            type: u4
            repeat: expr
            repeat-expr: 4
      bdf_encodings:
        doc: |
          Table that allows mapping of character codes to glyphs present in the
          font. Supports 1-byte and 2-byte character codes.

          Note that this mapping is agnostic to character encoding itself - it
          can represent ASCII, Unicode (ISO/IEC 10646), various single-byte
          national encodings, etc. If application cares about it, normally
          encoding will be specified in \`properties\` table, in the properties named
          \`CHARSET_REGISTRY\` / \`CHARSET_ENCODING\`.
        doc-ref: 'https://fontforge.org/docs/techref/pcf-format.html#the-encoding-table'
        seq:
          - id: format
            type: format
          - id: min_char_or_byte2
            type: u2
          - id: max_char_or_byte2
            type: u2
          - id: min_byte1
            type: u2
          - id: max_byte1
            type: u2
          - id: default_char
            type: u2
          - id: glyph_indexes
            -orig-id: glyphindeces
            type: u2
            repeat: expr
            repeat-expr: (max_char_or_byte2 - min_char_or_byte2 + 1) * (max_byte1 - min_byte1 + 1)
      swidths:
        doc: |
          Table containing scalable widths of characters.
        doc-ref: 'https://fontforge.org/docs/techref/pcf-format.html#the-scalable-widths-table'
        -webide-representation: '{num_glyphs:dec} glyphs'
        seq:
          - id: format
            type: format
          - id: num_glyphs
            type: u4
          - id: swidths
            type: u4
            repeat: expr
            repeat-expr: num_glyphs
            doc: |
              The scalable width of a character is the width of the corresponding
              PostScript character in em-units (1/1000ths of an em).
      glyph_names:
        doc: |
          Table containing character names for every glyph.
        doc-ref: 'https://fontforge.org/docs/techref/pcf-format.html#the-glyph-names-table'
        -webide-representation: '{num_glyphs:dec} glyphs'
        seq:
          - id: format
            type: format
          - id: num_glyphs
            type: u4
          - id: names
            type: string_ref
            repeat: expr
            repeat-expr: num_glyphs
            doc: |
              Glyph names are represented as string references in strings buffer.
          - id: len_strings
            -orig-id: string_size
            type: u4
          - id: strings
            size: len_strings
            type: bytes_with_io
            doc: |
              Strings buffer which contains all glyph names.
        types:
          string_ref:
            -webide-representation: '{value}'
            seq:
              - id: ofs_string
                type: u4
            instances:
              value:
                io: _parent.strings._io
                pos: ofs_string
                type: strz
                -webide-parse-mode: eager
  format:
    doc: |
      Table format specifier, always 4 bytes. Original implementation treats
      it as always little-endian and makes liberal use of bitmasking to parse
      various parts of it.

      TODO: this format specification recognizes endianness and bit
      order format bits, but it does not really takes any parsing
      decisions based on them.
    doc-ref: 'https://fontforge.org/docs/techref/pcf-format.html#file-header'
    seq:
      - id: padding1
        type: b2
      - id: scan_unit_mask
        type: b2
      - id: is_most_significant_bit_first
        -orig-id: PCF_BYTE_MASK
        type: b1
      - id: is_big_endian
        -orig-id: PCF_BYTE_MASK
        type: b1
        doc: If set, then all integers in the table are treated as big-endian
      - id: glyph_pad_mask
        type: b2
        -orig-id: PCF_GLYPH_PAD_MASK
      - id: format
        type: u1
      - id: padding
        type: u2
enums:
  types:
    1:
      id: properties
      -orig-id: PCF_PROPERTIES
    2:
      id: accelerators
      -orig-id: PCF_ACCELERATORS
    4:
      id: metrics
      -orig-id: PCF_METRICS
    8:
      id: bitmaps
      -orig-id: PCF_BITMAPS
    0x10:
      id: ink_metrics
      -orig-id: PCF_INK_METRICS
    0x20:
      id: bdf_encodings
      -orig-id: PCF_BDF_ENCODINGS
    0x40:
      id: swidths
      -orig-id: PCF_SWIDTHS
    0x80:
      id: glyph_names
      -orig-id: PCF_GLYPH_NAMES
    0x100:
      id: bdf_accelerators
      -orig-id: PCF_BDF_ACCELERATORS
`
  },
  {
    id: "ksy_ttf",
    name: "TrueType Font File",
    category: "Fonts",
    metadata: {
      isGenerated: true,
      fileExtensions: ["ttf"],
      description: "TrueType Font File",
      originalCategory: "font",
      filePath: "font/ttf.ksy",
      endian: "be"
    },
    content: `meta:
  id: ttf
  title: TrueType Font File
  file-extension: ttf
  xref:
    justsolve: TrueType
    pronom: x-fmt/453
    wikidata: Q751800
  license: MIT
  endian: be
doc: |
  A TrueType font file contains data, in table format, that comprises
  an outline font.
doc-ref: https://web.archive.org/web/20160410081432/https://www.microsoft.com/typography/tt/ttf_spec/ttch02.doc
seq:
  - id: offset_table
    type: offset_table
  - id: directory_table
    type: dir_table_entry
    repeat: expr
    repeat-expr: offset_table.num_tables
types:
  fixed:
    -webide-representation: '{major:dec}.{minor:dec}'
    seq:
      - id: major
        type: u2
      - id: minor
        type: u2
  offset_table:
    seq:
      - id: sfnt_version
        type: fixed
      - id: num_tables
        type: u2
      - id: search_range
        type: u2
      - id: entry_selector
        type: u2
      - id: range_shift
        type: u2
  dir_table_entry:
    -webide-representation: '{tag} [{length:dec}b]: {value}'
    seq:
      - id: tag
        type: str
        size: 4
        encoding: ascii
      - id: checksum
        type: u4
      - id: offset
        type: u4
      - id: length
        type: u4
    instances:
      value:
        io: _root._io
        pos: offset
        size: length
        type:
          switch-on: tag
          cases:
            "'cmap'": cmap
            "'cvt '": cvt
            "'glyf'": glyf
            "'head'": head
            "'hhea'": hhea
            "'OS/2'": os2
            "'prep'": prep
            "'fpgm'": fpgm
            "'kern'": kern
            "'maxp'": maxp
            "'post'": post
            "'name'": name
        -webide-parse-mode: eager
  cmap:
    doc: >
      cmap - Character To Glyph Index Mapping Table
      This table defines the mapping of character codes to the glyph index values used in the font.
    -webide-represetation: "hello"
    seq:
      - id: version_number
        type: u2
      - id: number_of_encoding_tables
        type: u2
      - id: tables
        type: subtable_header
        repeat: expr
        repeat-expr: number_of_encoding_tables
    types:
      subtable_header:
        -webide-representation: "p:{platform_id:dec}, e:{encoding_id:dec}"
        seq:
          - id: platform_id
            type: u2
          - id: encoding_id
            type: u2
          - id: subtable_offset
            type: u4
        instances:
          table:
            type: subtable
            io: _parent._io
            pos: subtable_offset
            -webide-parse-mode: eager
      subtable:
        seq:
          - id: format
            type: u2
            enum: subtable_format
          - id: length
            type: u2
          - id: version
            type: u2
          - id: value
            size: length - 6
            type:
              switch-on: format
              cases:
                subtable_format::byte_encoding_table: byte_encoding_table
                subtable_format::high_byte_mapping_through_table: high_byte_mapping_through_table
                subtable_format::segment_mapping_to_delta_values: segment_mapping_to_delta_values
                subtable_format::trimmed_table_mapping: trimmed_table_mapping
        enums:
          subtable_format:
            0: byte_encoding_table
            2: high_byte_mapping_through_table
            4: segment_mapping_to_delta_values
            6: trimmed_table_mapping
        types:
          byte_encoding_table:
            seq:
              - id: glyph_id_array
                size: 256
          high_byte_mapping_through_table:
            seq:
              - id: sub_header_keys
                type: u2
                repeat: expr
                repeat-expr: 256
              # TODO
          segment_mapping_to_delta_values:
            seq:
              - id: seg_count_x2
                type: u2
              - id: search_range
                type: u2
              - id: entry_selector
                type: u2
              - id: range_shift
                type: u2
              - id: end_count
                type: u2
                repeat: expr
                repeat-expr: seg_count
              - id: reserved_pad
                type: u2
              - id: start_count
                type: u2
                repeat: expr
                repeat-expr: seg_count
              - id: id_delta
                type: u2
                repeat: expr
                repeat-expr: seg_count
              - id: id_range_offset
                type: u2
                repeat: expr
                repeat-expr: seg_count
              - id: glyph_id_array
                type: u2
                repeat: eos
            instances:
              seg_count:
                value: seg_count_x2 / 2
                -webide-parse-mode: eager
          trimmed_table_mapping:
            seq:
              - id: first_code
                type: u2
              - id: entry_count
                type: u2
              - id: glyph_id_array
                type: u2
                repeat: expr
                repeat-expr: entry_count
  cvt:
    doc: >
      cvt  - Control Value Table
      This table contains a list of values that can be referenced by instructions.
      They can be used, among other things, to control characteristics for different glyphs.
    seq:
      - id: fwords
        type: s2
        repeat: eos
  glyf:
    # https://github.com/fonttools/fonttools/blob/678876325ef26ac33e8c6d13f4fb70c3bef5da8e/Lib/fontTools/ttLib/tables/_g_l_y_f.py
    # TODO: sadly, Kaitai currently cannot parse this structure
    seq:
      - id: number_of_contours
        type: s2
      - id: x_min
        type: s2
      - id: y_min
        type: s2
      - id: x_max
        type: s2
      - id: y_max
        type: s2
      - id: value
        type: simple_glyph
        if: number_of_contours > 0
    types:
      simple_glyph:
        seq:
          - id: end_pts_of_contours
            type: u2
            repeat: expr
            repeat-expr: _parent.number_of_contours
          - id: instruction_length
            type: u2
          - id: instructions
            size: instruction_length
          - id: flags
            type: flag
            repeat: expr
            repeat-expr: point_count
        instances:
          point_count:
            value: end_pts_of_contours.max + 1
        types:
          flag:
            seq:
              - id: reserved
                type: b2
              - id: y_is_same
                type: b1
              - id: x_is_same
                type: b1
              - id: repeat
                type: b1
              - id: y_short_vector
                type: b1
              - id: x_short_vector
                type: b1
              - id: on_curve
                type: b1
              - id: repeat_value
                type: u1
                if: repeat
  head:
    enums:
      flags:
        0x01: baseline_at_y0            # Bit 0 - baseline for font at y=0
        0x02: left_sidebearing_at_x0    # Bit 1 - left sidebearing at x=0
        0x04: flag_depend_on_point_size # Bit 2 - instructions may depend on point size
        0x08: flag_force_ppem           # Bit 3 - force ppem to integer values for all internal scaler math;
                                        #         may use fractional ppem sizes if this bit is clear
        0x10: flag_may_advance_width    # Bit 4 - instructions may alter advance width (the advance widths might not scale linearly)
      font_direction_hint:
        0: fully_mixed_directional_glyphs
        1: only_strongly_left_to_right
        2: strongly_left_to_right_and_neutrals
        #-1: only_strongly_right_to_left
        #-2: strongly_right_to_left_and_neutrals
    seq:
      - id: version
        type: fixed
      - id: font_revision
        type: fixed
      - id: checksum_adjustment
        type: u4
      - id: magic_number
        contents: [0x5F, 0x0F, 0x3C, 0xF5]
      - id: flags
        type: u2
        enum: flags
      - id: units_per_em
        type: u2
      - id: created
        type: u8
      - id: modified
        type: u8
      - id: x_min
        type: s2
      - id: y_min
        type: s2
      - id: x_max
        type: s2
      - id: y_max
        type: s2
      - id: mac_style
        type: u2
      - id: lowest_rec_ppem
        type: u2
      - id: font_direction_hint
        type: s2
        enum: font_direction_hint
      - id: index_to_loc_format
        type: s2
      - id: glyph_data_format
        type: s2
  hhea:
    seq:
      - id: version
        type: fixed
      - id: ascender
        type: s2
        doc: 'Typographic ascent'
      - id: descender
        type: s2
        doc: 'Typographic descent'
      - id: line_gap
        type: s2
        doc: 'Typographic line gap. Negative LineGap values are treated as zero in Windows 3.1, System 6, and System 7.'
      - id: advance_width_max
        type: u2
        doc: 'Maximum advance width value in \`hmtx\` table.'
      - id: min_left_side_bearing
        type: s2
        doc: 'Minimum left sidebearing value in \`hmtx\` table.'
      - id: min_right_side_bearing
        type: s2
        doc: 'Minimum right sidebearing value; calculated as Min(aw - lsb - (xMax - xMin)).'
      - id: x_max_extend
        type: s2
        doc: 'Max(lsb + (xMax - xMin)).'
      - id: caret_slope_rise
        type: s2
      - id: caret_slope_run
        type: s2
      - id: reserved
        contents: [0,0,0,0,0,0,0,0,0,0]
      - id: metric_data_format
        type: s2
      - id: number_of_hmetrics
        type: u2
  os2:
    doc: 'The OS/2 table consists of a set of metrics that are required by Windows and OS/2.'
    types:
      panose:
        enums:
          family_kind:
            0: any
            1: no_fit
            2: text_and_display
            3: script
            4: decorative
            5: pictorial
          serif_style:
            0: any
            1: no_fit
            2: cove
            3: obtuse_cove
            4: square_cove
            5: obtuse_square_cove
            6: square
            7: thin
            8: bone
            9: exaggerated
            10: triangle
            11: normal_sans
            12: obtuse_sans
            13: perp_sans
            14: flared
            15: rounded
          weight:
            0: any
            1: no_fit
            2: very_light
            3: light
            4: thin
            5: book
            6: medium
            7: demi
            8: bold
            9: heavy
            10: black
            11: nord
          proportion:
            0: any
            1: no_fit
            2: old_style
            3: modern
            4: even_width
            5: expanded
            6: condensed
            7: very_expanded
            8: very_condensed
            9: monospaced
          contrast:
            0: any
            1: no_fit
            2: none
            3: very_low
            4: low
            5: medium_low
            6: medium
            7: medium_high
            8: high
            9: very_high
          stroke_variation:
            0: any
            1: no_fit
            2: gradual_diagonal
            3: gradual_transitional
            4: gradual_vertical
            5: gradual_horizontal
            6: rapid_vertical
            7: rapid_horizontal
            8: instant_vertical
          arm_style:
            0: any
            1: no_fit
            2: straight_arms_horizontal
            3: straight_arms_wedge
            4: straight_arms_vertical
            5: straight_arms_single_serif
            6: straight_arms_double_serif
            7: non_straight_arms_horizontal
            8: non_straight_arms_wedge
            9: non_straight_arms_vertical
            10: non_straight_arms_single_serif
            11: non_straight_arms_double_serif
          letter_form:
            0: any
            1: no_fit
            2: normal_contact
            3: normal_weighted
            4: normal_boxed
            5: normal_flattened
            6: normal_rounded
            7: normal_off_center
            8: normal_square
            9: oblique_contact
            10: oblique_weighted
            11: oblique_boxed
            12: oblique_flattened
            13: oblique_rounded
            14: oblique_off_center
            15: oblique_square
          midline:
            0: any
            1: no_fit
            2: standard_trimmed
            3: standard_pointed
            4: standard_serifed
            5: high_trimmed
            6: high_pointed
            7: high_serifed
            8: constant_trimmed
            9: constant_pointed
            10: constant_serifed
            11: low_trimmed
            12: low_pointed
            13: low_serifed
          x_height:
            0: any
            1: no_fit
            2: constant_small
            3: constant_standard
            4: constant_large
            5: ducking_small
            6: ducking_standard
            7: ducking_large
        seq:
          - id: family_type
            type: u1
            enum: family_kind
          - id: serif_style
            type: u1
            enum: serif_style
          - id: weight
            type: u1
            enum: weight
          - id: proportion
            type: u1
            enum: proportion
          - id: contrast
            type: u1
            enum: contrast
          - id: stroke_variation
            type: u1
            enum: stroke_variation
          - id: arm_style
            type: u1
            enum: arm_style
          - id: letter_form
            type: u1
            enum: letter_form
          - id: midline
            type: u1
            enum: midline
          - id: x_height
            type: u1
            enum: x_height
      unicode_range:
        seq:
          - { id: basic_latin, type: b1 }
          - { id: latin_1_supplement, type: b1 }
          - { id: latin_extended_a, type: b1 }
          - { id: latin_extended_b, type: b1 }
          - { id: ipa_extensions, type: b1 }
          - { id: spacing_modifier_letters, type: b1 }
          - { id: combining_diacritical_marks, type: b1 }
          - { id: basic_greek, type: b1 }
          - { id: greek_symbols_and_coptic, type: b1 }
          - { id: cyrillic, type: b1 }
          - { id: armenian, type: b1 }
          - { id: basic_hebrew, type: b1 }
          - { id: hebrew_extended, type: b1 }
          - { id: basic_arabic, type: b1 }
          - { id: arabic_extended, type: b1 }
          - { id: devanagari, type: b1 }
          - { id: bengali, type: b1 }
          - { id: gurmukhi, type: b1 }
          - { id: gujarati, type: b1 }
          - { id: oriya, type: b1 }
          - { id: tamil, type: b1 }
          - { id: telugu, type: b1 }
          - { id: kannada, type: b1 }
          - { id: malayalam, type: b1 }
          - { id: thai, type: b1 }
          - { id: lao, type: b1 }
          - { id: basic_georgian, type: b1 }
          - { id: georgian_extended, type: b1 }
          - { id: hangul_jamo, type: b1 }
          - { id: latin_extended_additional, type: b1 }
          - { id: greek_extended, type: b1 }
          - { id: general_punctuation, type: b1 }
          - { id: superscripts_and_subscripts, type: b1 }
          - { id: currency_symbols, type: b1 }
          - { id: combining_diacritical_marks_for_symbols, type: b1 }
          - { id: letterlike_symbols, type: b1 }
          - { id: number_forms, type: b1 }
          - { id: arrows, type: b1 }
          - { id: mathematical_operators, type: b1 }
          - { id: miscellaneous_technical, type: b1 }
          - { id: control_pictures, type: b1 }
          - { id: optical_character_recognition, type: b1 }
          - { id: enclosed_alphanumerics, type: b1 }
          - { id: box_drawing, type: b1 }
          - { id: block_elements, type: b1 }
          - { id: geometric_shapes, type: b1 }
          - { id: miscellaneous_symbols, type: b1 }
          - { id: dingbats, type: b1 }
          - { id: cjk_symbols_and_punctuation, type: b1 }
          - { id: hiragana, type: b1 }
          - { id: katakana, type: b1 }
          - { id: bopomofo, type: b1 }
          - { id: hangul_compatibility_jamo, type: b1 }
          - { id: cjk_miscellaneous, type: b1 }
          - { id: enclosed_cjk_letters_and_months, type: b1 }
          - { id: cjk_compatibility, type: b1 }
          - { id: hangul, type: b1 }
          - { id: reserved_for_unicode_subranges1, type: b1 }
          - { id: reserved_for_unicode_subranges2, type: b1 }
          - { id: cjk_unified_ideographs, type: b1 }
          - { id: private_use_area, type: b1 }
          - { id: cjk_compatibility_ideographs, type: b1 }
          - { id: alphabetic_presentation_forms, type: b1 }
          - { id: arabic_presentation_forms_a, type: b1 }
          - { id: combining_half_marks, type: b1 }
          - { id: cjk_compatibility_forms, type: b1 }
          - { id: small_form_variants, type: b1 }
          - { id: arabic_presentation_forms_b, type: b1 }
          - { id: halfwidth_and_fullwidth_forms, type: b1 }
          - { id: specials, type: b1 }
          - { id: reserved, size: 7 }
      # TODO: is this correct?
      code_page_range:
        seq:
          - { id: symbol_character_set, type: b1 }
          - { id: oem_character_set, type: b1 }
          - { id: macintosh_character_set, type: b1 }
          - { id: reserved_for_alternate_ansi_oem, type: b7 }
          - { id: cp1361_korean_johab, type: b1 }
          - { id: cp950_chinese_traditional_chars_taiwan_and_hong_kong, type: b1 }
          - { id: cp949_korean_wansung, type: b1 }
          - { id: cp936_chinese_simplified_chars_prc_and_singapore, type: b1 }
          - { id: cp932_jis_japan, type: b1 }
          - { id: cp874_thai, type: b1 }
          - { id: reserved_for_alternate_ansi, type: b8 }
          - { id: cp1257_windows_baltic, type: b1 }
          - { id: cp1256_arabic, type: b1 }
          - { id: cp1255_hebrew, type: b1 }
          - { id: cp1254_turkish, type: b1 }
          - { id: cp1253_greek, type: b1 }
          - { id: cp1251_cyrillic, type: b1 }
          - { id: cp1250_latin_2_eastern_europe, type: b1 }
          - { id: cp1252_latin_1, type: b1 }
          - { id: cp437_us, type: b1 }
          - { id: cp850_we_latin_1, type: b1 }
          - { id: cp708_arabic_asmo_708, type: b1 }
          - { id: cp737_greek_former_437_g, type: b1 }
          - { id: cp775_ms_dos_baltic, type: b1 }
          - { id: cp852_latin_2, type: b1 }
          - { id: cp855_ibm_cyrillic_primarily_russian, type: b1 }
          - { id: cp857_ibm_turkish, type: b1 }
          - { id: cp860_ms_dos_portuguese, type: b1 }
          - { id: cp861_ms_dos_icelandic, type: b1 }
          - { id: cp862_hebrew, type: b1 }
          - { id: cp863_ms_dos_canadian_french, type: b1 }
          - { id: cp864_arabic, type: b1 }
          - { id: cp865_ms_dos_nordic, type: b1 }
          - { id: cp866_ms_dos_russian, type: b1 }
          - { id: cp869_ibm_greek, type: b1 }
          - { id: reserved_for_oem, type: b16 }
    enums:
      weight_class:
        100: thin
        200: extra_light
        300: light
        400: normal
        500: medium
        600: semi_bold
        700: bold
        800: extra_bold
        900: black
      width_class:
        1: ultra_condensed
        2: extra_condensed
        3: condensed
        4: semi_condensed
        5: normal
        6: semi_expanded
        7: expanded
        8: extra_expanded
        9: ultra_expanded
      fs_type:
        # Restricted License embedding: When only this bit is set, this font may
        # not be embedded, copied or modified.
        2: restricted_license_embedding
        # Preview & Print embedding: When this bit is set, the font may be embedded,
        # and temporarily loaded on the remote system. Documents containing Preview
        # & Print fonts must be opened "read-only;" no edits can be applied to the document.
        4: preview_and_print_embedding
        # Editable embedding: When this bit is set, the font may be embedded and
        # temporarily loaded on other systems. Documents containing Editable fonts
        # may be opened for reading and writing.
        8: editable_embedding
      fs_selection:
        0x01: italic
        0x02: underscore
        0x04: negative
        0x08: outlined
        0x10: strikeout
        0x20: bold
        0x40: regular
    seq:
      - id: version
        type: u2
        doc: 'The version number for this OS/2 table.'
      - id: x_avg_char_width
        type: s2
        doc: >
          The Average Character Width parameter specifies the arithmetic average of the escapement (width)
          of all of the 26 lowercase letters a through z of the Latin alphabet and the space character.
          If any of the 26 lowercase letters are not present, this parameter should equal the weighted average
          of all glyphs in the font. For non-UGL (platform 3, encoding 0) fonts, use the unweighted average.
      - id: weight_class
        type: u2
        enum: weight_class
        doc: >
          Indicates the visual weight (degree of blackness or thickness of strokes)
          of the characters in the font.
      - id: width_class
        type: u2
        enum: width_class
        doc: >
          Indicates a relative change from the normal aspect ratio (width to height ratio)
          as specified by a font designer for the glyphs in a font.
      - id: fs_type
        type: s2
        enum: fs_type
        doc: >
          Indicates font embedding licensing rights for the font.
          Embeddable fonts may be stored in a document.
          When a document with embedded fonts is opened on a system that does
          not have the font installed (the remote system), the embedded font
          may be loaded for temporary (and in some cases, permanent) use on that
          system by an embedding-aware application. Embedding licensing rights are
          granted by the vendor of the font.
      - id: y_subscript_x_size
        type: s2
        doc: 'The recommended horizontal size in font design units for subscripts for this font.'
      - id: y_subscript_y_size
        type: s2
        doc: 'The recommended vertical size in font design units for subscripts for this font.'
      - id: y_subscript_x_offset
        type: s2
        doc: 'The recommended horizontal offset in font design untis for subscripts for this font.'
      - id: y_subscript_y_offset
        type: s2
        doc: 'The recommended vertical offset in font design units from the baseline for subscripts for this font.'
      - id: y_superscript_x_size
        type: s2
        doc: 'The recommended horizontal size in font design units for superscripts for this font.'
      - id: y_superscript_y_size
        type: s2
        doc: 'The recommended vertical size in font design units for superscripts for this font.'
      - id: y_superscript_x_offset
        type: s2
        doc: 'The recommended horizontal offset in font design units for superscripts for this font.'
      - id: y_superscript_y_offset
        type: s2
        doc: 'The recommended vertical offset in font design units from the baseline for superscripts for this font.'
      - id: y_strikeout_size
        type: s2
        doc: 'Width of the strikeout stroke in font design units.'
      - id: y_strikeout_position
        type: s2
        doc: 'The position of the strikeout stroke relative to the baseline in font design units.'
      - id: s_family_class
        type: s2
        doc: 'This parameter is a classification of font-family design.'
      - id: panose
        type: panose
      - id: unicode_range
        type: unicode_range
      - id: ach_vend_id
        type: str
        size: 4
        encoding: ascii
        doc: 'The four character identifier for the vendor of the given type face.'
      - id: selection
        type: u2
        enum: fs_selection
        doc: 'Contains information concerning the nature of the font patterns'
      - id: first_char_index
        type: u2
        doc: 'The minimum Unicode index (character code) in this font, according to the cmap subtable for platform ID 3 and encoding ID 0 or 1.'
      - id: last_char_index
        type: u2
        doc: 'The maximum Unicode index (character code) in this font, according to the cmap subtable for platform ID 3 and encoding ID 0 or 1.'
      - id: typo_ascender
        type: s2
        doc: 'The typographic ascender for this font.'
      - id: typo_descender
        type: s2
        doc: 'The typographic descender for this font.'
      - id: typo_line_gap
        type: s2
        doc: 'The typographic line gap for this font.'
      - id: win_ascent
        type: u2
        doc: 'The ascender metric for Windows.'
      - id: win_descent
        type: u2
        doc: 'The descender metric for Windows.'
      - id: code_page_range
        type: code_page_range
        doc: 'This field is used to specify the code pages encompassed by the font file in the \`cmap\` subtable for platform 3, encoding ID 1 (Microsoft platform).'
  prep:
    seq:
      - id: instructions
        size-eos: true
  fpgm:
    seq:
      - id: instructions
        size-eos: true
  kern:
    types:
      subtable:
        types:
          format0:
            types:
              kerning_pair:
                -webide-representation: '{left:dec}+{right:dec}: {value:dec}'
                seq:
                  - id: left
                    type: u2
                  - id: right
                    type: u2
                  - id: value
                    type: s2
            seq:
              - id: pair_count
                type: u2
              - id: search_range
                type: u2
              - id: entry_selector
                type: u2
              - id: range_shift
                type: u2
              - id: kerning_pairs
                type: kerning_pair
                repeat: expr
                repeat-expr: pair_count
        seq:
          - id: version
            type: u2
          - id: length
            type: u2
          - id: format
            type: u1
          - id: reserved
            type: b4
          - id: is_override
            type: b1
          - id: is_cross_stream
            type: b1
          - id: is_minimum
            type: b1
          - id: is_horizontal
            type: b1
          - id: format0
            type: format0
            if: format == 0
    seq:
      - id: version
        type: u2
      - id: subtable_count
        type: u2
      - id: subtables
        type: subtable
        repeat: expr
        repeat-expr: subtable_count
  maxp:
    seq:
      - id: table_version_number
        type: fixed
        doc: '0x00010000 for version 1.0.'
      - id: num_glyphs
        type: u2
        doc: 'The number of glyphs in the font.'
      - id: version10_body
        type: maxp_version10_body
        if: is_version10
    instances:
      is_version10:
        value: table_version_number.major == 1 and table_version_number.minor == 0
  maxp_version10_body:
    seq:
      - id: max_points
        type: u2
        doc: 'Maximum points in a non-composite glyph.'
      - id: max_contours
        type: u2
        doc: 'Maximum contours in a non-composite glyph.'
      - id: max_composite_points
        type: u2
        doc: 'Maximum points in a composite glyph.'
      - id: max_composite_contours
        type: u2
        doc: 'Maximum contours in a composite glyph.'
      - id: max_zones
        type: u2
        doc: '1 if instructions do not use the twilight zone (Z0), or 2 if instructions do use Z0; should be set to 2 in most cases.'
      - id: max_twilight_points
        type: u2
        doc: 'Maximum points used in Z0.'
      - id: max_storage
        type: u2
        doc: 'Number of Storage Area locations.'
      - id: max_function_defs
        type: u2
        doc: 'Number of FDEFs.'
      - id: max_instruction_defs
        type: u2
        doc: 'Number of IDEFs.'
      - id: max_stack_elements
        type: u2
        doc: 'Maximum stack depth.'
      - id: max_size_of_instructions
        type: u2
        doc: 'Maximum byte count for glyph instructions.'
      - id: max_component_elements
        type: u2
        doc: 'Maximum number of components referenced at "top level" for any composite glyph.'
      - id: max_component_depth
        type: u2
        doc: 'Maximum levels of recursion; 1 for simple components.'
  post:
    types:
      format20:
        types:
          pascal_string:
            -webide-representation: "{value}"
            seq:
              - id: length
                type: u1
              - id: value
                type: str
                size: length
                encoding: ascii
                if: length != 0
        seq:
          - id: number_of_glyphs
            type: u2
          - id: glyph_name_index
            type: u2
            repeat: expr
            repeat-expr: number_of_glyphs
          - id: glyph_names
            type: pascal_string
            repeat: until
            repeat-until: _.length == 0 or _io.eof
    seq:
      - id: format
        type: fixed
      - id: italic_angle
        type: fixed
      - id: underline_position
        type: s2
      - id: underline_thichness
        type: s2
      - id: is_fixed_pitch
        type: u4
      - id: min_mem_type42
        type: u4
      - id: max_mem_type42
        type: u4
      - id: min_mem_type1
        type: u4
      - id: max_mem_type1
        type: u4
      - id: format20
        type: format20
        if: format.major == 2 and format.minor == 0
  name:
    doc: |
      Name table is meant to include human-readable string metadata
      that describes font: name of the font, its styles, copyright &
      trademark notices, vendor and designer info, etc.

      The table includes a list of "name records", each of which
      corresponds to a single metadata entry.
    doc-ref: https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6name.html
    types:
      name_record:
        -webide-representation: "{ascii_value}"
        seq:
          - id: platform_id
            -orig-id: platformID
            type: u2
            enum: platforms
          - id: encoding_id
            -orig-id: platformSpecificID
            type: u2
          - id: language_id
            -orig-id: languageID
            type: u2
          - id: name_id
            -orig-id: nameID
            type: u2
            enum: names
          - id: len_str
            -orig-id: length
            type: u2
          - id: ofs_str
            -orig-id: offset
            type: u2
        instances:
          ascii_value:
            type: str
            size: len_str
            encoding: ascii
            io: _parent._io
            pos: _parent.ofs_strings + ofs_str
            #if: encoding_id == 0
            -webide-parse-mode: eager
          unicode_value:
            type: str
            size: len_str
            encoding: utf-16be
            io: _parent._io
            pos: _parent.ofs_strings + ofs_str
            #if: encoding_id == 1
            -webide-parse-mode: eager
    seq:
      - id: format_selector
        -orig-id: format
        type: u2
      - id: num_name_records
        -orig-id: count
        type: u2
      - id: ofs_strings
        -orig-id: stringOffset
        type: u2
      - id: name_records
        -orig-id: nameRecord
        type: name_record
        repeat: expr
        repeat-expr: num_name_records
    enums:
      platforms:
        0: unicode
        1: macintosh
        2: reserved_2
        3: microsoft
      names:
        0: copyright
        1: font_family
        2: font_subfamily
        3: unique_subfamily_id
        4: full_font_name
        5: name_table_version
        6: postscript_font_name
        7: trademark
        8: manufacturer
        9: designer
        10: description
        11: url_vendor
        12: url_designer
        13: license
        14: url_license
        15: reserved_15
        16: preferred_family
        17: preferred_subfamily
        18: compatible_full_name
        19: sample_text
`
  },
  {
    id: "ksy_allegro_dat",
    name: "Allegro data file",
    category: "Games",
    metadata: {
      isGenerated: true,
      fileExtensions: ["dat"],
      description: "Allegro data file",
      originalCategory: "game",
      filePath: "game/allegro_dat.ksy",
      signature: {"offset":0,"bytes":[65,76,76,46]},
      endian: "be"
    },
    content: `meta:
  id: allegro_dat
  title: Allegro data file
  application: Allegro library (v2.2-v4.4)
  file-extension: dat
  xref:
    justsolve: Allegro_packfile
  license: CC0-1.0
  encoding: UTF-8
  endian: be
doc: |
  Allegro library for C (mostly used for game and multimedia apps
  programming) used its own container file format.

  In general, it allows storage of arbitrary binary data blocks
  bundled together with some simple key-value style metadata
  ("properties") for every block. Allegro also pre-defines some simple
  formats for bitmaps, fonts, MIDI music, sound samples and
  palettes. Allegro library v4.0+ also support LZSS compression.

  This spec applies to Allegro data files for library versions 2.2 up
  to 4.4.
doc-ref: https://liballeg.org/stabledocs/en/datafile.html
seq:
  - id: pack_magic
    type: u4
    enum: pack_enum
  - id: dat_magic
    contents: ALL.
  - id: num_objects
    type: u4
  - id: objects
    type: dat_object
    repeat: expr
    repeat-expr: num_objects
types:
  dat_object:
    seq:
      - id: properties
        type: property
        repeat: until
        repeat-until: 'not _.is_valid'
      - id: len_compressed
        type: s4
      - id: len_uncompressed
        type: s4
      - id: body
        size: len_compressed
        type:
          switch-on: type
          cases:
            '"BMP "': dat_bitmap
            '"RLE "': dat_rle_sprite
            '"FONT"': dat_font
    instances:
      type:
        value: properties.last.magic
  property:
    seq:
      - id: magic
        size: 4
        type: str
      - id: type
        size: 4
        type: str
        if: is_valid
      - id: len_body
        type: u4
        if: is_valid
      - id: body
        size: len_body
        type: str
        if: is_valid
    instances:
      is_valid:
        value: 'magic == "prop"'
  dat_bitmap:
    seq:
      - id: bits_per_pixel
        type: s2
      - id: width
        type: u2
      - id: height
        type: u2
      - id: image
        size-eos: true
  dat_rle_sprite:
    seq:
      - id: bits_per_pixel
        type: s2
      - id: width
        type: u2
      - id: height
        type: u2
      - id: len_image
        type: u4
      - id: image
        size-eos: true
  dat_font:
    seq:
      - id: font_size
        type: s2
      - id: body
        type:
          switch-on: font_size
          cases:
            8: dat_font_8
            16: dat_font_16
#            -1: dat_font_proportional
            0: dat_font_3_9
  dat_font_8:
    doc: |
      Simple monochrome monospaced font, 95 characters, 8x8 px
      characters.
    seq:
      - id: chars
        size: 8
        repeat: expr
        repeat-expr: 95
  dat_font_16:
    doc: |
      Simple monochrome monospaced font, 95 characters, 8x16 px
      characters.
    seq:
      - id: chars
        size: 16
        repeat: expr
        repeat-expr: 95
  dat_font_3_9:
    doc: |
      New bitmap font format introduced since Allegro 3.9: allows
      flexible designation of character ranges, 8-bit colored
      characters, etc.
    seq:
      - id: num_ranges
        type: s2
      - id: ranges
        type: range
        repeat: expr
        repeat-expr: num_ranges
    types:
      range:
        seq:
          - id: mono
            type: u1
          - id: start_char
            type: u4
            doc: First character in range
          - id: end_char
            type: u4
            doc: Last character in range (inclusive)
          - id: chars
            type: font_char
            repeat: expr
            repeat-expr: end_char - start_char + 1
      font_char:
        seq:
          - id: width
            type: u2
          - id: height
            type: u2
          - id: body
            size: width * height
enums:
  pack_enum:
    0x736c682e: unpacked
`
  },
  {
    id: "ksy_doom_wad",
    name: "Doom Wad",
    category: "Games",
    metadata: {
      isGenerated: true,
      fileExtensions: ["wad"],
      description: "",
      originalCategory: "game",
      filePath: "game/doom_wad.ksy",
      endian: "le"
    },
    content: `meta:
  id: doom_wad
  application: id Tech 1
  file-extension: wad
  xref:
    justsolve: Doom_WAD
    mime: application/x-doom
    wikidata: Q1936828
  license: CC0-1.0
  endian: le
seq:
  - id: magic
    type: str
    size: 4
    encoding: ASCII
  - id: num_index_entries
    type: s4
    doc: Number of entries in the lump index
  - id: index_offset
    type: s4
    doc: Offset to the start of the index
types:
  index_entry:
    seq:
      - id: offset
        type: s4
      - id: size
        type: s4
      - id: name
        type: str
        size: 8
        encoding: ASCII
        pad-right: 0
    instances:
      contents:
        io: _root._io
        pos: offset
        size: size
        type:
          switch-on: name
          cases:
            '"THINGS"': things
            '"LINEDEFS"': linedefs
            '"SIDEDEFS"': sidedefs
            '"VERTEXES"': vertexes
            '"BLOCKMAP"': blockmap
            '"SECTORS"': sectors
            '"TEXTURE1"': texture12
            '"TEXTURE2"': texture12
            '"PNAMES"': pnames
  things:
    seq:
      - id: entries
        type: thing
        repeat: eos
  thing:
    seq:
      - id: x
        type: s2
      - id: y
        type: s2
      - id: angle
        type: u2
      - id: type
        type: u2
      - id: flags
        type: u2
  linedefs:
    seq:
      - id: entries
        type: linedef
        repeat: eos
  linedef:
    seq:
      - id: vertex_start_idx
        type: u2
      - id: vertex_end_idx
        type: u2
      - id: flags
        type: u2
      - id: line_type
        type: u2
      - id: sector_tag
        type: u2
      - id: sidedef_right_idx
        type: u2
      - id: sidedef_left_idx
        type: u2
  sidedefs:
    seq:
      - id: entries
        type: sidedef
        repeat: eos
  sidedef:
    seq:
      - id: offset_x
        type: s2
      - id: offset_y
        type: s2
      - id: upper_texture_name
        type: str
        size: 8
        encoding: ASCII
      - id: lower_texture_name
        type: str
        size: 8
        encoding: ASCII
      - id: normal_texture_name
        type: str
        size: 8
        encoding: ASCII
      - id: sector_id
        type: s2
  vertexes:
    seq:
      - id: entries
        type: vertex
        repeat: eos
  vertex:
    seq:
      - id: x
        type: s2
      - id: y
        type: s2
  blockmap:
    seq:
      - id: origin_x
        type: s2
        doc: Grid origin, X coord
      - id: origin_y
        type: s2
        doc: Grid origin, Y coord
      - id: num_cols
        type: s2
        doc: Number of columns
      - id: num_rows
        type: s2
        doc: Number of rows
      - id: linedefs_in_block
        type: blocklist
        repeat: expr
        repeat-expr: num_cols * num_rows
        doc: Lists of linedefs for every block
    types:
      blocklist:
        seq:
          - id: offset
            type: u2
            doc: Offset to the list of linedefs
        instances:
          linedefs:
            pos: offset * 2
            type: s2
            repeat: until
            repeat-until: _ == -1
            doc: List of linedefs found in this block
  sectors:
    seq:
      - id: entries
        type: sector
        repeat: eos
  sector:
    seq:
      - id: floor_z
        type: s2
      - id: ceil_z
        type: s2
      - id: floor_flat
        type: str
        size: 8
        encoding: ASCII
      - id: ceil_flat
        type: str
        size: 8
        encoding: ASCII
      - id: light
        type: s2
        doc: |
          Light level of the sector [0..255]. Original engine uses
          COLORMAP to render lighting, so only 32 actual levels are
          available (i.e. 0..7, 8..15, etc).
      - id: special_type
        type: u2
        enum: special_sector
      - id: tag
        type: u2
        doc: |
          Tag number. When the linedef with the same tag number is
          activated, some effect will be triggered in this sector.
    enums:
      special_sector:
        0: normal
        1: d_light_flicker
        2: d_light_strobe_fast
        3: d_light_strobe_slow
        4: d_light_strobe_hurt
        5: d_damage_hellslime
        7: d_damage_nukage
        8: d_light_glow
        9: secret
        10: d_sector_door_close_in_30
        11: d_damage_end
        12: d_light_strobe_slow_sync
        13: d_light_strobe_fast_sync
        14: d_sector_door_raise_in_5_mins
        15: d_friction_low
        16: d_damage_super_hellslime
        17: d_light_fire_flicker
        18: d_damage_lava_wimpy
        19: d_damage_lava_hefty
        20: d_scroll_east_lava_damage
        21: light_phased
        22: light_sequence_start
        23: light_sequence_special1
        24: light_sequence_special2
  texture12:
    doc: |
      Used for TEXTURE1 and TEXTURE2 lumps, which designate how to
      combine wall patches to make wall textures. This essentially
      provides a very simple form of image compression, allowing
      certain elements ("patches") to be reused / recombined on
      different textures for more variety in the game.
    doc-ref: https://doom.fandom.com/wiki/TEXTURE1_and_TEXTURE2
    seq:
      - id: num_textures
        type: s4
        doc: Number of wall textures
      - id: textures
        type: texture_index
        repeat: expr
        repeat-expr: num_textures
    types:
      texture_index:
        seq:
          - id: offset
            type: s4
        instances:
          body:
            pos: offset
            type: texture_body
      texture_body:
        -orig-id: maptexture_t
        seq:
          - id: name
            type: str
            size: 8
            pad-right: 0
            encoding: ASCII
            doc: Name of a texture, only \`A-Z\`, \`0-9\`, \`[]_-\` are valid
          - id: masked
            type: u4
          - id: width
            type: u2
          - id: height
            type: u2
          - id: column_directory
            type: u4
            doc: Obsolete, ignored by all DOOM versions
          - id: num_patches
            type: u2
            doc: Number of patches that are used in a texture
          - id: patches
            type: patch
            repeat: expr
            repeat-expr: num_patches
      patch:
        -orig-id: mappatch_t
        seq:
          - id: origin_x
            type: s2
            doc: X offset to draw a patch at (pixels from left boundary of a texture)
          - id: origin_y
            type: s2
            doc: Y offset to draw a patch at (pixels from upper boundary of a texture)
          - id: patch_id
            type: u2
            doc: Identifier of a patch (as listed in PNAMES lump) to draw
          - id: step_dir
            type: u2
          - id: colormap
            type: u2
  pnames:
    doc-ref: https://doom.fandom.com/wiki/PNAMES
    seq:
      - id: num_patches
        type: u4
        doc: Number of patches registered in this global game directory
      - id: names
        type: str
        size: 8
        encoding: ASCII
        pad-right: 0
        repeat: expr
        repeat-expr: num_patches
instances:
  index:
    pos: index_offset
    type: index_entry
    repeat: expr
    repeat-expr: num_index_entries
`
  },
  {
    id: "ksy_dune_2_pak",
    name: "Dune 2 Pak",
    category: "Games",
    metadata: {
      isGenerated: true,
      fileExtensions: ["pak"],
      description: "",
      originalCategory: "game",
      filePath: "game/dune_2_pak.ksy",
      endian: "le"
    },
    content: `meta:
  id: dune_2_pak
  application: Dune 2 game engine
  file-extension: pak
  license: CC0-1.0
  ks-version: 0.8
  encoding: ASCII
  endian: le
doc-ref: https://moddingwiki.shikadi.net/wiki/PAK_Format_(Westwood)
seq:
  - id: dir
    size: dir_size
    type: files
instances:
  dir_size:
    pos: 0
    type: u4
types:
  files:
    seq:
      - id: files
        type: file(_index)
        repeat: eos
  file:
    params:
      - id: idx
        type: u4
    seq:
      - id: ofs
        type: u4
      - id: file_name
        type: strz
        if: ofs != 0
    instances:
      next_ofs0:
        value: _root.dir.files[idx + 1].ofs
        if: ofs != 0
      next_ofs:
        value: 'next_ofs0 == 0 ? _root._io.size : next_ofs0'
        if: ofs != 0
      body:
        io: _root._io
        pos: ofs
        size: next_ofs - ofs
        if: ofs != 0
`
  },
  {
    id: "ksy_fallout2_dat",
    name: "Fallout2 Dat",
    category: "Games",
    metadata: {
      isGenerated: true,
      fileExtensions: ["dat"],
      description: "",
      originalCategory: "game",
      filePath: "game/fallout2_dat.ksy",
      endian: "le"
    },
    content: `meta:
  id: fallout2_dat
  application: Fallout 2
  file-extension: dat
  xref:
    wikidata: Q32097899
  license: CC0-1.0
  endian: le
types:
  pstr:
    seq:
      - id: size
        type: u4
      - id: str
        type: str
        size: size
        encoding: ASCII
  footer:
    seq:
      - id: index_size
        type: u4
      - id: file_size
        type: u4
  index:
    seq:
      - id: file_count
        type: u4
      - id: files
        type: file
        repeat: expr
        repeat-expr: file_count
  file:
    seq:
      - id: name
        type: pstr
      - id: flags
        type: u1
        enum: compression
      - id: size_unpacked
        type: u4
      - id: size_packed
        type: u4
      - id: offset
        type: u4
    instances:
      contents_raw:
        io: _root._io
        pos: offset
        size: size_unpacked
        if: flags == compression::none
      contents_zlib:
        io: _root._io
        pos: offset
        size: size_packed
        process: zlib
        if: flags == compression::zlib
      contents:
        value: 'flags == compression::zlib ? contents_zlib : contents_raw'
        if: flags == compression::zlib or flags == compression::none
instances:
  footer:
    pos: _io.size - 8
    type: footer
  index:
    pos: _io.size - 8 - footer.index_size
    type: index
enums:
  compression:
    0: none
    1: zlib
`
  },
  {
    id: "ksy_fallout_dat",
    name: "Fallout Dat",
    category: "Games",
    metadata: {
      isGenerated: true,
      fileExtensions: ["dat"],
      description: "",
      originalCategory: "game",
      filePath: "game/fallout_dat.ksy",
      endian: "be"
    },
    content: `meta:
  id: fallout_dat
  application: Fallout
  file-extension: dat
  xref:
    wikidata: Q32097740
  license: CC0-1.0
  endian: be
seq:
  - id: folder_count
    type: u4
  - id: unknown1
    type: u4
  - id: unknown2
    type: u4
  - id: timestamp
    type: u4
  - id: folder_names
    type: pstr
    repeat: expr
    repeat-expr: folder_count
  - id: folders
    type: folder
    repeat: expr
    repeat-expr: folder_count
types:
  pstr:
    seq:
      - id: size
        type: u1
      - id: str
        type: str
        size: size
        encoding: ASCII
  folder:
    seq:
      - id: file_count
        type: u4
      - id: unknown
        type: u4
      - id: flags
        type: u4
      - id: timestamp
        type: u4
      - id: files
        type: file
        repeat: expr
        repeat-expr: file_count
  file:
    seq:
      - id: name
        type: pstr
      - id: flags
        type: u4
        enum: compression
      - id: offset
        type: u4
      - id: size_unpacked
        type: u4
      - id: size_packed
        type: u4
    instances:
      contents:
        io: _root._io
        pos: offset
        size: "(flags == compression::none) ? size_unpacked : size_packed"
enums:
  compression:
    32: none
    64: lzss
`
  },
  {
    id: "ksy_ftl_dat",
    name: "Ftl Dat",
    category: "Games",
    metadata: {
      isGenerated: true,
      fileExtensions: ["dat"],
      description: "",
      originalCategory: "game",
      filePath: "game/ftl_dat.ksy",
      endian: "le"
    },
    content: `meta:
  id: ftl_dat
  application: Faster Than Light (FTL)
  file-extension: dat
  license: CC0-1.0
  endian: le
seq:
  - id: num_files
    type: u4
    doc: Number of files in the archive
  - id: files
    type: file
    repeat: expr
    repeat-expr: num_files
types:
  file:
    seq:
      - id: ofs_meta
        type: u4
    instances:
      meta:
        pos: ofs_meta
        type: meta
        if: ofs_meta != 0
  meta:
    seq:
      - id: len_file
        type: u4
      - id: len_filename
        type: u4
      - id: filename
        type: str
        size: len_filename
        encoding: UTF-8
      - id: body
        size: len_file
`
  },
  {
    id: "ksy_gran_turismo_vol",
    name: "Gran Turismo File System (GTFS)",
    category: "Games",
    metadata: {
      isGenerated: true,
      fileExtensions: ["vol"],
      description: "Gran Turismo File System (GTFS)",
      originalCategory: "game",
      filePath: "game/gran_turismo_vol.ksy",
      signature: {"offset":0,"bytes":[null,0,0,0,0]},
      endian: "le"
    },
    content: `meta:
  id: gran_turismo_vol
  title: Gran Turismo File System (GTFS)
  file-extension: vol
  xref:
    wikidata: Q32096599
  license: CC0-1.0
  endian: le
seq:
  - id: magic
    contents: ["GTFS", 0, 0, 0, 0]
  - id: num_files
    type: u2
  - id: num_entries
    type: u2
  - id: reserved
    contents: [0, 0, 0, 0]
  - id: offsets
    type: u4
    repeat: expr
    repeat-expr: num_files
instances:
  ofs_dir:
    value: offsets[1]
  files:
    pos: ofs_dir & 0xFFFFF800
    type: file_info
    repeat: expr
    repeat-expr: _root.num_entries
types:
  file_info:
    seq:
      - id: timestamp
        type: u4
      - id: offset_idx
        type: u2
      - id: flags
        type: u1
      - id: name
        type: str
        encoding: ASCII
        size: 25
        pad-right: 0
        terminator: 0
    instances:
      size:
        value: '(_root.offsets[offset_idx + 1] & 0xFFFFF800) - _root.offsets[offset_idx]'
      body:
        pos: _root.offsets[offset_idx] & 0xFFFFF800
        size: size
        if: not is_dir
      is_dir:
        value: 'flags & 1 != 0'
      is_last_entry:
        value: 'flags & 0x80 != 0'
`
  },
  {
    id: "ksy_heaps_pak",
    name: "Heaps Pak",
    category: "Games",
    metadata: {
      isGenerated: true,
      fileExtensions: ["pak"],
      description: "",
      originalCategory: "game",
      filePath: "game/heaps_pak.ksy",
      endian: "le"
    },
    content: `meta:
  id: heaps_pak
  application: Games based on Haxe Game Framework "Heaps" (e.g. Dead Cells)
  file-extension: pak
  license: MIT
  encoding: UTF-8
  endian: le
doc-ref: 'https://github.com/HeapsIO/heaps/blob/2bbc2b386952dfd8856c04a854bb706a52cb4b58/hxd/fmt/pak/Reader.hx'
seq:
  - id: header
    type: header
types:
  header:
    seq:
      - id: magic1
        contents: 'PAK'
      - id: version
        type: u1
      - id: len_header
        type: u4
      - id: len_data
        type: u4
      - id: root_entry
        type: entry
        size: len_header - 16
      - id: magic2
        contents: 'DATA'
    types:
      entry:
        doc-ref: 'https://github.com/HeapsIO/heaps/blob/2bbc2b386952dfd8856c04a854bb706a52cb4b58/hxd/fmt/pak/Data.hx'
        seq:
          - id: len_name
            type: u1
          - id: name
            type: str
            size: len_name
          - id: flags
            type: flags
          - id: body
            type:
              switch-on: flags.is_dir
              cases:
                true : dir
                false : file
        types:
          flags:
            seq:
              - id: unused
                type: b7
              - id: is_dir
                type: b1
      file:
        seq:
          - id: ofs_data
            type: u4
          - id: len_data
            type: u4
          # Adler32 checksum
          - id: checksum
            size: 4
        instances:
          data:
            io: _root._io
            pos: _root.header.len_header + ofs_data
            size: len_data
      dir:
        seq:
          - id: num_entries
            type: u4
          - id: entries
            type: entry
            repeat: expr
            repeat-expr: num_entries
`
  },
  {
    id: "ksy_heroes_of_might_and_magic_agg",
    name: "Heroes Of Might And Magic Agg",
    category: "Games",
    metadata: {
      isGenerated: true,
      fileExtensions: ["agg"],
      description: "",
      originalCategory: "game",
      filePath: "game/heroes_of_might_and_magic_agg.ksy",
      endian: "le"
    },
    content: `meta:
  id: heroes_of_might_and_magic_agg
  application: Heroes of Might and Magic
  file-extension: agg
  license: CC0-1.0
  endian: le
doc-ref: https://web.archive.org/web/20170215190034/http://rewiki.regengedanken.de/wiki/.AGG_(Heroes_of_Might_and_Magic)
seq:
  - id: num_files
    type: u2
  - id: entries
    type: entry
    repeat: expr
    repeat-expr: num_files
types:
  entry:
    seq:
      - id: hash
        type: u2
      - id: offset
        type: u4
      - id: size
        type: u4
      - id: size2
        type: u4
    instances:
      body:
        pos: offset
        size: size
  filename:
    seq:
      - id: str
        type: strz
        encoding: ASCII
instances:
  filenames:
    pos: entries.last.offset + entries.last.size
    size: 15
    type: filename
    repeat: expr
    repeat-expr: num_files
`
  },
  {
    id: "ksy_heroes_of_might_and_magic_bmp",
    name: "Heroes Of Might And Magic Bmp",
    category: "Games",
    metadata: {
      isGenerated: true,
      fileExtensions: ["bmp"],
      description: "",
      originalCategory: "game",
      filePath: "game/heroes_of_might_and_magic_bmp.ksy",
      endian: "le"
    },
    content: `meta:
  id: heroes_of_might_and_magic_bmp
  application: Heroes of Might and Magic
  file-extension: bmp
  license: CC0-1.0
  endian: le
seq:
  - id: magic
    type: u2
  - id: width
    type: u2
  - id: height
    type: u2
  - id: data
    size: 'width * height'
`
  },
  {
    id: "ksy_minecraft_nbt",
    name: "Minecraft NBT (Named Binary Tag)",
    category: "Games",
    metadata: {
      isGenerated: true,
      fileExtensions: ["nbt","dat","schematic","schem"],
      description: "Minecraft NBT (Named Binary Tag)",
      originalCategory: "game",
      filePath: "game/minecraft_nbt.ksy",
      endian: "be"
    },
    content: `meta:
  id: minecraft_nbt
  title: Minecraft NBT (Named Binary Tag)
  application: Minecraft
  file-extension:
    - nbt
    - dat
    - schematic # https://minecraft.wiki/w/Schematic_file_format
    - schem
  xref:
    justsolve: Minecraft_NBT_format
  tags:
    - serialization
  license: CC0-1.0
  encoding: utf-8
  endian: be
doc: |
  A structured binary format native to Minecraft for saving game data and transferring
  it over the network (in multiplayer), such as player data
  ([\`<player>.dat\`](https://minecraft.wiki/w/Player.dat_format); contains
  e.g. player's inventory and location), saved worlds
  ([\`level.dat\`](
    https://minecraft.wiki/w/Java_Edition_level_format#level.dat_format
  ) and [Chunk format](https://minecraft.wiki/w/Chunk_format#NBT_structure)),
  list of saved multiplayer servers
  ([\`servers.dat\`](https://minecraft.wiki/w/Servers.dat_format)) and so on -
  see <https://minecraft.wiki/w/NBT_format#Uses>.

  The entire file should be _gzip_-compressed (in accordance with the original
  specification [NBT.txt](
    https://web.archive.org/web/20110723210920/https://www.minecraft.net/docs/NBT.txt
  ) by Notch), but can also be compressed with _zlib_ or uncompressed.

  This spec can only handle uncompressed NBT data, so be sure to first detect
  what type of data you are dealing with. You can use the Unix \`file\` command
  to do this (\`file-5.20\` or later is required; older versions do not recognize
  _zlib_-compressed data and return \`application/octet-stream\` instead):

  \`\`\`shell
  file --brief --mime-type input-unknown.nbt
  \`\`\`

  If it says:

    * \`application/x-gzip\` or \`application/gzip\` (since \`file-5.37\`), you can decompress it by
      * \`gunzip -c input-gzip.nbt > output.nbt\` or
      * \`python3 -c "import sys, gzip; sys.stdout.buffer.write(
        gzip.decompress(sys.stdin.buffer.read()) )" < input-gzip.nbt > output.nbt\`
    * \`application/zlib\`, you can use
      * \`openssl zlib -d -in input-zlib.nbt -out output.nbt\` (does not work on most systems)
      * \`python3 -c "import sys, zlib; sys.stdout.buffer.write(
        zlib.decompress(sys.stdin.buffer.read()) )" < input-zlib.nbt > output.nbt\`
    * something else (especially \`image/x-pcx\` and \`application/octet-stream\`),
      it is most likely already uncompressed.

  The file \`output.nbt\` generated by one of the above commands can already be
  processed with this Kaitai Struct specification.

  This spec **only** implements the Java edition format. There is also
  a [Bedrock edition](https://wiki.vg/NBT#Bedrock_edition) NBT format,
  which uses little-endian encoding and has a few other differences, but it isn't
  as popular as the Java edition format.

  **Implementation note:** strings in \`TAG_String\` are incorrectly decoded with
  standard UTF-8, while they are encoded in [**Modified UTF-8**](
    https://docs.oracle.com/javase/8/docs/api/java/io/DataInput.html#modified-utf-8
  ) (MUTF-8). That's because MUTF-8 is not supported natively by most target
  languages, and thus one must use external libraries to achieve a fully-compliant
  decoder. But decoding in standard UTF-8 is still better than nothing, and
  it usually works fine.

  All Unicode code points with incompatible representations in MUTF-8 and UTF-8 are
  U+0000 (_NUL_), U+D800-U+DFFF (_High_ and _Low Surrogates_) and U+10000-U+10FFFF
  (all _Supplementary_ Planes; includes e.g. emoticons, pictograms).
  A _MUTF-8_-encoded string containing these code points cannot be successfully
  decoded as UTF-8. The behavior in this case depends on the target language -
  usually an exception is thrown, or the bytes that are not valid UTF-8
  are replaced or ignored.

  **Sample files:**

    * <https://wiki.vg/NBT#Download>
    * <https://github.com/twoolie/NBT/blob/f9e892e/tests/world_test/data/scoreboard.dat>
    * <https://github.com/chmod222/cNBT/tree/3f74b69/testdata>
    * <https://github.com/PistonDevelopers/hematite_nbt/tree/0b85f89/tests>
doc-ref:
  - https://wiki.vg/NBT
  - https://web.archive.org/web/20110723210920/https://www.minecraft.net/docs/NBT.txt
  - https://minecraft.wiki/w/NBT_format
seq:
  - id: root_check
    size: 0
    if: root_type == tag::end and false # force evaluation of root_type's \`valid\` check
    # valid:
    #   expr: root_type == tag::compound # as of KS 0.9 does not compile for Go and Lua
  - id: root
    type: named_tag
instances:
  root_type:
    pos: 0
    type: u1
    enum: tag
    valid: tag::compound
types:
  named_tag:
    -webide-representation: 'TAG_{type}("{name.data}"): {payload:dec}'
    seq:
      - id: type
        type: u1
        enum: tag
      - id: name
        type: tag_string
        if: not is_tag_end
      - id: payload
        type:
          switch-on: type
          cases:
            tag::byte: s1
            tag::short: s2
            tag::int: s4
            tag::long: s8
            tag::float: f4
            tag::double: f8
            tag::byte_array: tag_byte_array
            tag::string: tag_string
            tag::list: tag_list
            tag::compound: tag_compound
            tag::int_array: tag_int_array
            tag::long_array: tag_long_array
        if: not is_tag_end
    instances:
      is_tag_end:
        value: type == tag::end
  tag_byte_array:
    -webide-representation: '{len_data:dec} bytes'
    seq:
      - id: len_data
        type: s4
      - id: data
        size: len_data
  tag_string:
    -webide-representation: '{data}'
    seq:
      - id: len_data
        type: u2
        doc: unsigned according to <https://wiki.vg/NBT#Specification>
      - id: data
        size: len_data
        type: str
  tag_list:
    -webide-representation: '{num_tags:dec} entries of type TAG_{tags_type}'
    seq:
      - id: tags_type
        type: u1
        enum: tag
      - id: num_tags
        type: s4
      - id: tags
        type:
          switch-on: tags_type
          cases:
            tag::byte: s1
            tag::short: s2
            tag::int: s4
            tag::long: s8
            tag::float: f4
            tag::double: f8
            tag::byte_array: tag_byte_array
            tag::string: tag_string
            tag::list: tag_list
            tag::compound: tag_compound
            tag::int_array: tag_int_array
            tag::long_array: tag_long_array
        repeat: expr
        repeat-expr: num_tags
  tag_compound:
    -webide-representation: '{dump_num_tags:dec} entries'
    seq:
      - id: tags
        type: named_tag
        repeat: until
        repeat-until: _.is_tag_end
    instances:
      dump_num_tags:
        value: 'tags.size - ((tags.size >= 1 and tags.last.is_tag_end) ? 1 : 0)'
  tag_int_array:
    -webide-representation: '{num_tags:dec} entries of type TAG_{tags_type}'
    seq:
      - id: num_tags
        type: s4
      - id: tags
        type: s4
        repeat: expr
        repeat-expr: num_tags
    instances:
      tags_type:
        value: tag::int
  tag_long_array:
    -webide-representation: '{num_tags:dec} entries of type TAG_{tags_type}'
    seq:
      - id: num_tags
        type: s4
      - id: tags
        type: s8
        repeat: expr
        repeat-expr: num_tags
    instances:
      tags_type:
        value: tag::long
enums:
  tag:
    0:
      id: end
      -affected-by: 90
      doc: |
        As of KSC 0.9, this enum key causes a syntax error in Lua. See
        <https://github.com/kaitai-io/kaitai_struct/issues/90#issuecomment-766440975>
        for more info.
    1: byte
    2: short
    3: int
    4: long
    5: float
    6: double
    7: byte_array
    8: string
    9: list
    10: compound
    11: int_array
    12: long_array
`
  },
  {
    id: "ksy_quake2_md2",
    name: "Quake II player model (version 8)",
    category: "Games",
    metadata: {
      isGenerated: true,
      fileExtensions: ["md2"],
      description: "Quake II player model (version 8)",
      originalCategory: "game",
      filePath: "game/quake2_md2.ksy",
      signature: {"offset":0,"bytes":[73,68,80,50]},
      endian: "le"
    },
    content: `meta:
  id: quake2_md2
  title: Quake II player model (version 8)
  application: Quake II
  file-extension: md2
  xref:
    justsolve: MD2
  tags:
    - 3d
    - game
  license: CC0-1.0
  endian: le
doc: |
  The MD2 format is used for 3D animated models in id Sofware's Quake II.

  A model consists of named \`frames\`, each with the same number of \`vertices\`
  (\`vertices_per_frame\`). Each such vertex has a \`position\` and \`normal\` in
  model space. Each vertex has the same topological "meaning" across frames, in
  terms of triangle and texture info; it just varies in position and normal for
  animation purposes.

  How the vertices form triangles is defined via disjoint \`triangles\` or via
  \`gl_cmds\` (which allows strip and fan topology). Each triangle contains three
  \`vertex_indices\` into frame vertices, and three \`tex_point_indices\` into
  global \`tex_coords\`. Each texture point has pixel coords \`s_px\` and \`t_px\`
  ranging from 0 to \`skin_{width,height}_px\` respectively, along with
  \`{s,t}_normalized\` ranging from 0 to 1 for your convenience.

  A GL command has a \`primitive\` type (\`TRIANGLE_FAN\` or \`TRIANGLE_STRIP\`) along
  with some \`vertices\`. Each GL vertex contains \`tex_coords_normalized\` from 0
  to 1, and a \`vertex_index\` into frame vertices.

  A model may also contain \`skins\`, which are just file paths to PCX images.
  However, this is empty for many models, in which case it is up to the client
  (e.g. Q2PRO) to offer skins some other way (e.g. by similar filename in the
  current directory).

  There are 198 \`frames\` in total, partitioned into a fixed set of ranges used
  for different animations. Each frame has a standard \`name\` for humans, but the
  client just uses their index and the name can be arbitrary. The name, start
  frame index and frame count of each animation can be looked up in the arrays
  \`anim_names\`, \`anim_start_indices\`, and \`anim_num_frames\` respectively. This
  information is summarized in the following table:

  \`\`\`
  |   INDEX  |    NAME | SUFFIX | NOTES                                                  |
  |:--------:|--------:|:-------|:-------------------------------------------------------|
  |    0-39  |   stand | 01-40  | Idle animation                                         |
  |   40-45  |     run | 1-6    | Full run cycle                                         |
  |   46-53  |  attack | 1-8    | Shoot, reload; some weapons just repeat 1st few frames |
  |   54-57  |   pain1 | 01-04  | Q2Pro also uses this for switching weapons             |
  |   58-61  |   pain2 | 01-04  |                                                        |
  |   62-65  |   pain3 | 01-04  |                                                        |
  |   66-71  |    jump | 1-6    | Starts at height and lands on feet                     |
  |   72-83  |    flip | 01-12  | Flipoff, i.e. middle finger                            |
  |   84-94  |  salute | 01-11  |                                                        |
  |   95-111 |   taunt | 01-17  |                                                        |
  |  112-122 |    wave | 01-11  | Q2Pro plays this backwards for a handgrenade toss      |
  |  123-134 |   point | 01-12  |                                                        |
  |  135-153 |  crstnd | 01-19  | Idle while crouching                                   |
  |  154-159 |  crwalk | 1-6    |                                                        |
  |  160-168 | crattak | 1-9    |                                                        |
  |  169-172 |  crpain | 1-4    |                                                        |
  |  173-177 | crdeath | 1-5    |                                                        |
  |  178-183 |  death1 | 01-06  |                                                        |
  |  184-189 |  death2 | 01-06  |                                                        |
  |  190-197 |  death3 | 01-08  |                                                        |
  \`\`\`

  The above are filled in for player models; for the separate weapon models,
  the final frame is 173 "g_view" (unknown purpose) since weapons aren't shown
  during death animations. \`a_grenades.md2\`, the handgrenade weapon model, is
  the same except that the \`wave\` frames are blank (according to the default
  female model files). This is likely due to its dual use as a grenade throw
  animation where this model must leave the player's model.
doc-ref:
  - https://icculus.org/~phaethon/q3a/formats/md2-schoenblum.html
  - http://tfc.duke.free.fr/coding/md2-specs-en.html
  - http://tastyspleen.net/~panjoo/downloads/quake2_model_frames.html
  - http://wiki.polycount.com/wiki/OldSiteResourcesQuake2FramesList
seq:
  - id: magic
    contents: IDP2
  - id: version
    type: u4
    valid: 8
  - id: skin_width_px
    type: u4
  - id: skin_height_px
    type: u4
  - id: bytes_per_frame
    type: u4
  - id: num_skins
    type: u4
  - id: vertices_per_frame
    type: u4
  - id: num_tex_coords
    type: u4
  - id: num_triangles
    type: u4
  - id: num_gl_cmds
    type: u4
  - id: num_frames
    type: u4
  - id: ofs_skins
    type: u4
  - id: ofs_tex_coords
    type: u4
  - id: ofs_triangles
    type: u4
  - id: ofs_frames
    type: u4
  - id: ofs_gl_cmds
    type: u4
  - id: ofs_eof
    type: u4
instances:
  skins:
    pos: ofs_skins
    size: 64
    type: strz
    encoding: ascii
    repeat: expr
    repeat-expr: num_skins
  tex_coords:
    pos: ofs_tex_coords
    type: tex_point
    repeat: expr
    repeat-expr: num_tex_coords
  triangles:
    pos: ofs_triangles
    type: triangle
    repeat: expr
    repeat-expr: num_triangles
  frames:
    pos: ofs_frames
    size: bytes_per_frame
    type: frame
    repeat: expr
    repeat-expr: num_frames
  gl_cmds:
    pos: ofs_gl_cmds
    # in http://tfc.duke.free.fr/coding/src/md2.c initially read as \`int *\`
    # (a pool of \`int\`s) => hence \`s4\`
    size: 4 * num_gl_cmds # FIXME: replace \`4\` with \`sizeof<s4>\` once \`sizeof\` is implemented for GraphViz
    type: gl_cmds_list
  anim_names:
    value: |
      ['stand', 'run', 'attack', 'pain1', 'pain2', 'pain3', 'jump', 'flip',
      'salute', 'taunt', 'wave', 'point', 'crstnd', 'crwalk', 'crattak',
      'crpain', 'crdeath', 'death1', 'death2', 'death3']
  anim_start_indices:
    value: |
      [0, 40, 46, 54, 58, 62, 66, 72,
      84, 95, 112, 123, 135, 154, 160,
      169, 173, 178, 184, 190]
  anim_num_frames:
    value: |
      [40, 6, 8, 4, 4, 4, 6, 12,
      11, 17, 11, 12, 19, 6, 9,
      4, 5, 6, 6, 8]
  anorms_table:
    doc-ref: |
      https://github.com/skullernet/q2pro/blob/f4faabd/src/common/math.c#L80
      from Quake anorms.h
    value: |
      [
        [-0.525731, 0.000000, 0.850651],
        [-0.442863, 0.238856, 0.864188],
        [-0.295242, 0.000000, 0.955423],
        [-0.309017, 0.500000, 0.809017],
        [-0.162460, 0.262866, 0.951056],
        [0.000000, 0.000000, 1.000000],
        [0.000000, 0.850651, 0.525731],
        [-0.147621, 0.716567, 0.681718],
        [0.147621, 0.716567, 0.681718],
        [0.000000, 0.525731, 0.850651],
        [0.309017, 0.500000, 0.809017],
        [0.525731, 0.000000, 0.850651],
        [0.295242, 0.000000, 0.955423],
        [0.442863, 0.238856, 0.864188],
        [0.162460, 0.262866, 0.951056],
        [-0.681718, 0.147621, 0.716567],
        [-0.809017, 0.309017, 0.500000],
        [-0.587785, 0.425325, 0.688191],
        [-0.850651, 0.525731, 0.000000],
        [-0.864188, 0.442863, 0.238856],
        [-0.716567, 0.681718, 0.147621],
        [-0.688191, 0.587785, 0.425325],
        [-0.500000, 0.809017, 0.309017],
        [-0.238856, 0.864188, 0.442863],
        [-0.425325, 0.688191, 0.587785],
        [-0.716567, 0.681718, -0.147621],
        [-0.500000, 0.809017, -0.309017],
        [-0.525731, 0.850651, 0.000000],
        [0.000000, 0.850651, -0.525731],
        [-0.238856, 0.864188, -0.442863],
        [0.000000, 0.955423, -0.295242],
        [-0.262866, 0.951056, -0.162460],
        [0.000000, 1.000000, 0.000000],
        [0.000000, 0.955423, 0.295242],
        [-0.262866, 0.951056, 0.162460],
        [0.238856, 0.864188, 0.442863],
        [0.262866, 0.951056, 0.162460],
        [0.500000, 0.809017, 0.309017],
        [0.238856, 0.864188, -0.442863],
        [0.262866, 0.951056, -0.162460],
        [0.500000, 0.809017, -0.309017],
        [0.850651, 0.525731, 0.000000],
        [0.716567, 0.681718, 0.147621],
        [0.716567, 0.681718, -0.147621],
        [0.525731, 0.850651, 0.000000],
        [0.425325, 0.688191, 0.587785],
        [0.864188, 0.442863, 0.238856],
        [0.688191, 0.587785, 0.425325],
        [0.809017, 0.309017, 0.500000],
        [0.681718, 0.147621, 0.716567],
        [0.587785, 0.425325, 0.688191],
        [0.955423, 0.295242, 0.000000],
        [1.000000, 0.000000, 0.000000],
        [0.951056, 0.162460, 0.262866],
        [0.850651, -0.525731, 0.000000],
        [0.955423, -0.295242, 0.000000],
        [0.864188, -0.442863, 0.238856],
        [0.951056, -0.162460, 0.262866],
        [0.809017, -0.309017, 0.500000],
        [0.681718, -0.147621, 0.716567],
        [0.850651, 0.000000, 0.525731],
        [0.864188, 0.442863, -0.238856],
        [0.809017, 0.309017, -0.500000],
        [0.951056, 0.162460, -0.262866],
        [0.525731, 0.000000, -0.850651],
        [0.681718, 0.147621, -0.716567],
        [0.681718, -0.147621, -0.716567],
        [0.850651, 0.000000, -0.525731],
        [0.809017, -0.309017, -0.500000],
        [0.864188, -0.442863, -0.238856],
        [0.951056, -0.162460, -0.262866],
        [0.147621, 0.716567, -0.681718],
        [0.309017, 0.500000, -0.809017],
        [0.425325, 0.688191, -0.587785],
        [0.442863, 0.238856, -0.864188],
        [0.587785, 0.425325, -0.688191],
        [0.688191, 0.587785, -0.425325],
        [-0.147621, 0.716567, -0.681718],
        [-0.309017, 0.500000, -0.809017],
        [0.000000, 0.525731, -0.850651],
        [-0.525731, 0.000000, -0.850651],
        [-0.442863, 0.238856, -0.864188],
        [-0.295242, 0.000000, -0.955423],
        [-0.162460, 0.262866, -0.951056],
        [0.000000, 0.000000, -1.000000],
        [0.295242, 0.000000, -0.955423],
        [0.162460, 0.262866, -0.951056],
        [-0.442863, -0.238856, -0.864188],
        [-0.309017, -0.500000, -0.809017],
        [-0.162460, -0.262866, -0.951056],
        [0.000000, -0.850651, -0.525731],
        [-0.147621, -0.716567, -0.681718],
        [0.147621, -0.716567, -0.681718],
        [0.000000, -0.525731, -0.850651],
        [0.309017, -0.500000, -0.809017],
        [0.442863, -0.238856, -0.864188],
        [0.162460, -0.262866, -0.951056],
        [0.238856, -0.864188, -0.442863],
        [0.500000, -0.809017, -0.309017],
        [0.425325, -0.688191, -0.587785],
        [0.716567, -0.681718, -0.147621],
        [0.688191, -0.587785, -0.425325],
        [0.587785, -0.425325, -0.688191],
        [0.000000, -0.955423, -0.295242],
        [0.000000, -1.000000, 0.000000],
        [0.262866, -0.951056, -0.162460],
        [0.000000, -0.850651, 0.525731],
        [0.000000, -0.955423, 0.295242],
        [0.238856, -0.864188, 0.442863],
        [0.262866, -0.951056, 0.162460],
        [0.500000, -0.809017, 0.309017],
        [0.716567, -0.681718, 0.147621],
        [0.525731, -0.850651, 0.000000],
        [-0.238856, -0.864188, -0.442863],
        [-0.500000, -0.809017, -0.309017],
        [-0.262866, -0.951056, -0.162460],
        [-0.850651, -0.525731, 0.000000],
        [-0.716567, -0.681718, -0.147621],
        [-0.716567, -0.681718, 0.147621],
        [-0.525731, -0.850651, 0.000000],
        [-0.500000, -0.809017, 0.309017],
        [-0.238856, -0.864188, 0.442863],
        [-0.262866, -0.951056, 0.162460],
        [-0.864188, -0.442863, 0.238856],
        [-0.809017, -0.309017, 0.500000],
        [-0.688191, -0.587785, 0.425325],
        [-0.681718, -0.147621, 0.716567],
        [-0.442863, -0.238856, 0.864188],
        [-0.587785, -0.425325, 0.688191],
        [-0.309017, -0.500000, 0.809017],
        [-0.147621, -0.716567, 0.681718],
        [-0.425325, -0.688191, 0.587785],
        [-0.162460, -0.262866, 0.951056],
        [0.442863, -0.238856, 0.864188],
        [0.162460, -0.262866, 0.951056],
        [0.309017, -0.500000, 0.809017],
        [0.147621, -0.716567, 0.681718],
        [0.000000, -0.525731, 0.850651],
        [0.425325, -0.688191, 0.587785],
        [0.587785, -0.425325, 0.688191],
        [0.688191, -0.587785, 0.425325],
        [-0.955423, 0.295242, 0.000000],
        [-0.951056, 0.162460, 0.262866],
        [-1.000000, 0.000000, 0.000000],
        [-0.850651, 0.000000, 0.525731],
        [-0.955423, -0.295242, 0.000000],
        [-0.951056, -0.162460, 0.262866],
        [-0.864188, 0.442863, -0.238856],
        [-0.951056, 0.162460, -0.262866],
        [-0.809017, 0.309017, -0.500000],
        [-0.864188, -0.442863, -0.238856],
        [-0.951056, -0.162460, -0.262866],
        [-0.809017, -0.309017, -0.500000],
        [-0.681718, 0.147621, -0.716567],
        [-0.681718, -0.147621, -0.716567],
        [-0.850651, 0.000000, -0.525731],
        [-0.688191, 0.587785, -0.425325],
        [-0.587785, 0.425325, -0.688191],
        [-0.425325, 0.688191, -0.587785],
        [-0.425325, -0.688191, -0.587785],
        [-0.587785, -0.425325, -0.688191],
        [-0.688191, -0.587785, -0.425325],
      ]
types:
  tex_point:
    seq:
      - id: s_px
        type: u2
      - id: t_px
        type: u2
    instances:
      s_normalized:
        value: (s_px + 0.0) / _root.skin_width_px
      t_normalized:
        value: (t_px + 0.0) / _root.skin_height_px
  triangle:
    seq:
      - id: vertex_indices
        type: u2
        repeat: expr
        repeat-expr: 3
        doc: indices to \`_root.frames[i].vertices\` (for each frame with index \`i\`)
      - id: tex_point_indices
        type: u2
        repeat: expr
        repeat-expr: 3
        doc: indices to \`_root.tex_coords\`
  vec3f:
    seq:
      - id: x
        type: f4
      - id: y
        type: f4
      - id: z
        type: f4
  compressed_vec:
    seq:
      - id: x_compressed
        type: u1
      - id: y_compressed
        type: u1
      - id: z_compressed
        type: u1
    instances:
      x:
        value: x_compressed * _parent._parent.scale.x + _parent._parent.translate.x
      y:
        value: y_compressed * _parent._parent.scale.y + _parent._parent.translate.y
      z:
        value: z_compressed * _parent._parent.scale.z + _parent._parent.translate.z
  vertex:
    seq:
      - id: position
        type: compressed_vec
      - id: normal_index
        type: u1
    instances:
      normal:
        value: _root.anorms_table[normal_index]
  frame:
    seq:
      - id: scale
        type: vec3f
      - id: translate
        type: vec3f
      - id: name
        size: 16
        type: strz
        encoding: ascii
      - id: vertices
        type: vertex
        repeat: expr
        repeat-expr: _root.vertices_per_frame
  gl_cmds_list:
    seq:
      - id: items
        type: gl_cmd
        repeat: until
        repeat-until: _.cmd_num_vertices == 0
        if: not _io.eof
  gl_cmd:
    seq:
      - id: cmd_num_vertices
        type: s4
      - id: vertices
        type: gl_vertex
        repeat: expr
        repeat-expr: num_vertices
    instances:
      num_vertices:
        value: 'cmd_num_vertices < 0 ? -cmd_num_vertices : cmd_num_vertices'
      primitive:
        value: 'cmd_num_vertices < 0 ? gl_primitive::triangle_fan : gl_primitive::triangle_strip'
  gl_vertex:
    seq:
      - id: tex_coords_normalized
        type: f4
        repeat: expr
        repeat-expr: 2
      - id: vertex_index
        type: u4
        doc: index to \`_root.frames[i].vertices\` (for each frame with index \`i\`)
enums:
  gl_primitive:
    0: triangle_strip
    1: triangle_fan
`
  },
  {
    id: "ksy_quake_mdl",
    name: "Quake 1 (idtech2) model format (MDL version 6)",
    category: "Games",
    metadata: {
      isGenerated: true,
      fileExtensions: ["mdl"],
      description: "Quake 1 (idtech2) model format (MDL version 6)",
      originalCategory: "game",
      filePath: "game/quake_mdl.ksy",
      endian: "le"
    },
    content: `meta:
  id: quake_mdl
  title: Quake 1 (idtech2) model format (MDL version 6)
  application: Quake 1 (idtech2)
  file-extension: mdl
  tags:
    - 3d
    - game
  license: CC0-1.0
  ks-version: '0.10'
  endian: le
doc: |
  Quake 1 model format is used to store 3D models completely with
  textures and animations used in the game. Quake 1 engine
  (retroactively named "idtech2") is a popular 3D engine first used
  for Quake game by id Software in 1996.

  Model is constructed traditionally from vertices in 3D space, faces
  which connect vertices, textures ("skins", i.e. 2D bitmaps) and
  texture UV mapping information. As opposed to more modern,
  bones-based animation formats, Quake model was animated by changing
  locations of all vertices it included in 3D space, frame by frame.

  File format stores:

  * "Skins" — effectively 2D bitmaps which will be used as a
    texture. Every model can have multiple skins — e.g. these can be
    switched to depict various levels of damage to the
    monsters. Bitmaps are 8-bit-per-pixel, indexed in global Quake
    palette, subject to lighting and gamma adjustment when rendering
    in the game using colormap technique.
  * "Texture coordinates" — UV coordinates, mapping 3D vertices to
    skin coordinates.
  * "Triangles" — triangular faces connecting 3D vertices.
  * "Frames" — locations of vertices in 3D space; can include more
    than one frame, thus allowing representation of different frames
    for animation purposes.

  Originally, 3D geometry for models for Quake was designed in [Alias
  PowerAnimator](https://en.wikipedia.org/wiki/PowerAnimator),
  precursor of modern day Autodesk Maya and Autodesk Alias. Therefore,
  3D-related part of Quake model format followed closely Alias TRI
  format, and Quake development utilities included a converter from Alias
  TRI (\`modelgen\`).

  Skins (textures) where prepared as LBM bitmaps with the help from
  \`texmap\` utility in the same development utilities toolkit.
seq:
  - id: header
    type: mdl_header
  - id: skins
    type: mdl_skin
    repeat: expr
    repeat-expr: header.num_skins
  - id: texture_coordinates
    type: mdl_texcoord
    repeat: expr
    repeat-expr: header.num_verts
  - id: triangles
    type: mdl_triangle
    repeat: expr
    repeat-expr: header.num_tris
  - id: frames
    type: mdl_frame
    repeat: expr
    repeat-expr: header.num_frames
types:
  vec3:
    -orig-id: vec3_t
    doc: |
      Basic 3D vector (x, y, z) using single-precision floating point
      coordnates. Can be used to specify a point in 3D space,
      direction, scaling factor, etc.
    seq:
      - id: x
        type: f4
      - id: y
        type: f4
      - id: z
        type: f4
  mdl_header:
    -orig-id: mdl_t
    doc-ref:
      - 'https://github.com/id-Software/Quake/blob/0023db327bc1db00068284b70e1db45857aeee35/WinQuake/modelgen.h#L59-L75'
      - 'https://www.gamers.org/dEngine/quake/spec/quake-spec34/qkspec_5.htm#MD0'
    seq:
      - id: ident
        contents: 'IDPO'
        doc: |
          Magic signature bytes that every Quake model must
          have. "IDPO" is short for "IDPOLYHEADER".
        doc-ref: 'https://github.com/id-Software/Quake/blob/0023db327bc1db00068284b70e1db45857aeee35/WinQuake/modelgen.h#L132-L133'
      - id: version
        type: s4
        valid:
          eq: 6
      - id: scale
        type: vec3
        doc: |
          Global scaling factors in 3 dimensions for whole model. When
          represented in 3D world, this model local coordinates will
          be multiplied by these factors.
      - id: origin
        type: vec3
      - id: radius
        type: f4
      - id: eye_position
        type: vec3
      - id: num_skins
        type: s4
        doc: |
          Number of skins (=texture bitmaps) included in this model.
      - id: skin_width
        type: s4
        doc: |
          Width (U coordinate max) of every skin (=texture) in pixels.
      - id: skin_height
        type: s4
        doc: |
          Height (V coordinate max) of every skin (=texture) in
          pixels.
      - id: num_verts
        type: s4
        doc: |
          Number of vertices in this model. Note that this is constant
          for all the animation frames and all textures.
      - id: num_tris
        type: s4
        doc: |
          Number of triangles (=triangular faces) in this model.
      - id: num_frames
        type: s4
        doc: |
          Number of animation frames included in this model.
      - id: synctype
        type: s4
      - id: flags
        type: s4
      - id: size
        type: f4
    instances:
      skin_size:
        value: skin_width * skin_height
        doc: |
          Skin size in pixels.
  mdl_skin:
    seq:
      - id: group
        type: s4
      - id: single_texture_data
        size: _root.header.skin_size
        if: group == 0
      - id: num_frames
        type: u4
        if: group != 0
      - id: frame_times
        type: f4
        repeat: expr
        repeat-expr: num_frames
        if: group != 0
      - id: group_texture_data
        size: _root.header.skin_size
        repeat: expr
        repeat-expr: num_frames
        if: group != 0
  mdl_texcoord:
    -orig-id: stvert_t
    doc-ref:
      - 'https://github.com/id-Software/Quake/blob/0023db327bc1db00068284b70e1db45857aeee35/WinQuake/modelgen.h#L79-L83'
      - 'https://www.gamers.org/dEngine/quake/spec/quake-spec34/qkspec_5.htm#MD2'
    seq:
      - id: on_seam
        type: s4
      - id: s
        type: s4
      - id: t
        type: s4
  mdl_triangle:
    -orig-id: dtriangle_t
    doc: |
      Represents a triangular face, connecting 3 vertices, referenced
      by their indexes.
    doc-ref:
      - 'https://github.com/id-Software/Quake/blob/0023db327bc1db00068284b70e1db45857aeee35/WinQuake/modelgen.h#L85-L88'
      - 'https://www.gamers.org/dEngine/quake/spec/quake-spec34/qkspec_5.htm#MD3'
    seq:
      - id: faces_front
        type: s4
      - id: vertices
        type: s4
        repeat: expr
        repeat-expr: 3
  mdl_vertex:
    seq:
      - id: values
        type: u1
        repeat: expr
        repeat-expr: 3
      - id: normal_index
        type: u1
  mdl_simple_frame:
    seq:
      - id: bbox_min
        type: mdl_vertex
      - id: bbox_max
        type: mdl_vertex
      - id: name
        type: str
        size: 16
        encoding: ASCII
        terminator: 0x00
        pad-right: 0x00
      - id: vertices
        type: mdl_vertex
        repeat: expr
        repeat-expr: _root.header.num_verts
  mdl_frame:
    seq:
      - id: type
        type: s4
      - id: min
        type: mdl_vertex
        if: type != 0
      - id: max
        type: mdl_vertex
        if: type != 0
      - id: time
        type: f4
        repeat: expr
        repeat-expr: type
        if: type != 0
      - id: frames
        type: mdl_simple_frame
        repeat: expr
        repeat-expr: num_simple_frames
    instances:
      num_simple_frames:
        value: '(type == 0 ? 1 : type)'
`
  },
  {
    id: "ksy_quake_pak",
    name: "Quake Pak",
    category: "Games",
    metadata: {
      isGenerated: true,
      fileExtensions: ["pak"],
      description: "",
      originalCategory: "game",
      filePath: "game/quake_pak.ksy",
      signature: {"offset":0,"bytes":[80,65,67,75]},
      endian: "le"
    },
    content: `meta:
  id: quake_pak
  application: Quake game engine
  file-extension: pak
  xref:
    justsolve: Quake_PAK
    wikidata: Q105854676
  license: CC0-1.0
  endian: le
doc-ref: 'https://quakewiki.org/wiki/.pak#Format_specification'
seq:
  - id: magic
    contents: 'PACK'
  - id: ofs_index
    type: u4
  - id: len_index
    type: u4
instances:
  index:
    pos: ofs_index
    size: len_index
    type: index_struct
types:
  index_struct:
    seq:
      - id: entries
        type: index_entry
        repeat: eos
  index_entry:
    seq:
      - id: name
        type: str
        size: 56
        encoding: UTF-8
        terminator: 0
        pad-right: 0
      - id: ofs
        type: u4
      - id: size
        type: u4
    instances:
      body:
        io: _root._io
        pos: ofs
        size: size
`
  },
  {
    id: "ksy_renderware_binary_stream",
    name: "RenderWare binary stream",
    category: "Games",
    metadata: {
      isGenerated: true,
      fileExtensions: ["dff","txd"],
      description: "RenderWare binary stream",
      originalCategory: "game",
      filePath: "game/renderware_binary_stream.ksy",
      endian: "le"
    },
    content: `meta:
  id: renderware_binary_stream
  title: RenderWare binary stream
  application: Games based on RenderWare engine (Grand Theft Auto 3D series)
  file-extension:
    - dff
    - txd
  xref:
    justsolve: RenderWare_binary_stream_file
    wikidata: Q29960668
  endian: le
  bit-endian: le
doc-ref: https://gtamods.com/wiki/RenderWare_binary_stream_file
seq:
  - id: code
    type: u4
    enum: sections
  - id: size
    type: u4
  - id: library_id_stamp
    type: u4
  - id: body
    size: size
    type:
      switch-on: code
      cases:
        sections::clump: list_with_header
        sections::frame_list: list_with_header
        sections::geometry: list_with_header
        sections::geometry_list: list_with_header
        sections::texture_dictionary: list_with_header
        sections::texture_native: list_with_header
        sections::atomic: list_with_header
instances:
  version:
    value: 'library_id_stamp & 0xFFFF0000 != 0 ? (library_id_stamp >> 14 & 0x3FF00) + 0x30000 | (library_id_stamp >> 16 & 0x3F) : library_id_stamp << 8'
types:
  list_with_header:
    doc: |
      Typical structure used by many data types in RenderWare binary
      stream. Substream contains a list of binary stream entries,
      first entry always has type "struct" and carries some specific
      binary data it in, determined by the type of parent. All other
      entries, beside the first one, are normal, self-describing
      records.
    seq:
      - id: code
        contents: [1, 0, 0, 0]
      - id: header_size
        type: u4
      - id: library_id_stamp
        type: u4
      - id: header
        size: header_size
        type:
          switch-on: _parent.code
          cases:
            sections::clump: struct_clump
            sections::frame_list: struct_frame_list
            sections::geometry: struct_geometry
            sections::geometry_list: struct_geometry_list
            sections::texture_dictionary: struct_texture_dictionary
            sections::atomic: struct_atomic
      - id: entries
        type: renderware_binary_stream
        repeat: eos
    instances:
      version:
        value: 'library_id_stamp & 0xFFFF0000 != 0 ? (library_id_stamp >> 14 & 0x3FF00) + 0x30000 | (library_id_stamp >> 16 & 0x3F) : library_id_stamp << 8'
  struct_atomic:
    doc-ref: https://gtamods.com/wiki/Atomic_(RW_Section)#Structure
    seq:
      - id: frame_index
        type: u4
      - id: geometry_index
        type: u4
      - id: flag_render
        type: b1
      - type: b1
      - id: flag_collision_test
        type: b1
      - type: b29
      - id: unused
        type: u4
  struct_texture_dictionary:
    seq:
      - id: num_textures
        type: u4
  struct_clump:
    doc-ref: https://gtamods.com/wiki/RpClump
    seq:
      - id: num_atomics
        type: u4
      - id: num_lights
        type: u4
        if: _parent.version >= 0x33000
      - id: num_cameras
        type: u4
        if: _parent.version >= 0x33000
  struct_frame_list:
    doc-ref: 'https://gtamods.com/wiki/Frame_List_(RW_Section)#Structure'
    seq:
      - id: num_frames
        type: u4
      - id: frames
        type: frame
        repeat: expr
        repeat-expr: num_frames
  frame:
    doc-ref: 'https://gtamods.com/wiki/Frame_List_(RW_Section)#Structure'
    seq:
      - id: rotation_matrix
        type: matrix
      - id: position
        type: vector_3d
      - id: cur_frame_idx
        type: s4
      - id: matrix_creation_flags
        type: u4
  matrix:
    doc-ref: 'https://gtamods.com/wiki/Frame_List_(RW_Section)#Structure'
    seq:
      - id: entries
        type: vector_3d
        repeat: expr
        repeat-expr: 3
  vector_3d:
    doc-ref: 'https://gtamods.com/wiki/Frame_List_(RW_Section)#Structure'
    seq:
      - id: x
        type: f4
      - id: y
        type: f4
      - id: z
        type: f4
  struct_geometry_list:
    doc-ref: 'https://gtamods.com/wiki/Geometry_List_(RW_Section)#Structure'
    seq:
      - id: num_geometries
        type: u4
  struct_geometry:
    doc-ref: https://gtamods.com/wiki/RpGeometry
    seq:
      - id: format
        type: u4
      - id: num_triangles
        type: u4
      - id: num_vertices
        type: u4
      - id: num_morph_targets
        type: u4
      - id: surf_prop
        type: surface_properties
        if: _parent.version < 0x34000
      - id: geometry
        type: geometry_non_native
        if: not is_native
      - id: morph_targets
        type: morph_target
        repeat: expr
        repeat-expr: num_morph_targets
    instances:
      is_textured:
        value: format & 0x0000_0004 != 0
      is_prelit:
        value: format & 0x0000_0008 != 0
      is_textured2:
        value: format & 0x0000_0080 != 0
      is_native:
        value: format & 0x0100_0000 != 0
      num_uv_layers_raw:
        value: (format & 0x00ff_0000) >> 16
      num_uv_layers:
        value: |
          num_uv_layers_raw == 0
            ? is_textured2
              ? 2
              : is_textured
                ? 1
                : 0
            : num_uv_layers_raw
  surface_properties:
    doc-ref: https://gtamods.com/wiki/RpGeometry
    seq:
      - id: ambient
        type: f4
      - id: specular
        type: f4
      - id: diffuse
        type: f4
  geometry_non_native:
    seq:
      - id: prelit_colors
        type: rgba
        repeat: expr
        repeat-expr: _parent.num_vertices
        if: _parent.is_prelit
      - id: uv_layers
        type: uv_layer(_parent.num_vertices)
        repeat: expr
        repeat-expr: _parent.num_uv_layers
      - id: triangles
        type: triangle
        repeat: expr
        repeat-expr: _parent.num_triangles
  uv_layer:
    params:
      - id: num_vertices
        type: u4
    seq:
      - id: tex_coords
        type: tex_coord
        repeat: expr
        repeat-expr: num_vertices
  rgba:
    seq:
      - id: r
        type: u1
      - id: g
        type: u1
      - id: b
        type: u1
      - id: a
        type: u1
  tex_coord:
    seq:
      - id: u
        type: f4
      - id: v
        type: f4
  triangle:
    seq:
      - id: vertex2
        type: u2
      - id: vertex1
        type: u2
      - id: material_id
        type: u2
      - id: vertex3
        type: u2
  morph_target:
    seq:
      - id: bounding_sphere
        type: sphere
      - id: has_vertices
        type: u4
      - id: has_normals
        type: u4
      - id: vertices
        repeat: expr
        repeat-expr: _parent.num_vertices
        type: vector_3d
        if: has_vertices != 0
      - id: normals
        repeat: expr
        repeat-expr: _parent.num_vertices
        type: vector_3d
        if: has_normals != 0
  sphere:
    seq:
      - id: x
        type: f4
      - id: y
        type: f4
      - id: z
        type: f4
      - id: radius
        type: f4
enums:
  sections:
    0x0001: struct
    0x0002: string
    0x0003: extension
    0x0005: camera
    0x0006: texture
    0x0007: material
    0x0008: material_list
    0x0009: atomic_section
    0x000a: plane_section
    0x000b: world
    0x000c: spline
    0x000d: matrix
    0x000e: frame_list
    0x000f: geometry
    0x0010: clump
    0x0012: light
    0x0013: unicode_string
    0x0014: atomic
    0x0015: texture_native
    0x0016: texture_dictionary
    0x0017: animation_database
    0x0018: image
    0x0019: skin_animation
    0x001a: geometry_list
    0x001b: anim_animation
    0x001c: team
    0x001d: crowd
    0x001e: delta_morph_animation
    0x001f: right_to_render
    0x0020: multitexture_effect_native
    0x0021: multitexture_effect_dictionary
    0x0022: team_dictionary
    0x0023: platform_independent_texture_dictionary
    0x0024: table_of_contents
    0x0025: particle_standard_global_data
    0x0026: altpipe
    0x0027: platform_independent_peds
    0x0028: patch_mesh
    0x0029: chunk_group_start
    0x002a: chunk_group_end
    0x002b: uv_animation_dictionary
    0x002c: coll_tree
    0x0101: metrics_plg
    0x0102: spline_plg
    0x0103: stereo_plg
    0x0104: vrml_plg
    0x0105: morph_plg
    0x0106: pvs_plg
    0x0107: memory_leak_plg
    0x0108: animation_plg
    0x0109: gloss_plg
    0x010a: logo_plg
    0x010b: memory_info_plg
    0x010c: random_plg
    0x010d: png_image_plg
    0x010e: bone_plg
    0x010f: vrml_anim_plg
    0x0110: sky_mipmap_val
    0x0111: mrm_plg
    0x0112: lod_atomic_plg
    0x0113: me_plg
    0x0114: lightmap_plg
    0x0115: refine_plg
    0x0116: skin_plg
    0x0117: label_plg
    0x0118: particles_plg
    0x0119: geomtx_plg
    0x011a: synth_core_plg
    0x011b: stqpp_plg
    0x011c: part_pp_plg
    0x011d: collision_plg
    0x011e: hanim_plg
    0x011f: user_data_plg
    0x0120: material_effects_plg
    0x0121: particle_system_plg
    0x0122: delta_morph_plg
    0x0123: patch_plg
    0x0124: team_plg
    0x0125: crowd_pp_plg
    0x0126: mip_split_plg
    0x0127: anisotropy_plg
    0x0129: gcn_material_plg
    0x012a: geometric_pvs_plg
    0x012b: xbox_material_plg
    0x012c: multi_texture_plg
    0x012d: chain_plg
    0x012e: toon_plg
    0x012f: ptank_plg
    0x0130: particle_standard_plg
    0x0131: pds_plg
    0x0132: prtadv_plg
    0x0133: normal_map_plg
    0x0134: adc_plg
    0x0135: uv_animation_plg
    0x0180: character_set_plg
    0x0181: nohs_world_plg
    0x0182: import_util_plg
    0x0183: slerp_plg
    0x0184: optim_plg
    0x0185: tl_world_plg
    0x0186: database_plg
    0x0187: raytrace_plg
    0x0188: ray_plg
    0x0189: library_plg
    0x0190: plg_2d # 2D PLG
    0x0191: tile_render_plg
    0x0192: jpeg_image_plg
    0x0193: tga_image_plg
    0x0194: gif_image_plg
    0x0195: quat_plg
    0x0196: spline_pvs_plg
    0x0197: mipmap_plg
    0x0198: mipmapk_plg
    0x0199: font_2d # 2D Font
    0x019a: intersection_plg
    0x019b: tiff_image_plg
    0x019c: pick_plg
    0x019d: bmp_image_plg
    0x019e: ras_image_plg
    0x019f: skin_fx_plg
    0x01a0: vcat_plg
    0x01a1: path_2d
    0x01a2: brush_2d
    0x01a3: object_2d
    0x01a4: shape_2d
    0x01a5: scene_2d
    0x01a6: pick_region_2d
    0x01a7: object_string_2d
    0x01a8: animation_plg_2d
    0x01a9: animation_2d
    0x01b0: keyframe_2d
    0x01b1: maestro_2d
    0x01b2: barycentric
    0x01b3: platform_independent_texture_dictionary_tk
    0x01b4: toc_tk
    0x01b5: tpl_tk
    0x01b6: altpipe_tk
    0x01b7: animation_tk
    0x01b8: skin_split_tookit
    0x01b9: compressed_key_tk
    0x01ba: geometry_conditioning_plg
    0x01bb: wing_plg
    0x01bc: generic_pipeline_tk
    0x01bd: lightmap_conversion_tk
    0x01be: filesystem_plg
    0x01bf: dictionary_tk
    0x01c0: uv_animation_linear
    0x01c1: uv_animation_parameter
    0x0253_f200: atomic_visibility_distance
    0x0253_f201: clump_visibility_distance
    0x0253_f202: frame_visibility_distance
    0x0253_f2f3: pipeline_set
    0x0253_f2f4: unused_5
    0x0253_f2f5: texdictionary_link
    0x0253_f2f6: specular_material
    0x0253_f2f7: unused_8
    0x0253_f2f8: effect_2d
    0x0253_f2f9: extra_vert_colour
    0x0253_f2fa: collision_model
    0x0253_f2fb: gta_hanim
    0x0253_f2fc: reflection_material
    0x0253_f2fd: breakable
    0x0253_f2fe: frame
    0x0253_f2ff: unused_16
    0x050e: bin_mesh_plg
    0x0510: native_data_plg
    0xf21e: zmodeler_lock
`
  },
  {
    id: "ksy_saints_row_2_vpp_pc",
    name: "Saints Rows 2 game packages",
    category: "Games",
    metadata: {
      isGenerated: true,
      fileExtensions: ["vpp_pc"],
      description: "Saints Rows 2 game packages",
      originalCategory: "game",
      filePath: "game/saints_row_2_vpp_pc.ksy",
      signature: {"offset":0,"bytes":[206,10,137,81,4]},
      endian: "le"
    },
    content: `meta:
  id: saints_row_2_vpp_pc
  title: Saints Rows 2 game packages
  file-extension: vpp_pc
  license: MIT
  encoding: UTF-8
  endian: le
seq:
  - id: magic
    contents: [0xce, 0x0a, 0x89, 0x51, 0x04]
  - id: pad1
    size: 0x14f
  - id: num_files
    type: s4
  - id: container_size
    type: s4
  - id: len_offsets
    type: s4
  - id: len_filenames
    type: s4
  - id: len_extensions
    type: s4
  - id: smth5
    type: s4
  - id: smth6
    type: s4
  - id: smth7
    type: s4
  - id: smth8
    type: s4
  - id: smth9
    type: s4
instances:
  files:
    pos: 0x800
    size: len_offsets
    type: offsets
  ofs_filenames:
    value: ((0x800 + len_offsets) & 0xfffff800) + 0x800
  filenames:
    pos: ofs_filenames
    size: len_filenames
    type: strings
  ofs_extensions:
    value: ((ofs_filenames + len_filenames) & 0xfffff800) + 0x800
  extensions:
    pos: ofs_extensions
    size: len_extensions
    type: strings
  data_start:
    value: ((ofs_extensions + len_extensions) & 0xfffff800) + 0x800
types:
  offsets:
    seq:
      - id: entries
        type: offset
        repeat: eos
    types:
      offset:
        seq:
          - id: name_ofs
            type: u4
          - id: ext_ofs
            type: u4
          - id: smth2
            type: s4
          - id: ofs_body
            type: s4
          - id: len_body
            type: s4
          - id: always_minus_1
            type: s4
          - id: always_zero
            type: s4
        instances:
          filename:
            io: _root.filenames._io
            pos: name_ofs
            type: strz
          ext:
            io: _root.extensions._io
            pos: ext_ofs
            type: strz
          body:
            io: _root._io
            pos: _root.data_start + ofs_body
            size: len_body
  strings:
    seq:
      - id: entries
        type: strz
        repeat: eos
`
  },
  {
    id: "ksy_warcraft_2_pud",
    name: "Warcraft II map files",
    category: "Games",
    metadata: {
      isGenerated: true,
      fileExtensions: ["pud"],
      description: "Warcraft II map files",
      originalCategory: "game",
      filePath: "game/warcraft_2_pud.ksy",
      endian: "le"
    },
    content: `meta:
  id: warcraft_2_pud
  title: Warcraft II map files
  application: Warcraft II engine
  file-extension: pud
  xref:
    justsolve: Warcraft_II_PUD
    wikidata: Q28009492
  license: CC0-1.0
  ks-version: 0.6
  endian: le
doc: |
  Warcraft II game engine uses this format for map files. External
  maps can be edited by official Warcraft II map editor and saved in
  .pud files. Maps supplied with the game (i.e. single player
  campaign) follow the same format, but are instead embedded inside
  the game container files.

  There are two major versions: 0x11 (original one) and 0x13 (roughly
  corresponds to v1.33 of the game engine, although some of the
  features got limited support in v1.3).

  File consists of a sequence of typed sections.
doc-ref: http://cade.datamax.bg/war2x/pudspec.html
seq:
  - id: sections
    type: section
    repeat: eos
types:
  section:
    seq:
      - id: name
        type: str
        size: 4
        encoding: ASCII
      - id: size
        type: u4
      - id: body
        size: size
        type:
          switch-on: name
          cases:
            '"TYPE"': section_type
            '"VER "': section_ver
            #'"DESC"': section_desc
            '"OWNR"': section_ownr
            '"ERA "': section_era
            '"ERAX"': section_era
            '"DIM "': section_dim
            '"SGLD"': section_starting_resource
            '"SLBR"': section_starting_resource
            '"SOIL"': section_starting_resource
            '"UNIT"': section_unit
  section_type:
    doc: |
      Section that confirms that this file is a "map file" by certain
      magic string and supplies a tag that could be used in
      multiplayer to check that all player use the same version of the
      map.
    seq:
      - id: magic
        contents: ["WAR2 MAP", 0, 0]
      - id: unused
        size: 2
        doc: unused (always set to \$0a and \$ff by editor, but can be anything for the game)
      - id: id_tag
        type: u4
        doc: id tag (for consistency check in multiplayer)
  section_ver:
    doc: Section that specifies format version.
    seq:
      - id: version
        type: u2
  section_ownr:
    doc: Section that specifies who controls each player.
    seq:
      - id: controller_by_player
        type: u1
        enum: controller
        repeat: eos
  section_era:
    doc: Section that specifies terrain type for this map.
    seq:
      - id: terrain
        type: u2
        enum: terrain_type
  section_dim:
    seq:
      - id: x
        type: u2
      - id: y
        type: u2
  section_starting_resource:
    seq:
      - id: resources_by_player
        type: u2
        repeat: eos
  section_unit:
    seq:
      - id: units
        type: unit
        repeat: eos
  unit:
    seq:
      - id: x
        type: u2
      - id: y
        type: u2
      - id: u_type
        type: u1
        enum: unit_type
      - id: owner
        type: u1
      - id: options
        type: u2
        doc: if gold mine or oil well, contains 2500 * this, otherwise 0 passive 1 active
    instances:
      resource:
        value: options * 2500
        if: >
          u_type == unit_type::gold_mine or
          u_type == unit_type::human_oil_well or
          u_type == unit_type::orc_oil_well or
          u_type == unit_type::oil_patch
enums:
  controller:
    # official values
    0x02: passive_computer
    0x03: nobody
    0x04: computer4
    0x05: human
    0x06: rescue_passive
    0x07: rescue_active
    # also supported by game engine
    0x01: computer1
    # everything else is "passive_computer"
  terrain_type:
    0x00: forest
    0x01: winter
    0x02: wasteland
    0x03: swamp
  unit_type:
    0x00: infantry
    0x01: grunt
    0x02: peasant
    0x03: peon
    0x04: ballista
    0x05: catapult
    0x06: knight
    0x07: ogre
    0x08: archer
    0x09: axethrower
    0x0a: mage
    0x0b: death_knight
    0x0c: paladin
    0x0d: ogre_mage
    0x0e: dwarves
    0x0f: goblin_sapper
    0x10: attack_peasant
    0x11: attack_peon
    0x12: ranger
    0x13: berserker
    0x14: alleria
    0x15: teron_gorefiend
    0x16: kurdan_and_sky_ree
    0x17: dentarg
    0x18: khadgar
    0x19: grom_hellscream
    0x1a: human_tanker
    0x1b: orc_tanker
    0x1c: human_transport
    0x1d: orc_transport
    0x1e: elven_destroyer
    0x1f: troll_destroyer
    0x20: battleship
    0x21: juggernaught
    0x23: deathwing
    0x26: gnomish_submarine
    0x27: giant_turtle
    0x28: gnomish_flying_machine
    0x29: goblin_zepplin
    0x2a: gryphon_rider
    0x2b: dragon
    0x2c: turalyon
    0x2d: eye_of_kilrogg
    0x2e: danath
    0x2f: khorgath_bladefist
    0x31: cho_gall
    0x32: lothar
    0x33: gul_dan
    0x34: uther_lightbringer
    0x35: zuljin
    0x37: skeleton
    0x38: daemon
    0x39: critter
    0x3a: farm
    0x3b: pig_farm
    0x3c: human_barracks
    0x3d: orc_barracks
    0x3e: church
    0x3f: altar_of_storms
    0x40: human_scout_tower
    0x41: orc_scout_tower
    0x42: stables
    0x43: ogre_mound
    0x44: gnomish_inventor
    0x45: goblin_alchemist
    0x46: gryphon_aviary
    0x47: dragon_roost
    0x48: human_shipyard
    0x49: orc_shipyard
    0x4a: town_hall
    0x4b: great_hall
    0x4c: elven_lumber_mill
    0x4d: troll_lumber_mill
    0x4e: human_foundry
    0x4f: orc_foundry
    0x50: mage_tower
    0x51: temple_of_the_damned
    0x52: human_blacksmith
    0x53: orc_blacksmith
    0x54: human_refinery
    0x55: orc_refinery
    0x56: human_oil_well
    0x57: orc_oil_well
    0x58: keep
    0x59: stronghold
    0x5a: castle
    0x5b: fortress
    0x5c: gold_mine
    0x5d: oil_patch
    0x5e: human_start
    0x5f: orc_start
    0x60: human_guard_tower
    0x61: orc_guard_tower
    0x62: human_cannon_tower
    0x63: orc_cannon_tower
    0x64: circle_of_power
    0x65: dark_portal
    0x66: runestone
    0x67: human_wall
    0x68: orc_wall
`
  },
  {
    id: "ksy_shapefile_index",
    name: "Shapefile index file",
    category: "Geospatial",
    metadata: {
      isGenerated: true,
      fileExtensions: ["shx"],
      description: "Shapefile index file",
      originalCategory: "geospatial",
      filePath: "geospatial/shapefile_index.ksy",
      endian: "le"
    },
    content: `meta:
  id: shapefile_index
  title: Shapefile index file
  file-extension: shx
  xref:
    justsolve: Shapefile
    loc: fdd000280 # ESRI Shapefile
    pronom: fmt/277
    wikidata: Q27487109
  license: CC0-1.0
  endian: le
seq:
  - id: header
    type: file_header
  - id: records
    type: record
    repeat: eos
    doc: the size of this section of the file in bytes must equal (header.file_length * 2) - 100
types:
  file_header:
    seq:
      - id: file_code
        contents: [0x00, 0x00, 0x27, 0x0a]
        doc: corresponds to s4be value of 9994
      - id: unused_field_1
        contents: [0, 0, 0, 0]
      - id: unused_field_2
        contents: [0, 0, 0, 0]
      - id: unused_field_3
        contents: [0, 0, 0, 0]
      - id: unused_field_4
        contents: [0, 0, 0, 0]
      - id: unused_field_5
        contents: [0, 0, 0, 0]
      - id: file_length
        type: s4be
      - id: version
        contents: [0xe8, 0x03, 0x00, 0x00]
        doc: corresponds to s4le value of 1000
      - id: shape_type
        type: s4
        enum: shape_type
      - id: bounding_box
        type: bounding_box_x_y_z_m
  record:
    seq:
      - id: offset
        type: s4be
      - id: content_length
        type: s4be
  bounding_box_x_y_z_m:
    seq:
      - id: x
        type: bounds_min_max
      - id: y
        type: bounds_min_max
      - id: z
        type: bounds_min_max
      - id: m
        type: bounds_min_max
  bounds_min_max:
    seq:
      - id: min
        type: f8be
      - id: max
        type: f8be
enums:
  shape_type:
    0: null_shape
    1: point
    3: poly_line
    5: polygon
    8: multi_point
    11: point_z
    13: poly_line_z
    15: polygon_z
    18: multi_point_z
    21: point_m
    23: poly_line_m
    25: polygon_m
    28: multi_point_m
    31: multi_patch
`
  },
  {
    id: "ksy_shapefile_main",
    name: "Shapefile main file",
    category: "Geospatial",
    metadata: {
      isGenerated: true,
      fileExtensions: ["shp"],
      description: "Shapefile main file",
      originalCategory: "geospatial",
      filePath: "geospatial/shapefile_main.ksy",
      endian: "le"
    },
    content: `meta:
  id: shapefile_main
  title: Shapefile main file
  file-extension: shp
  xref:
    justsolve: Shapefile
    loc: fdd000280 # ESRI Shapefile
    pronom: x-fmt/235
    wikidata: Q27486884
  license: CC0-1.0
  endian: le
seq:
  - id: header
    type: file_header
  - id: records
    type: record
    repeat: eos
    doc: the size of this section of the file in bytes must equal (header.file_length * 2) - 100
types:
  file_header:
    seq:
      - id: file_code
        contents: [0x00, 0x00, 0x27, 0x0a]
        doc: corresponds to s4be value of 9994
      - id: unused_field_1
        contents: [0, 0, 0, 0]
      - id: unused_field_2
        contents: [0, 0, 0, 0]
      - id: unused_field_3
        contents: [0, 0, 0, 0]
      - id: unused_field_4
        contents: [0, 0, 0, 0]
      - id: unused_field_5
        contents: [0, 0, 0, 0]
      - id: file_length
        type: s4be
      - id: version
        contents: [0xe8, 0x03, 0x00, 0x00]
        doc: corresponds to s4le value of 1000
      - id: shape_type
        type: s4
        enum: shape_type
      - id: bounding_box
        type: bounding_box_x_y_z_m
  record:
    seq:
      - id: header
        type: record_header
      - id: contents
        type: record_contents
        doc: the size of this contents section in bytes must equal header.content_length * 2
  record_header:
    seq:
      - id: record_number
        type: s4be
      - id: content_length
        type: s4be
  record_contents:
    seq:
      - id: shape_type
        type: s4
        enum: shape_type
      - id: shape_parameters
        type:
          switch-on: shape_type
          cases:
            shape_type::point: point
            shape_type::poly_line: poly_line
            shape_type::polygon: polygon
            shape_type::multi_point: multi_point
            shape_type::point_z: point_z
            shape_type::poly_line_z: poly_line_z
            shape_type::polygon_z: polygon_z
            shape_type::multi_point_z: multi_point_z
            shape_type::point_m: point_m
            shape_type::poly_line_m: poly_line_m
            shape_type::polygon_m: polygon_m
            shape_type::multi_point_m: multi_point_m
            shape_type::multi_patch: multi_patch
        if: shape_type != shape_type::null_shape
  bounding_box_x_y_z_m:
    seq:
      - id: x
        type: bounds_min_max
      - id: y
        type: bounds_min_max
      - id: z
        type: bounds_min_max
      - id: m
        type: bounds_min_max
  bounding_box_x_y:
    seq:
      - id: x
        type: bounds_min_max
      - id: y
        type: bounds_min_max
  bounds_min_max:
    seq:
      - id: min
        type: f8
      - id: max
        type: f8
  point:
    seq:
      - id: x
        type: f8
      - id: y
        type: f8
  poly_line:
    seq:
      - id: bounding_box
        type: bounding_box_x_y
      - id: number_of_parts
        type: s4
      - id: number_of_points
        type: s4
      - id: parts
        type: s4
        repeat: expr
        repeat-expr: number_of_parts
      - id: points
        type: point
        repeat: expr
        repeat-expr: number_of_points
  polygon:
    seq:
      - id: bounding_box
        type: bounding_box_x_y
      - id: number_of_parts
        type: s4
      - id: number_of_points
        type: s4
      - id: parts
        type: s4
        repeat: expr
        repeat-expr: number_of_parts
      - id: points
        type: point
        repeat: expr
        repeat-expr: number_of_points
  multi_point:
    seq:
      - id: bounding_box
        type: bounding_box_x_y
      - id: number_of_points
        type: s4
      - id: points
        type: point
        repeat: expr
        repeat-expr: number_of_points
  point_z:
    seq:
      - id: x
        type: f8
      - id: y
        type: f8
      - id: z
        type: f8
      - id: m
        type: f8
  poly_line_z:
    seq:
      - id: bounding_box
        type: bounding_box_x_y
      - id: number_of_parts
        type: s4
      - id: number_of_points
        type: s4
      - id: parts
        type: s4
        repeat: expr
        repeat-expr: number_of_parts
      - id: points
        type: point
        repeat: expr
        repeat-expr: number_of_points
      - id: z_range
        type: bounds_min_max
      - id: z_values
        type: f8
        repeat: expr
        repeat-expr: number_of_points
      - id: m_range
        type: bounds_min_max
      - id: m_values
        type: f8
        repeat: expr
        repeat-expr: number_of_points
  polygon_z:
    seq:
      - id: bounding_box
        type: bounding_box_x_y
      - id: number_of_parts
        type: s4
      - id: number_of_points
        type: s4
      - id: parts
        type: s4
        repeat: expr
        repeat-expr: number_of_parts
      - id: points
        type: point
        repeat: expr
        repeat-expr: number_of_points
      - id: z_range
        type: bounds_min_max
      - id: z_values
        type: f8
        repeat: expr
        repeat-expr: number_of_points
      - id: m_range
        type: bounds_min_max
      - id: m_values
        type: f8
        repeat: expr
        repeat-expr: number_of_points
  multi_point_z:
    seq:
      - id: bounding_box
        type: bounding_box_x_y
      - id: number_of_points
        type: s4
      - id: points
        type: point
        repeat: expr
        repeat-expr: number_of_points
      - id: z_range
        type: bounds_min_max
      - id: z_values
        type: f8
        repeat: expr
        repeat-expr: number_of_points
      - id: m_range
        type: bounds_min_max
      - id: m_values
        type: f8
        repeat: expr
        repeat-expr: number_of_points
  point_m:
    seq:
      - id: x
        type: f8
      - id: y
        type: f8
      - id: m
        type: f8
  poly_line_m:
    seq:
      - id: bounding_box
        type: bounding_box_x_y
      - id: number_of_parts
        type: s4
      - id: number_of_points
        type: s4
      - id: parts
        type: s4
        repeat: expr
        repeat-expr: number_of_parts
      - id: points
        type: point
        repeat: expr
        repeat-expr: number_of_points
      - id: m_range
        type: bounds_min_max
      - id: m_values
        type: f8
        repeat: expr
        repeat-expr: number_of_points
  polygon_m:
    seq:
      - id: bounding_box
        type: bounding_box_x_y
      - id: number_of_parts
        type: s4
      - id: number_of_points
        type: s4
      - id: parts
        type: s4
        repeat: expr
        repeat-expr: number_of_parts
      - id: points
        type: point
        repeat: expr
        repeat-expr: number_of_points
      - id: m_range
        type: bounds_min_max
      - id: m_values
        type: f8
        repeat: expr
        repeat-expr: number_of_points
  multi_point_m:
    seq:
      - id: bounding_box
        type: bounding_box_x_y
      - id: number_of_points
        type: s4
      - id: points
        type: point
        repeat: expr
        repeat-expr: number_of_points
      - id: m_range
        type: bounds_min_max
      - id: m_values
        type: f8
        repeat: expr
        repeat-expr: number_of_points
  multi_patch:
    seq:
      - id: bounding_box
        type: bounding_box_x_y
      - id: number_of_parts
        type: s4
      - id: number_of_points
        type: s4
      - id: parts
        type: s4
        repeat: expr
        repeat-expr: number_of_parts
      - id: part_types
        type: s4
        enum: part_type
        repeat: expr
        repeat-expr: number_of_parts
      - id: points
        type: point
        repeat: expr
        repeat-expr: number_of_points
      - id: z_range
        type: bounds_min_max
      - id: z_values
        type: f8
        repeat: expr
        repeat-expr: number_of_points
      - id: m_range
        type: bounds_min_max
      - id: m_values
        type: f8
        repeat: expr
        repeat-expr: number_of_points
enums:
  shape_type:
    0: null_shape
    1: point
    3: poly_line
    5: polygon
    8: multi_point
    11: point_z
    13: poly_line_z
    15: polygon_z
    18: multi_point_z
    21: point_m
    23: poly_line_m
    25: polygon_m
    28: multi_point_m
    31: multi_patch
  part_type:
    0: triangle_strip
    1: triangle_fan
    2: outer_ring
    3: inner_ring
    4: first_ring
    5: ring
`
  },
  {
    id: "ksy_dtb",
    name: "Flattened Devicetree Format",
    category: "Hardware",
    metadata: {
      isGenerated: true,
      fileExtensions: ["dtb"],
      description: "Flattened Devicetree Format",
      originalCategory: "hardware",
      filePath: "hardware/dtb.ksy",
      signature: {"offset":0,"bytes":[208,13,254,237]},
      endian: "be"
    },
    content: `meta:
  id: dtb
  title: Flattened Devicetree Format
  file-extension: dtb
  application:
    - Linux
    - Das U-Boot
  xref:
    wikidata: Q16960371
  tags:
    - linux
    - serialization
  license: CC0-1.0
  ks-version: 0.9
  encoding: ASCII
  endian: be
doc: |
  Also referred to as Devicetree Blob (DTB). It is a flat binary encoding
  of data (primarily devicetree data, although other data is possible as well).
  The data is internally stored as a tree of named nodes and properties. Nodes
  contain properties and child nodes, while properties are name-value pairs.

  The Devicetree Blobs (\`.dtb\` files) are compiled from the Devicetree Source
  files (\`.dts\`) through the Devicetree compiler (DTC).

  On Linux systems that support this, the blobs can be accessed in
  \`/sys/firmware/fdt\`:

  * <https://www.kernel.org/doc/Documentation/ABI/testing/sysfs-firmware-ofw>

  The encoding of strings used in the \`strings_block\` and \`structure_block\` is
  actually a subset of ASCII:

  <https://devicetree-specification.readthedocs.io/en/v0.3/devicetree-basics.html#node-names>

  Example files:

  * <https://github.com/qemu/qemu/tree/master/pc-bios>
doc-ref:
  - https://devicetree-specification.readthedocs.io/en/v0.3/flattened-format.html
  - https://elinux.org/images/f/f4/Elc2013_Fernandes.pdf
seq:
  - id: magic
    -orig-id: magic
    contents: [0xd0, 0x0d, 0xfe, 0xed]
  - id: total_size
    -orig-id: totalsize
    type: u4
  - id: ofs_structure_block
    -orig-id: off_dt_struct
    type: u4
  - id: ofs_strings_block
    -orig-id: off_dt_strings
    type: u4
  - id: ofs_memory_reservation_block
    -orig-id: off_mem_rsvmap
    type: u4
  - id: version
    type: u4
  - id: min_compatible_version
    -orig-id: last_comp_version
    type: u4
    valid:
      max: version
  - id: boot_cpuid_phys
    -orig-id: boot_cpuid_phys
    type: u4
  - id: len_strings_block
    -orig-id: size_dt_strings
    type: u4
  - id: len_structure_block
    -orig-id: size_dt_struct
    type: u4
instances:
  memory_reservation_block:
    pos: ofs_memory_reservation_block
    size: ofs_structure_block - ofs_memory_reservation_block
    type: memory_block
  structure_block:
    pos: ofs_structure_block
    size: len_structure_block
    type: fdt_block
  strings_block:
    pos: ofs_strings_block
    size: len_strings_block
    type: strings
types:
  memory_block:
    seq:
      - id: entries
        type: memory_block_entry
        repeat: eos
  memory_block_entry:
    seq:
      - id: address
        type: u8
        doc: physical address of a reserved memory region
      - id: size
        type: u8
        doc: size of a reserved memory region
  fdt_block:
    seq:
      - id: nodes
        type: fdt_node
        repeat: until
        repeat-until: _.type == fdt::end
  fdt_node:
    -webide-representation: '{type} {body}'
    seq:
      - id: type
        type: u4
        enum: fdt
      - id: body
        type:
          switch-on: type
          cases:
            fdt::begin_node: fdt_begin_node
            fdt::prop: fdt_prop
  fdt_begin_node:
    -webide-representation: '{name}'
    seq:
      - id: name
        type: strz
      - id: padding
        size: (- _io.pos) % 4
  fdt_prop:
    -webide-representation: '{name}'
    seq:
      - id: len_property
        -orig-id: len
        type: u4
      - id: ofs_name
        -orig-id: nameoff
        type: u4
      - id: property
        size: len_property
      - id: padding
        size: (- _io.pos) % 4
    instances:
      name:
        io: _root.strings_block._io
        pos: ofs_name
        type: strz
        -webide-parse-mode: eager
  strings:
    seq:
      - id: strings
        type: strz
        repeat: eos
enums:
  fdt:
    0x00000001: begin_node
    0x00000002: end_node
    0x00000003: prop
    0x00000004: nop
    0x00000009: end
`
  },
  {
    id: "ksy_edid",
    name: "EDID (VESA Enhanced Extended Display Identification Data)",
    category: "Hardware",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "EDID (VESA Enhanced Extended Display Identification Data)",
      originalCategory: "hardware",
      filePath: "hardware/edid.ksy",
      signature: {"offset":0,"bytes":[0,255,255,255,255,255,255,0]},
      endian: "le"
    },
    content: `meta:
  id: edid
  title: EDID (VESA Enhanced Extended Display Identification Data)
  xref:
    repo: https://github.com/kaitai-io/edid.ksy.git
    wikidata: Q1376385
  license: CC0-1.0
  endian: le
seq:
  - id: magic
    contents: [0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00]
  - id: mfg_bytes
    type: u2be
  - id: product_code
    type: u2
    doc: Manufacturer product code
  - id: serial
    type: u4
    doc: Serial number
  - id: mfg_week
    type: u1
    doc: Week of manufacture. Week numbering is not consistent between manufacturers.
  - id: mfg_year_mod
    type: u1
    doc: Year of manufacture, less 1990. (1990-2245). If week=255, it is the model year instead.
  - id: edid_version_major
    type: u1
    doc: EDID version, usually 1 (for 1.3)
  - id: edid_version_minor
    type: u1
    doc: EDID revision, usually 3 (for 1.3)
  - id: input_flags
    type: u1
  - id: screen_size_h
    type: u1
    doc: Maximum horizontal image size, in centimetres (max 292 cm/115 in at 16:9 aspect ratio)
  - id: screen_size_v
    type: u1
    doc: Maximum vertical image size, in centimetres. If either byte is 0, undefined (e.g. projector)
  - id: gamma_mod
    type: u1
    doc: Display gamma, datavalue = (gamma*100)-100 (range 1.00-3.54)
  - id: features_flags
    type: u1
  - id: chromacity
    type: chromacity_info
    doc: 'Phosphor or filter chromaticity structure, which provides info on colorimetry and white point'
    doc-ref: Standard, section 3.7
  - id: est_timings
    type: est_timings_info
    doc: |
      Block of bit flags that indicates support of so called
      "established timings", which is a commonly used subset of VESA
      DMT (Discrete Monitor Timings) modes.
    doc-ref: Standard, section 3.8
  - id: std_timings
    size: 2
    type: std_timing
    doc: |
      Array of descriptions of so called "standard timings", which are
      used to specify up to 8 additional timings not included in
      "established timings".
    repeat: expr
    repeat-expr: 8
types:
  chromacity_info:
    doc: |
      Chromaticity information: colorimetry and white point
      coordinates. All coordinates are stored as fixed precision
      10-bit numbers, bits are shuffled for compactness.
    seq:
      - id: red_x_1_0
        type: b2
        doc: Red X, bits 1..0
      - id: red_y_1_0
        type: b2
        doc: Red Y, bits 1..0
      - id: green_x_1_0
        type: b2
        doc: Green X, bits 1..0
      - id: green_y_1_0
        type: b2
        doc: Green Y, bits 1..0
      - id: blue_x_1_0
        type: b2
        doc: Blue X, bits 1..0
      - id: blue_y_1_0
        type: b2
        doc: Blue Y, bits 1..0
      - id: white_x_1_0
        type: b2
        doc: White X, bits 1..0
      - id: white_y_1_0
        type: b2
        doc: White Y, bits 1..0
      - id: red_x_9_2
        type: u1
        doc: Red X, bits 9..2
      - id: red_y_9_2
        type: u1
        doc: Red Y, bits 9..2
      - id: green_x_9_2
        type: u1
        doc: Green X, bits 9..2
      - id: green_y_9_2
        type: u1
        doc: Green Y, bits 9..2
      - id: blue_x_9_2
        type: u1
        doc: Blue X, bits 9..2
      - id: blue_y_9_2
        type: u1
        doc: Blue Y, bits 9..2
      - id: white_x_9_2
        type: u1
        doc: White X, bits 9..2
      - id: white_y_9_2
        type: u1
        doc: White Y, bits 9..2
    instances:
      # Raw chromacity coordinates as 10-bit integers
      red_x_int:
        value: '(red_x_9_2 << 2) | red_x_1_0'
      red_y_int:
        value: '(red_y_9_2 << 2) | red_y_1_0'
      green_x_int:
        value: '(green_x_9_2 << 2) | green_x_1_0'
      green_y_int:
        value: '(green_y_9_2 << 2) | green_y_1_0'
      blue_x_int:
        value: '(blue_x_9_2 << 2) | blue_x_1_0'
      blue_y_int:
        value: '(blue_y_9_2 << 2) | blue_y_1_0'
      white_x_int:
        value: '(white_x_9_2 << 2) | white_x_1_0'
      white_y_int:
        value: '(white_y_9_2 << 2) | white_y_1_0'
      # User-friendly chromacity coordinates as floating point fractions
      red_x:
        value: red_x_int / 1024.0
        doc: Red X coordinate
      red_y:
        value: red_y_int / 1024.0
        doc: Red Y coordinate
      green_x:
        value: green_x_int / 1024.0
        doc: Green X coordinate
      green_y:
        value: green_y_int / 1024.0
        doc: Green Y coordinate
      blue_x:
        value: blue_x_int / 1024.0
        doc: Blue X coordinate
      blue_y:
        value: blue_y_int / 1024.0
        doc: Blue Y coordinate
      white_x:
        value: white_x_int / 1024.0
        doc: White X coordinate
      white_y:
        value: white_y_int / 1024.0
        doc: White Y coordinate
  est_timings_info:
    seq:
      # Byte 0: "Established Timing I"
      - id: can_720x400px_70hz
        type: b1
        doc: Supports 720 x 400 @ 70Hz
      - id: can_720x400px_88hz
        type: b1
        doc: Supports 720 x 400 @ 88Hz
      - id: can_640x480px_60hz
        type: b1
        doc: Supports 640 x 480 @ 60Hz
      - id: can_640x480px_67hz
        type: b1
        doc: Supports 640 x 480 @ 67Hz
      - id: can_640x480px_72hz
        type: b1
        doc: Supports 640 x 480 @ 72Hz
      - id: can_640x480px_75hz
        type: b1
        doc: Supports 640 x 480 @ 75Hz
      - id: can_800x600px_56hz
        type: b1
        doc: Supports 800 x 600 @ 56Hz
      - id: can_800x600px_60hz
        type: b1
        doc: Supports 800 x 600 @ 60Hz
      # Byte 1: "Established Timing II"
      - id: can_800x600px_72hz
        type: b1
        doc: Supports 800 x 600 @ 72Hz
      - id: can_800x600px_75hz
        type: b1
        doc: Supports 800 x 600 @ 75Hz
      - id: can_832x624px_75hz
        type: b1
        doc: Supports 832 x 624 @ 75Hz
      - id: can_1024x768px_87hz_i
        type: b1
        doc: Supports 1024 x 768 @ 87Hz(I)
      - id: can_1024x768px_60hz
        type: b1
        doc: Supports 1024 x 768 @ 60Hz
      - id: can_1024x768px_70hz
        type: b1
        doc: Supports 1024 x 768 @ 70Hz
      - id: can_1024x768px_75hz
        type: b1
        doc: Supports 1024 x 768 @ 75Hz
      - id: can_1280x1024px_75hz
        type: b1
        doc: Supports 1280 x 1024 @ 75Hz
      # Byte 2: "Manufacturer's Timings"
      - id: can_1152x870px_75hz
        type: b1
        doc: Supports 1152 x 870 @ 75Hz
      - id: reserved
        type: b7
  std_timing:
    seq:
      - id: horiz_active_pixels_mod
        type: u1
        doc: |
          Range of horizontal active pixels, written in modified form:
          \`(horiz_active_pixels / 8) - 31\`. This yields an effective
          range of 256..2288, with steps of 8 pixels.
      - id: aspect_ratio
        type: b2
        enum: aspect_ratios
        doc: |
          Aspect ratio of the image. Can be used to calculate number
          of vertical pixels.
      - id: refresh_rate_mod
        type: b6
        doc: |
          Refresh rate in Hz, written in modified form: \`refresh_rate
          - 60\`. This yields an effective range of 60..123 Hz.
    instances:
      bytes_lookahead:
        pos: 0
        size: 2
      is_used:
        value: bytes_lookahead != [0x01, 0x01]
      horiz_active_pixels:
        value: (horiz_active_pixels_mod + 31) * 8
        if: is_used
        doc: Range of horizontal active pixels.
      refresh_rate:
        value: refresh_rate_mod + 60
        if: is_used
        doc: Vertical refresh rate, Hz.
    enums:
      aspect_ratios:
        0: ratio_16_10
        1: ratio_4_3
        2: ratio_5_4
        3: ratio_16_9
instances:
  mfg_id_ch1:
    value: '(mfg_bytes & 0b0111110000000000) >> 10'
  mfg_id_ch2:
    value: '(mfg_bytes & 0b0000001111100000) >> 5'
  mfg_id_ch3:
    value: '(mfg_bytes & 0b0000000000011111)'
  mfg_str:
    value: '[mfg_id_ch1 + 0x40, mfg_id_ch2 + 0x40, mfg_id_ch3 + 0x40].as<bytes>.to_s("ASCII")'
  mfg_year:
    value: mfg_year_mod + 1990
  gamma:
    value: (gamma_mod + 100) / 100.0
    if: gamma_mod != 0xff
`
  },
  {
    id: "ksy_mifare_classic",
    name: "Mifare Classic RFID tag dump",
    category: "Hardware",
    metadata: {
      isGenerated: true,
      fileExtensions: ["mfd"],
      description: "Mifare Classic RFID tag dump",
      originalCategory: "hardware",
      filePath: "hardware/mifare/mifare_classic.ksy",
      endian: "le"
    },
    content: `meta:
  id: mifare_classic
  title: Mifare Classic RFID tag dump
  file-extension: mfd
  xref:
    wikidata:
      - Q29000512 # MIFARE Classic 1k
      - Q29000513 # MIFARE Classic 4k
  license: BSD-2-Clause
  ks-version: 0.9
  endian: le
doc-ref: |
  https://github.com/nfc-tools/libnfc
  https://www.nxp.com/docs/en/data-sheet/MF1S70YYX_V1.pdf
doc: |
  You can get a dump for testing from this link:
  <https://github.com/zhovner/mfdread/raw/master/dump.mfd>
seq:
  - id: sectors
    size: ((_index >= 32)?4:1)*4*16 #sorry for this doubling of \`block_size\` (16), but we need \`sector\` be self-sufficient so we cannot use _root there
    type: sector(_index == 0)
    repeat: eos
types:
  key:
    seq:
      - id: key
        size: 6
  sector:
    params:
      - id: has_manufacturer
        type: bool
    seq:
      - id: manufacturer
        type: manufacturer
        if: has_manufacturer

      - id: data_filler
        -orig-id: abtData
        size: _io.size - _io.pos - 16 # sizeof(trailer)
        type: filler
      - id: trailer
        type: trailer
    instances:
      block_size:
        value: 16
      data:
        value: data_filler.data
      blocks:
        pos: 0
        io: data_filler._io
        size: block_size
        repeat: eos
      values:
        pos: 0
        io: data_filler._io
        type: values
    types:
      values:
        seq:
          - id: values
            type: value_block
            repeat: eos
        types:
          value_block:
            seq:
              - id: valuez
                type: u4
                repeat: expr
                repeat-expr: 3
              - id: addrz
                type: u1
                repeat: expr
                repeat-expr: 4
            instances:
              value_valid:
                value: 'valuez[0]==~valuez[1] and valuez[0]==valuez[2]'
              addr_valid:
                value: 'addrz[0]==~addrz[1] and addrz[0]==addrz[2] and addrz[1]==addrz[3]'
              valid:
                value: 'value_valid and addr_valid'
              addr:
                value: 'addrz[0]'
                if: valid
              value:
                value: valuez[0]
                if: valid
      filler:
        doc: "only to create _io"
        seq:
          - id: data
            size: _io.size
  manufacturer:
    seq:
      - id: nuid
        -orig-id: abtUID
        type: u4
        doc: beware for 7bytes UID it goes over next fields
      - id: bcc
        -orig-id: btBCC
        type: u1
      - id: sak # beware it's not always exactly SAK
        -orig-id: btSAK
        type: u1
      - id: atqa
        -orig-id: abtATQA
        type: u2
      - id: manufacturer
        -orig-id: abtManufacturer
        size: 8
        doc: may contain manufacture date as BCD
  trailer:
    seq:
      - id: key_a
        -orig-id: abtKeyA
        type: key
      - id: access_bits
        -orig-id: abtAccessBits
        size: 3
        type: access_conditions
      - id: user_byte
        -orig-id: abtAccessBits
        type: u1

      - id: key_b
        -orig-id: abtKeyB
        type: key
    instances:
      ac_bits:
        value: 3
      acs_in_sector:
        value: 4
      ac_count_of_chunks:
        value: ac_bits*2 #6

    types:
      access_conditions:
        seq:
          - id: raw_chunks
            type: b4 # _parent.acs_in_sector
            repeat: expr
            repeat-expr: _parent.ac_count_of_chunks
        instances:
          remaps:
            pos: 0
            repeat: expr
            repeat-expr: _parent.ac_bits
            type: chunk_bit_remap(_index)
          chunks:
            pos: 0
            type: valid_chunk(raw_chunks[remaps[_index].inv_chunk_no], raw_chunks[remaps[_index].chunk_no])
            repeat: expr
            repeat-expr: _parent.ac_bits
          acs_raw:
            pos: 0
            type: ac(_index)
            repeat: expr
            repeat-expr: _parent.acs_in_sector
          data_acs:
            pos: 0
            type: data_ac(acs_raw[_index])
            repeat: expr
            repeat-expr: _parent.acs_in_sector-1
          trailer_ac:
            pos: 0
            type: trailer_ac(acs_raw[_parent.acs_in_sector-1])
        types:
          chunk_bit_remap:
            params:
              - id: bit_no
                type: u1
            instances:
              shift_value:
                value: (bit_no==1?-1:1)
              chunk_no:
                value: '((inv_chunk_no+shift_value+_parent._parent.ac_count_of_chunks)%_parent._parent.ac_count_of_chunks)'
              inv_chunk_no:
                value: 'bit_no+shift_value'
          valid_chunk:
            params:
              - id: inv_chunk
                type: u1
              - id: chunk
                type: u1
                doc: "c3 c2 c1 c0"
            instances:
              valid:
                value: inv_chunk ^ chunk == 0b1111
          ac:
            params:
              - id: index
                type: u1
            instances:
              bits:
                pos: 0
                repeat: expr
                repeat-expr: _parent._parent.ac_bits
                type: ac_bit(index, _parent.chunks[_index].chunk)

              val:
                value: (bits[2].n << 2) | (bits[1].n << 1) | bits[0].n
                doc: "c3 c2 c1"
              inv_shift_val:
                value: (bits[0].n << 2) | (bits[1].n << 1) | bits[2].n

            types:
              ac_bit:
                params:
                  - id: i
                    type: u1
                  - id: chunk
                    type: u1
                instances:
                  n:
                    value: (chunk >> i) & 1
                  b:
                    value: n == 1

          trailer_ac:
            params:
              - id: ac
                type: ac
            instances:
              can_read_key_b:
                value: ac.inv_shift_val <= 0b010
                doc: key A is required
              can_write_keys:
                value: "(ac.inv_shift_val+1)%3 != 0 and (ac.inv_shift_val<6)"
              can_write_access_bits:
                value: ac.bits[2].b
              key_b_controls_write:
                value: not can_read_key_b
          data_ac:
            params:
              - id: ac
                type: ac
            instances:
              read_key_a_required:
                value: ac.val <= 0b100
              read_key_b_required:
                value: ac.val <= 0b110
              write_key_a_required:
                value: ac.val == 0


              write_key_b_required:
                value: (not read_key_a_required or read_key_b_required) and not ac.bits[0].b
              increment_available:
                value: (not ac.bits[0].b and not read_key_a_required and not read_key_b_required) or (not ac.bits[0].b and read_key_a_required and read_key_b_required)
              decrement_available:
                value: (ac.bits[1].b or not ac.bits[0].b) and not ac.bits[2].b
`
  },
  {
    id: "ksy_bmp",
    name: "Bmp",
    category: "Images",
    metadata: {
      isGenerated: true,
      fileExtensions: ["bmp"],
      description: "",
      originalCategory: "image",
      filePath: "image/bmp.ksy",
      endian: "le"
    },
    content: `meta:
  id: bmp
  file-extension: bmp
  xref:
    forensicswiki: bmp
    justsolve: BMP
    loc: fdd000189
    mime: image/bmp
    pronom:
      - fmt/114 # Windows Bitmap 1.0
      - fmt/115 # Windows Bitmap 2.0
      - fmt/116 # Windows Bitmap 3.0
      - fmt/117 # Windows Bitmap 3.0 NT
      - fmt/118 # Windows Bitmap 4.0
      - fmt/119 # Windows Bitmap 5.0
      - x-fmt/25 # OS/2 Bitmap 1.0
      - x-fmt/270 # OS/2 Bitmap 2.0
    wikidata: Q192869
  tags:
    - windows
  license: CC0-1.0
  ks-version: 0.9
  endian: le
  # ks-opaque-types: true # uncomment this line and comment \`/types/bitmap\`,
                          # if you provide an opaque type \`bitmap\` for bitmap data
doc: |
  The **BMP file format**, also known as **bitmap image file** or **device independent
  bitmap (DIB) file format** or simply a **bitmap**, is a raster graphics image file
  format used to store bitmap digital images, independently of the display
  device (such as a graphics adapter), especially on Microsoft Windows
  and OS/2 operating systems.

  ## Samples

  Great collection of various BMP sample files:
  [**BMP Suite Image List**](
    http://entropymine.com/jason/bmpsuite/bmpsuite/html/bmpsuite.html
  ) (by Jason Summers)

  If only there was such a comprehensive sample suite for every file format! It's like
  a dream for every developer of any binary file format parser. It contains a lot of
  different types and variations of BMP files, even the tricky ones, where it's not clear
  from the specification how to deal with them (marked there as "**q**uestionable").

  If you make a program which will be able to read all the "**g**ood" and "**q**uestionable"
  BMP files and won't crash on the "**b**ad" ones, it will definitely have one of the most
  extensive support of BMP files in the universe!

  ## BITMAPV2INFOHEADER and BITMAPV3INFOHEADER

  A beneficial discussion on Adobe forum (archived):
  [**Invalid BMP Format with Alpha channel**](
    https://web.archive.org/web/20150127132443/https://forums.adobe.com/message/3272950
  )

  In 2010, someone noticed that Photoshop generated BMP with an odd type of header. There wasn't
  any documentation available for this header at the time (and still isn't).
  However, Chris Cox (former Adobe employee) claimed that they hadn't invented any type
  of proprietary header and everything they were writing was taken directly
  from the Microsoft documentation.

  It showed up that the unknown header was called BITMAPV3INFOHEADER.
  Although Microsoft has apparently requested and verified the use of the header,
  the documentation on MSDN has probably got lost and they have probably
  forgotten about this type of header.

  This is the only source I could find about these structures, so we could't rely
  on it so much, but I think supporting them as a read-only format won't harm anything.
  Due to the fact that it isn't documented anywhere else, most applications don't support it.

  All Windows headers at once (including mentioned BITMAPV2INFOHEADER and BITMAPV3INFOHEADER):

  ![Bitmap headers overview](
    https://web.archive.org/web/20190527043845/https://forums.adobe.com/servlet/JiveServlet/showImage/2-3273299-47801/BMP_Headers.png
  )

  ## Specs
   * [Bitmap Storage (Windows Dev Center)](
       https://learn.microsoft.com/en-us/windows/win32/gdi/bitmap-storage
     )
      * BITMAPFILEHEADER
      * BITMAPINFOHEADER
      * BITMAPV4HEADER
      * BITMAPV5HEADER
   * [OS/2 Bitmap File Format](
        https://www.fileformat.info/format/os2bmp/egff.htm
     )
      * BITMAPFILEHEADER (OS2BMPFILEHEADER)
      * BITMAPCOREHEADER (OS21XBITMAPHEADER)
      * OS22XBITMAPHEADER
   * [Microsoft Windows Bitmap](
        http://netghost.narod.ru/gff/graphics/summary/micbmp.htm
     )
      * BITMAPFILEHEADER (WINBMPFILEHEADER)
      * BITMAPCOREHEADER (WIN2XBITMAPHEADER)
      * BITMAPINFOHEADER (WINNTBITMAPHEADER)
      * BITMAPV4HEADER (WIN4XBITMAPHEADER)

seq:
  - id: file_hdr
    type: file_header
  - id: dib_info
    size: file_hdr.ofs_bitmap - file_hdr._sizeof
    type: bitmap_info
  - id: bitmap
    type: bitmap
    size-eos: true
types:
  bitmap:
    doc: |
      Replace with an opaque type if you care about the pixels. You can look at
      an example of a JavaScript implementation:
      <https://github.com/generalmimon/bmptool/blob/master/src/Bitmap.js>

      There is a proposal for adding bitmap data type to Kaitai Struct:
      <https://github.com/kaitai-io/kaitai_struct/issues/188>
  file_header:
    -orig-id: BITMAPFILEHEADER
    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/wingdi/ns-wingdi-bitmapfileheader
    seq:
      - id: file_type
        -orig-id: bfType
        contents: "BM"
      - id: len_file
        -orig-id: bfSize
        type: u4
        doc: not reliable, mostly ignored by BMP decoders
      - id: reserved1
        -orig-id: bfReserved1
        type: u2
      - id: reserved2
        -orig-id: bfReserved2
        type: u2
      - id: ofs_bitmap
        -orig-id: bfOffBits
        type: s4
        doc: Offset to actual raw pixel data of the image
  bitmap_info:
    -orig-id: BITMAPINFO
    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/wingdi/ns-wingdi-bitmapinfo
    seq:
      - id: len_header
        type: u4
      - id: header
        -orig-id: bmciHeader
        size: len_header - len_header._sizeof
        type: bitmap_header(len_header)
      - id: color_mask
        type: color_mask(header.bitmap_info_ext.compression == compressions::alpha_bitfields)
        if: is_color_mask_here
        doc: Valid only for BITMAPINFOHEADER, in all headers extending it the masks are contained in the header itself.
      - id: color_table
        -orig-id: bmciColors
        size-eos: true
        type: 'color_table(not header.is_core_header, header.extends_bitmap_info ? header.bitmap_info_ext.num_colors_used : 0)'
        if: not _io.eof
    instances:
      is_color_mask_here:
        value: >-
          not _io.eof
          and header.len_header == header_type::bitmap_info_header.to_i
          and (header.bitmap_info_ext.compression == compressions::bitfields or header.bitmap_info_ext.compression == compressions::alpha_bitfields)
      is_color_mask_given:
        value: >-
          header.extends_bitmap_info
          and (header.bitmap_info_ext.compression == compressions::bitfields or header.bitmap_info_ext.compression == compressions::alpha_bitfields)
          and (is_color_mask_here or header.is_color_mask_here)
      color_mask_given:
        value: >-
          is_color_mask_here
            ? color_mask
            : header.color_mask
        if: is_color_mask_given
      color_mask_red:
        value: >-
          is_color_mask_given
            ? color_mask_given.red_mask
            : header.bits_per_pixel == 16
              ? 0b11111_00000_00000
              : header.bits_per_pixel == 24 or header.bits_per_pixel == 32
                ? 0xff_00_00
                : 0
        #         ^ uses fixed color palette, so color mask is N/A
      color_mask_green:
        value: >-
          is_color_mask_given
            ? color_mask_given.green_mask
            : header.bits_per_pixel == 16
              ? 0b00000_11111_00000
              : header.bits_per_pixel == 24 or header.bits_per_pixel == 32
                ? 0x00_ff_00
                : 0
      color_mask_blue:
        value: >-
          is_color_mask_given
            ? color_mask_given.blue_mask
            : header.bits_per_pixel == 16
              ? 0b00000_00000_11111
              : header.bits_per_pixel == 24 or header.bits_per_pixel == 32
                ? 0x00_00_ff
                : 0
      color_mask_alpha:
        value: >-
          is_color_mask_given and color_mask_given.has_alpha_mask
            ? color_mask_given.alpha_mask
            : 0

  bitmap_header:
    -orig-id:
      - BITMAPCOREHEADER
      - OS21XBITMAPHEADER
    doc-ref:
      - https://learn.microsoft.com/en-us/windows/win32/api/wingdi/ns-wingdi-bitmapcoreheader
      - https://www.fileformat.info/format/os2bmp/egff.htm#OS2BMP-DMYID.3.1
    params:
      - id: len_header
        type: u4
    seq:
      - id: image_width
        -orig-id: biWidth
        type:
          switch-on: is_core_header
          cases:
            true: u2
            false: u4
        doc: Image width, px
      - id: image_height_raw
        -orig-id: biHeight
        type:
          switch-on: is_core_header
          cases:
            true: s2
            false: s4
        doc: Image height, px (positive => bottom-up image, negative => top-down image)
      - id: num_planes
        -orig-id: biPlanes
        type: u2
        # valid: 1
        doc: Number of planes for target device, must be 1
      - id: bits_per_pixel
        -orig-id: biBitCount
        type: u2
        doc: Number of bits per pixel that image buffer uses (1, 4, 8, 16, 24 or 32)
      - id: bitmap_info_ext
        type: bitmap_info_extension
        if: extends_bitmap_info
      - id: color_mask
        type: color_mask(len_header != header_type::bitmap_v2_info_header.to_i)
        if: is_color_mask_here
      - id: os2_2x_bitmap_ext
        type: os2_2x_bitmap_extension
        if: extends_os2_2x_bitmap
      - id: bitmap_v4_ext
        type: bitmap_v4_extension
        if: extends_bitmap_v4
      - id: bitmap_v5_ext
        type: bitmap_v5_extension
        if: extends_bitmap_v5
    instances:
      is_core_header:
        value: len_header == header_type::bitmap_core_header.to_i
      extends_bitmap_info:
        value: len_header >= header_type::bitmap_info_header.to_i
      extends_os2_2x_bitmap:
        value: len_header == header_type::os2_2x_bitmap_header.to_i
      extends_bitmap_v4:
        value: len_header >= header_type::bitmap_v4_header.to_i
      extends_bitmap_v5:
        value: len_header >= header_type::bitmap_v5_header.to_i
      image_height:
        value: 'image_height_raw < 0 ? -image_height_raw : image_height_raw'
      bottom_up:
        value: image_height_raw > 0
      is_color_mask_here:
        value: len_header == header_type::bitmap_v2_info_header.to_i
          or len_header == header_type::bitmap_v3_info_header.to_i
          or extends_bitmap_v4
      uses_fixed_palette:
        value: not (bits_per_pixel == 16 or bits_per_pixel == 24 or bits_per_pixel == 32)
          and not (extends_bitmap_info and not extends_os2_2x_bitmap and (bitmap_info_ext.compression == compressions::jpeg or bitmap_info_ext.compression == compressions::png))
  bitmap_info_extension:
    -orig-id: BITMAPINFOHEADER
    doc-ref: https://learn.microsoft.com/en-us/previous-versions/dd183376(v=vs.85)
    seq:
      - id: compression
        -orig-id: biCompression
        type: u4
        enum: compressions
        if: not _parent.extends_os2_2x_bitmap
      - id: os2_compression
        -orig-id: Compression
        type: u4
        enum: os2_compressions
        if: _parent.extends_os2_2x_bitmap
      - id: len_image
        -orig-id: biSizeImage
        type: u4
        doc: |
          If biCompression is BI_JPEG or BI_PNG, indicates the size of the JPEG or PNG image buffer.
          This may be set to zero for BI_RGB bitmaps.
      - id: x_resolution
        -orig-id: biXPelsPerMeter
        type: u4
      - id: y_resolution
        -orig-id: biYPelsPerMeter
        type: u4
      - id: num_colors_used
        -orig-id: biClrUsed
        type: u4
      - id: num_colors_important
        -orig-id: biClrImportant
        type: u4
  os2_2x_bitmap_extension:
    -orig-id: OS22XBITMAPHEADER
    doc-ref: https://www.fileformat.info/format/os2bmp/egff.htm#OS2BMP-DMYID.3.2
    seq:
      - id: units
        type: u2
      - id: reserved
        type: u2
      - id: recording
        type: u2
        # valid: 0
        doc: |
          Specifies how the bitmap scan lines are stored.
          The only valid value for this field is 0, indicating that the bitmap is
          stored from left to right and from the bottom up.
      - id: rendering
        type: u2
        enum: os2_rendering
        doc: Specifies the halftoning algorithm used on the bitmap data.
      - id: size1
        type: u4
        doc: |
          rendering == os2_rendering::error_diffusion
            => error damping as a percentage in the range 0 through 100
          rendering == os2_rendering::panda or rendering == os2_rendering::super_circle
            => X dimension of the pattern used in pixels
      - id: size2
        type: u4
        doc: |
          rendering == os2_rendering::error_diffusion
            => not used
          rendering == os2_rendering::panda or rendering == os2_rendering::super_circle
            => Y dimension of the pattern used in pixels
      - id: color_encoding
        type: u4
        doc: |
          Specifies the color model used to describe the bitmap data.
          The only valid value is 0, indicating the RGB encoding scheme.
      - id: identifier
        type: u4
        doc: Application-specific value

  bitmap_v4_extension:
    -orig-id: BITMAPV4HEADER
    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/wingdi/ns-wingdi-bitmapv4header
    seq:
      - id: color_space_type
        -orig-id: bV4CSType
        type: u4
        enum: color_space
      - id: endpoint_red
        type: cie_xyz
      - id: endpoint_green
        type: cie_xyz
      - id: endpoint_blue
        type: cie_xyz
      - id: gamma_red
        -orig-id: bV4GammaRed
        type: fixed_point_16_dot_16
      - id: gamma_blue
        -orig-id: bV4GammaGreen
        type: fixed_point_16_dot_16
      - id: gamma_green
        -orig-id: bV4GammaBlue
        type: fixed_point_16_dot_16

  cie_xyz:
    -orig-id: CIEXYZ
    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/wingdi/ns-wingdi-ciexyz
    seq:
      - id: x
        type: fixed_point_2_dot_30
      - id: y
        type: fixed_point_2_dot_30
      - id: z
        type: fixed_point_2_dot_30

  bitmap_v5_extension:
    meta:
      encoding: windows-1252 # for the file name of linked profile (see profile_data below)
    -orig-id: BITMAPV5HEADER
    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/wingdi/ns-wingdi-bitmapv5header
    seq:
      - id: intent
        -orig-id: bV5Intent
        type: u4
        enum: intent
      - id: ofs_profile
        -orig-id: bV5ProfileData
        doc: The offset, in bytes, from the beginning of the BITMAPV5HEADER structure to the start of the profile data.
        type: u4
      - id: len_profile
        -orig-id: bV5ProfileSize
        type: u4
      - id: reserved
        -orig-id: bV5Reserved
        type: u4
    instances:
      has_profile:
        value: >-
          _parent.bitmap_v4_ext.color_space_type == color_space::profile_linked
          or _parent.bitmap_v4_ext.color_space_type == color_space::profile_embedded
      profile_data:
        io: _root._io
        pos: _root.file_hdr._sizeof + ofs_profile
        size: len_profile
        type:
          switch-on: _parent.bitmap_v4_ext.color_space_type == color_space::profile_linked
          cases:
            true: strz
        if: has_profile
        doc-ref: https://learn.microsoft.com/en-us/windows/win32/wcs/using-structures-in-wcs-1-0 "If the profile is embedded,
          profile data is the actual profile, and if it is linked, the profile data is the
          null-terminated file name of the profile. This cannot be a Unicode string. It must be composed exclusively
          of characters from the Windows character set (code page 1252)."

  color_table:
    params:
      - id: has_reserved_field
        type: bool
      - id: num_colors
        doc: |
          If equal to 0, the pallete should contain as many colors as can fit into the pixel value
          according to the \`bits_per_pixel\` field (if \`bits_per_pixel\` = 8, then the pixel can
          represent 2 ** 8 = 256 values, so exactly 256 colors should be present). For more flexibility,
          it reads as many colors as it can until EOS is reached (and the image data begin).
        type: u4
    seq:
      - id: colors
        type: rgb_record(has_reserved_field)
        repeat: expr
        repeat-expr: 'num_colors > 0 and num_colors < num_colors_present ? num_colors : num_colors_present'
    instances:
      num_colors_present:
        value: '_io.size / (has_reserved_field ? 4 : 3)'
  color_mask:
    params:
      - id: has_alpha_mask
        type: bool
    seq:
      - id: red_mask
        type: u4
      - id: green_mask
        type: u4
      - id: blue_mask
        type: u4
      - id: alpha_mask
        type: u4
        if: has_alpha_mask
  rgb_record:
    -orig-id:
      - RGB_TRIPLE
      - RGB_QUAD
    params:
      - id: has_reserved_field
        type: bool
    seq:
      - id: blue
        type: u1
      - id: green
        type: u1
      - id: red
        type: u1
      - id: reserved
        type: u1
        if: has_reserved_field
    -webide-representation: "rgb({red:dec}, {green:dec}, {blue:dec})"
# Common types
  fixed_point_2_dot_30:
    -orig-id: FXPT2DOT30
    seq:
      - id: raw
        type: u4
    instances:
      value:
        value: (raw + 0.0) / (1 << 30)
    -webide-representation: "{value}"
  fixed_point_16_dot_16:
    seq:
      - id: raw
        type: u4
    instances:
      value:
        value: (raw + 0.0) / (1 << 16)
    -webide-representation: "{value}"
enums:
  compressions:
    # https://learn.microsoft.com/en-us/windows/win32/api/wingdi/ns-wingdi-bitmapv5header (search for bV5Compression)
    0:
      id: rgb
      -orig-id: BI_RGB
      doc: Uncompressed RGB format
    1:
      id: rle8
      -orig-id: BI_RLE8
      doc: RLE compression, 8 bits per pixel
    2:
      id: rle4
      -orig-id: BI_RLE4
      doc: RLE compression, 4 bits per pixel
    3:
      id: bitfields
      -orig-id: BI_BITFIELDS
    4:
      id: jpeg
      -orig-id: BI_JPEG
      doc: BMP file includes whole JPEG file in image buffer
    5:
      id: png
      -orig-id: BI_PNG
      doc: BMP file includes whole PNG file in image buffer
    6:
      id: alpha_bitfields
      -orig-id: BI_ALPHABITFIELDS
      doc: only Windows CE 5.0 with .NET 4.0 or later
      doc-ref:
        - https://en.wikipedia.org/wiki/BMP_file_format#DIB_header_(bitmap_information_header) table of compression methods
        - http://entropymine.com/jason/bmpsuite/bmpsuite/html/bmpsuite.html q/rgba32abf.bmp
  os2_compressions:
    # https://www.fileformat.info/format/os2bmp/egff.htm#OS2BMP-DMYID.3.2
    0:
      id: rgb
    1:
      id: rle8
    2:
      id: rle4
    3:
      id: huffman_1d
      doc: Huffman 1D compression (also known as CCITT Group 3 One-Dimensional (G31D))
    4:
      id: rle24
      doc: RLE compression, 24 bits per pixel
  os2_rendering:
    0:
      id: no_halftoning
    1:
      id: error_diffusion
    2:
      id: panda
      doc: Processing Algorithm for Noncoded Document Acquisition (PANDA)
    3:
      id: super_circle

  color_space:
    # https://learn.microsoft.com/en-us/windows/win32/api/wingdi/ns-wingdi-bitmapv5header#members
  # For BITMAPV4HEADER:
    0:
      id: calibrated_rgb
      -orig-id: LCS_CALIBRATED_RGB
      doc: This value implies that endpoints and gamma values are given in the appropriate fields.
    0x73524742: # 'sRGB'
      id: s_rgb
      -orig-id: LCS_sRGB
      doc: Specifies that the bitmap is in sRGB color space.
    0x57696e20: # 'Win '
      id: windows
      -orig-id: LCS_WINDOWS_COLOR_SPACE
      doc: This value indicates that the bitmap is in the system default color space, sRGB.
  # For BITMAPV5HEADER:
    0x4c494e4b: # 'LINK'
      id: profile_linked
      -orig-id: PROFILE_LINKED
      doc: |
        This value indicates that bV5ProfileData points to the file name of the profile
        to use (gamma and endpoints values are ignored).

        If a profile is linked, the path of the profile can be any fully qualified name
        (including a network path) that can be opened using the Win32 CreateFile function.
    0x4d424544: # 'MBED'
      id: profile_embedded
      -orig-id: PROFILE_EMBEDDED
      doc: |
        This value indicates that bV5ProfileData points to a memory buffer that contains
        the profile to be used (gamma and endpoints values are ignored).
  intent:
    # https://learn.microsoft.com/en-us/windows/win32/api/wingdi/ns-wingdi-bitmapv5header#members
    8:
      id: abs_colorimetric
      -orig-id: LCS_GM_ABS_COLORIMETRIC
      doc: Maintains the white point. Matches the colors to their nearest color in the destination gamut.
    1:
      id: business
      -orig-id: LCS_GM_BUSINESS
      doc: Maintains saturation. Used for business charts and other situations in which undithered colors are required.
    2:
      id: graphics
      -orig-id: LCS_GM_GRAPHICS
      doc: Maintains colorimetric match. Used for graphic designs and named colors.
    4:
      id: images
      -orig-id: LCS_GM_IMAGES
      doc: Maintains contrast. Used for photographs and natural images.

  header_type:
    # https://web.archive.org/web/20190527043845/https://forums.adobe.com/servlet/JiveServlet/showImage/2-3273299-47801/BMP_Headers.png
    12: bitmap_core_header
    40: bitmap_info_header
    52: bitmap_v2_info_header
    56: bitmap_v3_info_header
    64: os2_2x_bitmap_header
    108: bitmap_v4_header
    124: bitmap_v5_header
`
  },
  {
    id: "ksy_dicom",
    name: "Digital Imaging and Communications in Medicine (DICOM) file format",
    category: "Images",
    metadata: {
      isGenerated: true,
      fileExtensions: ["dcm"],
      description: "Digital Imaging and Communications in Medicine (DICOM) file format",
      originalCategory: "image",
      filePath: "image/dicom.ksy",
      endian: "le"
    },
    content: `meta:
  id: dicom
  title: Digital Imaging and Communications in Medicine (DICOM) file format
  file-extension: dcm
  xref:
    justsolve: DICOM
    mime: application/dicom
    pronom: fmt/574
    wikidata: Q81095
  license: MIT
  endian: le
doc-ref: 'https://dicom.nema.org/medical/dicom/current/output/html/part10.html#chapter_7'
doc: |
  DICOM (Digital Imaging and Communications in Medicine), AKA NEMA
  PS3, AKA ISO 12052:2006, is a file format and network protocol
  standard for medical imaging purposes. This parser covers file
  format, typically written by various medical equipment, such as
  radiography, computer tomography scans, MRT, ultrasonography, etc.

  DICOM defines two transfer syntaxes: implicit and explicit. This
  top-level parser attempts to autodetect and handle both of them. If
  any problems arise, one can use \`file_explicit\` and \`file_implicit\`
  subtypes to force parsing in particular transfer syntax.
seq:
  - id: file_header
    type: t_file_header
  - id: elements
    type: t_data_element_implicit
    repeat: eos
types:
  t_file_header:
    seq:
      - id: preamble
        size: 128
      - id: magic
        contents: 'DICM'
  t_data_element_explicit:
    doc-ref: 'https://dicom.nema.org/medical/dicom/current/output/html/part05.html#sect_7.1.2'
    seq:
      - id: tag_group
        type: u2
      - id: tag_elem
        type: u2
      - id: vr
        type: str
        encoding: ASCII
        size: 2
        if: not is_forced_implicit
      - id: reserved
        type: u2
        if: is_long_len and not is_forced_implicit
      - id: value_len
        type:
          switch-on: is_long_len
          cases:
            false: u2
            true: u4
      - id: value
        size: value_len
        if: value_len != 0xffff_ffff
      - id: items
        type: seq_item
        repeat: until
        repeat-until: _.tag_elem == 0xe0dd
        if: vr == 'SQ' and value_len == 0xffff_ffff
      - id: elements_implicit
        type: t_data_element_implicit
        repeat: eos
        if: is_transfer_syntax_change_implicit
    instances:
      is_forced_implicit:
        value: tag_group == 0xfffe
      is_long_len:
        value: >
          is_forced_implicit or
          vr == 'OB' or
          vr == 'OD' or
          vr == 'OF' or
          vr == 'OL' or
          vr == 'OW' or
          vr == 'SQ' or
          vr == 'UC' or
          vr == 'UR' or
          vr == 'UT' or
          vr == 'UN'
#      p_is_transfer_syntax_change_non_implicit:
#        # '1.2.840.10008.1.2.1\\0' (Explicit VR Little Endian)
#        # See https://www.dicomlibrary.com/dicom/transfer-syntax/
#        value: value != [49, 46, 50, 46, 56, 52, 48, 46, 49, 48, 48, 48, 56, 46, 49, 46, 50, 46, 49, 0]
      is_transfer_syntax_change_implicit:
        value: false
      tag:
        value: 'tag_group << 16 | tag_elem'
        enum: tags
  t_data_element_implicit:
    doc-ref: 'https://dicom.nema.org/medical/dicom/current/output/html/part05.html#sect_7.1.2'
    seq:
      - id: tag_group
        type: u2
      - id: tag_elem
        type: u2
      - id: vr
        type: str
        encoding: ASCII
        size: 2
        if: is_forced_explicit
      - id: reserved
        type: u2
        if: is_long_len and is_forced_explicit
      - id: value_len
        type:
          switch-on: 'is_forced_explicit ? is_long_len : true'
          cases:
            false: u2
            true: u4
      - id: value
        size: value_len
        if: value_len != 0xffff_ffff
      - id: items
        type: seq_item
        repeat: until
        repeat-until: _.tag_elem == 0xe0dd
        if: vr == 'SQ' and value_len == 0xffff_ffff
      - id: elements
        type: t_data_element_explicit
        repeat: eos
        if: is_transfer_syntax_change_explicit
    instances:
      is_forced_explicit:
        value: tag_group == 0x0002
      is_long_len:
        value: >
          is_forced_explicit and (
          vr == 'OB' or
          vr == 'OD' or
          vr == 'OF' or
          vr == 'OL' or
          vr == 'OW' or
          vr == 'SQ' or
          vr == 'UC' or
          vr == 'UR' or
          vr == 'UT' or
          vr == 'UN')
      tag:
        value: 'tag_group << 16 | tag_elem'
        enum: tags
      p_is_transfer_syntax_change_explicit:
        # '1.2.840.10008.1.2.1\\0' (Explicit VR Little Endian)
        # See https://www.dicomlibrary.com/dicom/transfer-syntax/
        value: value == [49, 46, 50, 46, 56, 52, 48, 46, 49, 48, 48, 48, 56, 46, 49, 46, 50, 46, 49, 0]
      is_transfer_syntax_change_explicit:
        value: p_is_transfer_syntax_change_explicit
  seq_item:
    seq:
      - id: tag_group
        contents: [0xfe, 0xff]
      - id: tag_elem
        type: u2
      - id: value_len
        type: u4
      - id: value
        size: value_len
        if: value_len != 0xffff_ffff
      - id: items
        type: t_data_element_explicit
        repeat: until
        repeat-until: _.tag_group == 0xfffe and _.tag_elem == 0xe00d
        if: value_len == 0xffff_ffff
enums:
  tags:
    0x00020000: file_meta_information_group_length
    0x00020001: file_meta_information_version
    0x00020002: media_storage_sop_class_uid
    0x00020003: media_storage_sop_instance_uid
    0x00020010: transfer_syntax_uid
    0x00020012: implementation_class_uid
    0x00020013: implementation_version_name
    0x00020016: source_application_entity_title
    0x00020017: sending_application_entity_title
    0x00020018: receiving_application_entity_title
    0x00020100: private_information_creator_uid
    0x00020102: private_information
    0x00041130: file_set_id
    0x00041141: file_set_descriptor_file_id
    0x00041142: specific_character_set_of_file_set_descriptor_file
    0x00041200: offset_of_the_first_directory_record_of_the_root_directory_entity
    0x00041202: offset_of_the_last_directory_record_of_the_root_directory_entity
    0x00041212: file_set_consistency_flag
    0x00041220: directory_record_sequence
    0x00041400: offset_of_the_next_directory_record
    0x00041410: record_in_use_flag
    0x00041420: offset_of_referenced_lower_level_directory_entity
    0x00041430: directory_record_type
    0x00041432: private_record_uid
    0x00041500: referenced_file_id
    0x00041504: mrdr_directory_record_offset
    0x00041510: referenced_sop_class_uid_in_file
    0x00041511: referenced_sop_instance_uid_in_file
    0x00041512: referenced_transfer_syntax_uid_in_file
    0x0004151A: referenced_related_general_sop_class_uid_in_file
    0x00041600: number_of_references
    0x00080001: length_to_end
    0x00080005: specific_character_set
    0x00080006: language_code_sequence
    0x00080008: image_type
    0x00080010: recognition_code
    0x00080012: instance_creation_date
    0x00080013: instance_creation_time
    0x00080014: instance_creator_uid
    0x00080015: instance_coercion_datetime
    0x00080016: sop_class_uid
    0x00080018: sop_instance_uid
    0x0008001A: related_general_sop_class_uid
    0x0008001B: original_specialized_sop_class_uid
    0x00080020: study_date
    0x00080021: series_date
    0x00080022: acquisition_date
    0x00080023: content_date
    0x00080024: overlay_date
    0x00080025: curve_date
    0x0008002A: acquisition_datetime
    0x00080030: study_time
    0x00080031: series_time
    0x00080032: acquisition_time
    0x00080033: content_time
    0x00080034: overlay_time
    0x00080035: curve_time
    0x00080040: data_set_type
    0x00080041: data_set_subtype
    0x00080042: nuclear_medicine_series_type
    0x00080050: accession_number
    0x00080051: issuer_of_accession_number_sequence
    0x00080052: query_retrieve_level
    0x00080053: query_retrieve_view
    0x00080054: retrieve_ae_title
    0x00080055: station_ae_title
    0x00080056: instance_availability
    0x00080058: failed_sop_instance_uid_list
    0x00080060: modality
    0x00080061: modalities_in_study
    0x00080062: sop_classes_in_study
    0x00080064: conversion_type
    0x00080068: presentation_intent_type
    0x00080070: manufacturer
    0x00080080: institution_name
    0x00080081: institution_address
    0x00080082: institution_code_sequence
    0x00080090: referring_physician_s_name
    0x00080092: referring_physician_s_address
    0x00080094: referring_physician_s_telephone_numbers
    0x00080096: referring_physician_identification_sequence
    0x0008009C: consulting_physician_s_name
    0x0008009D: consulting_physician_identification_sequence
    0x00080100: code_value
    0x00080101: extended_code_value
    0x00080102: coding_scheme_designator
    0x00080103: coding_scheme_version
    0x00080104: code_meaning
    0x00080105: mapping_resource
    0x00080106: context_group_version
    0x00080107: context_group_local_version
    0x00080108: extended_code_meaning
    0x0008010B: context_group_extension_flag
    0x0008010C: coding_scheme_uid
    0x0008010D: context_group_extension_creator_uid
    0x0008010F: context_identifier
    0x00080110: coding_scheme_identification_sequence
    0x00080112: coding_scheme_registry
    0x00080114: coding_scheme_external_id
    0x00080115: coding_scheme_name
    0x00080116: coding_scheme_responsible_organization
    0x00080117: context_uid
    0x00080118: mapping_resource_uid
    0x00080119: long_code_value
    0x00080120: urn_code_value
    0x00080121: equivalent_code_sequence
    0x00080122: mapping_resource_name
    0x00080123: context_group_identification_sequence
    0x00080124: mapping_resource_identification_sequence
    0x00080201: timezone_offset_from_utc
    0x00080300: private_data_element_characteristics_sequence
    0x00080301: private_group_reference
    0x00080302: private_creator_reference
    0x00080303: block_identifying_information_status
    0x00080304: nonidentifying_private_elements
    0x00080306: identifying_private_elements
    0x00080305: deidentification_action_sequence
    0x00080307: deidentification_action
    0x00081000: network_id
    0x00081010: station_name
    0x00081030: study_description
    0x00081032: procedure_code_sequence
    0x0008103E: series_description
    0x0008103F: series_description_code_sequence
    0x00081040: institutional_department_name
    0x00081048: physician_s__of_record
    0x00081049: physician_s__of_record_identification_sequence
    0x00081050: performing_physician_s_name
    0x00081052: performing_physician_identification_sequence
    0x00081060: name_of_physician_s__reading_study
    0x00081062: physician_s__reading_study_identification_sequence
    0x00081070: operators__name
    0x00081072: operator_identification_sequence
    0x00081080: admitting_diagnoses_description
    0x00081084: admitting_diagnoses_code_sequence
    0x00081090: manufacturer_s_model_name
    0x00081100: referenced_results_sequence
    0x00081110: referenced_study_sequence
    0x00081111: referenced_performed_procedure_step_sequence
    0x00081115: referenced_series_sequence
    0x00081120: referenced_patient_sequence
    0x00081125: referenced_visit_sequence
    0x00081130: referenced_overlay_sequence
    0x00081134: referenced_stereometric_instance_sequence
    0x0008113A: referenced_waveform_sequence
    0x00081140: referenced_image_sequence
    0x00081145: referenced_curve_sequence
    0x0008114A: referenced_instance_sequence
    0x0008114B: referenced_real_world_value_mapping_instance_sequence
    0x00081150: referenced_sop_class_uid
    0x00081155: referenced_sop_instance_uid
    0x0008115A: sop_classes_supported
    0x00081160: referenced_frame_number
    0x00081161: simple_frame_list
    0x00081162: calculated_frame_list
    0x00081163: time_range
    0x00081164: frame_extraction_sequence
    0x00081167: multi_frame_source_sop_instance_uid
    0x00081190: retrieve_url
    0x00081195: transaction_uid
    0x00081196: warning_reason
    0x00081197: failure_reason
    0x00081198: failed_sop_sequence
    0x00081199: referenced_sop_sequence
    0x0008119A: other_failures_sequence
    0x00081200: studies_containing_other_referenced_instances_sequence
    0x00081250: related_series_sequence
    0x00082110: lossy_image_compression_retired
    0x00082111: derivation_description
    0x00082112: source_image_sequence
    0x00082120: stage_name
    0x00082122: stage_number
    0x00082124: number_of_stages
    0x00082127: view_name
    0x00082128: view_number
    0x00082129: number_of_event_timers
    0x0008212A: number_of_views_in_stage
    0x00082130: event_elapsed_time_s_
    0x00082132: event_timer_name_s_
    0x00082133: event_timer_sequence
    0x00082134: event_time_offset
    0x00082135: event_code_sequence
    0x00082142: start_trim
    0x00082143: stop_trim
    0x00082144: recommended_display_frame_rate
    0x00082200: transducer_position
    0x00082204: transducer_orientation
    0x00082208: anatomic_structure
    0x00082218: anatomic_region_sequence
    0x00082220: anatomic_region_modifier_sequence
    0x00082228: primary_anatomic_structure_sequence
    0x00082229: anatomic_structure__space_or_region_sequence
    0x00082230: primary_anatomic_structure_modifier_sequence
    0x00082240: transducer_position_sequence
    0x00082242: transducer_position_modifier_sequence
    0x00082244: transducer_orientation_sequence
    0x00082246: transducer_orientation_modifier_sequence
    0x00082251: anatomic_structure_space_or_region_code_sequence__trial_
    0x00082253: anatomic_portal_of_entrance_code_sequence__trial_
    0x00082255: anatomic_approach_direction_code_sequence__trial_
    0x00082256: anatomic_perspective_description__trial_
    0x00082257: anatomic_perspective_code_sequence__trial_
    0x00082258: anatomic_location_of_examining_instrument_description__trial_
    0x00082259: anatomic_location_of_examining_instrument_code_sequence__trial_
    0x0008225A: anatomic_structure_space_or_region_modifier_code_sequence__trial_
    0x0008225C: on_axis_background_anatomic_structure_code_sequence__trial_
    0x00083001: alternate_representation_sequence
    0x00083010: irradiation_event_uid
    0x00083011: source_irradiation_event_sequence
    0x00083012: radiopharmaceutical_administration_event_uid
    0x00084000: identifying_comments
    0x00089007: frame_type
    0x00089092: referenced_image_evidence_sequence
    0x00089121: referenced_raw_data_sequence
    0x00089123: creator_version_uid
    0x00089124: derivation_image_sequence
    0x00089154: source_image_evidence_sequence
    0x00089205: pixel_presentation
    0x00089206: volumetric_properties
    0x00089207: volume_based_calculation_technique
    0x00089208: complex_image_component
    0x00089209: acquisition_contrast
    0x00089215: derivation_code_sequence
    0x00089237: referenced_presentation_state_sequence
    0x00089410: referenced_other_plane_sequence
    0x00089458: frame_display_sequence
    0x00089459: recommended_display_frame_rate_in_float
    0x00089460: skip_frame_range_flag
    0x00100010: patient_s_name
    0x00100020: patient_id
    0x00100021: issuer_of_patient_id
    0x00100022: type_of_patient_id
    0x00100024: issuer_of_patient_id_qualifiers_sequence
    0x00100026: source_patient_group_identification_sequence
    0x00100027: group_of_patients_identification_sequence
    0x00100028: subject_relative_position_in_image
    0x00100030: patient_s_birth_date
    0x00100032: patient_s_birth_time
    0x00100033: patient_s_birth_date_in_alternative_calendar
    0x00100034: patient_s_death_date_in_alternative_calendar
    0x00100035: patient_s_alternative_calendar
    0x00100040: patient_s_sex
    0x00100050: patient_s_insurance_plan_code_sequence
    0x00100101: patient_s_primary_language_code_sequence
    0x00100102: patient_s_primary_language_modifier_code_sequence
    0x00100200: quality_control_subject
    0x00100201: quality_control_subject_type_code_sequence
    0x00100212: strain_description
    0x00100213: strain_nomenclature
    0x00100214: strain_stock_number
    0x00100215: strain_source_registry_code_sequence
    0x00100216: strain_stock_sequence
    0x00100217: strain_source
    0x00100218: strain_additional_information
    0x00100219: strain_code_sequence
    0x00101000: other_patient_ids
    0x00101001: other_patient_names
    0x00101002: other_patient_ids_sequence
    0x00101005: patient_s_birth_name
    0x00101010: patient_s_age
    0x00101020: patient_s_size
    0x00101021: patient_s_size_code_sequence
    0x00101030: patient_s_weight
    0x00101040: patient_s_address
    0x00101050: insurance_plan_identification
    0x00101060: patient_s_mother_s_birth_name
    0x00101080: military_rank
    0x00101081: branch_of_service
    0x00101090: medical_record_locator
    0x00101100: referenced_patient_photo_sequence
    0x00102000: medical_alerts
    0x00102110: allergies
    0x00102150: country_of_residence
    0x00102152: region_of_residence
    0x00102154: patient_s_telephone_numbers
    0x00102155: patient_s_telecom_information
    0x00102160: ethnic_group
    0x00102180: occupation
    0x001021A0: smoking_status
    0x001021B0: additional_patient_history
    0x001021C0: pregnancy_status
    0x001021D0: last_menstrual_date
    0x001021F0: patient_s_religious_preference
    0x00102201: patient_species_description
    0x00102202: patient_species_code_sequence
    0x00102203: patient_s_sex_neutered
    0x00102210: anatomical_orientation_type
    0x00102292: patient_breed_description
    0x00102293: patient_breed_code_sequence
    0x00102294: breed_registration_sequence
    0x00102295: breed_registration_number
    0x00102296: breed_registry_code_sequence
    0x00102297: responsible_person
    0x00102298: responsible_person_role
    0x00102299: responsible_organization
    0x00104000: patient_comments
    0x00109431: examined_body_thickness
    0x00120010: clinical_trial_sponsor_name
    0x00120020: clinical_trial_protocol_id
    0x00120021: clinical_trial_protocol_name
    0x00120030: clinical_trial_site_id
    0x00120031: clinical_trial_site_name
    0x00120040: clinical_trial_subject_id
    0x00120042: clinical_trial_subject_reading_id
    0x00120050: clinical_trial_time_point_id
    0x00120051: clinical_trial_time_point_description
    0x00120060: clinical_trial_coordinating_center_name
    0x00120062: patient_identity_removed
    0x00120063: de_identification_method
    0x00120064: de_identification_method_code_sequence
    0x00120071: clinical_trial_series_id
    0x00120072: clinical_trial_series_description
    0x00120081: clinical_trial_protocol_ethics_committee_name
    0x00120082: clinical_trial_protocol_ethics_committee_approval_number
    0x00120083: consent_for_clinical_trial_use_sequence
    0x00120084: distribution_type
    0x00120085: consent_for_distribution_flag
    0x00140023: cad_file_format
    0x00140024: component_reference_system
    0x00140025: component_manufacturing_procedure
    0x00140028: component_manufacturer
    0x00140030: material_thickness
    0x00140032: material_pipe_diameter
    0x00140034: material_isolation_diameter
    0x00140042: material_grade
    0x00140044: material_properties_description
    0x00140045: material_properties_file_format__retired_
    0x00140046: material_notes
    0x00140050: component_shape
    0x00140052: curvature_type
    0x00140054: outer_diameter
    0x00140056: inner_diameter
    0x00140100: component_welder_ids
    0x00140101: secondary_approval_status
    0x00140102: secondary_review_date
    0x00140103: secondary_review_time
    0x00140104: secondary_reviewer_name
    0x00140105: repair_id
    0x00140106: multiple_component_approval_sequence
    0x00140107: other_approval_status
    0x00140108: other_secondary_approval_status
    0x00141010: actual_environmental_conditions
    0x00141020: expiry_date
    0x00141040: environmental_conditions
    0x00142002: evaluator_sequence
    0x00142004: evaluator_number
    0x00142006: evaluator_name
    0x00142008: evaluation_attempt
    0x00142012: indication_sequence
    0x00142014: indication_number
    0x00142016: indication_label
    0x00142018: indication_description
    0x0014201A: indication_type
    0x0014201C: indication_disposition
    0x0014201E: indication_roi_sequence
    0x00142030: indication_physical_property_sequence
    0x00142032: property_label
    0x00142202: coordinate_system_number_of_axes
    0x00142204: coordinate_system_axes_sequence
    0x00142206: coordinate_system_axis_description
    0x00142208: coordinate_system_data_set_mapping
    0x0014220A: coordinate_system_axis_number
    0x0014220C: coordinate_system_axis_type
    0x0014220E: coordinate_system_axis_units
    0x00142210: coordinate_system_axis_values
    0x00142220: coordinate_system_transform_sequence
    0x00142222: transform_description
    0x00142224: transform_number_of_axes
    0x00142226: transform_order_of_axes
    0x00142228: transformed_axis_units
    0x0014222A: coordinate_system_transform_rotation_and_scale_matrix
    0x0014222C: coordinate_system_transform_translation_matrix
    0x00143011: internal_detector_frame_time
    0x00143012: number_of_frames_integrated
    0x00143020: detector_temperature_sequence
    0x00143022: sensor_name
    0x00143024: horizontal_offset_of_sensor
    0x00143026: vertical_offset_of_sensor
    0x00143028: sensor_temperature
    0x00143040: dark_current_sequence
    0x00143050: dark_current_counts
    0x00143060: gain_correction_reference_sequence
    0x00143070: air_counts
    0x00143071: kv_used_in_gain_calibration
    0x00143072: ma_used_in_gain_calibration
    0x00143073: number_of_frames_used_for_integration
    0x00143074: filter_material_used_in_gain_calibration
    0x00143075: filter_thickness_used_in_gain_calibration
    0x00143076: date_of_gain_calibration
    0x00143077: time_of_gain_calibration
    0x00143080: bad_pixel_image
    0x00143099: calibration_notes
    0x00144002: pulser_equipment_sequence
    0x00144004: pulser_type
    0x00144006: pulser_notes
    0x00144008: receiver_equipment_sequence
    0x0014400A: amplifier_type
    0x0014400C: receiver_notes
    0x0014400E: pre_amplifier_equipment_sequence
    0x0014400F: pre_amplifier_notes
    0x00144010: transmit_transducer_sequence
    0x00144011: receive_transducer_sequence
    0x00144012: number_of_elements
    0x00144013: element_shape
    0x00144014: element_dimension_a
    0x00144015: element_dimension_b
    0x00144016: element_pitch_a
    0x00144017: measured_beam_dimension_a
    0x00144018: measured_beam_dimension_b
    0x00144019: location_of_measured_beam_diameter
    0x0014401A: nominal_frequency
    0x0014401B: measured_center_frequency
    0x0014401C: measured_bandwidth
    0x0014401D: element_pitch_b
    0x00144020: pulser_settings_sequence
    0x00144022: pulse_width
    0x00144024: excitation_frequency
    0x00144026: modulation_type
    0x00144028: damping
    0x00144030: receiver_settings_sequence
    0x00144031: acquired_soundpath_length
    0x00144032: acquisition_compression_type
    0x00144033: acquisition_sample_size
    0x00144034: rectifier_smoothing
    0x00144035: dac_sequence
    0x00144036: dac_type
    0x00144038: dac_gain_points
    0x0014403A: dac_time_points
    0x0014403C: dac_amplitude
    0x00144040: pre_amplifier_settings_sequence
    0x00144050: transmit_transducer_settings_sequence
    0x00144051: receive_transducer_settings_sequence
    0x00144052: incident_angle
    0x00144054: coupling_technique
    0x00144056: coupling_medium
    0x00144057: coupling_velocity
    0x00144058: probe_center_location_x
    0x00144059: probe_center_location_z
    0x0014405A: sound_path_length
    0x0014405C: delay_law_identifier
    0x00144060: gate_settings_sequence
    0x00144062: gate_threshold
    0x00144064: velocity_of_sound
    0x00144070: calibration_settings_sequence
    0x00144072: calibration_procedure
    0x00144074: procedure_version
    0x00144076: procedure_creation_date
    0x00144078: procedure_expiration_date
    0x0014407A: procedure_last_modified_date
    0x0014407C: calibration_time
    0x0014407E: calibration_date
    0x00144080: probe_drive_equipment_sequence
    0x00144081: drive_type
    0x00144082: probe_drive_notes
    0x00144083: drive_probe_sequence
    0x00144084: probe_inductance
    0x00144085: probe_resistance
    0x00144086: receive_probe_sequence
    0x00144087: probe_drive_settings_sequence
    0x00144088: bridge_resistors
    0x00144089: probe_orientation_angle
    0x0014408B: user_selected_gain_y
    0x0014408C: user_selected_phase
    0x0014408D: user_selected_offset_x
    0x0014408E: user_selected_offset_y
    0x00144091: channel_settings_sequence
    0x00144092: channel_threshold
    0x0014409A: scanner_settings_sequence
    0x0014409B: scan_procedure
    0x0014409C: translation_rate_x
    0x0014409D: translation_rate_y
    0x0014409F: channel_overlap
    0x001440A0: image_quality_indicator_type
    0x001440A1: image_quality_indicator_material
    0x001440A2: image_quality_indicator_size
    0x00145002: linac_energy
    0x00145004: linac_output
    0x00145100: active_aperture
    0x00145101: total_aperture
    0x00145102: aperture_elevation
    0x00145103: main_lobe_angle
    0x00145104: main_roof_angle
    0x00145105: connector_type
    0x00145106: wedge_model_number
    0x00145107: wedge_angle_float
    0x00145108: wedge_roof_angle
    0x00145109: wedge_element_1_position
    0x0014510A: wedge_material_velocity
    0x0014510B: wedge_material
    0x0014510C: wedge_offset_z
    0x0014510D: wedge_origin_offset_x
    0x0014510E: wedge_time_delay
    0x0014510F: wedge_name
    0x00145110: wedge_manufacturer_name
    0x00145111: wedge_description
    0x00145112: nominal_beam_angle
    0x00145113: wedge_offset_x
    0x00145114: wedge_offset_y
    0x00145115: wedge_total_length
    0x00145116: wedge_in_contact_length
    0x00145117: wedge_front_gap
    0x00145118: wedge_total_height
    0x00145119: wedge_front_height
    0x0014511A: wedge_rear_height
    0x0014511B: wedge_total_width
    0x0014511C: wedge_in_contact_width
    0x0014511D: wedge_chamfer_height
    0x0014511E: wedge_curve
    0x0014511F: radius_along_the_wedge
    0x00180010: contrast_bolus_agent
    0x00180012: contrast_bolus_agent_sequence
    0x00180013: contrast_bolus_t1_relaxivity
    0x00180014: contrast_bolus_administration_route_sequence
    0x00180015: body_part_examined
    0x00180020: scanning_sequence
    0x00180021: sequence_variant
    0x00180022: scan_options
    0x00180023: mr_acquisition_type
    0x00180024: sequence_name
    0x00180025: angio_flag
    0x00180026: intervention_drug_information_sequence
    0x00180027: intervention_drug_stop_time
    0x00180028: intervention_drug_dose
    0x00180029: intervention_drug_code_sequence
    0x0018002A: additional_drug_sequence
    0x00180030: radionuclide
    0x00180031: radiopharmaceutical
    0x00180032: energy_window_centerline
    0x00180033: energy_window_total_width
    0x00180034: intervention_drug_name
    0x00180035: intervention_drug_start_time
    0x00180036: intervention_sequence
    0x00180037: therapy_type
    0x00180038: intervention_status
    0x00180039: therapy_description
    0x0018003A: intervention_description
    0x00180040: cine_rate
    0x00180042: initial_cine_run_state
    0x00180050: slice_thickness
    0x00180060: kvp
    0x00180070: counts_accumulated
    0x00180071: acquisition_termination_condition
    0x00180072: effective_duration
    0x00180073: acquisition_start_condition
    0x00180074: acquisition_start_condition_data
    0x00180075: acquisition_termination_condition_data
    0x00180080: repetition_time
    0x00180081: echo_time
    0x00180082: inversion_time
    0x00180083: number_of_averages
    0x00180084: imaging_frequency
    0x00180085: imaged_nucleus
    0x00180086: echo_number_s_
    0x00180087: magnetic_field_strength
    0x00180088: spacing_between_slices
    0x00180089: number_of_phase_encoding_steps
    0x00180090: data_collection_diameter
    0x00180091: echo_train_length
    0x00180093: percent_sampling
    0x00180094: percent_phase_field_of_view
    0x00180095: pixel_bandwidth
    0x00181000: device_serial_number
    0x00181002: device_uid
    0x00181003: device_id
    0x00181004: plate_id
    0x00181005: generator_id
    0x00181006: grid_id
    0x00181007: cassette_id
    0x00181008: gantry_id
    0x00181010: secondary_capture_device_id
    0x00181011: hardcopy_creation_device_id
    0x00181012: date_of_secondary_capture
    0x00181014: time_of_secondary_capture
    0x00181016: secondary_capture_device_manufacturer
    0x00181017: hardcopy_device_manufacturer
    0x00181018: secondary_capture_device_manufacturer_s_model_name
    0x00181019: secondary_capture_device_software_versions
    0x0018101A: hardcopy_device_software_version
    0x0018101B: hardcopy_device_manufacturer_s_model_name
    0x00181020: software_version_s_
    0x00181022: video_image_format_acquired
    0x00181023: digital_image_format_acquired
    0x00181030: protocol_name
    0x00181040: contrast_bolus_route
    0x00181041: contrast_bolus_volume
    0x00181042: contrast_bolus_start_time
    0x00181043: contrast_bolus_stop_time
    0x00181044: contrast_bolus_total_dose
    0x00181045: syringe_counts
    0x00181046: contrast_flow_rate
    0x00181047: contrast_flow_duration
    0x00181048: contrast_bolus_ingredient
    0x00181049: contrast_bolus_ingredient_concentration
    0x00181050: spatial_resolution
    0x00181060: trigger_time
    0x00181061: trigger_source_or_type
    0x00181062: nominal_interval
    0x00181063: frame_time
    0x00181064: cardiac_framing_type
    0x00181065: frame_time_vector
    0x00181066: frame_delay
    0x00181067: image_trigger_delay
    0x00181068: multiplex_group_time_offset
    0x00181069: trigger_time_offset
    0x0018106A: synchronization_trigger
    0x0018106C: synchronization_channel
    0x0018106E: trigger_sample_position
    0x00181070: radiopharmaceutical_route
    0x00181071: radiopharmaceutical_volume
    0x00181072: radiopharmaceutical_start_time
    0x00181073: radiopharmaceutical_stop_time
    0x00181074: radionuclide_total_dose
    0x00181075: radionuclide_half_life
    0x00181076: radionuclide_positron_fraction
    0x00181077: radiopharmaceutical_specific_activity
    0x00181078: radiopharmaceutical_start_datetime
    0x00181079: radiopharmaceutical_stop_datetime
    0x00181080: beat_rejection_flag
    0x00181081: low_r_r_value
    0x00181082: high_r_r_value
    0x00181083: intervals_acquired
    0x00181084: intervals_rejected
    0x00181085: pvc_rejection
    0x00181086: skip_beats
    0x00181088: heart_rate
    0x00181090: cardiac_number_of_images
    0x00181094: trigger_window
    0x00181100: reconstruction_diameter
    0x00181110: distance_source_to_detector
    0x00181111: distance_source_to_patient
    0x00181114: estimated_radiographic_magnification_factor
    0x00181120: gantry_detector_tilt
    0x00181121: gantry_detector_slew
    0x00181130: table_height
    0x00181131: table_traverse
    0x00181134: table_motion
    0x00181135: table_vertical_increment
    0x00181136: table_lateral_increment
    0x00181137: table_longitudinal_increment
    0x00181138: table_angle
    0x0018113A: table_type
    0x00181140: rotation_direction
    0x00181141: angular_position
    0x00181142: radial_position
    0x00181143: scan_arc
    0x00181144: angular_step
    0x00181145: center_of_rotation_offset
    0x00181146: rotation_offset
    0x00181147: field_of_view_shape
    0x00181149: field_of_view_dimension_s_
    0x00181150: exposure_time
    0x00181151: x_ray_tube_current
    0x00181152: exposure
    0x00181153: exposure_in__as
    0x00181154: average_pulse_width
    0x00181155: radiation_setting
    0x00181156: rectification_type
    0x0018115A: radiation_mode
    0x0018115E: image_and_fluoroscopy_area_dose_product
    0x00181160: filter_type
    0x00181161: type_of_filters
    0x00181162: intensifier_size
    0x00181164: imager_pixel_spacing
    0x00181166: grid
    0x00181170: generator_power
    0x00181180: collimator_grid_name
    0x00181181: collimator_type
    0x00181182: focal_distance
    0x00181183: x_focus_center
    0x00181184: y_focus_center
    0x00181190: focal_spot_s_
    0x00181191: anode_target_material
    0x001811A0: body_part_thickness
    0x001811A2: compression_force
    0x001811A4: paddle_description
    0x00181200: date_of_last_calibration
    0x00181201: time_of_last_calibration
    0x00181202: datetime_of_last_calibration
    0x00181210: convolution_kernel
    0x00181240: upper_lower_pixel_values
    0x00181242: actual_frame_duration
    0x00181243: count_rate
    0x00181244: preferred_playback_sequencing
    0x00181250: receive_coil_name
    0x00181251: transmit_coil_name
    0x00181260: plate_type
    0x00181261: phosphor_type
    0x00181271: water_equivalent_diameter
    0x00181272: water_equivalent_diameter_calculation_method_code_sequence
    0x00181300: scan_velocity
    0x00181301: whole_body_technique
    0x00181302: scan_length
    0x00181310: acquisition_matrix
    0x00181312: in_plane_phase_encoding_direction
    0x00181314: flip_angle
    0x00181315: variable_flip_angle_flag
    0x00181316: sar
    0x00181318: db_dt
    0x00181320: b1rms
    0x00181400: acquisition_device_processing_description
    0x00181401: acquisition_device_processing_code
    0x00181402: cassette_orientation
    0x00181403: cassette_size
    0x00181404: exposures_on_plate
    0x00181405: relative_x_ray_exposure
    0x00181411: exposure_index
    0x00181412: target_exposure_index
    0x00181413: deviation_index
    0x00181450: column_angulation
    0x00181460: tomo_layer_height
    0x00181470: tomo_angle
    0x00181480: tomo_time
    0x00181490: tomo_type
    0x00181491: tomo_class
    0x00181495: number_of_tomosynthesis_source_images
    0x00181500: positioner_motion
    0x00181508: positioner_type
    0x00181510: positioner_primary_angle
    0x00181511: positioner_secondary_angle
    0x00181520: positioner_primary_angle_increment
    0x00181521: positioner_secondary_angle_increment
    0x00181530: detector_primary_angle
    0x00181531: detector_secondary_angle
    0x00181600: shutter_shape
    0x00181602: shutter_left_vertical_edge
    0x00181604: shutter_right_vertical_edge
    0x00181606: shutter_upper_horizontal_edge
    0x00181608: shutter_lower_horizontal_edge
    0x00181610: center_of_circular_shutter
    0x00181612: radius_of_circular_shutter
    0x00181620: vertices_of_the_polygonal_shutter
    0x00181622: shutter_presentation_value
    0x00181623: shutter_overlay_group
    0x00181624: shutter_presentation_color_cielab_value
    0x00181700: collimator_shape
    0x00181702: collimator_left_vertical_edge
    0x00181704: collimator_right_vertical_edge
    0x00181706: collimator_upper_horizontal_edge
    0x00181708: collimator_lower_horizontal_edge
    0x00181710: center_of_circular_collimator
    0x00181712: radius_of_circular_collimator
    0x00181720: vertices_of_the_polygonal_collimator
    0x00181800: acquisition_time_synchronized
    0x00181801: time_source
    0x00181802: time_distribution_protocol
    0x00181803: ntp_source_address
    0x00182001: page_number_vector
    0x00182002: frame_label_vector
    0x00182003: frame_primary_angle_vector
    0x00182004: frame_secondary_angle_vector
    0x00182005: slice_location_vector
    0x00182006: display_window_label_vector
    0x00182010: nominal_scanned_pixel_spacing
    0x00182020: digitizing_device_transport_direction
    0x00182030: rotation_of_scanned_film
    0x00182041: biopsy_target_sequence
    0x00182042: target_uid
    0x00182043: localizing_cursor_position
    0x00182044: calculated_target_position
    0x00182045: target_label
    0x00182046: displayed_z_value
    0x00183100: ivus_acquisition
    0x00183101: ivus_pullback_rate
    0x00183102: ivus_gated_rate
    0x00183103: ivus_pullback_start_frame_number
    0x00183104: ivus_pullback_stop_frame_number
    0x00183105: lesion_number
    0x00184000: acquisition_comments
    0x00185000: output_power
    0x00185010: transducer_data
    0x00185012: focus_depth
    0x00185020: processing_function
    0x00185021: postprocessing_function
    0x00185022: mechanical_index
    0x00185024: bone_thermal_index
    0x00185026: cranial_thermal_index
    0x00185027: soft_tissue_thermal_index
    0x00185028: soft_tissue_focus_thermal_index
    0x00185029: soft_tissue_surface_thermal_index
    0x00185030: dynamic_range
    0x00185040: total_gain
    0x00185050: depth_of_scan_field
    0x00185100: patient_position
    0x00185101: view_position
    0x00185104: projection_eponymous_name_code_sequence
    0x00185210: image_transformation_matrix
    0x00185212: image_translation_vector
    0x00186000: sensitivity
    0x00186011: sequence_of_ultrasound_regions
    0x00186012: region_spatial_format
    0x00186014: region_data_type
    0x00186016: region_flags
    0x00186018: region_location_min_x0
    0x0018601A: region_location_min_y0
    0x0018601C: region_location_max_x1
    0x0018601E: region_location_max_y1
    0x00186020: reference_pixel_x0
    0x00186022: reference_pixel_y0
    0x00186024: physical_units_x_direction
    0x00186026: physical_units_y_direction
    0x00186028: reference_pixel_physical_value_x
    0x0018602A: reference_pixel_physical_value_y
    0x0018602C: physical_delta_x
    0x0018602E: physical_delta_y
    0x00186030: transducer_frequency
    0x00186031: transducer_type
    0x00186032: pulse_repetition_frequency
    0x00186034: doppler_correction_angle
    0x00186036: steering_angle
    0x00186038: doppler_sample_volume_x_position__retired_
    0x00186039: doppler_sample_volume_x_position
    0x0018603A: doppler_sample_volume_y_position__retired_
    0x0018603B: doppler_sample_volume_y_position
    0x0018603C: tm_line_position_x0__retired_
    0x0018603D: tm_line_position_x0
    0x0018603E: tm_line_position_y0__retired_
    0x0018603F: tm_line_position_y0
    0x00186040: tm_line_position_x1__retired_
    0x00186041: tm_line_position_x1
    0x00186042: tm_line_position_y1__retired_
    0x00186043: tm_line_position_y1
    0x00186044: pixel_component_organization
    0x00186046: pixel_component_mask
    0x00186048: pixel_component_range_start
    0x0018604A: pixel_component_range_stop
    0x0018604C: pixel_component_physical_units
    0x0018604E: pixel_component_data_type
    0x00186050: number_of_table_break_points
    0x00186052: table_of_x_break_points
    0x00186054: table_of_y_break_points
    0x00186056: number_of_table_entries
    0x00186058: table_of_pixel_values
    0x0018605A: table_of_parameter_values
    0x00186060: r_wave_time_vector
    0x00187000: detector_conditions_nominal_flag
    0x00187001: detector_temperature
    0x00187004: detector_type
    0x00187005: detector_configuration
    0x00187006: detector_description
    0x00187008: detector_mode
    0x0018700A: detector_id
    0x0018700C: date_of_last_detector_calibration
    0x0018700E: time_of_last_detector_calibration
    0x00187010: exposures_on_detector_since_last_calibration
    0x00187011: exposures_on_detector_since_manufactured
    0x00187012: detector_time_since_last_exposure
    0x00187014: detector_active_time
    0x00187016: detector_activation_offset_from_exposure
    0x0018701A: detector_binning
    0x00187020: detector_element_physical_size
    0x00187022: detector_element_spacing
    0x00187024: detector_active_shape
    0x00187026: detector_active_dimension_s_
    0x00187028: detector_active_origin
    0x0018702A: detector_manufacturer_name
    0x0018702B: detector_manufacturer_s_model_name
    0x00187030: field_of_view_origin
    0x00187032: field_of_view_rotation
    0x00187034: field_of_view_horizontal_flip
    0x00187036: pixel_data_area_origin_relative_to_fov
    0x00187038: pixel_data_area_rotation_angle_relative_to_fov
    0x00187040: grid_absorbing_material
    0x00187041: grid_spacing_material
    0x00187042: grid_thickness
    0x00187044: grid_pitch
    0x00187046: grid_aspect_ratio
    0x00187048: grid_period
    0x0018704C: grid_focal_distance
    0x00187050: filter_material
    0x00187052: filter_thickness_minimum
    0x00187054: filter_thickness_maximum
    0x00187056: filter_beam_path_length_minimum
    0x00187058: filter_beam_path_length_maximum
    0x00187060: exposure_control_mode
    0x00187062: exposure_control_mode_description
    0x00187064: exposure_status
    0x00187065: phototimer_setting
    0x00188150: exposure_time_in__s
    0x00188151: x_ray_tube_current_in__a
    0x00189004: content_qualification
    0x00189005: pulse_sequence_name
    0x00189006: mr_imaging_modifier_sequence
    0x00189008: echo_pulse_sequence
    0x00189009: inversion_recovery
    0x00189010: flow_compensation
    0x00189011: multiple_spin_echo
    0x00189012: multi_planar_excitation
    0x00189014: phase_contrast
    0x00189015: time_of_flight_contrast
    0x00189016: spoiling
    0x00189017: steady_state_pulse_sequence
    0x00189018: echo_planar_pulse_sequence
    0x00189019: tag_angle_first_axis
    0x00189020: magnetization_transfer
    0x00189021: t2_preparation
    0x00189022: blood_signal_nulling
    0x00189024: saturation_recovery
    0x00189025: spectrally_selected_suppression
    0x00189026: spectrally_selected_excitation
    0x00189027: spatial_pre_saturation
    0x00189028: tagging
    0x00189029: oversampling_phase
    0x00189030: tag_spacing_first_dimension
    0x00189032: geometry_of_k_space_traversal
    0x00189033: segmented_k_space_traversal
    0x00189034: rectilinear_phase_encode_reordering
    0x00189035: tag_thickness
    0x00189036: partial_fourier_direction
    0x00189037: cardiac_synchronization_technique
    0x00189041: receive_coil_manufacturer_name
    0x00189042: mr_receive_coil_sequence
    0x00189043: receive_coil_type
    0x00189044: quadrature_receive_coil
    0x00189045: multi_coil_definition_sequence
    0x00189046: multi_coil_configuration
    0x00189047: multi_coil_element_name
    0x00189048: multi_coil_element_used
    0x00189049: mr_transmit_coil_sequence
    0x00189050: transmit_coil_manufacturer_name
    0x00189051: transmit_coil_type
    0x00189052: spectral_width
    0x00189053: chemical_shift_reference
    0x00189054: volume_localization_technique
    0x00189058: mr_acquisition_frequency_encoding_steps
    0x00189059: de_coupling
    0x00189060: de_coupled_nucleus
    0x00189061: de_coupling_frequency
    0x00189062: de_coupling_method
    0x00189063: de_coupling_chemical_shift_reference
    0x00189064: k_space_filtering
    0x00189065: time_domain_filtering
    0x00189066: number_of_zero_fills
    0x00189067: baseline_correction
    0x00189069: parallel_reduction_factor_in_plane
    0x00189070: cardiac_r_r_interval_specified
    0x00189073: acquisition_duration
    0x00189074: frame_acquisition_datetime
    0x00189075: diffusion_directionality
    0x00189076: diffusion_gradient_direction_sequence
    0x00189077: parallel_acquisition
    0x00189078: parallel_acquisition_technique
    0x00189079: inversion_times
    0x00189080: metabolite_map_description
    0x00189081: partial_fourier
    0x00189082: effective_echo_time
    0x00189083: metabolite_map_code_sequence
    0x00189084: chemical_shift_sequence
    0x00189085: cardiac_signal_source
    0x00189087: diffusion_b_value
    0x00189089: diffusion_gradient_orientation
    0x00189090: velocity_encoding_direction
    0x00189091: velocity_encoding_minimum_value
    0x00189092: velocity_encoding_acquisition_sequence
    0x00189093: number_of_k_space_trajectories
    0x00189094: coverage_of_k_space
    0x00189095: spectroscopy_acquisition_phase_rows
    0x00189096: parallel_reduction_factor_in_plane__retired_
    0x00189098: transmitter_frequency
    0x00189100: resonant_nucleus
    0x00189101: frequency_correction
    0x00189103: mr_spectroscopy_fov_geometry_sequence
    0x00189104: slab_thickness
    0x00189105: slab_orientation
    0x00189106: mid_slab_position
    0x00189107: mr_spatial_saturation_sequence
    0x00189112: mr_timing_and_related_parameters_sequence
    0x00189114: mr_echo_sequence
    0x00189115: mr_modifier_sequence
    0x00189117: mr_diffusion_sequence
    0x00189118: cardiac_synchronization_sequence
    0x00189119: mr_averages_sequence
    0x00189125: mr_fov_geometry_sequence
    0x00189126: volume_localization_sequence
    0x00189127: spectroscopy_acquisition_data_columns
    0x00189147: diffusion_anisotropy_type
    0x00189151: frame_reference_datetime
    0x00189152: mr_metabolite_map_sequence
    0x00189155: parallel_reduction_factor_out_of_plane
    0x00189159: spectroscopy_acquisition_out_of_plane_phase_steps
    0x00189166: bulk_motion_status
    0x00189168: parallel_reduction_factor_second_in_plane
    0x00189169: cardiac_beat_rejection_technique
    0x00189170: respiratory_motion_compensation_technique
    0x00189171: respiratory_signal_source
    0x00189172: bulk_motion_compensation_technique
    0x00189173: bulk_motion_signal_source
    0x00189174: applicable_safety_standard_agency
    0x00189175: applicable_safety_standard_description
    0x00189176: operating_mode_sequence
    0x00189177: operating_mode_type
    0x00189178: operating_mode
    0x00189179: specific_absorption_rate_definition
    0x00189180: gradient_output_type
    0x00189181: specific_absorption_rate_value
    0x00189182: gradient_output
    0x00189183: flow_compensation_direction
    0x00189184: tagging_delay
    0x00189185: respiratory_motion_compensation_technique_description
    0x00189186: respiratory_signal_source_id
    0x00189195: chemical_shift_minimum_integration_limit_in_hz
    0x00189196: chemical_shift_maximum_integration_limit_in_hz
    0x00189197: mr_velocity_encoding_sequence
    0x00189198: first_order_phase_correction
    0x00189199: water_referenced_phase_correction
    0x00189200: mr_spectroscopy_acquisition_type
    0x00189214: respiratory_cycle_position
    0x00189217: velocity_encoding_maximum_value
    0x00189218: tag_spacing_second_dimension
    0x00189219: tag_angle_second_axis
    0x00189220: frame_acquisition_duration
    0x00189226: mr_image_frame_type_sequence
    0x00189227: mr_spectroscopy_frame_type_sequence
    0x00189231: mr_acquisition_phase_encoding_steps_in_plane
    0x00189232: mr_acquisition_phase_encoding_steps_out_of_plane
    0x00189234: spectroscopy_acquisition_phase_columns
    0x00189236: cardiac_cycle_position
    0x00189239: specific_absorption_rate_sequence
    0x00189240: rf_echo_train_length
    0x00189241: gradient_echo_train_length
    0x00189250: arterial_spin_labeling_contrast
    0x00189251: mr_arterial_spin_labeling_sequence
    0x00189252: asl_technique_description
    0x00189253: asl_slab_number
    0x00189254: asl_slab_thickness
    0x00189255: asl_slab_orientation
    0x00189256: asl_mid_slab_position
    0x00189257: asl_context
    0x00189258: asl_pulse_train_duration
    0x00189259: asl_crusher_flag
    0x0018925A: asl_crusher_flow_limit
    0x0018925B: asl_crusher_description
    0x0018925C: asl_bolus_cut_off_flag
    0x0018925D: asl_bolus_cut_off_timing_sequence
    0x0018925E: asl_bolus_cut_off_technique
    0x0018925F: asl_bolus_cut_off_delay_time
    0x00189260: asl_slab_sequence
    0x00189295: chemical_shift_minimum_integration_limit_in_ppm
    0x00189296: chemical_shift_maximum_integration_limit_in_ppm
    0x00189297: water_reference_acquisition
    0x00189298: echo_peak_position
    0x00189301: ct_acquisition_type_sequence
    0x00189302: acquisition_type
    0x00189303: tube_angle
    0x00189304: ct_acquisition_details_sequence
    0x00189305: revolution_time
    0x00189306: single_collimation_width
    0x00189307: total_collimation_width
    0x00189308: ct_table_dynamics_sequence
    0x00189309: table_speed
    0x00189310: table_feed_per_rotation
    0x00189311: spiral_pitch_factor
    0x00189312: ct_geometry_sequence
    0x00189313: data_collection_center__patient_
    0x00189314: ct_reconstruction_sequence
    0x00189315: reconstruction_algorithm
    0x00189316: convolution_kernel_group
    0x00189317: reconstruction_field_of_view
    0x00189318: reconstruction_target_center__patient_
    0x00189319: reconstruction_angle
    0x00189320: image_filter
    0x00189321: ct_exposure_sequence
    0x00189322: reconstruction_pixel_spacing
    0x00189323: exposure_modulation_type
    0x00189324: estimated_dose_saving
    0x00189325: ct_x_ray_details_sequence
    0x00189326: ct_position_sequence
    0x00189327: table_position
    0x00189328: exposure_time_in_ms
    0x00189329: ct_image_frame_type_sequence
    0x00189330: x_ray_tube_current_in_ma
    0x00189332: exposure_in_mas
    0x00189333: constant_volume_flag
    0x00189334: fluoroscopy_flag
    0x00189335: distance_source_to_data_collection_center
    0x00189337: contrast_bolus_agent_number
    0x00189338: contrast_bolus_ingredient_code_sequence
    0x00189340: contrast_administration_profile_sequence
    0x00189341: contrast_bolus_usage_sequence
    0x00189342: contrast_bolus_agent_administered
    0x00189343: contrast_bolus_agent_detected
    0x00189344: contrast_bolus_agent_phase
    0x00189345: ctdivol
    0x00189346: ctdi_phantom_type_code_sequence
    0x00189351: calcium_scoring_mass_factor_patient
    0x00189352: calcium_scoring_mass_factor_device
    0x00189353: energy_weighting_factor
    0x00189360: ct_additional_x_ray_source_sequence
    0x00189401: projection_pixel_calibration_sequence
    0x00189402: distance_source_to_isocenter
    0x00189403: distance_object_to_table_top
    0x00189404: object_pixel_spacing_in_center_of_beam
    0x00189405: positioner_position_sequence
    0x00189406: table_position_sequence
    0x00189407: collimator_shape_sequence
    0x00189410: planes_in_acquisition
    0x00189412: xa_xrf_frame_characteristics_sequence
    0x00189417: frame_acquisition_sequence
    0x00189420: x_ray_receptor_type
    0x00189423: acquisition_protocol_name
    0x00189424: acquisition_protocol_description
    0x00189425: contrast_bolus_ingredient_opaque
    0x00189426: distance_receptor_plane_to_detector_housing
    0x00189427: intensifier_active_shape
    0x00189428: intensifier_active_dimension_s_
    0x00189429: physical_detector_size
    0x00189430: position_of_isocenter_projection
    0x00189432: field_of_view_sequence
    0x00189433: field_of_view_description
    0x00189434: exposure_control_sensing_regions_sequence
    0x00189435: exposure_control_sensing_region_shape
    0x00189436: exposure_control_sensing_region_left_vertical_edge
    0x00189437: exposure_control_sensing_region_right_vertical_edge
    0x00189438: exposure_control_sensing_region_upper_horizontal_edge
    0x00189439: exposure_control_sensing_region_lower_horizontal_edge
    0x00189440: center_of_circular_exposure_control_sensing_region
    0x00189441: radius_of_circular_exposure_control_sensing_region
    0x00189442: vertices_of_the_polygonal_exposure_control_sensing_region
    0x00189447: column_angulation__patient_
    0x00189449: beam_angle
    0x00189451: frame_detector_parameters_sequence
    0x00189452: calculated_anatomy_thickness
    0x00189455: calibration_sequence
    0x00189456: object_thickness_sequence
    0x00189457: plane_identification
    0x00189461: field_of_view_dimension_s__in_float
    0x00189462: isocenter_reference_system_sequence
    0x00189463: positioner_isocenter_primary_angle
    0x00189464: positioner_isocenter_secondary_angle
    0x00189465: positioner_isocenter_detector_rotation_angle
    0x00189466: table_x_position_to_isocenter
    0x00189467: table_y_position_to_isocenter
    0x00189468: table_z_position_to_isocenter
    0x00189469: table_horizontal_rotation_angle
    0x00189470: table_head_tilt_angle
    0x00189471: table_cradle_tilt_angle
    0x00189472: frame_display_shutter_sequence
    0x00189473: acquired_image_area_dose_product
    0x00189474: c_arm_positioner_tabletop_relationship
    0x00189476: x_ray_geometry_sequence
    0x00189477: irradiation_event_identification_sequence
    0x00189504: x_ray_3d_frame_type_sequence
    0x00189506: contributing_sources_sequence
    0x00189507: x_ray_3d_acquisition_sequence
    0x00189508: primary_positioner_scan_arc
    0x00189509: secondary_positioner_scan_arc
    0x00189510: primary_positioner_scan_start_angle
    0x00189511: secondary_positioner_scan_start_angle
    0x00189514: primary_positioner_increment
    0x00189515: secondary_positioner_increment
    0x00189516: start_acquisition_datetime
    0x00189517: end_acquisition_datetime
    0x00189518: primary_positioner_increment_sign
    0x00189519: secondary_positioner_increment_sign
    0x00189524: application_name
    0x00189525: application_version
    0x00189526: application_manufacturer
    0x00189527: algorithm_type
    0x00189528: algorithm_description
    0x00189530: x_ray_3d_reconstruction_sequence
    0x00189531: reconstruction_description
    0x00189538: per_projection_acquisition_sequence
    0x00189541: detector_position_sequence
    0x00189542: x_ray_acquisition_dose_sequence
    0x00189543: x_ray_source_isocenter_primary_angle
    0x00189544: x_ray_source_isocenter_secondary_angle
    0x00189545: breast_support_isocenter_primary_angle
    0x00189546: breast_support_isocenter_secondary_angle
    0x00189547: breast_support_x_position_to_isocenter
    0x00189548: breast_support_y_position_to_isocenter
    0x00189549: breast_support_z_position_to_isocenter
    0x00189550: detector_isocenter_primary_angle
    0x00189551: detector_isocenter_secondary_angle
    0x00189552: detector_x_position_to_isocenter
    0x00189553: detector_y_position_to_isocenter
    0x00189554: detector_z_position_to_isocenter
    0x00189555: x_ray_grid_sequence
    0x00189556: x_ray_filter_sequence
    0x00189557: detector_active_area_tlhc_position
    0x00189558: detector_active_area_orientation
    0x00189559: positioner_primary_angle_direction
    0x00189601: diffusion_b_matrix_sequence
    0x00189602: diffusion_b_value_xx
    0x00189603: diffusion_b_value_xy
    0x00189604: diffusion_b_value_xz
    0x00189605: diffusion_b_value_yy
    0x00189606: diffusion_b_value_yz
    0x00189607: diffusion_b_value_zz
    0x00189621: functional_mr_sequence
    0x00189622: functional_settling_phase_frames_present
    0x00189623: functional_sync_pulse
    0x00189624: settling_phase_frame
    0x00189701: decay_correction_datetime
    0x00189715: start_density_threshold
    0x00189716: start_relative_density_difference_threshold
    0x00189717: start_cardiac_trigger_count_threshold
    0x00189718: start_respiratory_trigger_count_threshold
    0x00189719: termination_counts_threshold
    0x00189720: termination_density_threshold
    0x00189721: termination_relative_density_threshold
    0x00189722: termination_time_threshold
    0x00189723: termination_cardiac_trigger_count_threshold
    0x00189724: termination_respiratory_trigger_count_threshold
    0x00189725: detector_geometry
    0x00189726: transverse_detector_separation
    0x00189727: axial_detector_dimension
    0x00189729: radiopharmaceutical_agent_number
    0x00189732: pet_frame_acquisition_sequence
    0x00189733: pet_detector_motion_details_sequence
    0x00189734: pet_table_dynamics_sequence
    0x00189735: pet_position_sequence
    0x00189736: pet_frame_correction_factors_sequence
    0x00189737: radiopharmaceutical_usage_sequence
    0x00189738: attenuation_correction_source
    0x00189739: number_of_iterations
    0x00189740: number_of_subsets
    0x00189749: pet_reconstruction_sequence
    0x00189751: pet_frame_type_sequence
    0x00189755: time_of_flight_information_used
    0x00189756: reconstruction_type
    0x00189758: decay_corrected
    0x00189759: attenuation_corrected
    0x00189760: scatter_corrected
    0x00189761: dead_time_corrected
    0x00189762: gantry_motion_corrected
    0x00189763: patient_motion_corrected
    0x00189764: count_loss_normalization_corrected
    0x00189765: randoms_corrected
    0x00189766: non_uniform_radial_sampling_corrected
    0x00189767: sensitivity_calibrated
    0x00189768: detector_normalization_correction
    0x00189769: iterative_reconstruction_method
    0x00189770: attenuation_correction_temporal_relationship
    0x00189771: patient_physiological_state_sequence
    0x00189772: patient_physiological_state_code_sequence
    0x00189801: depth_s__of_focus
    0x00189803: excluded_intervals_sequence
    0x00189804: exclusion_start_datetime
    0x00189805: exclusion_duration
    0x00189806: us_image_description_sequence
    0x00189807: image_data_type_sequence
    0x00189808: data_type
    0x00189809: transducer_scan_pattern_code_sequence
    0x0018980B: aliased_data_type
    0x0018980C: position_measuring_device_used
    0x0018980D: transducer_geometry_code_sequence
    0x0018980E: transducer_beam_steering_code_sequence
    0x0018980F: transducer_application_code_sequence
    0x00189810: zero_velocity_pixel_value
    0x0018A001: contributing_equipment_sequence
    0x0018A002: contribution_datetime
    0x0018A003: contribution_description
    0x0020000D: study_instance_uid
    0x0020000E: series_instance_uid
    0x00200010: study_id
    0x00200011: series_number
    0x00200012: acquisition_number
    0x00200013: instance_number
    0x00200014: isotope_number
    0x00200015: phase_number
    0x00200016: interval_number
    0x00200017: time_slot_number
    0x00200018: angle_number
    0x00200019: item_number
    0x00200020: patient_orientation
    0x00200022: overlay_number
    0x00200024: curve_number
    0x00200026: lut_number
    0x00200030: image_position
    0x00200032: image_position__patient_
    0x00200035: image_orientation
    0x00200037: image_orientation__patient_
    0x00200050: location
    0x00200052: frame_of_reference_uid
    0x00200060: laterality
    0x00200062: image_laterality
    0x00200070: image_geometry_type
    0x00200080: masking_image
    0x002000AA: report_number
    0x00200100: temporal_position_identifier
    0x00200105: number_of_temporal_positions
    0x00200110: temporal_resolution
    0x00200200: synchronization_frame_of_reference_uid
    0x00200242: sop_instance_uid_of_concatenation_source
    0x00201000: series_in_study
    0x00201001: acquisitions_in_series
    0x00201002: images_in_acquisition
    0x00201003: images_in_series
    0x00201004: acquisitions_in_study
    0x00201005: images_in_study
    0x00201020: reference
    0x00201040: position_reference_indicator
    0x00201041: slice_location
    0x00201070: other_study_numbers
    0x00201200: number_of_patient_related_studies
    0x00201202: number_of_patient_related_series
    0x00201204: number_of_patient_related_instances
    0x00201206: number_of_study_related_series
    0x00201208: number_of_study_related_instances
    0x00201209: number_of_series_related_instances
    0x00203401: modifying_device_id
    0x00203402: modified_image_id
    0x00203403: modified_image_date
    0x00203404: modifying_device_manufacturer
    0x00203405: modified_image_time
    0x00203406: modified_image_description
    0x00204000: image_comments
    0x00205000: original_image_identification
    0x00205002: original_image_identification_nomenclature
    0x00209056: stack_id
    0x00209057: in_stack_position_number
    0x00209071: frame_anatomy_sequence
    0x00209072: frame_laterality
    0x00209111: frame_content_sequence
    0x00209113: plane_position_sequence
    0x00209116: plane_orientation_sequence
    0x00209128: temporal_position_index
    0x00209153: nominal_cardiac_trigger_delay_time
    0x00209154: nominal_cardiac_trigger_time_prior_to_r_peak
    0x00209155: actual_cardiac_trigger_time_prior_to_r_peak
    0x00209156: frame_acquisition_number
    0x00209157: dimension_index_values
    0x00209158: frame_comments
    0x00209161: concatenation_uid
    0x00209162: in_concatenation_number
    0x00209163: in_concatenation_total_number
    0x00209164: dimension_organization_uid
    0x00209165: dimension_index_pointer
    0x00209167: functional_group_pointer
    0x00209170: unassigned_shared_converted_attributes_sequence
    0x00209171: unassigned_per_frame_converted_attributes_sequence
    0x00209172: conversion_source_attributes_sequence
    0x00209213: dimension_index_private_creator
    0x00209221: dimension_organization_sequence
    0x00209222: dimension_index_sequence
    0x00209228: concatenation_frame_offset_number
    0x00209238: functional_group_private_creator
    0x00209241: nominal_percentage_of_cardiac_phase
    0x00209245: nominal_percentage_of_respiratory_phase
    0x00209246: starting_respiratory_amplitude
    0x00209247: starting_respiratory_phase
    0x00209248: ending_respiratory_amplitude
    0x00209249: ending_respiratory_phase
    0x00209250: respiratory_trigger_type
    0x00209251: r_r_interval_time_nominal
    0x00209252: actual_cardiac_trigger_delay_time
    0x00209253: respiratory_synchronization_sequence
    0x00209254: respiratory_interval_time
    0x00209255: nominal_respiratory_trigger_delay_time
    0x00209256: respiratory_trigger_delay_threshold
    0x00209257: actual_respiratory_trigger_delay_time
    0x00209301: image_position__volume_
    0x00209302: image_orientation__volume_
    0x00209307: ultrasound_acquisition_geometry
    0x00209308: apex_position
    0x00209309: volume_to_transducer_mapping_matrix
    0x0020930A: volume_to_table_mapping_matrix
    0x0020930B: volume_to_transducer_relationship
    0x0020930C: patient_frame_of_reference_source
    0x0020930D: temporal_position_time_offset
    0x0020930E: plane_position__volume__sequence
    0x0020930F: plane_orientation__volume__sequence
    0x00209310: temporal_position_sequence
    0x00209311: dimension_organization_type
    0x00209312: volume_frame_of_reference_uid
    0x00209313: table_frame_of_reference_uid
    0x00209421: dimension_description_label
    0x00209450: patient_orientation_in_frame_sequence
    0x00209453: frame_label
    0x00209518: acquisition_index
    0x00209529: contributing_sop_instances_reference_sequence
    0x00209536: reconstruction_index
    0x00220001: light_path_filter_pass_through_wavelength
    0x00220002: light_path_filter_pass_band
    0x00220003: image_path_filter_pass_through_wavelength
    0x00220004: image_path_filter_pass_band
    0x00220005: patient_eye_movement_commanded
    0x00220006: patient_eye_movement_command_code_sequence
    0x00220007: spherical_lens_power
    0x00220008: cylinder_lens_power
    0x00220009: cylinder_axis
    0x0022000A: emmetropic_magnification
    0x0022000B: intra_ocular_pressure
    0x0022000C: horizontal_field_of_view
    0x0022000D: pupil_dilated
    0x0022000E: degree_of_dilation
    0x00220010: stereo_baseline_angle
    0x00220011: stereo_baseline_displacement
    0x00220012: stereo_horizontal_pixel_offset
    0x00220013: stereo_vertical_pixel_offset
    0x00220014: stereo_rotation
    0x00220015: acquisition_device_type_code_sequence
    0x00220016: illumination_type_code_sequence
    0x00220017: light_path_filter_type_stack_code_sequence
    0x00220018: image_path_filter_type_stack_code_sequence
    0x00220019: lenses_code_sequence
    0x0022001A: channel_description_code_sequence
    0x0022001B: refractive_state_sequence
    0x0022001C: mydriatic_agent_code_sequence
    0x0022001D: relative_image_position_code_sequence
    0x0022001E: camera_angle_of_view
    0x00220020: stereo_pairs_sequence
    0x00220021: left_image_sequence
    0x00220022: right_image_sequence
    0x00220028: stereo_pairs_present
    0x00220030: axial_length_of_the_eye
    0x00220031: ophthalmic_frame_location_sequence
    0x00220032: reference_coordinates
    0x00220035: depth_spatial_resolution
    0x00220036: maximum_depth_distortion
    0x00220037: along_scan_spatial_resolution
    0x00220038: maximum_along_scan_distortion
    0x00220039: ophthalmic_image_orientation
    0x00220041: depth_of_transverse_image
    0x00220042: mydriatic_agent_concentration_units_sequence
    0x00220048: across_scan_spatial_resolution
    0x00220049: maximum_across_scan_distortion
    0x0022004E: mydriatic_agent_concentration
    0x00220055: illumination_wave_length
    0x00220056: illumination_power
    0x00220057: illumination_bandwidth
    0x00220058: mydriatic_agent_sequence
    0x00221007: ophthalmic_axial_measurements_right_eye_sequence
    0x00221008: ophthalmic_axial_measurements_left_eye_sequence
    0x00221009: ophthalmic_axial_measurements_device_type
    0x00221010: ophthalmic_axial_length_measurements_type
    0x00221012: ophthalmic_axial_length_sequence
    0x00221019: ophthalmic_axial_length
    0x00221024: lens_status_code_sequence
    0x00221025: vitreous_status_code_sequence
    0x00221028: iol_formula_code_sequence
    0x00221029: iol_formula_detail
    0x00221033: keratometer_index
    0x00221035: source_of_ophthalmic_axial_length_code_sequence
    0x00221037: target_refraction
    0x00221039: refractive_procedure_occurred
    0x00221040: refractive_surgery_type_code_sequence
    0x00221044: ophthalmic_ultrasound_method_code_sequence
    0x00221050: ophthalmic_axial_length_measurements_sequence
    0x00221053: iol_power
    0x00221054: predicted_refractive_error
    0x00221059: ophthalmic_axial_length_velocity
    0x00221065: lens_status_description
    0x00221066: vitreous_status_description
    0x00221090: iol_power_sequence
    0x00221092: lens_constant_sequence
    0x00221093: iol_manufacturer
    0x00221094: lens_constant_description
    0x00221095: implant_name
    0x00221096: keratometry_measurement_type_code_sequence
    0x00221097: implant_part_number
    0x00221100: referenced_ophthalmic_axial_measurements_sequence
    0x00221101: ophthalmic_axial_length_measurements_segment_name_code_sequence
    0x00221103: refractive_error_before_refractive_surgery_code_sequence
    0x00221121: iol_power_for_exact_emmetropia
    0x00221122: iol_power_for_exact_target_refraction
    0x00221125: anterior_chamber_depth_definition_code_sequence
    0x00221127: lens_thickness_sequence
    0x00221128: anterior_chamber_depth_sequence
    0x00221130: lens_thickness
    0x00221131: anterior_chamber_depth
    0x00221132: source_of_lens_thickness_data_code_sequence
    0x00221133: source_of_anterior_chamber_depth_data_code_sequence
    0x00221134: source_of_refractive_measurements_sequence
    0x00221135: source_of_refractive_measurements_code_sequence
    0x00221140: ophthalmic_axial_length_measurement_modified
    0x00221150: ophthalmic_axial_length_data_source_code_sequence
    0x00221153: ophthalmic_axial_length_acquisition_method_code_sequence
    0x00221155: signal_to_noise_ratio
    0x00221159: ophthalmic_axial_length_data_source_description
    0x00221210: ophthalmic_axial_length_measurements_total_length_sequence
    0x00221211: ophthalmic_axial_length_measurements_segmental_length_sequence
    0x00221212: ophthalmic_axial_length_measurements_length_summation_sequence
    0x00221220: ultrasound_ophthalmic_axial_length_measurements_sequence
    0x00221225: optical_ophthalmic_axial_length_measurements_sequence
    0x00221230: ultrasound_selected_ophthalmic_axial_length_sequence
    0x00221250: ophthalmic_axial_length_selection_method_code_sequence
    0x00221255: optical_selected_ophthalmic_axial_length_sequence
    0x00221257: selected_segmental_ophthalmic_axial_length_sequence
    0x00221260: selected_total_ophthalmic_axial_length_sequence
    0x00221262: ophthalmic_axial_length_quality_metric_sequence
    0x00221265: ophthalmic_axial_length_quality_metric_type_code_sequence
    0x00221273: ophthalmic_axial_length_quality_metric_type_description
    0x00221300: intraocular_lens_calculations_right_eye_sequence
    0x00221310: intraocular_lens_calculations_left_eye_sequence
    0x00221330: referenced_ophthalmic_axial_length_measurement_qc_image_sequence
    0x00221415: ophthalmic_mapping_device_type
    0x00221420: acquisition_method_code_sequence
    0x00221423: acquisition_method_algorithm_sequence
    0x00221436: ophthalmic_thickness_map_type_code_sequence
    0x00221443: ophthalmic_thickness_mapping_normals_sequence
    0x00221445: retinal_thickness_definition_code_sequence
    0x00221450: pixel_value_mapping_to_coded_concept_sequence
    0x00221452: mapped_pixel_value
    0x00221454: pixel_value_mapping_explanation
    0x00221458: ophthalmic_thickness_map_quality_threshold_sequence
    0x00221460: ophthalmic_thickness_map_threshold_quality_rating
    0x00221463: anatomic_structure_reference_point
    0x00221465: registration_to_localizer_sequence
    0x00221466: registered_localizer_units
    0x00221467: registered_localizer_top_left_hand_corner
    0x00221468: registered_localizer_bottom_right_hand_corner
    0x00221470: ophthalmic_thickness_map_quality_rating_sequence
    0x00221472: relevant_opt_attributes_sequence
    0x00221512: transformation_method_code_sequence
    0x00221513: transformation_algorithm_sequence
    0x00221515: ophthalmic_axial_length_method
    0x00221517: ophthalmic_fov
    0x00221518: two_dimensional_to_three_dimensional_map_sequence
    0x00221525: wide_field_ophthalmic_photography_quality_rating_sequence
    0x00221526: wide_field_ophthalmic_photography_quality_threshold_sequence
    0x00221527: wide_field_ophthalmic_photography_threshold_quality_rating
    0x00221528: x_coordinates_center_pixel_view_angle
    0x00221529: y_coordinates_center_pixel_view_angle
    0x00221530: number_of_map_points
    0x00221531: two_dimensional_to_three_dimensional_map_data
    0x00240010: visual_field_horizontal_extent
    0x00240011: visual_field_vertical_extent
    0x00240012: visual_field_shape
    0x00240016: screening_test_mode_code_sequence
    0x00240018: maximum_stimulus_luminance
    0x00240020: background_luminance
    0x00240021: stimulus_color_code_sequence
    0x00240024: background_illumination_color_code_sequence
    0x00240025: stimulus_area
    0x00240028: stimulus_presentation_time
    0x00240032: fixation_sequence
    0x00240033: fixation_monitoring_code_sequence
    0x00240034: visual_field_catch_trial_sequence
    0x00240035: fixation_checked_quantity
    0x00240036: patient_not_properly_fixated_quantity
    0x00240037: presented_visual_stimuli_data_flag
    0x00240038: number_of_visual_stimuli
    0x00240039: excessive_fixation_losses_data_flag
    0x00240040: excessive_fixation_losses
    0x00240042: stimuli_retesting_quantity
    0x00240044: comments_on_patient_s_performance_of_visual_field
    0x00240045: false_negatives_estimate_flag
    0x00240046: false_negatives_estimate
    0x00240048: negative_catch_trials_quantity
    0x00240050: false_negatives_quantity
    0x00240051: excessive_false_negatives_data_flag
    0x00240052: excessive_false_negatives
    0x00240053: false_positives_estimate_flag
    0x00240054: false_positives_estimate
    0x00240055: catch_trials_data_flag
    0x00240056: positive_catch_trials_quantity
    0x00240057: test_point_normals_data_flag
    0x00240058: test_point_normals_sequence
    0x00240059: global_deviation_probability_normals_flag
    0x00240060: false_positives_quantity
    0x00240061: excessive_false_positives_data_flag
    0x00240062: excessive_false_positives
    0x00240063: visual_field_test_normals_flag
    0x00240064: results_normals_sequence
    0x00240065: age_corrected_sensitivity_deviation_algorithm_sequence
    0x00240066: global_deviation_from_normal
    0x00240067: generalized_defect_sensitivity_deviation_algorithm_sequence
    0x00240068: localized_deviation_from_normal
    0x00240069: patient_reliability_indicator
    0x00240070: visual_field_mean_sensitivity
    0x00240071: global_deviation_probability
    0x00240072: local_deviation_probability_normals_flag
    0x00240073: localized_deviation_probability
    0x00240074: short_term_fluctuation_calculated
    0x00240075: short_term_fluctuation
    0x00240076: short_term_fluctuation_probability_calculated
    0x00240077: short_term_fluctuation_probability
    0x00240078: corrected_localized_deviation_from_normal_calculated
    0x00240079: corrected_localized_deviation_from_normal
    0x00240080: corrected_localized_deviation_from_normal_probability_calculated
    0x00240081: corrected_localized_deviation_from_normal_probability
    0x00240083: global_deviation_probability_sequence
    0x00240085: localized_deviation_probability_sequence
    0x00240086: foveal_sensitivity_measured
    0x00240087: foveal_sensitivity
    0x00240088: visual_field_test_duration
    0x00240089: visual_field_test_point_sequence
    0x00240090: visual_field_test_point_x_coordinate
    0x00240091: visual_field_test_point_y_coordinate
    0x00240092: age_corrected_sensitivity_deviation_value
    0x00240093: stimulus_results
    0x00240094: sensitivity_value
    0x00240095: retest_stimulus_seen
    0x00240096: retest_sensitivity_value
    0x00240097: visual_field_test_point_normals_sequence
    0x00240098: quantified_defect
    0x00240100: age_corrected_sensitivity_deviation_probability_value
    0x00240102: generalized_defect_corrected_sensitivity_deviation_flag
    0x00240103: generalized_defect_corrected_sensitivity_deviation_value
    0x00240104: generalized_defect_corrected_sensitivity_deviation_probability_value
    0x00240105: minimum_sensitivity_value
    0x00240106: blind_spot_localized
    0x00240107: blind_spot_x_coordinate
    0x00240108: blind_spot_y_coordinate
    0x00240110: visual_acuity_measurement_sequence
    0x00240112: refractive_parameters_used_on_patient_sequence
    0x00240113: measurement_laterality
    0x00240114: ophthalmic_patient_clinical_information_left_eye_sequence
    0x00240115: ophthalmic_patient_clinical_information_right_eye_sequence
    0x00240117: foveal_point_normative_data_flag
    0x00240118: foveal_point_probability_value
    0x00240120: screening_baseline_measured
    0x00240122: screening_baseline_measured_sequence
    0x00240124: screening_baseline_type
    0x00240126: screening_baseline_value
    0x00240202: algorithm_source
    0x00240306: data_set_name
    0x00240307: data_set_version
    0x00240308: data_set_source
    0x00240309: data_set_description
    0x00240317: visual_field_test_reliability_global_index_sequence
    0x00240320: visual_field_global_results_index_sequence
    0x00240325: data_observation_sequence
    0x00240338: index_normals_flag
    0x00240341: index_probability
    0x00240344: index_probability_sequence
    0x00280002: samples_per_pixel
    0x00280003: samples_per_pixel_used
    0x00280004: photometric_interpretation
    0x00280005: image_dimensions
    0x00280006: planar_configuration
    0x00280008: number_of_frames
    0x00280009: frame_increment_pointer
    0x0028000A: frame_dimension_pointer
    0x00280010: rows
    0x00280011: columns
    0x00280012: planes
    0x00280014: ultrasound_color_data_present
    0x00280030: pixel_spacing
    0x00280031: zoom_factor
    0x00280032: zoom_center
    0x00280034: pixel_aspect_ratio
    0x00280040: image_format
    0x00280050: manipulated_image
    0x00280051: corrected_image
    0x0028005F: compression_recognition_code
    0x00280060: compression_code
    0x00280061: compression_originator
    0x00280062: compression_label
    0x00280063: compression_description
    0x00280065: compression_sequence
    0x00280066: compression_step_pointers
    0x00280068: repeat_interval
    0x00280069: bits_grouped
    0x00280070: perimeter_table
    0x00280071: perimeter_value
    0x00280080: predictor_rows
    0x00280081: predictor_columns
    0x00280082: predictor_constants
    0x00280090: blocked_pixels
    0x00280091: block_rows
    0x00280092: block_columns
    0x00280093: row_overlap
    0x00280094: column_overlap
    0x00280100: bits_allocated
    0x00280101: bits_stored
    0x00280102: high_bit
    0x00280103: pixel_representation
    0x00280104: smallest_valid_pixel_value
    0x00280105: largest_valid_pixel_value
    0x00280106: smallest_image_pixel_value
    0x00280107: largest_image_pixel_value
    0x00280108: smallest_pixel_value_in_series
    0x00280109: largest_pixel_value_in_series
    0x00280110: smallest_image_pixel_value_in_plane
    0x00280111: largest_image_pixel_value_in_plane
    0x00280120: pixel_padding_value
    0x00280121: pixel_padding_range_limit
    0x00280122: float_pixel_padding_value
    0x00280123: double_float_pixel_padding_value
    0x00280124: float_pixel_padding_range_limit
    0x00280125: double_float_pixel_padding_range_limit
    0x00280200: image_location
    0x00280300: quality_control_image
    0x00280301: burned_in_annotation
    0x00280302: recognizable_visual_features
    0x00280303: longitudinal_temporal_information_modified
    0x00280304: referenced_color_palette_instance_uid
    0x00280400: transform_label
    0x00280401: transform_version_number
    0x00280402: number_of_transform_steps
    0x00280403: sequence_of_compressed_data
    0x00280404: details_of_coefficients
    0x00280700: dct_label
    0x00280701: data_block_description
    0x00280702: data_block
    0x00280710: normalization_factor_format
    0x00280720: zonal_map_number_format
    0x00280721: zonal_map_location
    0x00280722: zonal_map_format
    0x00280730: adaptive_map_format
    0x00280740: code_number_format
    0x00280A02: pixel_spacing_calibration_type
    0x00280A04: pixel_spacing_calibration_description
    0x00281040: pixel_intensity_relationship
    0x00281041: pixel_intensity_relationship_sign
    0x00281050: window_center
    0x00281051: window_width
    0x00281052: rescale_intercept
    0x00281053: rescale_slope
    0x00281054: rescale_type
    0x00281055: window_center___width_explanation
    0x00281056: voi_lut_function
    0x00281080: gray_scale
    0x00281090: recommended_viewing_mode
    0x00281100: gray_lookup_table_descriptor
    0x00281101: red_palette_color_lookup_table_descriptor
    0x00281102: green_palette_color_lookup_table_descriptor
    0x00281103: blue_palette_color_lookup_table_descriptor
    0x00281104: alpha_palette_color_lookup_table_descriptor
    0x00281111: large_red_palette_color_lookup_table_descriptor
    0x00281112: large_green_palette_color_lookup_table_descriptor
    0x00281113: large_blue_palette_color_lookup_table_descriptor
    0x00281199: palette_color_lookup_table_uid
    0x00281200: gray_lookup_table_data
    0x00281201: red_palette_color_lookup_table_data
    0x00281202: green_palette_color_lookup_table_data
    0x00281203: blue_palette_color_lookup_table_data
    0x00281204: alpha_palette_color_lookup_table_data
    0x00281211: large_red_palette_color_lookup_table_data
    0x00281212: large_green_palette_color_lookup_table_data
    0x00281213: large_blue_palette_color_lookup_table_data
    0x00281214: large_palette_color_lookup_table_uid
    0x00281221: segmented_red_palette_color_lookup_table_data
    0x00281222: segmented_green_palette_color_lookup_table_data
    0x00281223: segmented_blue_palette_color_lookup_table_data
    0x00281224: segmented_alpha_palette_color_lookup_table_data
    0x00281300: breast_implant_present
    0x00281350: partial_view
    0x00281351: partial_view_description
    0x00281352: partial_view_code_sequence
    0x0028135A: spatial_locations_preserved
    0x00281401: data_frame_assignment_sequence
    0x00281402: data_path_assignment
    0x00281403: bits_mapped_to_color_lookup_table
    0x00281404: blending_lut_1_sequence
    0x00281405: blending_lut_1_transfer_function
    0x00281406: blending_weight_constant
    0x00281407: blending_lookup_table_descriptor
    0x00281408: blending_lookup_table_data
    0x0028140B: enhanced_palette_color_lookup_table_sequence
    0x0028140C: blending_lut_2_sequence
    0x0028140D: blending_lut_2_transfer_function
    0x0028140E: data_path_id
    0x0028140F: rgb_lut_transfer_function
    0x00281410: alpha_lut_transfer_function
    0x00282000: icc_profile
    0x00282002: color_space
    0x00282110: lossy_image_compression
    0x00282112: lossy_image_compression_ratio
    0x00282114: lossy_image_compression_method
    0x00283000: modality_lut_sequence
    0x00283002: lut_descriptor
    0x00283003: lut_explanation
    0x00283004: modality_lut_type
    0x00283006: lut_data
    0x00283010: voi_lut_sequence
    0x00283110: softcopy_voi_lut_sequence
    0x00284000: image_presentation_comments
    0x00285000: bi_plane_acquisition_sequence
    0x00286010: representative_frame_number
    0x00286020: frame_numbers_of_interest__foi_
    0x00286022: frame_of_interest_description
    0x00286023: frame_of_interest_type
    0x00286030: mask_pointer_s_
    0x00286040: r_wave_pointer
    0x00286100: mask_subtraction_sequence
    0x00286101: mask_operation
    0x00286102: applicable_frame_range
    0x00286110: mask_frame_numbers
    0x00286112: contrast_frame_averaging
    0x00286114: mask_sub_pixel_shift
    0x00286120: tid_offset
    0x00286190: mask_operation_explanation
    0x00287000: equipment_administrator_sequence
    0x00287001: number_of_display_subsystems
    0x00287002: current_configuration_id
    0x00287003: display_subsystem_id
    0x00287004: display_subsystem_name
    0x00287005: display_subsystem_description
    0x00287006: system_status
    0x00287007: system_status_comment
    0x00287008: target_luminance_characteristics_sequence
    0x00287009: luminance_characteristics_id
    0x0028700A: display_subsystem_configuration_sequence
    0x0028700B: configuration_id
    0x0028700C: configuration_name
    0x0028700D: configuration_description
    0x0028700E: referenced_target_luminance_characteristics_id
    0x0028700F: qa_results_sequence
    0x00287010: display_subsystem_qa_results_sequence
    0x00287011: configuration_qa_results_sequence
    0x00287012: measurement_equipment_sequence
    0x00287013: measurement_functions
    0x00287014: measurement_equipment_type
    0x00287015: visual_evaluation_result_sequence
    0x00287016: display_calibration_result_sequence
    0x00287017: ddl_value
    0x00287018: ciexy_white_point
    0x00287019: display_function_type
    0x0028701A: gamma_value
    0x0028701B: number_of_luminance_points
    0x0028701C: luminance_response_sequence
    0x0028701D: target_minimum_luminance
    0x0028701E: target_maximum_luminance
    0x0028701F: luminance_value
    0x00287020: luminance_response_description
    0x00287021: white_point_flag
    0x00287022: display_device_type_code_sequence
    0x00287023: display_subsystem_sequence
    0x00287024: luminance_result_sequence
    0x00287025: ambient_light_value_source
    0x00287026: measured_characteristics
    0x00287027: luminance_uniformity_result_sequence
    0x00287028: visual_evaluation_test_sequence
    0x00287029: test_result
    0x0028702A: test_result_comment
    0x0028702B: test_image_validation
    0x0028702C: test_pattern_code_sequence
    0x0028702D: measurement_pattern_code_sequence
    0x0028702E: visual_evaluation_method_code_sequence
    0x00287FE0: pixel_data_provider_url
    0x00289001: data_point_rows
    0x00289002: data_point_columns
    0x00289003: signal_domain_columns
    0x00289099: largest_monochrome_pixel_value
    0x00289108: data_representation
    0x00289110: pixel_measures_sequence
    0x00289132: frame_voi_lut_sequence
    0x00289145: pixel_value_transformation_sequence
    0x00289235: signal_domain_rows
    0x00289411: display_filter_percentage
    0x00289415: frame_pixel_shift_sequence
    0x00289416: subtraction_item_id
    0x00289422: pixel_intensity_relationship_lut_sequence
    0x00289443: frame_pixel_data_properties_sequence
    0x00289444: geometrical_properties
    0x00289445: geometric_maximum_distortion
    0x00289446: image_processing_applied
    0x00289454: mask_selection_mode
    0x00289474: lut_function
    0x00289478: mask_visibility_percentage
    0x00289501: pixel_shift_sequence
    0x00289502: region_pixel_shift_sequence
    0x00289503: vertices_of_the_region
    0x00289505: multi_frame_presentation_sequence
    0x00289506: pixel_shift_frame_range
    0x00289507: lut_frame_range
    0x00289520: image_to_equipment_mapping_matrix
    0x00289537: equipment_coordinate_system_identification
    0x0032000A: study_status_id
    0x0032000C: study_priority_id
    0x00320012: study_id_issuer
    0x00320032: study_verified_date
    0x00320033: study_verified_time
    0x00320034: study_read_date
    0x00320035: study_read_time
    0x00321000: scheduled_study_start_date
    0x00321001: scheduled_study_start_time
    0x00321010: scheduled_study_stop_date
    0x00321011: scheduled_study_stop_time
    0x00321020: scheduled_study_location
    0x00321021: scheduled_study_location_ae_title
    0x00321030: reason_for_study
    0x00321031: requesting_physician_identification_sequence
    0x00321032: requesting_physician
    0x00321033: requesting_service
    0x00321034: requesting_service_code_sequence
    0x00321040: study_arrival_date
    0x00321041: study_arrival_time
    0x00321050: study_completion_date
    0x00321051: study_completion_time
    0x00321055: study_component_status_id
    0x00321060: requested_procedure_description
    0x00321064: requested_procedure_code_sequence
    0x00321070: requested_contrast_agent
    0x00324000: study_comments
    0x00380004: referenced_patient_alias_sequence
    0x00380008: visit_status_id
    0x00380010: admission_id
    0x00380011: issuer_of_admission_id
    0x00380014: issuer_of_admission_id_sequence
    0x00380016: route_of_admissions
    0x0038001A: scheduled_admission_date
    0x0038001B: scheduled_admission_time
    0x0038001C: scheduled_discharge_date
    0x0038001D: scheduled_discharge_time
    0x0038001E: scheduled_patient_institution_residence
    0x00380020: admitting_date
    0x00380021: admitting_time
    0x00380030: discharge_date
    0x00380032: discharge_time
    0x00380040: discharge_diagnosis_description
    0x00380044: discharge_diagnosis_code_sequence
    0x00380050: special_needs
    0x00380060: service_episode_id
    0x00380061: issuer_of_service_episode_id
    0x00380062: service_episode_description
    0x00380064: issuer_of_service_episode_id_sequence
    0x00380100: pertinent_documents_sequence
    0x00380101: pertinent_resources_sequence
    0x00380102: resource_description
    0x00380300: current_patient_location
    0x00380400: patient_s_institution_residence
    0x00380500: patient_state
    0x00380502: patient_clinical_trial_participation_sequence
    0x00384000: visit_comments
    0x003A0004: waveform_originality
    0x003A0005: number_of_waveform_channels
    0x003A0010: number_of_waveform_samples
    0x003A001A: sampling_frequency
    0x003A0020: multiplex_group_label
    0x003A0200: channel_definition_sequence
    0x003A0202: waveform_channel_number
    0x003A0203: channel_label
    0x003A0205: channel_status
    0x003A0208: channel_source_sequence
    0x003A0209: channel_source_modifiers_sequence
    0x003A020A: source_waveform_sequence
    0x003A020C: channel_derivation_description
    0x003A0210: channel_sensitivity
    0x003A0211: channel_sensitivity_units_sequence
    0x003A0212: channel_sensitivity_correction_factor
    0x003A0213: channel_baseline
    0x003A0214: channel_time_skew
    0x003A0215: channel_sample_skew
    0x003A0218: channel_offset
    0x003A021A: waveform_bits_stored
    0x003A0220: filter_low_frequency
    0x003A0221: filter_high_frequency
    0x003A0222: notch_filter_frequency
    0x003A0223: notch_filter_bandwidth
    0x003A0230: waveform_data_display_scale
    0x003A0231: waveform_display_background_cielab_value
    0x003A0240: waveform_presentation_group_sequence
    0x003A0241: presentation_group_number
    0x003A0242: channel_display_sequence
    0x003A0244: channel_recommended_display_cielab_value
    0x003A0245: channel_position
    0x003A0246: display_shading_flag
    0x003A0247: fractional_channel_display_scale
    0x003A0248: absolute_channel_display_scale
    0x003A0300: multiplexed_audio_channels_description_code_sequence
    0x003A0301: channel_identification_code
    0x003A0302: channel_mode
    0x00400001: scheduled_station_ae_title
    0x00400002: scheduled_procedure_step_start_date
    0x00400003: scheduled_procedure_step_start_time
    0x00400004: scheduled_procedure_step_end_date
    0x00400005: scheduled_procedure_step_end_time
    0x00400006: scheduled_performing_physician_s_name
    0x00400007: scheduled_procedure_step_description
    0x00400008: scheduled_protocol_code_sequence
    0x00400009: scheduled_procedure_step_id
    0x0040000A: stage_code_sequence
    0x0040000B: scheduled_performing_physician_identification_sequence
    0x00400010: scheduled_station_name
    0x00400011: scheduled_procedure_step_location
    0x00400012: pre_medication
    0x00400020: scheduled_procedure_step_status
    0x00400026: order_placer_identifier_sequence
    0x00400027: order_filler_identifier_sequence
    0x00400031: local_namespace_entity_id
    0x00400032: universal_entity_id
    0x00400033: universal_entity_id_type
    0x00400035: identifier_type_code
    0x00400036: assigning_facility_sequence
    0x00400039: assigning_jurisdiction_code_sequence
    0x0040003A: assigning_agency_or_department_code_sequence
    0x00400100: scheduled_procedure_step_sequence
    0x00400220: referenced_non_image_composite_sop_instance_sequence
    0x00400241: performed_station_ae_title
    0x00400242: performed_station_name
    0x00400243: performed_location
    0x00400244: performed_procedure_step_start_date
    0x00400245: performed_procedure_step_start_time
    0x00400250: performed_procedure_step_end_date
    0x00400251: performed_procedure_step_end_time
    0x00400252: performed_procedure_step_status
    0x00400253: performed_procedure_step_id
    0x00400254: performed_procedure_step_description
    0x00400255: performed_procedure_type_description
    0x00400260: performed_protocol_code_sequence
    0x00400261: performed_protocol_type
    0x00400270: scheduled_step_attributes_sequence
    0x00400275: request_attributes_sequence
    0x00400280: comments_on_the_performed_procedure_step
    0x00400281: performed_procedure_step_discontinuation_reason_code_sequence
    0x00400293: quantity_sequence
    0x00400294: quantity
    0x00400295: measuring_units_sequence
    0x00400296: billing_item_sequence
    0x00400300: total_time_of_fluoroscopy
    0x00400301: total_number_of_exposures
    0x00400302: entrance_dose
    0x00400303: exposed_area
    0x00400306: distance_source_to_entrance
    0x00400307: distance_source_to_support
    0x0040030E: exposure_dose_sequence
    0x00400310: comments_on_radiation_dose
    0x00400312: x_ray_output
    0x00400314: half_value_layer
    0x00400316: organ_dose
    0x00400318: organ_exposed
    0x00400320: billing_procedure_step_sequence
    0x00400321: film_consumption_sequence
    0x00400324: billing_supplies_and_devices_sequence
    0x00400330: referenced_procedure_step_sequence
    0x00400340: performed_series_sequence
    0x00400400: comments_on_the_scheduled_procedure_step
    0x00400440: protocol_context_sequence
    0x00400441: content_item_modifier_sequence
    0x00400500: scheduled_specimen_sequence
    0x0040050A: specimen_accession_number
    0x00400512: container_identifier
    0x00400513: issuer_of_the_container_identifier_sequence
    0x00400515: alternate_container_identifier_sequence
    0x00400518: container_type_code_sequence
    0x0040051A: container_description
    0x00400520: container_component_sequence
    0x00400550: specimen_sequence
    0x00400551: specimen_identifier
    0x00400552: specimen_description_sequence__trial_
    0x00400553: specimen_description__trial_
    0x00400554: specimen_uid
    0x00400555: acquisition_context_sequence
    0x00400556: acquisition_context_description
    0x0040059A: specimen_type_code_sequence
    0x00400560: specimen_description_sequence
    0x00400562: issuer_of_the_specimen_identifier_sequence
    0x00400600: specimen_short_description
    0x00400602: specimen_detailed_description
    0x00400610: specimen_preparation_sequence
    0x00400612: specimen_preparation_step_content_item_sequence
    0x00400620: specimen_localization_content_item_sequence
    0x004006FA: slide_identifier
    0x0040071A: image_center_point_coordinates_sequence
    0x0040072A: x_offset_in_slide_coordinate_system
    0x0040073A: y_offset_in_slide_coordinate_system
    0x0040074A: z_offset_in_slide_coordinate_system
    0x004008D8: pixel_spacing_sequence
    0x004008DA: coordinate_system_axis_code_sequence
    0x004008EA: measurement_units_code_sequence
    0x004009F8: vital_stain_code_sequence__trial_
    0x00401001: requested_procedure_id
    0x00401002: reason_for_the_requested_procedure
    0x00401003: requested_procedure_priority
    0x00401004: patient_transport_arrangements
    0x00401005: requested_procedure_location
    0x00401006: placer_order_number___procedure
    0x00401007: filler_order_number___procedure
    0x00401008: confidentiality_code
    0x00401009: reporting_priority
    0x0040100A: reason_for_requested_procedure_code_sequence
    0x00401010: names_of_intended_recipients_of_results
    0x00401011: intended_recipients_of_results_identification_sequence
    0x00401012: reason_for_performed_procedure_code_sequence
    0x00401060: requested_procedure_description__trial_
    0x00401101: person_identification_code_sequence
    0x00401102: person_s_address
    0x00401103: person_s_telephone_numbers
    0x00401104: person_s_telecom_information
    0x00401400: requested_procedure_comments
    0x00402001: reason_for_the_imaging_service_request
    0x00402004: issue_date_of_imaging_service_request
    0x00402005: issue_time_of_imaging_service_request
    0x00402006: placer_order_number___imaging_service_request__retired_
    0x00402007: filler_order_number___imaging_service_request__retired_
    0x00402008: order_entered_by
    0x00402009: order_enterer_s_location
    0x00402010: order_callback_phone_number
    0x00402011: order_callback_telecom_information
    0x00402016: placer_order_number___imaging_service_request
    0x00402017: filler_order_number___imaging_service_request
    0x00402400: imaging_service_request_comments
    0x00403001: confidentiality_constraint_on_patient_data_description
    0x00404001: general_purpose_scheduled_procedure_step_status
    0x00404002: general_purpose_performed_procedure_step_status
    0x00404003: general_purpose_scheduled_procedure_step_priority
    0x00404004: scheduled_processing_applications_code_sequence
    0x00404005: scheduled_procedure_step_start_datetime
    0x00404006: multiple_copies_flag
    0x00404007: performed_processing_applications_code_sequence
    0x00404009: human_performer_code_sequence
    0x00404010: scheduled_procedure_step_modification_datetime
    0x00404011: expected_completion_datetime
    0x00404015: resulting_general_purpose_performed_procedure_steps_sequence
    0x00404016: referenced_general_purpose_scheduled_procedure_step_sequence
    0x00404018: scheduled_workitem_code_sequence
    0x00404019: performed_workitem_code_sequence
    0x00404020: input_availability_flag
    0x00404021: input_information_sequence
    0x00404022: relevant_information_sequence
    0x00404023: referenced_general_purpose_scheduled_procedure_step_transaction_uid
    0x00404025: scheduled_station_name_code_sequence
    0x00404026: scheduled_station_class_code_sequence
    0x00404027: scheduled_station_geographic_location_code_sequence
    0x00404028: performed_station_name_code_sequence
    0x00404029: performed_station_class_code_sequence
    0x00404030: performed_station_geographic_location_code_sequence
    0x00404031: requested_subsequent_workitem_code_sequence
    0x00404032: non_dicom_output_code_sequence
    0x00404033: output_information_sequence
    0x00404034: scheduled_human_performers_sequence
    0x00404035: actual_human_performers_sequence
    0x00404036: human_performer_s_organization
    0x00404037: human_performer_s_name
    0x00404040: raw_data_handling
    0x00404041: input_readiness_state
    0x00404050: performed_procedure_step_start_datetime
    0x00404051: performed_procedure_step_end_datetime
    0x00404052: procedure_step_cancellation_datetime
    0x00404070: output_destination_sequence
    0x00404071: dicom_storage_sequence
    0x00404072: stow_rs_storage_sequence
    0x00404073: storage_url
    0x00404074: xds_storage_sequence
    0x00408302: entrance_dose_in_mgy
    0x00409092: parametric_map_frame_type_sequence
    0x00409094: referenced_image_real_world_value_mapping_sequence
    0x00409096: real_world_value_mapping_sequence
    0x00409098: pixel_value_mapping_code_sequence
    0x00409210: lut_label
    0x00409211: real_world_value_last_value_mapped
    0x00409212: real_world_value_lut_data
    0x00409213: double_float_real_world_value_last_value_mapped
    0x00409214: double_float_real_world_value_first_value_mapped
    0x00409216: real_world_value_first_value_mapped
    0x00409220: quantity_definition_sequence
    0x00409224: real_world_value_intercept
    0x00409225: real_world_value_slope
    0x0040A007: findings_flag__trial_
    0x0040A010: relationship_type
    0x0040A020: findings_sequence__trial_
    0x0040A021: findings_group_uid__trial_
    0x0040A022: referenced_findings_group_uid__trial_
    0x0040A023: findings_group_recording_date__trial_
    0x0040A024: findings_group_recording_time__trial_
    0x0040A026: findings_source_category_code_sequence__trial_
    0x0040A027: verifying_organization
    0x0040A028: documenting_organization_identifier_code_sequence__trial_
    0x0040A030: verification_datetime
    0x0040A032: observation_datetime
    0x0040A040: value_type
    0x0040A043: concept_name_code_sequence
    0x0040A047: measurement_precision_description__trial_
    0x0040A050: continuity_of_content
    0x0040A057: urgency_or_priority_alerts__trial_
    0x0040A060: sequencing_indicator__trial_
    0x0040A066: document_identifier_code_sequence__trial_
    0x0040A067: document_author__trial_
    0x0040A068: document_author_identifier_code_sequence__trial_
    0x0040A070: identifier_code_sequence__trial_
    0x0040A073: verifying_observer_sequence
    0x0040A074: object_binary_identifier__trial_
    0x0040A075: verifying_observer_name
    0x0040A076: documenting_observer_identifier_code_sequence__trial_
    0x0040A078: author_observer_sequence
    0x0040A07A: participant_sequence
    0x0040A07C: custodial_organization_sequence
    0x0040A080: participation_type
    0x0040A082: participation_datetime
    0x0040A084: observer_type
    0x0040A085: procedure_identifier_code_sequence__trial_
    0x0040A088: verifying_observer_identification_code_sequence
    0x0040A089: object_directory_binary_identifier__trial_
    0x0040A090: equivalent_cda_document_sequence
    0x0040A0B0: referenced_waveform_channels
    0x0040A110: date_of_document_or_verbal_transaction__trial_
    0x0040A112: time_of_document_creation_or_verbal_transaction__trial_
    0x0040A120: datetime
    0x0040A121: date
    0x0040A122: time
    0x0040A123: person_name
    0x0040A124: uid
    0x0040A125: report_status_id__trial_
    0x0040A130: temporal_range_type
    0x0040A132: referenced_sample_positions
    0x0040A136: referenced_frame_numbers
    0x0040A138: referenced_time_offsets
    0x0040A13A: referenced_datetime
    0x0040A160: text_value
    0x0040A161: floating_point_value
    0x0040A162: rational_numerator_value
    0x0040A163: rational_denominator_value
    0x0040A167: observation_category_code_sequence__trial_
    0x0040A168: concept_code_sequence
    0x0040A16A: bibliographic_citation__trial_
    0x0040A170: purpose_of_reference_code_sequence
    0x0040A171: observation_uid
    0x0040A172: referenced_observation_uid__trial_
    0x0040A173: referenced_observation_class__trial_
    0x0040A174: referenced_object_observation_class__trial_
    0x0040A180: annotation_group_number
    0x0040A192: observation_date__trial_
    0x0040A193: observation_time__trial_
    0x0040A194: measurement_automation__trial_
    0x0040A195: modifier_code_sequence
    0x0040A224: identification_description__trial_
    0x0040A290: coordinates_set_geometric_type__trial_
    0x0040A296: algorithm_code_sequence__trial_
    0x0040A297: algorithm_description__trial_
    0x0040A29A: pixel_coordinates_set__trial_
    0x0040A300: measured_value_sequence
    0x0040A301: numeric_value_qualifier_code_sequence
    0x0040A307: current_observer__trial_
    0x0040A30A: numeric_value
    0x0040A313: referenced_accession_sequence__trial_
    0x0040A33A: report_status_comment__trial_
    0x0040A340: procedure_context_sequence__trial_
    0x0040A352: verbal_source__trial_
    0x0040A353: address__trial_
    0x0040A354: telephone_number__trial_
    0x0040A358: verbal_source_identifier_code_sequence__trial_
    0x0040A360: predecessor_documents_sequence
    0x0040A370: referenced_request_sequence
    0x0040A372: performed_procedure_code_sequence
    0x0040A375: current_requested_procedure_evidence_sequence
    0x0040A380: report_detail_sequence__trial_
    0x0040A385: pertinent_other_evidence_sequence
    0x0040A390: hl7_structured_document_reference_sequence
    0x0040A402: observation_subject_uid__trial_
    0x0040A403: observation_subject_class__trial_
    0x0040A404: observation_subject_type_code_sequence__trial_
    0x0040A491: completion_flag
    0x0040A492: completion_flag_description
    0x0040A493: verification_flag
    0x0040A494: archive_requested
    0x0040A496: preliminary_flag
    0x0040A504: content_template_sequence
    0x0040A525: identical_documents_sequence
    0x0040A600: observation_subject_context_flag__trial_
    0x0040A601: observer_context_flag__trial_
    0x0040A603: procedure_context_flag__trial_
    0x0040A730: content_sequence
    0x0040A731: relationship_sequence__trial_
    0x0040A732: relationship_type_code_sequence__trial_
    0x0040A744: language_code_sequence__trial_
    0x0040A992: uniform_resource_locator__trial_
    0x0040B020: waveform_annotation_sequence
    0x0040DB00: template_identifier
    0x0040DB06: template_version
    0x0040DB07: template_local_version
    0x0040DB0B: template_extension_flag
    0x0040DB0C: template_extension_organization_uid
    0x0040DB0D: template_extension_creator_uid
    0x0040DB73: referenced_content_item_identifier
    0x0040E001: hl7_instance_identifier
    0x0040E004: hl7_document_effective_time
    0x0040E006: hl7_document_type_code_sequence
    0x0040E008: document_class_code_sequence
    0x0040E010: retrieve_uri
    0x0040E011: retrieve_location_uid
    0x0040E020: type_of_instances
    0x0040E021: dicom_retrieval_sequence
    0x0040E022: dicom_media_retrieval_sequence
    0x0040E023: wado_retrieval_sequence
    0x0040E024: xds_retrieval_sequence
    0x0040E025: wado_rs_retrieval_sequence
    0x0040E030: repository_unique_id
    0x0040E031: home_community_id
    0x00420010: document_title
    0x00420011: encapsulated_document
    0x00420012: mime_type_of_encapsulated_document
    0x00420013: source_instance_sequence
    0x00420014: list_of_mime_types
    0x00440001: product_package_identifier
    0x00440002: substance_administration_approval
    0x00440003: approval_status_further_description
    0x00440004: approval_status_datetime
    0x00440007: product_type_code_sequence
    0x00440008: product_name
    0x00440009: product_description
    0x0044000A: product_lot_identifier
    0x0044000B: product_expiration_datetime
    0x00440010: substance_administration_datetime
    0x00440011: substance_administration_notes
    0x00440012: substance_administration_device_id
    0x00440013: product_parameter_sequence
    0x00440019: substance_administration_parameter_sequence
    0x00460012: lens_description
    0x00460014: right_lens_sequence
    0x00460015: left_lens_sequence
    0x00460016: unspecified_laterality_lens_sequence
    0x00460018: cylinder_sequence
    0x00460028: prism_sequence
    0x00460030: horizontal_prism_power
    0x00460032: horizontal_prism_base
    0x00460034: vertical_prism_power
    0x00460036: vertical_prism_base
    0x00460038: lens_segment_type
    0x00460040: optical_transmittance
    0x00460042: channel_width
    0x00460044: pupil_size
    0x00460046: corneal_size
    0x00460050: autorefraction_right_eye_sequence
    0x00460052: autorefraction_left_eye_sequence
    0x00460060: distance_pupillary_distance
    0x00460062: near_pupillary_distance
    0x00460063: intermediate_pupillary_distance
    0x00460064: other_pupillary_distance
    0x00460070: keratometry_right_eye_sequence
    0x00460071: keratometry_left_eye_sequence
    0x00460074: steep_keratometric_axis_sequence
    0x00460075: radius_of_curvature
    0x00460076: keratometric_power
    0x00460077: keratometric_axis
    0x00460080: flat_keratometric_axis_sequence
    0x00460092: background_color
    0x00460094: optotype
    0x00460095: optotype_presentation
    0x00460097: subjective_refraction_right_eye_sequence
    0x00460098: subjective_refraction_left_eye_sequence
    0x00460100: add_near_sequence
    0x00460101: add_intermediate_sequence
    0x00460102: add_other_sequence
    0x00460104: add_power
    0x00460106: viewing_distance
    0x00460121: visual_acuity_type_code_sequence
    0x00460122: visual_acuity_right_eye_sequence
    0x00460123: visual_acuity_left_eye_sequence
    0x00460124: visual_acuity_both_eyes_open_sequence
    0x00460125: viewing_distance_type
    0x00460135: visual_acuity_modifiers
    0x00460137: decimal_visual_acuity
    0x00460139: optotype_detailed_definition
    0x00460145: referenced_refractive_measurements_sequence
    0x00460146: sphere_power
    0x00460147: cylinder_power
    0x00460201: corneal_topography_surface
    0x00460202: corneal_vertex_location
    0x00460203: pupil_centroid_x_coordinate
    0x00460204: pupil_centroid_y_coordinate
    0x00460205: equivalent_pupil_radius
    0x00460207: corneal_topography_map_type_code_sequence
    0x00460208: vertices_of_the_outline_of_pupil
    0x00460210: corneal_topography_mapping_normals_sequence
    0x00460211: maximum_corneal_curvature_sequence
    0x00460212: maximum_corneal_curvature
    0x00460213: maximum_corneal_curvature_location
    0x00460215: minimum_keratometric_sequence
    0x00460218: simulated_keratometric_cylinder_sequence
    0x00460220: average_corneal_power
    0x00460224: corneal_i_s_value
    0x00460227: analyzed_area
    0x00460230: surface_regularity_index
    0x00460232: surface_asymmetry_index
    0x00460234: corneal_eccentricity_index
    0x00460236: keratoconus_prediction_index
    0x00460238: decimal_potential_visual_acuity
    0x00460242: corneal_topography_map_quality_evaluation
    0x00460244: source_image_corneal_processed_data_sequence
    0x00460247: corneal_point_location
    0x00460248: corneal_point_estimated
    0x00460249: axial_power
    0x00460250: tangential_power
    0x00460251: refractive_power
    0x00460252: relative_elevation
    0x00460253: corneal_wavefront
    0x00480001: imaged_volume_width
    0x00480002: imaged_volume_height
    0x00480003: imaged_volume_depth
    0x00480006: total_pixel_matrix_columns
    0x00480007: total_pixel_matrix_rows
    0x00480008: total_pixel_matrix_origin_sequence
    0x00480010: specimen_label_in_image
    0x00480011: focus_method
    0x00480012: extended_depth_of_field
    0x00480013: number_of_focal_planes
    0x00480014: distance_between_focal_planes
    0x00480015: recommended_absent_pixel_cielab_value
    0x00480100: illuminator_type_code_sequence
    0x00480102: image_orientation__slide_
    0x00480105: optical_path_sequence
    0x00480106: optical_path_identifier
    0x00480107: optical_path_description
    0x00480108: illumination_color_code_sequence
    0x00480110: specimen_reference_sequence
    0x00480111: condenser_lens_power
    0x00480112: objective_lens_power
    0x00480113: objective_lens_numerical_aperture
    0x00480120: palette_color_lookup_table_sequence
    0x00480200: referenced_image_navigation_sequence
    0x00480201: top_left_hand_corner_of_localizer_area
    0x00480202: bottom_right_hand_corner_of_localizer_area
    0x00480207: optical_path_identification_sequence
    0x0048021A: plane_position__slide__sequence
    0x0048021E: column_position_in_total_image_pixel_matrix
    0x0048021F: row_position_in_total_image_pixel_matrix
    0x00480301: pixel_origin_interpretation
    0x00500004: calibration_image
    0x00500010: device_sequence
    0x00500012: container_component_type_code_sequence
    0x00500013: container_component_thickness
    0x00500014: device_length
    0x00500015: container_component_width
    0x00500016: device_diameter
    0x00500017: device_diameter_units
    0x00500018: device_volume
    0x00500019: inter_marker_distance
    0x0050001A: container_component_material
    0x0050001B: container_component_id
    0x0050001C: container_component_length
    0x0050001D: container_component_diameter
    0x0050001E: container_component_description
    0x00500020: device_description
    0x00520001: contrast_bolus_ingredient_percent_by_volume
    0x00520002: oct_focal_distance
    0x00520003: beam_spot_size
    0x00520004: effective_refractive_index
    0x00520006: oct_acquisition_domain
    0x00520007: oct_optical_center_wavelength
    0x00520008: axial_resolution
    0x00520009: ranging_depth
    0x00520011: a_line_rate
    0x00520012: a_lines_per_frame
    0x00520013: catheter_rotational_rate
    0x00520014: a_line_pixel_spacing
    0x00520016: mode_of_percutaneous_access_sequence
    0x00520025: intravascular_oct_frame_type_sequence
    0x00520026: oct_z_offset_applied
    0x00520027: intravascular_frame_content_sequence
    0x00520028: intravascular_longitudinal_distance
    0x00520029: intravascular_oct_frame_content_sequence
    0x00520030: oct_z_offset_correction
    0x00520031: catheter_direction_of_rotation
    0x00520033: seam_line_location
    0x00520034: first_a_line_location
    0x00520036: seam_line_index
    0x00520038: number_of_padded_a_lines
    0x00520039: interpolation_type
    0x0052003A: refractive_index_applied
    0x00540010: energy_window_vector
    0x00540011: number_of_energy_windows
    0x00540012: energy_window_information_sequence
    0x00540013: energy_window_range_sequence
    0x00540014: energy_window_lower_limit
    0x00540015: energy_window_upper_limit
    0x00540016: radiopharmaceutical_information_sequence
    0x00540017: residual_syringe_counts
    0x00540018: energy_window_name
    0x00540020: detector_vector
    0x00540021: number_of_detectors
    0x00540022: detector_information_sequence
    0x00540030: phase_vector
    0x00540031: number_of_phases
    0x00540032: phase_information_sequence
    0x00540033: number_of_frames_in_phase
    0x00540036: phase_delay
    0x00540038: pause_between_frames
    0x00540039: phase_description
    0x00540050: rotation_vector
    0x00540051: number_of_rotations
    0x00540052: rotation_information_sequence
    0x00540053: number_of_frames_in_rotation
    0x00540060: r_r_interval_vector
    0x00540061: number_of_r_r_intervals
    0x00540062: gated_information_sequence
    0x00540063: data_information_sequence
    0x00540070: time_slot_vector
    0x00540071: number_of_time_slots
    0x00540072: time_slot_information_sequence
    0x00540073: time_slot_time
    0x00540080: slice_vector
    0x00540081: number_of_slices
    0x00540090: angular_view_vector
    0x00540100: time_slice_vector
    0x00540101: number_of_time_slices
    0x00540200: start_angle
    0x00540202: type_of_detector_motion
    0x00540210: trigger_vector
    0x00540211: number_of_triggers_in_phase
    0x00540220: view_code_sequence
    0x00540222: view_modifier_code_sequence
    0x00540300: radionuclide_code_sequence
    0x00540302: administration_route_code_sequence
    0x00540304: radiopharmaceutical_code_sequence
    0x00540306: calibration_data_sequence
    0x00540308: energy_window_number
    0x00540400: image_id
    0x00540410: patient_orientation_code_sequence
    0x00540412: patient_orientation_modifier_code_sequence
    0x00540414: patient_gantry_relationship_code_sequence
    0x00540500: slice_progression_direction
    0x00540501: scan_progression_direction
    0x00541000: series_type
    0x00541001: units
    0x00541002: counts_source
    0x00541004: reprojection_method
    0x00541006: suv_type
    0x00541100: randoms_correction_method
    0x00541101: attenuation_correction_method
    0x00541102: decay_correction
    0x00541103: reconstruction_method
    0x00541104: detector_lines_of_response_used
    0x00541105: scatter_correction_method
    0x00541200: axial_acceptance
    0x00541201: axial_mash
    0x00541202: transverse_mash
    0x00541203: detector_element_size
    0x00541210: coincidence_window_width
    0x00541220: secondary_counts_type
    0x00541300: frame_reference_time
    0x00541310: primary__prompts__counts_accumulated
    0x00541311: secondary_counts_accumulated
    0x00541320: slice_sensitivity_factor
    0x00541321: decay_factor
    0x00541322: dose_calibration_factor
    0x00541323: scatter_fraction_factor
    0x00541324: dead_time_factor
    0x00541330: image_index
    0x00541400: counts_included
    0x00541401: dead_time_correction_flag
    0x00603000: histogram_sequence
    0x00603002: histogram_number_of_bins
    0x00603004: histogram_first_bin_value
    0x00603006: histogram_last_bin_value
    0x00603008: histogram_bin_width
    0x00603010: histogram_explanation
    0x00603020: histogram_data
    0x00620001: segmentation_type
    0x00620002: segment_sequence
    0x00620003: segmented_property_category_code_sequence
    0x00620004: segment_number
    0x00620005: segment_label
    0x00620006: segment_description
    0x00620008: segment_algorithm_type
    0x00620009: segment_algorithm_name
    0x0062000A: segment_identification_sequence
    0x0062000B: referenced_segment_number
    0x0062000C: recommended_display_grayscale_value
    0x0062000D: recommended_display_cielab_value
    0x0062000E: maximum_fractional_value
    0x0062000F: segmented_property_type_code_sequence
    0x00620010: segmentation_fractional_type
    0x00620011: segmented_property_type_modifier_code_sequence
    0x00620012: used_segments_sequence
    0x00620020: tracking_id
    0x00620021: tracking_uid
    0x00640002: deformable_registration_sequence
    0x00640003: source_frame_of_reference_uid
    0x00640005: deformable_registration_grid_sequence
    0x00640007: grid_dimensions
    0x00640008: grid_resolution
    0x00640009: vector_grid_data
    0x0064000F: pre_deformation_matrix_registration_sequence
    0x00640010: post_deformation_matrix_registration_sequence
    0x00660001: number_of_surfaces
    0x00660002: surface_sequence
    0x00660003: surface_number
    0x00660004: surface_comments
    0x00660009: surface_processing
    0x0066000A: surface_processing_ratio
    0x0066000B: surface_processing_description
    0x0066000C: recommended_presentation_opacity
    0x0066000D: recommended_presentation_type
    0x0066000E: finite_volume
    0x00660010: manifold
    0x00660011: surface_points_sequence
    0x00660012: surface_points_normals_sequence
    0x00660013: surface_mesh_primitives_sequence
    0x00660015: number_of_surface_points
    0x00660016: point_coordinates_data
    0x00660017: point_position_accuracy
    0x00660018: mean_point_distance
    0x00660019: maximum_point_distance
    0x0066001A: points_bounding_box_coordinates
    0x0066001B: axis_of_rotation
    0x0066001C: center_of_rotation
    0x0066001E: number_of_vectors
    0x0066001F: vector_dimensionality
    0x00660020: vector_accuracy
    0x00660021: vector_coordinate_data
    0x00660023: triangle_point_index_list
    0x00660024: edge_point_index_list
    0x00660025: vertex_point_index_list
    0x00660026: triangle_strip_sequence
    0x00660027: triangle_fan_sequence
    0x00660028: line_sequence
    0x00660029: primitive_point_index_list
    0x0066002A: surface_count
    0x0066002B: referenced_surface_sequence
    0x0066002C: referenced_surface_number
    0x0066002D: segment_surface_generation_algorithm_identification_sequence
    0x0066002E: segment_surface_source_instance_sequence
    0x0066002F: algorithm_family_code_sequence
    0x00660030: algorithm_name_code_sequence
    0x00660031: algorithm_version
    0x00660032: algorithm_parameters
    0x00660034: facet_sequence
    0x00660035: surface_processing_algorithm_identification_sequence
    0x00660036: algorithm_name
    0x00660037: recommended_point_radius
    0x00660038: recommended_line_thickness
    0x00660040: long_primitive_point_index_list
    0x00660041: long_triangle_point_index_list
    0x00660042: long_edge_point_index_list
    0x00660043: long_vertex_point_index_list
    0x00660101: track_set_sequence
    0x00660102: track_sequence
    0x00660103: recommended_display_cielab_value_list
    0x00660104: tracking_algorithm_identification_sequence
    0x00660105: track_set_number
    0x00660106: track_set_label
    0x00660107: track_set_description
    0x00660108: track_set_anatomical_type_code_sequence
    0x00660121: measurements_sequence
    0x00660124: track_set_statistics_sequence
    0x00660125: floating_point_values
    0x00660129: track_point_index_list
    0x00660130: track_statistics_sequence
    0x00660132: measurement_values_sequence
    0x00660133: diffusion_acquisition_code_sequence
    0x00660134: diffusion_model_code_sequence
    0x00686210: implant_size
    0x00686221: implant_template_version
    0x00686222: replaced_implant_template_sequence
    0x00686223: implant_type
    0x00686224: derivation_implant_template_sequence
    0x00686225: original_implant_template_sequence
    0x00686226: effective_datetime
    0x00686230: implant_target_anatomy_sequence
    0x00686260: information_from_manufacturer_sequence
    0x00686265: notification_from_manufacturer_sequence
    0x00686270: information_issue_datetime
    0x00686280: information_summary
    0x006862A0: implant_regulatory_disapproval_code_sequence
    0x006862A5: overall_template_spatial_tolerance
    0x006862C0: hpgl_document_sequence
    0x006862D0: hpgl_document_id
    0x006862D5: hpgl_document_label
    0x006862E0: view_orientation_code_sequence
    0x006862F0: view_orientation_modifier
    0x006862F2: hpgl_document_scaling
    0x00686300: hpgl_document
    0x00686310: hpgl_contour_pen_number
    0x00686320: hpgl_pen_sequence
    0x00686330: hpgl_pen_number
    0x00686340: hpgl_pen_label
    0x00686345: hpgl_pen_description
    0x00686346: recommended_rotation_point
    0x00686347: bounding_rectangle
    0x00686350: implant_template_3d_model_surface_number
    0x00686360: surface_model_description_sequence
    0x00686380: surface_model_label
    0x00686390: surface_model_scaling_factor
    0x006863A0: materials_code_sequence
    0x006863A4: coating_materials_code_sequence
    0x006863A8: implant_type_code_sequence
    0x006863AC: fixation_method_code_sequence
    0x006863B0: mating_feature_sets_sequence
    0x006863C0: mating_feature_set_id
    0x006863D0: mating_feature_set_label
    0x006863E0: mating_feature_sequence
    0x006863F0: mating_feature_id
    0x00686400: mating_feature_degree_of_freedom_sequence
    0x00686410: degree_of_freedom_id
    0x00686420: degree_of_freedom_type
    0x00686430: tag_2d_mating_feature_coordinates_sequence
    0x00686440: referenced_hpgl_document_id
    0x00686450: tag_2d_mating_point
    0x00686460: tag_2d_mating_axes
    0x00686470: tag_2d_degree_of_freedom_sequence
    0x00686490: tag_3d_degree_of_freedom_axis
    0x006864A0: range_of_freedom
    0x006864C0: tag_3d_mating_point
    0x006864D0: tag_3d_mating_axes
    0x006864F0: tag_2d_degree_of_freedom_axis
    0x00686500: planning_landmark_point_sequence
    0x00686510: planning_landmark_line_sequence
    0x00686520: planning_landmark_plane_sequence
    0x00686530: planning_landmark_id
    0x00686540: planning_landmark_description
    0x00686545: planning_landmark_identification_code_sequence
    0x00686550: tag_2d_point_coordinates_sequence
    0x00686560: tag_2d_point_coordinates
    0x00686590: tag_3d_point_coordinates
    0x006865A0: tag_2d_line_coordinates_sequence
    0x006865B0: tag_2d_line_coordinates
    0x006865D0: tag_3d_line_coordinates
    0x006865E0: tag_2d_plane_coordinates_sequence
    0x006865F0: tag_2d_plane_intersection
    0x00686610: tag_3d_plane_origin
    0x00686620: tag_3d_plane_normal
    0x00700001: graphic_annotation_sequence
    0x00700002: graphic_layer
    0x00700003: bounding_box_annotation_units
    0x00700004: anchor_point_annotation_units
    0x00700005: graphic_annotation_units
    0x00700006: unformatted_text_value
    0x00700008: text_object_sequence
    0x00700009: graphic_object_sequence
    0x00700010: bounding_box_top_left_hand_corner
    0x00700011: bounding_box_bottom_right_hand_corner
    0x00700012: bounding_box_text_horizontal_justification
    0x00700014: anchor_point
    0x00700015: anchor_point_visibility
    0x00700020: graphic_dimensions
    0x00700021: number_of_graphic_points
    0x00700022: graphic_data
    0x00700023: graphic_type
    0x00700024: graphic_filled
    0x00700040: image_rotation__retired_
    0x00700041: image_horizontal_flip
    0x00700042: image_rotation
    0x00700050: displayed_area_top_left_hand_corner__trial_
    0x00700051: displayed_area_bottom_right_hand_corner__trial_
    0x00700052: displayed_area_top_left_hand_corner
    0x00700053: displayed_area_bottom_right_hand_corner
    0x0070005A: displayed_area_selection_sequence
    0x00700060: graphic_layer_sequence
    0x00700062: graphic_layer_order
    0x00700066: graphic_layer_recommended_display_grayscale_value
    0x00700067: graphic_layer_recommended_display_rgb_value
    0x00700068: graphic_layer_description
    0x00700080: content_label
    0x00700081: content_description
    0x00700082: presentation_creation_date
    0x00700083: presentation_creation_time
    0x00700084: content_creator_s_name
    0x00700086: content_creator_s_identification_code_sequence
    0x00700087: alternate_content_description_sequence
    0x00700100: presentation_size_mode
    0x00700101: presentation_pixel_spacing
    0x00700102: presentation_pixel_aspect_ratio
    0x00700103: presentation_pixel_magnification_ratio
    0x00700207: graphic_group_label
    0x00700208: graphic_group_description
    0x00700209: compound_graphic_sequence
    0x00700226: compound_graphic_instance_id
    0x00700227: font_name
    0x00700228: font_name_type
    0x00700229: css_font_name
    0x00700230: rotation_angle
    0x00700231: text_style_sequence
    0x00700232: line_style_sequence
    0x00700233: fill_style_sequence
    0x00700234: graphic_group_sequence
    0x00700241: text_color_cielab_value
    0x00700242: horizontal_alignment
    0x00700243: vertical_alignment
    0x00700244: shadow_style
    0x00700245: shadow_offset_x
    0x00700246: shadow_offset_y
    0x00700247: shadow_color_cielab_value
    0x00700248: underlined
    0x00700249: bold
    0x00700250: italic
    0x00700251: pattern_on_color_cielab_value
    0x00700252: pattern_off_color_cielab_value
    0x00700253: line_thickness
    0x00700254: line_dashing_style
    0x00700255: line_pattern
    0x00700256: fill_pattern
    0x00700257: fill_mode
    0x00700258: shadow_opacity
    0x00700261: gap_length
    0x00700262: diameter_of_visibility
    0x00700273: rotation_point
    0x00700274: tick_alignment
    0x00700278: show_tick_label
    0x00700279: tick_label_alignment
    0x00700282: compound_graphic_units
    0x00700284: pattern_on_opacity
    0x00700285: pattern_off_opacity
    0x00700287: major_ticks_sequence
    0x00700288: tick_position
    0x00700289: tick_label
    0x00700294: compound_graphic_type
    0x00700295: graphic_group_id
    0x00700306: shape_type
    0x00700308: registration_sequence
    0x00700309: matrix_registration_sequence
    0x0070030A: matrix_sequence
    0x0070030B: frame_of_reference_to_displayed_coordinate_system_transformation_matrix
    0x0070030C: frame_of_reference_transformation_matrix_type
    0x0070030D: registration_type_code_sequence
    0x0070030F: fiducial_description
    0x00700310: fiducial_identifier
    0x00700311: fiducial_identifier_code_sequence
    0x00700312: contour_uncertainty_radius
    0x00700314: used_fiducials_sequence
    0x00700318: graphic_coordinates_data_sequence
    0x0070031A: fiducial_uid
    0x0070031C: fiducial_set_sequence
    0x0070031E: fiducial_sequence
    0x00700401: graphic_layer_recommended_display_cielab_value
    0x00700402: blending_sequence
    0x00700403: relative_opacity
    0x00700404: referenced_spatial_registration_sequence
    0x00700405: blending_position
    0x00701101: presentation_display_collection_uid
    0x00701102: presentation_sequence_collection_uid
    0x00701103: presentation_sequence_position_index
    0x00701104: rendered_image_reference_sequence
    0x00701201: volumetric_presentation_state_input_sequence
    0x00701202: presentation_input_type
    0x00701203: input_sequence_position_index
    0x00701204: crop
    0x00701205: cropping_specification_index
    0x00701206: compositing_method
    0x00701207: volumetric_presentation_input_number
    0x00701208: image_volume_geometry
    0x00701301: volume_cropping_sequence
    0x00701302: volume_cropping_method
    0x00701303: bounding_box_crop
    0x00701304: oblique_cropping_plane_sequence
    0x00701305: plane
    0x00701306: plane_normal
    0x00701309: cropping_specification_number
    0x00701501: multi_planar_reconstruction_style
    0x00701502: mpr_thickness_type
    0x00701503: mpr_slab_thickness
    0x00701505: mpr_top_left_hand_corner
    0x00701507: mpr_view_width_direction
    0x00701508: mpr_view_width
    0x0070150C: number_of_volumetric_curve_points
    0x0070150D: volumetric_curve_points
    0x00701511: mpr_view_height_direction
    0x00701512: mpr_view_height
    0x00701801: presentation_state_classification_component_sequence
    0x00701802: component_type
    0x00701803: component_input_sequence
    0x00701804: volumetric_presentation_input_index
    0x00701805: presentation_state_compositor_component_sequence
    0x00701806: weighting_transfer_function_sequence
    0x00701807: weighting_lookup_table_descriptor
    0x00701808: weighting_lookup_table_data
    0x00701901: volumetric_annotation_sequence
    0x00701903: referenced_structured_context_sequence
    0x00701904: referenced_content_item
    0x00701905: volumetric_presentation_input_annotation_sequence
    0x00701907: annotation_clipping
    0x00701A01: presentation_animation_style
    0x00701A03: recommended_animation_rate
    0x00701A04: animation_curve_sequence
    0x00701A05: animation_step_size
    0x00720002: hanging_protocol_name
    0x00720004: hanging_protocol_description
    0x00720006: hanging_protocol_level
    0x00720008: hanging_protocol_creator
    0x0072000A: hanging_protocol_creation_datetime
    0x0072000C: hanging_protocol_definition_sequence
    0x0072000E: hanging_protocol_user_identification_code_sequence
    0x00720010: hanging_protocol_user_group_name
    0x00720012: source_hanging_protocol_sequence
    0x00720014: number_of_priors_referenced
    0x00720020: image_sets_sequence
    0x00720022: image_set_selector_sequence
    0x00720024: image_set_selector_usage_flag
    0x00720026: selector_attribute
    0x00720028: selector_value_number
    0x00720030: time_based_image_sets_sequence
    0x00720032: image_set_number
    0x00720034: image_set_selector_category
    0x00720038: relative_time
    0x0072003A: relative_time_units
    0x0072003C: abstract_prior_value
    0x0072003E: abstract_prior_code_sequence
    0x00720040: image_set_label
    0x00720050: selector_attribute_vr
    0x00720052: selector_sequence_pointer
    0x00720054: selector_sequence_pointer_private_creator
    0x00720056: selector_attribute_private_creator
    0x0072005E: selector_ae_value
    0x0072005F: selector_as_value
    0x00720060: selector_at_value
    0x00720061: selector_da_value
    0x00720062: selector_cs_value
    0x00720063: selector_dt_value
    0x00720064: selector_is_value
    0x00720065: selector_ob_value
    0x00720066: selector_lo_value
    0x00720067: selector_of_value
    0x00720068: selector_lt_value
    0x00720069: selector_ow_value
    0x0072006A: selector_pn_value
    0x0072006B: selector_tm_value
    0x0072006C: selector_sh_value
    0x0072006D: selector_un_value
    0x0072006E: selector_st_value
    0x0072006F: selector_uc_value
    0x00720070: selector_ut_value
    0x00720071: selector_ur_value
    0x00720072: selector_ds_value
    0x00720073: selector_od_value
    0x00720074: selector_fd_value
    0x00720075: selector_ol_value
    0x00720076: selector_fl_value
    0x00720078: selector_ul_value
    0x0072007A: selector_us_value
    0x0072007C: selector_sl_value
    0x0072007E: selector_ss_value
    0x0072007F: selector_ui_value
    0x00720080: selector_code_sequence_value
    0x00720100: number_of_screens
    0x00720102: nominal_screen_definition_sequence
    0x00720104: number_of_vertical_pixels
    0x00720106: number_of_horizontal_pixels
    0x00720108: display_environment_spatial_position
    0x0072010A: screen_minimum_grayscale_bit_depth
    0x0072010C: screen_minimum_color_bit_depth
    0x0072010E: application_maximum_repaint_time
    0x00720200: display_sets_sequence
    0x00720202: display_set_number
    0x00720203: display_set_label
    0x00720204: display_set_presentation_group
    0x00720206: display_set_presentation_group_description
    0x00720208: partial_data_display_handling
    0x00720210: synchronized_scrolling_sequence
    0x00720212: display_set_scrolling_group
    0x00720214: navigation_indicator_sequence
    0x00720216: navigation_display_set
    0x00720218: reference_display_sets
    0x00720300: image_boxes_sequence
    0x00720302: image_box_number
    0x00720304: image_box_layout_type
    0x00720306: image_box_tile_horizontal_dimension
    0x00720308: image_box_tile_vertical_dimension
    0x00720310: image_box_scroll_direction
    0x00720312: image_box_small_scroll_type
    0x00720314: image_box_small_scroll_amount
    0x00720316: image_box_large_scroll_type
    0x00720318: image_box_large_scroll_amount
    0x00720320: image_box_overlap_priority
    0x00720330: cine_relative_to_real_time
    0x00720400: filter_operations_sequence
    0x00720402: filter_by_category
    0x00720404: filter_by_attribute_presence
    0x00720406: filter_by_operator
    0x00720420: structured_display_background_cielab_value
    0x00720421: empty_image_box_cielab_value
    0x00720422: structured_display_image_box_sequence
    0x00720424: structured_display_text_box_sequence
    0x00720427: referenced_first_frame_sequence
    0x00720430: image_box_synchronization_sequence
    0x00720432: synchronized_image_box_list
    0x00720434: type_of_synchronization
    0x00720500: blending_operation_type
    0x00720510: reformatting_operation_type
    0x00720512: reformatting_thickness
    0x00720514: reformatting_interval
    0x00720516: reformatting_operation_initial_view_direction
    0x00720520: tag_3d_rendering_type
    0x00720600: sorting_operations_sequence
    0x00720602: sort_by_category
    0x00720604: sorting_direction
    0x00720700: display_set_patient_orientation
    0x00720702: voi_type
    0x00720704: pseudo_color_type
    0x00720705: pseudo_color_palette_instance_reference_sequence
    0x00720706: show_grayscale_inverted
    0x00720710: show_image_true_size_flag
    0x00720712: show_graphic_annotation_flag
    0x00720714: show_patient_demographics_flag
    0x00720716: show_acquisition_techniques_flag
    0x00720717: display_set_horizontal_justification
    0x00720718: display_set_vertical_justification
    0x00740120: continuation_start_meterset
    0x00740121: continuation_end_meterset
    0x00741000: procedure_step_state
    0x00741002: procedure_step_progress_information_sequence
    0x00741004: procedure_step_progress
    0x00741006: procedure_step_progress_description
    0x00741008: procedure_step_communications_uri_sequence
    0x0074100A: contact_uri
    0x0074100C: contact_display_name
    0x0074100E: procedure_step_discontinuation_reason_code_sequence
    0x00741020: beam_task_sequence
    0x00741022: beam_task_type
    0x00741024: beam_order_index__trial_
    0x00741025: autosequence_flag
    0x00741026: table_top_vertical_adjusted_position
    0x00741027: table_top_longitudinal_adjusted_position
    0x00741028: table_top_lateral_adjusted_position
    0x0074102A: patient_support_adjusted_angle
    0x0074102B: table_top_eccentric_adjusted_angle
    0x0074102C: table_top_pitch_adjusted_angle
    0x0074102D: table_top_roll_adjusted_angle
    0x00741030: delivery_verification_image_sequence
    0x00741032: verification_image_timing
    0x00741034: double_exposure_flag
    0x00741036: double_exposure_ordering
    0x00741038: double_exposure_meterset__trial_
    0x0074103A: double_exposure_field_delta__trial_
    0x00741040: related_reference_rt_image_sequence
    0x00741042: general_machine_verification_sequence
    0x00741044: conventional_machine_verification_sequence
    0x00741046: ion_machine_verification_sequence
    0x00741048: failed_attributes_sequence
    0x0074104A: overridden_attributes_sequence
    0x0074104C: conventional_control_point_verification_sequence
    0x0074104E: ion_control_point_verification_sequence
    0x00741050: attribute_occurrence_sequence
    0x00741052: attribute_occurrence_pointer
    0x00741054: attribute_item_selector
    0x00741056: attribute_occurrence_private_creator
    0x00741057: selector_sequence_pointer_items
    0x00741200: scheduled_procedure_step_priority
    0x00741202: worklist_label
    0x00741204: procedure_step_label
    0x00741210: scheduled_processing_parameters_sequence
    0x00741212: performed_processing_parameters_sequence
    0x00741216: unified_procedure_step_performed_procedure_sequence
    0x00741220: related_procedure_step_sequence
    0x00741222: procedure_step_relationship_type
    0x00741224: replaced_procedure_step_sequence
    0x00741230: deletion_lock
    0x00741234: receiving_ae
    0x00741236: requesting_ae
    0x00741238: reason_for_cancellation
    0x00741242: scp_status
    0x00741244: subscription_list_status
    0x00741246: unified_procedure_step_list_status
    0x00741324: beam_order_index
    0x00741338: double_exposure_meterset
    0x0074133A: double_exposure_field_delta
    0x00741401: brachy_task_sequence
    0x00741402: continuation_start_total_reference_air_kerma
    0x00741403: continuation_end_total_reference_air_kerma
    0x00741404: continuation_pulse_number
    0x00741405: channel_delivery_order_sequence
    0x00741406: referenced_channel_number
    0x00741407: start_cumulative_time_weight
    0x00741408: end_cumulative_time_weight
    0x00741409: omitted_channel_sequence
    0x0074140A: reason_for_channel_omission
    0x0074140B: reason_for_channel_omission_description
    0x0074140C: channel_delivery_order_index
    0x0074140D: channel_delivery_continuation_sequence
    0x0074140E: omitted_application_setup_sequence
    0x00760001: implant_assembly_template_name
    0x00760003: implant_assembly_template_issuer
    0x00760006: implant_assembly_template_version
    0x00760008: replaced_implant_assembly_template_sequence
    0x0076000A: implant_assembly_template_type
    0x0076000C: original_implant_assembly_template_sequence
    0x0076000E: derivation_implant_assembly_template_sequence
    0x00760010: implant_assembly_template_target_anatomy_sequence
    0x00760020: procedure_type_code_sequence
    0x00760030: surgical_technique
    0x00760032: component_types_sequence
    0x00760034: component_type_code_sequence
    0x00760036: exclusive_component_type
    0x00760038: mandatory_component_type
    0x00760040: component_sequence
    0x00760055: component_id
    0x00760060: component_assembly_sequence
    0x00760070: component_1_referenced_id
    0x00760080: component_1_referenced_mating_feature_set_id
    0x00760090: component_1_referenced_mating_feature_id
    0x007600A0: component_2_referenced_id
    0x007600B0: component_2_referenced_mating_feature_set_id
    0x007600C0: component_2_referenced_mating_feature_id
    0x00780001: implant_template_group_name
    0x00780010: implant_template_group_description
    0x00780020: implant_template_group_issuer
    0x00780024: implant_template_group_version
    0x00780026: replaced_implant_template_group_sequence
    0x00780028: implant_template_group_target_anatomy_sequence
    0x0078002A: implant_template_group_members_sequence
    0x0078002E: implant_template_group_member_id
    0x00780050: tag_3d_implant_template_group_member_matching_point
    0x00780060: tag_3d_implant_template_group_member_matching_axes
    0x00780070: implant_template_group_member_matching_2d_coordinates_sequence
    0x00780090: tag_2d_implant_template_group_member_matching_point
    0x007800A0: tag_2d_implant_template_group_member_matching_axes
    0x007800B0: implant_template_group_variation_dimension_sequence
    0x007800B2: implant_template_group_variation_dimension_name
    0x007800B4: implant_template_group_variation_dimension_rank_sequence
    0x007800B6: referenced_implant_template_group_member_id
    0x007800B8: implant_template_group_variation_dimension_rank
    0x00800001: surface_scan_acquisition_type_code_sequence
    0x00800002: surface_scan_mode_code_sequence
    0x00800003: registration_method_code_sequence
    0x00800004: shot_duration_time
    0x00800005: shot_offset_time
    0x00800006: surface_point_presentation_value_data
    0x00800007: surface_point_color_cielab_value_data
    0x00800008: uv_mapping_sequence
    0x00800009: texture_label
    0x00800010: u_value_data
    0x00800011: v_value_data
    0x00800012: referenced_texture_sequence
    0x00800013: referenced_surface_data_sequence
    0x00820001: assessment_summary
    0x00820003: assessment_summary_description
    0x00820004: assessed_sop_instance_sequence
    0x00820005: referenced_comparison_sop_instance_sequence
    0x00820006: number_of_assessment_observations
    0x00820007: assessment_observations_sequence
    0x00820008: observation_significance
    0x0082000A: observation_description
    0x0082000C: structured_constraint_observation_sequence
    0x00820010: assessed_attribute_value_sequence
    0x00820016: assessment_set_id
    0x00820017: assessment_requester_sequence
    0x00820018: selector_attribute_name
    0x00820019: selector_attribute_keyword
    0x00820021: assessment_type_code_sequence
    0x00820022: observation_basis_code_sequence
    0x00820023: assessment_label
    0x00820032: constraint_type
    0x00820033: specification_selection_guidance
    0x00820034: constraint_value_sequence
    0x00820035: recommended_default_value_sequence
    0x00820036: constraint_violation_significance
    0x00820037: constraint_violation_condition
    0x00880130: storage_media_file_set_id
    0x00880140: storage_media_file_set_uid
    0x00880200: icon_image_sequence
    0x00880904: topic_title
    0x00880906: topic_subject
    0x00880910: topic_author
    0x00880912: topic_keywords
    0x01000410: sop_instance_status
    0x01000420: sop_authorization_datetime
    0x01000424: sop_authorization_comment
    0x01000426: authorization_equipment_certification_number
    0x04000005: mac_id_number
    0x04000010: mac_calculation_transfer_syntax_uid
    0x04000015: mac_algorithm
    0x04000020: data_elements_signed
    0x04000100: digital_signature_uid
    0x04000105: digital_signature_datetime
    0x04000110: certificate_type
    0x04000115: certificate_of_signer
    0x04000120: signature
    0x04000305: certified_timestamp_type
    0x04000310: certified_timestamp
    0x04000401: digital_signature_purpose_code_sequence
    0x04000402: referenced_digital_signature_sequence
    0x04000403: referenced_sop_instance_mac_sequence
    0x04000404: mac
    0x04000500: encrypted_attributes_sequence
    0x04000510: encrypted_content_transfer_syntax_uid
    0x04000520: encrypted_content
    0x04000550: modified_attributes_sequence
    0x04000561: original_attributes_sequence
    0x04000562: attribute_modification_datetime
    0x04000563: modifying_system
    0x04000564: source_of_previous_values
    0x04000565: reason_for_the_attribute_modification
    0x20000010: number_of_copies
    0x2000001E: printer_configuration_sequence
    0x20000020: print_priority
    0x20000030: medium_type
    0x20000040: film_destination
    0x20000050: film_session_label
    0x20000060: memory_allocation
    0x20000061: maximum_memory_allocation
    0x20000062: color_image_printing_flag
    0x20000063: collation_flag
    0x20000065: annotation_flag
    0x20000067: image_overlay_flag
    0x20000069: presentation_lut_flag
    0x2000006A: image_box_presentation_lut_flag
    0x200000A0: memory_bit_depth
    0x200000A1: printing_bit_depth
    0x200000A2: media_installed_sequence
    0x200000A4: other_media_available_sequence
    0x200000A8: supported_image_display_formats_sequence
    0x20000500: referenced_film_box_sequence
    0x20000510: referenced_stored_print_sequence
    0x20100010: image_display_format
    0x20100030: annotation_display_format_id
    0x20100040: film_orientation
    0x20100050: film_size_id
    0x20100052: printer_resolution_id
    0x20100054: default_printer_resolution_id
    0x20100060: magnification_type
    0x20100080: smoothing_type
    0x201000A6: default_magnification_type
    0x201000A7: other_magnification_types_available
    0x201000A8: default_smoothing_type
    0x201000A9: other_smoothing_types_available
    0x20100100: border_density
    0x20100110: empty_image_density
    0x20100120: min_density
    0x20100130: max_density
    0x20100140: trim
    0x20100150: configuration_information
    0x20100152: configuration_information_description
    0x20100154: maximum_collated_films
    0x2010015E: illumination
    0x20100160: reflected_ambient_light
    0x20100376: printer_pixel_spacing
    0x20100500: referenced_film_session_sequence
    0x20100510: referenced_image_box_sequence
    0x20100520: referenced_basic_annotation_box_sequence
    0x20200010: image_box_position
    0x20200020: polarity
    0x20200030: requested_image_size
    0x20200040: requested_decimate_crop_behavior
    0x20200050: requested_resolution_id
    0x202000A0: requested_image_size_flag
    0x202000A2: decimate_crop_result
    0x20200110: basic_grayscale_image_sequence
    0x20200111: basic_color_image_sequence
    0x20200130: referenced_image_overlay_box_sequence
    0x20200140: referenced_voi_lut_box_sequence
    0x20300010: annotation_position
    0x20300020: text_string
    0x20400010: referenced_overlay_plane_sequence
    0x20400011: referenced_overlay_plane_groups
    0x20400020: overlay_pixel_data_sequence
    0x20400060: overlay_magnification_type
    0x20400070: overlay_smoothing_type
    0x20400072: overlay_or_image_magnification
    0x20400074: magnify_to_number_of_columns
    0x20400080: overlay_foreground_density
    0x20400082: overlay_background_density
    0x20400090: overlay_mode
    0x20400100: threshold_density
    0x20400500: referenced_image_box_sequence__retired_
    0x20500010: presentation_lut_sequence
    0x20500020: presentation_lut_shape
    0x20500500: referenced_presentation_lut_sequence
    0x21000010: print_job_id
    0x21000020: execution_status
    0x21000030: execution_status_info
    0x21000040: creation_date
    0x21000050: creation_time
    0x21000070: originator
    0x21000140: destination_ae
    0x21000160: owner_id
    0x21000170: number_of_films
    0x21000500: referenced_print_job_sequence__pull_stored_print_
    0x21100010: printer_status
    0x21100020: printer_status_info
    0x21100030: printer_name
    0x21100099: print_queue_id
    0x21200010: queue_status
    0x21200050: print_job_description_sequence
    0x21200070: referenced_print_job_sequence
    0x21300010: print_management_capabilities_sequence
    0x21300015: printer_characteristics_sequence
    0x21300030: film_box_content_sequence
    0x21300040: image_box_content_sequence
    0x21300050: annotation_content_sequence
    0x21300060: image_overlay_box_content_sequence
    0x21300080: presentation_lut_content_sequence
    0x213000A0: proposed_study_sequence
    0x213000C0: original_image_sequence
    0x22000001: label_using_information_extracted_from_instances
    0x22000002: label_text
    0x22000003: label_style_selection
    0x22000004: media_disposition
    0x22000005: barcode_value
    0x22000006: barcode_symbology
    0x22000007: allow_media_splitting
    0x22000008: include_non_dicom_objects
    0x22000009: include_display_application
    0x2200000A: preserve_composite_instances_after_media_creation
    0x2200000B: total_number_of_pieces_of_media_created
    0x2200000C: requested_media_application_profile
    0x2200000D: referenced_storage_media_sequence
    0x2200000E: failure_attributes
    0x2200000F: allow_lossy_compression
    0x22000020: request_priority
    0x30020002: rt_image_label
    0x30020003: rt_image_name
    0x30020004: rt_image_description
    0x3002000A: reported_values_origin
    0x3002000C: rt_image_plane
    0x3002000D: x_ray_image_receptor_translation
    0x3002000E: x_ray_image_receptor_angle
    0x30020010: rt_image_orientation
    0x30020011: image_plane_pixel_spacing
    0x30020012: rt_image_position
    0x30020020: radiation_machine_name
    0x30020022: radiation_machine_sad
    0x30020024: radiation_machine_ssd
    0x30020026: rt_image_sid
    0x30020028: source_to_reference_object_distance
    0x30020029: fraction_number
    0x30020030: exposure_sequence
    0x30020032: meterset_exposure
    0x30020034: diaphragm_position
    0x30020040: fluence_map_sequence
    0x30020041: fluence_data_source
    0x30020042: fluence_data_scale
    0x30020050: primary_fluence_mode_sequence
    0x30020051: fluence_mode
    0x30020052: fluence_mode_id
    0x30040001: dvh_type
    0x30040002: dose_units
    0x30040004: dose_type
    0x30040005: spatial_transform_of_dose
    0x30040006: dose_comment
    0x30040008: normalization_point
    0x3004000A: dose_summation_type
    0x3004000C: grid_frame_offset_vector
    0x3004000E: dose_grid_scaling
    0x30040010: rt_dose_roi_sequence
    0x30040012: dose_value
    0x30040014: tissue_heterogeneity_correction
    0x30040040: dvh_normalization_point
    0x30040042: dvh_normalization_dose_value
    0x30040050: dvh_sequence
    0x30040052: dvh_dose_scaling
    0x30040054: dvh_volume_units
    0x30040056: dvh_number_of_bins
    0x30040058: dvh_data
    0x30040060: dvh_referenced_roi_sequence
    0x30040062: dvh_roi_contribution_type
    0x30040070: dvh_minimum_dose
    0x30040072: dvh_maximum_dose
    0x30040074: dvh_mean_dose
    0x30060002: structure_set_label
    0x30060004: structure_set_name
    0x30060006: structure_set_description
    0x30060008: structure_set_date
    0x30060009: structure_set_time
    0x30060010: referenced_frame_of_reference_sequence
    0x30060012: rt_referenced_study_sequence
    0x30060014: rt_referenced_series_sequence
    0x30060016: contour_image_sequence
    0x30060018: predecessor_structure_set_sequence
    0x30060020: structure_set_roi_sequence
    0x30060022: roi_number
    0x30060024: referenced_frame_of_reference_uid
    0x30060026: roi_name
    0x30060028: roi_description
    0x3006002A: roi_display_color
    0x3006002C: roi_volume
    0x30060030: rt_related_roi_sequence
    0x30060033: rt_roi_relationship
    0x30060036: roi_generation_algorithm
    0x30060038: roi_generation_description
    0x30060039: roi_contour_sequence
    0x30060040: contour_sequence
    0x30060042: contour_geometric_type
    0x30060044: contour_slab_thickness
    0x30060045: contour_offset_vector
    0x30060046: number_of_contour_points
    0x30060048: contour_number
    0x30060049: attached_contours
    0x30060050: contour_data
    0x30060080: rt_roi_observations_sequence
    0x30060082: observation_number
    0x30060084: referenced_roi_number
    0x30060085: roi_observation_label
    0x30060086: rt_roi_identification_code_sequence
    0x30060088: roi_observation_description
    0x300600A0: related_rt_roi_observations_sequence
    0x300600A4: rt_roi_interpreted_type
    0x300600A6: roi_interpreter
    0x300600B0: roi_physical_properties_sequence
    0x300600B2: roi_physical_property
    0x300600B4: roi_physical_property_value
    0x300600B6: roi_elemental_composition_sequence
    0x300600B7: roi_elemental_composition_atomic_number
    0x300600B8: roi_elemental_composition_atomic_mass_fraction
    0x300600B9: additional_rt_roi_identification_code_sequence
    0x300600C0: frame_of_reference_relationship_sequence
    0x300600C2: related_frame_of_reference_uid
    0x300600C4: frame_of_reference_transformation_type
    0x300600C6: frame_of_reference_transformation_matrix
    0x300600C8: frame_of_reference_transformation_comment
    0x30080010: measured_dose_reference_sequence
    0x30080012: measured_dose_description
    0x30080014: measured_dose_type
    0x30080016: measured_dose_value
    0x30080020: treatment_session_beam_sequence
    0x30080021: treatment_session_ion_beam_sequence
    0x30080022: current_fraction_number
    0x30080024: treatment_control_point_date
    0x30080025: treatment_control_point_time
    0x3008002A: treatment_termination_status
    0x3008002B: treatment_termination_code
    0x3008002C: treatment_verification_status
    0x30080030: referenced_treatment_record_sequence
    0x30080032: specified_primary_meterset
    0x30080033: specified_secondary_meterset
    0x30080036: delivered_primary_meterset
    0x30080037: delivered_secondary_meterset
    0x3008003A: specified_treatment_time
    0x3008003B: delivered_treatment_time
    0x30080040: control_point_delivery_sequence
    0x30080041: ion_control_point_delivery_sequence
    0x30080042: specified_meterset
    0x30080044: delivered_meterset
    0x30080045: meterset_rate_set
    0x30080046: meterset_rate_delivered
    0x30080047: scan_spot_metersets_delivered
    0x30080048: dose_rate_delivered
    0x30080050: treatment_summary_calculated_dose_reference_sequence
    0x30080052: cumulative_dose_to_dose_reference
    0x30080054: first_treatment_date
    0x30080056: most_recent_treatment_date
    0x3008005A: number_of_fractions_delivered
    0x30080060: override_sequence
    0x30080061: parameter_sequence_pointer
    0x30080062: override_parameter_pointer
    0x30080063: parameter_item_index
    0x30080064: measured_dose_reference_number
    0x30080065: parameter_pointer
    0x30080066: override_reason
    0x30080068: corrected_parameter_sequence
    0x3008006A: correction_value
    0x30080070: calculated_dose_reference_sequence
    0x30080072: calculated_dose_reference_number
    0x30080074: calculated_dose_reference_description
    0x30080076: calculated_dose_reference_dose_value
    0x30080078: start_meterset
    0x3008007A: end_meterset
    0x30080080: referenced_measured_dose_reference_sequence
    0x30080082: referenced_measured_dose_reference_number
    0x30080090: referenced_calculated_dose_reference_sequence
    0x30080092: referenced_calculated_dose_reference_number
    0x300800A0: beam_limiting_device_leaf_pairs_sequence
    0x300800B0: recorded_wedge_sequence
    0x300800C0: recorded_compensator_sequence
    0x300800D0: recorded_block_sequence
    0x300800E0: treatment_summary_measured_dose_reference_sequence
    0x300800F0: recorded_snout_sequence
    0x300800F2: recorded_range_shifter_sequence
    0x300800F4: recorded_lateral_spreading_device_sequence
    0x300800F6: recorded_range_modulator_sequence
    0x30080100: recorded_source_sequence
    0x30080105: source_serial_number
    0x30080110: treatment_session_application_setup_sequence
    0x30080116: application_setup_check
    0x30080120: recorded_brachy_accessory_device_sequence
    0x30080122: referenced_brachy_accessory_device_number
    0x30080130: recorded_channel_sequence
    0x30080132: specified_channel_total_time
    0x30080134: delivered_channel_total_time
    0x30080136: specified_number_of_pulses
    0x30080138: delivered_number_of_pulses
    0x3008013A: specified_pulse_repetition_interval
    0x3008013C: delivered_pulse_repetition_interval
    0x30080140: recorded_source_applicator_sequence
    0x30080142: referenced_source_applicator_number
    0x30080150: recorded_channel_shield_sequence
    0x30080152: referenced_channel_shield_number
    0x30080160: brachy_control_point_delivered_sequence
    0x30080162: safe_position_exit_date
    0x30080164: safe_position_exit_time
    0x30080166: safe_position_return_date
    0x30080168: safe_position_return_time
    0x30080171: pulse_specific_brachy_control_point_delivered_sequence
    0x30080172: pulse_number
    0x30080173: brachy_pulse_control_point_delivered_sequence
    0x30080200: current_treatment_status
    0x30080202: treatment_status_comment
    0x30080220: fraction_group_summary_sequence
    0x30080223: referenced_fraction_number
    0x30080224: fraction_group_type
    0x30080230: beam_stopper_position
    0x30080240: fraction_status_summary_sequence
    0x30080250: treatment_date
    0x30080251: treatment_time
    0x300A0002: rt_plan_label
    0x300A0003: rt_plan_name
    0x300A0004: rt_plan_description
    0x300A0006: rt_plan_date
    0x300A0007: rt_plan_time
    0x300A0009: treatment_protocols
    0x300A000A: plan_intent
    0x300A000B: treatment_sites
    0x300A000C: rt_plan_geometry
    0x300A000E: prescription_description
    0x300A0010: dose_reference_sequence
    0x300A0012: dose_reference_number
    0x300A0013: dose_reference_uid
    0x300A0014: dose_reference_structure_type
    0x300A0015: nominal_beam_energy_unit
    0x300A0016: dose_reference_description
    0x300A0018: dose_reference_point_coordinates
    0x300A001A: nominal_prior_dose
    0x300A0020: dose_reference_type
    0x300A0021: constraint_weight
    0x300A0022: delivery_warning_dose
    0x300A0023: delivery_maximum_dose
    0x300A0025: target_minimum_dose
    0x300A0026: target_prescription_dose
    0x300A0027: target_maximum_dose
    0x300A0028: target_underdose_volume_fraction
    0x300A002A: organ_at_risk_full_volume_dose
    0x300A002B: organ_at_risk_limit_dose
    0x300A002C: organ_at_risk_maximum_dose
    0x300A002D: organ_at_risk_overdose_volume_fraction
    0x300A0040: tolerance_table_sequence
    0x300A0042: tolerance_table_number
    0x300A0043: tolerance_table_label
    0x300A0044: gantry_angle_tolerance
    0x300A0046: beam_limiting_device_angle_tolerance
    0x300A0048: beam_limiting_device_tolerance_sequence
    0x300A004A: beam_limiting_device_position_tolerance
    0x300A004B: snout_position_tolerance
    0x300A004C: patient_support_angle_tolerance
    0x300A004E: table_top_eccentric_angle_tolerance
    0x300A004F: table_top_pitch_angle_tolerance
    0x300A0050: table_top_roll_angle_tolerance
    0x300A0051: table_top_vertical_position_tolerance
    0x300A0052: table_top_longitudinal_position_tolerance
    0x300A0053: table_top_lateral_position_tolerance
    0x300A0055: rt_plan_relationship
    0x300A0070: fraction_group_sequence
    0x300A0071: fraction_group_number
    0x300A0072: fraction_group_description
    0x300A0078: number_of_fractions_planned
    0x300A0079: number_of_fraction_pattern_digits_per_day
    0x300A007A: repeat_fraction_cycle_length
    0x300A007B: fraction_pattern
    0x300A0080: number_of_beams
    0x300A0082: beam_dose_specification_point
    0x300A0084: beam_dose
    0x300A0086: beam_meterset
    0x300A0088: beam_dose_point_depth
    0x300A0089: beam_dose_point_equivalent_depth
    0x300A008A: beam_dose_point_ssd
    0x300A008B: beam_dose_meaning
    0x300A008C: beam_dose_verification_control_point_sequence
    0x300A008D: average_beam_dose_point_depth
    0x300A008E: average_beam_dose_point_equivalent_depth
    0x300A008F: average_beam_dose_point_ssd
    0x300A0090: beam_dose_type
    0x300A0091: alternate_beam_dose
    0x300A0092: alternate_beam_dose_type
    0x300A00A0: number_of_brachy_application_setups
    0x300A00A2: brachy_application_setup_dose_specification_point
    0x300A00A4: brachy_application_setup_dose
    0x300A00B0: beam_sequence
    0x300A00B2: treatment_machine_name
    0x300A00B3: primary_dosimeter_unit
    0x300A00B4: source_axis_distance
    0x300A00B6: beam_limiting_device_sequence
    0x300A00B8: rt_beam_limiting_device_type
    0x300A00BA: source_to_beam_limiting_device_distance
    0x300A00BB: isocenter_to_beam_limiting_device_distance
    0x300A00BC: number_of_leaf_jaw_pairs
    0x300A00BE: leaf_position_boundaries
    0x300A00C0: beam_number
    0x300A00C2: beam_name
    0x300A00C3: beam_description
    0x300A00C4: beam_type
    0x300A00C5: beam_delivery_duration_limit
    0x300A00C6: radiation_type
    0x300A00C7: high_dose_technique_type
    0x300A00C8: reference_image_number
    0x300A00CA: planned_verification_image_sequence
    0x300A00CC: imaging_device_specific_acquisition_parameters
    0x300A00CE: treatment_delivery_type
    0x300A00D0: number_of_wedges
    0x300A00D1: wedge_sequence
    0x300A00D2: wedge_number
    0x300A00D3: wedge_type
    0x300A00D4: wedge_id
    0x300A00D5: wedge_angle
    0x300A00D6: wedge_factor
    0x300A00D7: total_wedge_tray_water_equivalent_thickness
    0x300A00D8: wedge_orientation
    0x300A00D9: isocenter_to_wedge_tray_distance
    0x300A00DA: source_to_wedge_tray_distance
    0x300A00DB: wedge_thin_edge_position
    0x300A00DC: bolus_id
    0x300A00DD: bolus_description
    0x300A00DE: effective_wedge_angle
    0x300A00E0: number_of_compensators
    0x300A00E1: material_id
    0x300A00E2: total_compensator_tray_factor
    0x300A00E3: compensator_sequence
    0x300A00E4: compensator_number
    0x300A00E5: compensator_id
    0x300A00E6: source_to_compensator_tray_distance
    0x300A00E7: compensator_rows
    0x300A00E8: compensator_columns
    0x300A00E9: compensator_pixel_spacing
    0x300A00EA: compensator_position
    0x300A00EB: compensator_transmission_data
    0x300A00EC: compensator_thickness_data
    0x300A00ED: number_of_boli
    0x300A00EE: compensator_type
    0x300A00EF: compensator_tray_id
    0x300A00F0: number_of_blocks
    0x300A00F2: total_block_tray_factor
    0x300A00F3: total_block_tray_water_equivalent_thickness
    0x300A00F4: block_sequence
    0x300A00F5: block_tray_id
    0x300A00F6: source_to_block_tray_distance
    0x300A00F7: isocenter_to_block_tray_distance
    0x300A00F8: block_type
    0x300A00F9: accessory_code
    0x300A00FA: block_divergence
    0x300A00FB: block_mounting_position
    0x300A00FC: block_number
    0x300A00FE: block_name
    0x300A0100: block_thickness
    0x300A0102: block_transmission
    0x300A0104: block_number_of_points
    0x300A0106: block_data
    0x300A0107: applicator_sequence
    0x300A0108: applicator_id
    0x300A0109: applicator_type
    0x300A010A: applicator_description
    0x300A010C: cumulative_dose_reference_coefficient
    0x300A010E: final_cumulative_meterset_weight
    0x300A0110: number_of_control_points
    0x300A0111: control_point_sequence
    0x300A0112: control_point_index
    0x300A0114: nominal_beam_energy
    0x300A0115: dose_rate_set
    0x300A0116: wedge_position_sequence
    0x300A0118: wedge_position
    0x300A011A: beam_limiting_device_position_sequence
    0x300A011C: leaf_jaw_positions
    0x300A011E: gantry_angle
    0x300A011F: gantry_rotation_direction
    0x300A0120: beam_limiting_device_angle
    0x300A0121: beam_limiting_device_rotation_direction
    0x300A0122: patient_support_angle
    0x300A0123: patient_support_rotation_direction
    0x300A0124: table_top_eccentric_axis_distance
    0x300A0125: table_top_eccentric_angle
    0x300A0126: table_top_eccentric_rotation_direction
    0x300A0128: table_top_vertical_position
    0x300A0129: table_top_longitudinal_position
    0x300A012A: table_top_lateral_position
    0x300A012C: isocenter_position
    0x300A012E: surface_entry_point
    0x300A0130: source_to_surface_distance
    0x300A0131: average_beam_dose_point_source_to_external_contour_distance
    0x300A0132: source_to_external_contour_distance
    0x300A0133: external_contour_entry_point
    0x300A0134: cumulative_meterset_weight
    0x300A0140: table_top_pitch_angle
    0x300A0142: table_top_pitch_rotation_direction
    0x300A0144: table_top_roll_angle
    0x300A0146: table_top_roll_rotation_direction
    0x300A0148: head_fixation_angle
    0x300A014A: gantry_pitch_angle
    0x300A014C: gantry_pitch_rotation_direction
    0x300A014E: gantry_pitch_angle_tolerance
    0x300A0150: fixation_eye
    0x300A0151: chair_head_frame_position
    0x300A0152: head_fixation_angle_tolerance
    0x300A0153: chair_head_frame_position_tolerance
    0x300A0154: fixation_light_azimuthal_angle_tolerance
    0x300A0155: fixation_light_polar_angle_tolerance
    0x300A0180: patient_setup_sequence
    0x300A0182: patient_setup_number
    0x300A0183: patient_setup_label
    0x300A0184: patient_additional_position
    0x300A0190: fixation_device_sequence
    0x300A0192: fixation_device_type
    0x300A0194: fixation_device_label
    0x300A0196: fixation_device_description
    0x300A0198: fixation_device_position
    0x300A0199: fixation_device_pitch_angle
    0x300A019A: fixation_device_roll_angle
    0x300A01A0: shielding_device_sequence
    0x300A01A2: shielding_device_type
    0x300A01A4: shielding_device_label
    0x300A01A6: shielding_device_description
    0x300A01A8: shielding_device_position
    0x300A01B0: setup_technique
    0x300A01B2: setup_technique_description
    0x300A01B4: setup_device_sequence
    0x300A01B6: setup_device_type
    0x300A01B8: setup_device_label
    0x300A01BA: setup_device_description
    0x300A01BC: setup_device_parameter
    0x300A01D0: setup_reference_description
    0x300A01D2: table_top_vertical_setup_displacement
    0x300A01D4: table_top_longitudinal_setup_displacement
    0x300A01D6: table_top_lateral_setup_displacement
    0x300A0200: brachy_treatment_technique
    0x300A0202: brachy_treatment_type
    0x300A0206: treatment_machine_sequence
    0x300A0210: source_sequence
    0x300A0212: source_number
    0x300A0214: source_type
    0x300A0216: source_manufacturer
    0x300A0218: active_source_diameter
    0x300A021A: active_source_length
    0x300A021B: source_model_id
    0x300A021C: source_description
    0x300A0222: source_encapsulation_nominal_thickness
    0x300A0224: source_encapsulation_nominal_transmission
    0x300A0226: source_isotope_name
    0x300A0228: source_isotope_half_life
    0x300A0229: source_strength_units
    0x300A022A: reference_air_kerma_rate
    0x300A022B: source_strength
    0x300A022C: source_strength_reference_date
    0x300A022E: source_strength_reference_time
    0x300A0230: application_setup_sequence
    0x300A0232: application_setup_type
    0x300A0234: application_setup_number
    0x300A0236: application_setup_name
    0x300A0238: application_setup_manufacturer
    0x300A0240: template_number
    0x300A0242: template_type
    0x300A0244: template_name
    0x300A0250: total_reference_air_kerma
    0x300A0260: brachy_accessory_device_sequence
    0x300A0262: brachy_accessory_device_number
    0x300A0263: brachy_accessory_device_id
    0x300A0264: brachy_accessory_device_type
    0x300A0266: brachy_accessory_device_name
    0x300A026A: brachy_accessory_device_nominal_thickness
    0x300A026C: brachy_accessory_device_nominal_transmission
    0x300A0280: channel_sequence
    0x300A0282: channel_number
    0x300A0284: channel_length
    0x300A0286: channel_total_time
    0x300A0288: source_movement_type
    0x300A028A: number_of_pulses
    0x300A028C: pulse_repetition_interval
    0x300A0290: source_applicator_number
    0x300A0291: source_applicator_id
    0x300A0292: source_applicator_type
    0x300A0294: source_applicator_name
    0x300A0296: source_applicator_length
    0x300A0298: source_applicator_manufacturer
    0x300A029C: source_applicator_wall_nominal_thickness
    0x300A029E: source_applicator_wall_nominal_transmission
    0x300A02A0: source_applicator_step_size
    0x300A02A2: transfer_tube_number
    0x300A02A4: transfer_tube_length
    0x300A02B0: channel_shield_sequence
    0x300A02B2: channel_shield_number
    0x300A02B3: channel_shield_id
    0x300A02B4: channel_shield_name
    0x300A02B8: channel_shield_nominal_thickness
    0x300A02BA: channel_shield_nominal_transmission
    0x300A02C8: final_cumulative_time_weight
    0x300A02D0: brachy_control_point_sequence
    0x300A02D2: control_point_relative_position
    0x300A02D4: control_point_3d_position
    0x300A02D6: cumulative_time_weight
    0x300A02E0: compensator_divergence
    0x300A02E1: compensator_mounting_position
    0x300A02E2: source_to_compensator_distance
    0x300A02E3: total_compensator_tray_water_equivalent_thickness
    0x300A02E4: isocenter_to_compensator_tray_distance
    0x300A02E5: compensator_column_offset
    0x300A02E6: isocenter_to_compensator_distances
    0x300A02E7: compensator_relative_stopping_power_ratio
    0x300A02E8: compensator_milling_tool_diameter
    0x300A02EA: ion_range_compensator_sequence
    0x300A02EB: compensator_description
    0x300A0302: radiation_mass_number
    0x300A0304: radiation_atomic_number
    0x300A0306: radiation_charge_state
    0x300A0308: scan_mode
    0x300A0309: modulated_scan_mode_type
    0x300A030A: virtual_source_axis_distances
    0x300A030C: snout_sequence
    0x300A030D: snout_position
    0x300A030F: snout_id
    0x300A0312: number_of_range_shifters
    0x300A0314: range_shifter_sequence
    0x300A0316: range_shifter_number
    0x300A0318: range_shifter_id
    0x300A0320: range_shifter_type
    0x300A0322: range_shifter_description
    0x300A0330: number_of_lateral_spreading_devices
    0x300A0332: lateral_spreading_device_sequence
    0x300A0334: lateral_spreading_device_number
    0x300A0336: lateral_spreading_device_id
    0x300A0338: lateral_spreading_device_type
    0x300A033A: lateral_spreading_device_description
    0x300A033C: lateral_spreading_device_water_equivalent_thickness
    0x300A0340: number_of_range_modulators
    0x300A0342: range_modulator_sequence
    0x300A0344: range_modulator_number
    0x300A0346: range_modulator_id
    0x300A0348: range_modulator_type
    0x300A034A: range_modulator_description
    0x300A034C: beam_current_modulation_id
    0x300A0350: patient_support_type
    0x300A0352: patient_support_id
    0x300A0354: patient_support_accessory_code
    0x300A0355: tray_accessory_code
    0x300A0356: fixation_light_azimuthal_angle
    0x300A0358: fixation_light_polar_angle
    0x300A035A: meterset_rate
    0x300A0360: range_shifter_settings_sequence
    0x300A0362: range_shifter_setting
    0x300A0364: isocenter_to_range_shifter_distance
    0x300A0366: range_shifter_water_equivalent_thickness
    0x300A0370: lateral_spreading_device_settings_sequence
    0x300A0372: lateral_spreading_device_setting
    0x300A0374: isocenter_to_lateral_spreading_device_distance
    0x300A0380: range_modulator_settings_sequence
    0x300A0382: range_modulator_gating_start_value
    0x300A0384: range_modulator_gating_stop_value
    0x300A0386: range_modulator_gating_start_water_equivalent_thickness
    0x300A0388: range_modulator_gating_stop_water_equivalent_thickness
    0x300A038A: isocenter_to_range_modulator_distance
    0x300A0390: scan_spot_tune_id
    0x300A0391: scan_spot_prescribed_indices
    0x300A0392: number_of_scan_spot_positions
    0x300A0393: scan_spot_reordered
    0x300A0394: scan_spot_position_map
    0x300A0395: scan_spot_reordering_allowed
    0x300A0396: scan_spot_meterset_weights
    0x300A0398: scanning_spot_size
    0x300A039A: number_of_paintings
    0x300A03A0: ion_tolerance_table_sequence
    0x300A03A2: ion_beam_sequence
    0x300A03A4: ion_beam_limiting_device_sequence
    0x300A03A6: ion_block_sequence
    0x300A03A8: ion_control_point_sequence
    0x300A03AA: ion_wedge_sequence
    0x300A03AC: ion_wedge_position_sequence
    0x300A0401: referenced_setup_image_sequence
    0x300A0402: setup_image_comment
    0x300A0410: motion_synchronization_sequence
    0x300A0412: control_point_orientation
    0x300A0420: general_accessory_sequence
    0x300A0421: general_accessory_id
    0x300A0422: general_accessory_description
    0x300A0423: general_accessory_type
    0x300A0424: general_accessory_number
    0x300A0425: source_to_general_accessory_distance
    0x300A0431: applicator_geometry_sequence
    0x300A0432: applicator_aperture_shape
    0x300A0433: applicator_opening
    0x300A0434: applicator_opening_x
    0x300A0435: applicator_opening_y
    0x300A0436: source_to_applicator_mounting_position_distance
    0x300A0440: number_of_block_slab_items
    0x300A0441: block_slab_sequence
    0x300A0442: block_slab_thickness
    0x300A0443: block_slab_number
    0x300A0450: device_motion_control_sequence
    0x300A0451: device_motion_execution_mode
    0x300A0452: device_motion_observation_mode
    0x300A0453: device_motion_parameter_code_sequence
    0x300A0501: distal_depth_fraction
    0x300A0502: distal_depth
    0x300A0503: nominal_range_modulation_fractions
    0x300A0504: nominal_range_modulated_region_depths
    0x300A0505: depth_dose_parameters_sequence
    0x300A0506: delivered_depth_dose_parameters_sequence
    0x300A0507: delivered_distal_depth_fraction
    0x300A0508: delivered_distal_depth
    0x300A0509: delivered_nominal_range_modulation_fractions
    0x300A0510: delivered_nominal_range_modulated_region_depths
    0x300A0511: delivered_reference_dose_definition
    0x300A0512: reference_dose_definition
    0x300C0002: referenced_rt_plan_sequence
    0x300C0004: referenced_beam_sequence
    0x300C0006: referenced_beam_number
    0x300C0007: referenced_reference_image_number
    0x300C0008: start_cumulative_meterset_weight
    0x300C0009: end_cumulative_meterset_weight
    0x300C000A: referenced_brachy_application_setup_sequence
    0x300C000C: referenced_brachy_application_setup_number
    0x300C000E: referenced_source_number
    0x300C0020: referenced_fraction_group_sequence
    0x300C0022: referenced_fraction_group_number
    0x300C0040: referenced_verification_image_sequence
    0x300C0042: referenced_reference_image_sequence
    0x300C0050: referenced_dose_reference_sequence
    0x300C0051: referenced_dose_reference_number
    0x300C0055: brachy_referenced_dose_reference_sequence
    0x300C0060: referenced_structure_set_sequence
    0x300C006A: referenced_patient_setup_number
    0x300C0080: referenced_dose_sequence
    0x300C00A0: referenced_tolerance_table_number
    0x300C00B0: referenced_bolus_sequence
    0x300C00C0: referenced_wedge_number
    0x300C00D0: referenced_compensator_number
    0x300C00E0: referenced_block_number
    0x300C00F0: referenced_control_point_index
    0x300C00F2: referenced_control_point_sequence
    0x300C00F4: referenced_start_control_point_index
    0x300C00F6: referenced_stop_control_point_index
    0x300C0100: referenced_range_shifter_number
    0x300C0102: referenced_lateral_spreading_device_number
    0x300C0104: referenced_range_modulator_number
    0x300C0111: omitted_beam_task_sequence
    0x300C0112: reason_for_omission
    0x300C0113: reason_for_omission_description
    0x300E0002: approval_status
    0x300E0004: review_date
    0x300E0005: review_time
    0x300E0008: reviewer_name
    0x40000010: arbitrary
    0x40004000: text_comments
    0x40080040: results_id
    0x40080042: results_id_issuer
    0x40080050: referenced_interpretation_sequence
    0x400800FF: report_production_status__trial_
    0x40080100: interpretation_recorded_date
    0x40080101: interpretation_recorded_time
    0x40080102: interpretation_recorder
    0x40080103: reference_to_recorded_sound
    0x40080108: interpretation_transcription_date
    0x40080109: interpretation_transcription_time
    0x4008010A: interpretation_transcriber
    0x4008010B: interpretation_text
    0x4008010C: interpretation_author
    0x40080111: interpretation_approver_sequence
    0x40080112: interpretation_approval_date
    0x40080113: interpretation_approval_time
    0x40080114: physician_approving_interpretation
    0x40080115: interpretation_diagnosis_description
    0x40080117: interpretation_diagnosis_code_sequence
    0x40080118: results_distribution_list_sequence
    0x40080119: distribution_name
    0x4008011A: distribution_address
    0x40080200: interpretation_id
    0x40080202: interpretation_id_issuer
    0x40080210: interpretation_type_id
    0x40080212: interpretation_status_id
    0x40080300: impressions
    0x40084000: results_comments
    0x40100001: low_energy_detectors
    0x40100002: high_energy_detectors
    0x40100004: detector_geometry_sequence
    0x40101001: threat_roi_voxel_sequence
    0x40101004: threat_roi_base
    0x40101005: threat_roi_extents
    0x40101006: threat_roi_bitmap
    0x40101007: route_segment_id
    0x40101008: gantry_type
    0x40101009: ooi_owner_type
    0x4010100A: route_segment_sequence
    0x40101010: potential_threat_object_id
    0x40101011: threat_sequence
    0x40101012: threat_category
    0x40101013: threat_category_description
    0x40101014: atd_ability_assessment
    0x40101015: atd_assessment_flag
    0x40101016: atd_assessment_probability
    0x40101017: mass
    0x40101018: density
    0x40101019: z_effective
    0x4010101A: boarding_pass_id
    0x4010101B: center_of_mass
    0x4010101C: center_of_pto
    0x4010101D: bounding_polygon
    0x4010101E: route_segment_start_location_id
    0x4010101F: route_segment_end_location_id
    0x40101020: route_segment_location_id_type
    0x40101021: abort_reason
    0x40101023: volume_of_pto
    0x40101024: abort_flag
    0x40101025: route_segment_start_time
    0x40101026: route_segment_end_time
    0x40101027: tdr_type
    0x40101028: international_route_segment
    0x40101029: threat_detection_algorithm_and_version
    0x4010102A: assigned_location
    0x4010102B: alarm_decision_time
    0x40101031: alarm_decision
    0x40101033: number_of_total_objects
    0x40101034: number_of_alarm_objects
    0x40101037: pto_representation_sequence
    0x40101038: atd_assessment_sequence
    0x40101039: tip_type
    0x4010103A: version
    0x40101041: ooi_owner_creation_time
    0x40101042: ooi_type
    0x40101043: ooi_size
    0x40101044: acquisition_status
    0x40101045: basis_materials_code_sequence
    0x40101046: phantom_type
    0x40101047: ooi_owner_sequence
    0x40101048: scan_type
    0x40101051: itinerary_id
    0x40101052: itinerary_id_type
    0x40101053: itinerary_id_assigning_authority
    0x40101054: route_id
    0x40101055: route_id_assigning_authority
    0x40101056: inbound_arrival_type
    0x40101058: carrier_id
    0x40101059: carrier_id_assigning_authority
    0x40101060: source_orientation
    0x40101061: source_position
    0x40101062: belt_height
    0x40101064: algorithm_routing_code_sequence
    0x40101067: transport_classification
    0x40101068: ooi_type_descriptor
    0x40101069: total_processing_time
    0x4010106C: detector_calibration_data
    0x4010106D: additional_screening_performed
    0x4010106E: additional_inspection_selection_criteria
    0x4010106F: additional_inspection_method_sequence
    0x40101070: ait_device_type
    0x40101071: qr_measurements_sequence
    0x40101072: target_material_sequence
    0x40101073: snr_threshold
    0x40101075: image_scale_representation
    0x40101076: referenced_pto_sequence
    0x40101077: referenced_tdr_instance_sequence
    0x40101078: pto_location_description
    0x40101079: anomaly_locator_indicator_sequence
    0x4010107A: anomaly_locator_indicator
    0x4010107B: pto_region_sequence
    0x4010107C: inspection_selection_criteria
    0x4010107D: secondary_inspection_method_sequence
    0x4010107E: prcs_to_rcs_orientation
    0x4FFE0001: mac_parameters_sequence
    0x52009229: shared_functional_groups_sequence
    0x52009230: per_frame_functional_groups_sequence
    0x54000100: waveform_sequence
    0x54000110: channel_minimum_value
    0x54000112: channel_maximum_value
    0x54001004: waveform_bits_allocated
    0x54001006: waveform_sample_interpretation
    0x5400100A: waveform_padding_value
    0x54001010: waveform_data
    0x56000010: first_order_phase_correction_angle
    0x56000020: spectroscopy_data
    0x7FE00008: float_pixel_data
    0x7FE00009: double_float_pixel_data
    0x7FE00010: pixel_data
    0x7FE00020: coefficients_sdvn
    0x7FE00030: coefficients_sdhn
    0x7FE00040: coefficients_sddn
    0xFFFAFFFA: digital_signatures_sequence
    0xFFFCFFFC: data_set_trailing_padding
    0xFFFEE000: item
    0xFFFEE00D: item_delimitation_item
    0xFFFEE0DD: sequence_delimitation_item
`
  },
  {
    id: "ksy_exif",
    name: "Exif",
    category: "Images",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "",
      originalCategory: "image",
      filePath: "image/exif.ksy"
    },
    content: `meta:
  id: exif
  xref:
    forensicswiki: exif
    justsolve: Exif
    loc: fdd000146
    pronom:
      - x-fmt/398 # Exif 2.0
      - x-fmt/390 # Exif 2.1
      - x-fmt/391 # Exif 2.2
      - fmt/645 # Exif 2.21 ("2.2.1" in PRONOM is misspelled)
    wikidata: Q26383099
  license: CC0-1.0
seq:
  - id: endianness
    type: u2le
  - id: body
    type: exif_body
types:
  exif_body:
    meta:
      endian:
        switch-on: _root.endianness
        cases:
          0x4949: le
          0x4d4d: be
    seq:
      - id: version
        type: u2
      - id: ifd0_ofs
        type: u4
    instances:
      ifd0:
        pos: ifd0_ofs
        type: ifd
    types:
      ifd:
        seq:
          - id: num_fields
            type: u2
          - id: fields
            type: ifd_field
            repeat: expr
            repeat-expr: num_fields
          - id: next_ifd_ofs
            type: u4
        instances:
          next_ifd:
            pos: next_ifd_ofs
            type: ifd
            if: next_ifd_ofs != 0
      ifd_field:
        seq:
          - id: tag
            type: u2
            enum: tag_enum
          - id: field_type
            type: u2
            enum: field_type_enum
          - id: length
            type: u4
          - id: ofs_or_data
            type: u4
        instances:
          type_byte_length:
            value: 'field_type == field_type_enum::word ? 2 : (field_type == field_type_enum::dword ? 4 : 1)'
          byte_length:
            value: length * type_byte_length
          is_immediate_data:
            value: 'byte_length <= 4'
          data:
            io: _root._io
            pos: ofs_or_data
            size: byte_length
            if: not is_immediate_data
        enums:
          field_type_enum:
            1: byte
            2: ascii_string
            3: word
            4: dword
            5: rational
            7: undefined
            9: slong
            10: srational
          tag_enum:
            0x0100: image_width
            0x0101: image_height
            0x0102: bits_per_sample
            0x0103: compression
            0x0106: photometric_interpretation
            0x0107: thresholding
            0x0108: cell_width
            0x0109: cell_length
            0x010a: fill_order
            0x010d: document_name
            0x010e: image_description
            0x010f: make
            0x0110: model
            0x0111: strip_offsets
            0x0112: orientation
            0x0115: samples_per_pixel
            0x0116: rows_per_strip
            0x0117: strip_byte_counts
            0x0118: min_sample_value
            0x0119: max_sample_value
            0x011a: x_resolution
            0x011b: y_resolution
            0x011c: planar_configuration
            0x011d: page_name
            0x011e: x_position
            0x011f: y_position
            0x0120: free_offsets
            0x0121: free_byte_counts
            0x0122: gray_response_unit
            0x0123: gray_response_curve
            0x0124: t4_options
            0x0125: t6_options
            0x0128: resolution_unit
            0x0129: page_number
            0x012c: color_response_unit
            0x012d: transfer_function
            0x0131: software
            0x0132: modify_date
            0x013b: artist
            0x013c: host_computer
            0x013d: predictor
            0x013e: white_point
            0x013f: primary_chromaticities
            0x0140: color_map
            0x0141: halftone_hints
            0x0142: tile_width
            0x0143: tile_length
            0x0144: tile_offsets
            0x0145: tile_byte_counts
            0x0146: bad_fax_lines
            0x0147: clean_fax_data
            0x0148: consecutive_bad_fax_lines
            0x014a: sub_ifd
            0x014c: ink_set
            0x014d: ink_names
            0x014e: numberof_inks
            0x0150: dot_range
            0x0151: target_printer
            0x0152: extra_samples
            0x0153: sample_format
            0x0154: s_min_sample_value
            0x0155: s_max_sample_value
            0x0156: transfer_range
            0x0157: clip_path
            0x0158: x_clip_path_units
            0x0159: y_clip_path_units
            0x015a: indexed
            0x015b: jpeg_tables
            0x015f: opi_proxy
            0x0190: global_parameters_ifd
            0x0191: profile_type
            0x0192: fax_profile
            0x0193: coding_methods
            0x0194: version_year
            0x0195: mode_number
            0x01b1: decode
            0x01b2: default_image_color
            0x01b3: t82_options
            0x01b5: jpeg_tables2
            0x0200: jpeg_proc
            0x0201: thumbnail_offset
            0x0202: thumbnail_length
            0x0203: jpeg_restart_interval
            0x0205: jpeg_lossless_predictors
            0x0206: jpeg_point_transforms
            0x0207: jpegq_tables
            0x0208: jpegdc_tables
            0x0209: jpegac_tables
            0x0211: y_cb_cr_coefficients
            0x0212: y_cb_cr_sub_sampling
            0x0213: y_cb_cr_positioning
            0x0214: reference_black_white
            0x022f: strip_row_counts
            0x02bc: application_notes
            0x03e7: uspto_miscellaneous
            0x1000: related_image_file_format
            0x1001: related_image_width
            0x1002: related_image_height
            0x4746: rating
            0x4747: xp_dip_xml
            0x4748: stitch_info
            0x4749: rating_percent
            0x7000: sony_raw_file_type
            0x7032: light_falloff_params
            0x7035: chromatic_aberration_corr_params
            0x7037: distortion_corr_params
            0x800d: image_id
            0x80a3: wang_tag1
            0x80a4: wang_annotation
            0x80a5: wang_tag3
            0x80a6: wang_tag4
            0x80b9: image_reference_points
            0x80ba: region_xform_tack_point
            0x80bb: warp_quadrilateral
            0x80bc: affine_transform_mat
            0x80e3: matteing
            0x80e4: data_type
            0x80e5: image_depth
            0x80e6: tile_depth
            0x8214: image_full_width
            0x8215: image_full_height
            0x8216: texture_format
            0x8217: wrap_modes
            0x8218: fov_cot
            0x8219: matrix_world_to_screen
            0x821a: matrix_world_to_camera
            0x827d: model2
            0x828d: cfa_repeat_pattern_dim
            0x828e: cfa_pattern2
            0x828f: battery_level
            0x8290: kodak_ifd
            0x8298: copyright
            0x829a: exposure_time
            0x829d: f_number
            0x82a5: md_file_tag
            0x82a6: md_scale_pixel
            0x82a7: md_color_table
            0x82a8: md_lab_name
            0x82a9: md_sample_info
            0x82aa: md_prep_date
            0x82ab: md_prep_time
            0x82ac: md_file_units
            0x830e: pixel_scale
            0x8335: advent_scale
            0x8336: advent_revision
            0x835c: uic1_tag
            0x835d: uic2_tag
            0x835e: uic3_tag
            0x835f: uic4_tag
            0x83bb: iptc_naa
            0x847e: intergraph_packet_data
            0x847f: intergraph_flag_registers
            0x8480: intergraph_matrix
            0x8481: ingr_reserved
            0x8482: model_tie_point
            0x84e0: site
            0x84e1: color_sequence
            0x84e2: it8_header
            0x84e3: raster_padding
            0x84e4: bits_per_run_length
            0x84e5: bits_per_extended_run_length
            0x84e6: color_table
            0x84e7: image_color_indicator
            0x84e8: background_color_indicator
            0x84e9: image_color_value
            0x84ea: background_color_value
            0x84eb: pixel_intensity_range
            0x84ec: transparency_indicator
            0x84ed: color_characterization
            0x84ee: hc_usage
            0x84ef: trap_indicator
            0x84f0: cmyk_equivalent
            0x8546: sem_info
            0x8568: afcp_iptc
            0x85b8: pixel_magic_jbig_options
            0x85d7: jpl_carto_ifd
            0x85d8: model_transform
            0x8602: wb_grgb_levels
            0x8606: leaf_data
            0x8649: photoshop_settings
            0x8769: exif_offset
            0x8773: icc_profile
            0x877f: tiff_fx_extensions
            0x8780: multi_profiles
            0x8781: shared_data
            0x8782: t88_options
            0x87ac: image_layer
            0x87af: geo_tiff_directory
            0x87b0: geo_tiff_double_params
            0x87b1: geo_tiff_ascii_params
            0x87be: jbig_options
            0x8822: exposure_program
            0x8824: spectral_sensitivity
            0x8825: gps_info
            0x8827: iso
            0x8828: opto_electric_conv_factor
            0x8829: interlace
            0x882a: time_zone_offset
            0x882b: self_timer_mode
            0x8830: sensitivity_type
            0x8831: standard_output_sensitivity
            0x8832: recommended_exposure_index
            0x8833: iso_speed
            0x8834: iso_speed_latitudeyyy
            0x8835: iso_speed_latitudezzz
            0x885c: fax_recv_params
            0x885d: fax_sub_address
            0x885e: fax_recv_time
            0x8871: fedex_edr
            0x888a: leaf_sub_ifd
            0x9000: exif_version
            0x9003: date_time_original
            0x9004: create_date
            0x9009: google_plus_upload_code
            0x9010: offset_time
            0x9011: offset_time_original
            0x9012: offset_time_digitized
            0x9101: components_configuration
            0x9102: compressed_bits_per_pixel
            0x9201: shutter_speed_value
            0x9202: aperture_value
            0x9203: brightness_value
            0x9204: exposure_compensation
            0x9205: max_aperture_value
            0x9206: subject_distance
            0x9207: metering_mode
            0x9208: light_source
            0x9209: flash
            0x920a: focal_length
            0x920b: flash_energy
            0x920c: spatial_frequency_response
            0x920d: noise
            0x920e: focal_plane_x_resolution
            0x920f: focal_plane_y_resolution
            0x9210: focal_plane_resolution_unit
            0x9211: image_number
            0x9212: security_classification
            0x9213: image_history
            0x9214: subject_area
            0x9215: exposure_index
            0x9216: tiff_ep_standard_id
            0x9217: sensing_method
            0x923a: cip3_data_file
            0x923b: cip3_sheet
            0x923c: cip3_side
            0x923f: sto_nits
            0x927c: maker_note
            0x9286: user_comment
            0x9290: sub_sec_time
            0x9291: sub_sec_time_original
            0x9292: sub_sec_time_digitized
            0x932f: ms_document_text
            0x9330: ms_property_set_storage
            0x9331: ms_document_text_position
            0x935c: image_source_data
            0x9400: ambient_temperature
            0x9401: humidity
            0x9402: pressure
            0x9403: water_depth
            0x9404: acceleration
            0x9405: camera_elevation_angle
            0x9c9b: xp_title
            0x9c9c: xp_comment
            0x9c9d: xp_author
            0x9c9e: xp_keywords
            0x9c9f: xp_subject
            0xa000: flashpix_version
            0xa001: color_space
            0xa002: exif_image_width
            0xa003: exif_image_height
            0xa004: related_sound_file
            0xa005: interop_offset
            0xa010: samsung_raw_pointers_offset
            0xa011: samsung_raw_pointers_length
            0xa101: samsung_raw_byte_order
            0xa102: samsung_raw_unknown
            0xa20b: flash_energy2
            0xa20c: spatial_frequency_response2
            0xa20d: noise2
            0xa20e: focal_plane_x_resolution2
            0xa20f: focal_plane_y_resolution2
            0xa210: focal_plane_resolution_unit2
            0xa211: image_number2
            0xa212: security_classification2
            0xa213: image_history2
            0xa214: subject_location
            0xa215: exposure_index2
            0xa216: tiff_ep_standard_id2
            0xa217: sensing_method2
            0xa300: file_source
            0xa301: scene_type
            0xa302: cfa_pattern
            0xa401: custom_rendered
            0xa402: exposure_mode
            0xa403: white_balance
            0xa404: digital_zoom_ratio
            0xa405: focal_length_in35mm_format
            0xa406: scene_capture_type
            0xa407: gain_control
            0xa408: contrast
            0xa409: saturation
            0xa40a: sharpness
            0xa40b: device_setting_description
            0xa40c: subject_distance_range
            0xa420: image_unique_id
            0xa430: owner_name
            0xa431: serial_number
            0xa432: lens_info
            0xa433: lens_make
            0xa434: lens_model
            0xa435: lens_serial_number
            0xa480: gdal_metadata
            0xa481: gdal_no_data
            0xa500: gamma
            0xafc0: expand_software
            0xafc1: expand_lens
            0xafc2: expand_film
            0xafc3: expand_filter_lens
            0xafc4: expand_scanner
            0xafc5: expand_flash_lamp
            0xbc01: pixel_format
            0xbc02: transformation
            0xbc03: uncompressed
            0xbc04: image_type
            0xbc80: image_width2
            0xbc81: image_height2
            0xbc82: width_resolution
            0xbc83: height_resolution
            0xbcc0: image_offset
            0xbcc1: image_byte_count
            0xbcc2: alpha_offset
            0xbcc3: alpha_byte_count
            0xbcc4: image_data_discard
            0xbcc5: alpha_data_discard
            0xc427: oce_scanjob_desc
            0xc428: oce_application_selector
            0xc429: oce_id_number
            0xc42a: oce_image_logic
            0xc44f: annotations
            0xc4a5: print_im
            0xc573: original_file_name
            0xc580: uspto_original_content_type
            0xc612: dng_version
            0xc613: dng_backward_version
            0xc614: unique_camera_model
            0xc615: localized_camera_model
            0xc616: cfa_plane_color
            0xc617: cfa_layout
            0xc618: linearization_table
            0xc619: black_level_repeat_dim
            0xc61a: black_level
            0xc61b: black_level_delta_h
            0xc61c: black_level_delta_v
            0xc61d: white_level
            0xc61e: default_scale
            0xc61f: default_crop_origin
            0xc620: default_crop_size
            0xc621: color_matrix1
            0xc622: color_matrix2
            0xc623: camera_calibration1
            0xc624: camera_calibration2
            0xc625: reduction_matrix1
            0xc626: reduction_matrix2
            0xc627: analog_balance
            0xc628: as_shot_neutral
            0xc629: as_shot_white_xy
            0xc62a: baseline_exposure
            0xc62b: baseline_noise
            0xc62c: baseline_sharpness
            0xc62d: bayer_green_split
            0xc62e: linear_response_limit
            0xc62f: camera_serial_number
            0xc630: dng_lens_info
            0xc631: chroma_blur_radius
            0xc632: anti_alias_strength
            0xc633: shadow_scale
            0xc634: sr2_private
            0xc635: maker_note_safety
            0xc640: raw_image_segmentation
            0xc65a: calibration_illuminant1
            0xc65b: calibration_illuminant2
            0xc65c: best_quality_scale
            0xc65d: raw_data_unique_id
            0xc660: alias_layer_metadata
            0xc68b: original_raw_file_name
            0xc68c: original_raw_file_data
            0xc68d: active_area
            0xc68e: masked_areas
            0xc68f: as_shot_icc_profile
            0xc690: as_shot_pre_profile_matrix
            0xc691: current_icc_profile
            0xc692: current_pre_profile_matrix
            0xc6bf: colorimetric_reference
            0xc6c5: s_raw_type
            0xc6d2: panasonic_title
            0xc6d3: panasonic_title2
            0xc6f3: camera_calibration_sig
            0xc6f4: profile_calibration_sig
            0xc6f5: profile_ifd
            0xc6f6: as_shot_profile_name
            0xc6f7: noise_reduction_applied
            0xc6f8: profile_name
            0xc6f9: profile_hue_sat_map_dims
            0xc6fa: profile_hue_sat_map_data1
            0xc6fb: profile_hue_sat_map_data2
            0xc6fc: profile_tone_curve
            0xc6fd: profile_embed_policy
            0xc6fe: profile_copyright
            0xc714: forward_matrix1
            0xc715: forward_matrix2
            0xc716: preview_application_name
            0xc717: preview_application_version
            0xc718: preview_settings_name
            0xc719: preview_settings_digest
            0xc71a: preview_color_space
            0xc71b: preview_date_time
            0xc71c: raw_image_digest
            0xc71d: original_raw_file_digest
            0xc71e: sub_tile_block_size
            0xc71f: row_interleave_factor
            0xc725: profile_look_table_dims
            0xc726: profile_look_table_data
            0xc740: opcode_list1
            0xc741: opcode_list2
            0xc74e: opcode_list3
            0xc761: noise_profile
            0xc763: time_codes
            0xc764: frame_rate
            0xc772: t_stop
            0xc789: reel_name
            0xc791: original_default_final_size
            0xc792: original_best_quality_size
            0xc793: original_default_crop_size
            0xc7a1: camera_label
            0xc7a3: profile_hue_sat_map_encoding
            0xc7a4: profile_look_table_encoding
            0xc7a5: baseline_exposure_offset
            0xc7a6: default_black_render
            0xc7a7: new_raw_image_digest
            0xc7a8: raw_to_preview_gain
            0xc7b5: default_user_crop
            0xea1c: padding
            0xea1d: offset_schema
            0xfde8: owner_name2
            0xfde9: serial_number2
            0xfdea: lens
            0xfe00: kdc_ifd
            0xfe4c: raw_file
            0xfe4d: converter
            0xfe4e: white_balance2
            0xfe51: exposure
            0xfe52: shadows
            0xfe53: brightness
            0xfe54: contrast2
            0xfe55: saturation2
            0xfe56: sharpness2
            0xfe57: smoothness
            0xfe58: moire_filter
`
  },
  {
    id: "ksy_gif",
    name: "GIF (Graphics Interchange Format) image file",
    category: "Images",
    metadata: {
      isGenerated: true,
      fileExtensions: ["gif"],
      description: "GIF (Graphics Interchange Format) image file",
      originalCategory: "image",
      filePath: "image/gif.ksy",
      endian: "le"
    },
    content: `meta:
  id: gif
  title: GIF (Graphics Interchange Format) image file
  file-extension: gif
  xref:
    forensicswiki: gif
    justsolve: GIF
    loc: fdd000133 # GIF 89a
    mime: image/gif
    pronom:
      - fmt/3 # GIF 87a
      - fmt/4 # GIF 89a
    wikidata: Q2192
  license: CC0-1.0
  endian: le
doc: |
  GIF (Graphics Interchange Format) is an image file format, developed
  in 1987. It became popular in 1990s as one of the main image formats
  used in World Wide Web.

  GIF format allows encoding of palette-based images up to 256 colors
  (each of the colors can be chosen from a 24-bit RGB
  colorspace). Image data stream uses LZW (Lempel-Ziv-Welch) lossless
  compression.

  Over the years, several version of the format were published and
  several extensions to it were made, namely, a popular Netscape
  extension that allows to store several images in one file, switching
  between them, which produces crude form of animation.

  Structurally, format consists of several mandatory headers and then
  a stream of blocks follows. Blocks can carry additional
  metainformation or image data.
seq:
  - id: hdr
    type: header
  - id: logical_screen_descriptor
    type: logical_screen_descriptor_struct
  - id: global_color_table
    type: color_table
    if: logical_screen_descriptor.has_color_table
    size: logical_screen_descriptor.color_table_size * 3
    doc-ref: https://www.w3.org/Graphics/GIF/spec-gif89a.txt - section 18
  - id: blocks
    type: block
    repeat: until
    repeat-until: _io.eof or _.block_type == block_type::end_of_file
types:
  header:
    doc-ref: https://www.w3.org/Graphics/GIF/spec-gif89a.txt - section 17
    seq:
      - id: magic
        contents: 'GIF'
      - id: version
        type: str
        size: 3
        encoding: ASCII
  logical_screen_descriptor_struct:
    doc-ref: https://www.w3.org/Graphics/GIF/spec-gif89a.txt - section 18
    seq:
      - id: screen_width
        type: u2
      - id: screen_height
        type: u2
      - id: flags
        type: u1
      - id: bg_color_index
        type: u1
      - id: pixel_aspect_ratio
        type: u1
    instances:
      has_color_table:
        value: '(flags & 0b10000000) != 0'
      color_table_size:
        value: '2 << (flags & 7)'
  color_table:
    doc-ref: https://www.w3.org/Graphics/GIF/spec-gif89a.txt - section 19
    seq:
      - id: entries
        type: color_table_entry
        repeat: eos
  color_table_entry:
    seq:
      - id: red
        type: u1
      - id: green
        type: u1
      - id: blue
        type: u1
  block:
    -webide-representation: '{block_type}'
    seq:
      - id: block_type
        type: u1
        enum: block_type
      - id: body
        type:
          switch-on: block_type
          cases:
            'block_type::extension': extension
            'block_type::local_image_descriptor': local_image_descriptor
  local_image_descriptor:
    seq:
      - id: left
        type: u2
      - id: top
        type: u2
      - id: width
        type: u2
      - id: height
        type: u2
      - id: flags
        type: u1
      - id: local_color_table
        type: color_table
        if: has_color_table
        size: color_table_size * 3
      - id: image_data
        type: image_data
    instances:
      has_color_table:
        value: '(flags & 0b10000000) != 0'
      has_interlace:
        value: '(flags & 0b01000000) != 0'
      has_sorted_color_table:
        value: '(flags & 0b00100000) != 0'
      color_table_size:
        value: '2 << (flags & 7)'
  image_data:
    doc-ref: https://www.w3.org/Graphics/GIF/spec-gif89a.txt - section 22
    seq:
      - id: lzw_min_code_size
        type: u1
      - id: subblocks
        type: subblocks
  extension:
    seq:
      - id: label
        type: u1
        enum: extension_label
      - id: body
        type:
          switch-on: label
          cases:
            'extension_label::application': ext_application
            'extension_label::comment': subblocks
            'extension_label::graphic_control': ext_graphic_control
            _: subblocks
  ext_application:
    seq:
      - id: application_id
        type: application_id
      - id: subblocks
        type: subblock
        repeat: until
        repeat-until: _.len_bytes == 0
  ext_graphic_control:
    doc-ref: https://www.w3.org/Graphics/GIF/spec-gif89a.txt - section 23
    seq:
      - id: block_size
        contents: [4]
      - id: flags
        type: u1
      - id: delay_time
        type: u2
      - id: transparent_idx
        type: u1
      - id: terminator
        contents: [0]
    instances:
      transparent_color_flag:
        value: '(flags & 0b00000001) != 0'
      user_input_flag:
        value: '(flags & 0b00000010) != 0'
  subblocks:
    seq:
      - id: entries
        type: subblock
        repeat: until
        repeat-until: _.len_bytes == 0
  subblock:
    seq:
      - id: len_bytes
        type: u1
      - id: bytes
        size: len_bytes
  application_id:
    seq:
      - id: len_bytes
        type: u1
        valid: 11
      - id: application_identifier
        type: str
        encoding: ASCII
        size: 8
      - id: application_auth_code
        size: 3
enums:
  block_type:
    0x21: extension
    0x2c: local_image_descriptor
    0x3b: end_of_file
  extension_label:
    0xf9: graphic_control
    0xfe: comment
    0xff: application
`
  },
  {
    id: "ksy_gimp_brush",
    name: "GIMP brush file version 2",
    category: "Images",
    metadata: {
      isGenerated: true,
      fileExtensions: ["gbr"],
      description: "GIMP brush file version 2",
      originalCategory: "image",
      filePath: "image/gimp_brush.ksy",
      endian: "be"
    },
    content: `meta:
  id: gimp_brush
  title: GIMP brush file version 2
  application: GIMP (GNU Image Manipulation Program)
  file-extension: gbr
  xref:
    justsolve: GIMP_Brush
    mime: image/x-gimp-gbr
    wikidata: Q28206177
  license: CC0-1.0
  ks-version: 0.9
  endian: be
doc: |
  GIMP brush format is native to the GIMP image editor for storing a brush or a texture.
  It can be used in all [Paint Tools](https://docs.gimp.org/2.10/en/gimp-tools-paint.html),
  for example Pencil and Paintbrush. It works by repeating the brush bitmap as you move
  the tool. The Spacing parameter sets the distance between the brush marks as a percentage
  of brush width. Its default value can be set in the brush file.

  You can also use GIMP to create new brushes in this format. Custom brushes can be loaded
  into GIMP for use in the paint tools by copying them into one of the Brush Folders -
  select **Edit** > **Preferences** in the menu bar, expand the **Folders** section
  and choose **Brushes** to see the recognized Brush Folders or to add new ones.
doc-ref: https://github.com/GNOME/gimp/blob/441631322b/devel-docs/gbr.txt
seq:
  - id: len_header
    type: u4
  - id: header
    type: header
    size: len_header - len_header._sizeof
types:
  header:
    seq:
      - id: version
        type: u4
        valid: 2
      - id: width
        type: u4
        valid:
          min: 1
          max: 10000
        doc-ref:
          - https://github.com/GNOME/gimp/blob/441631322b/app/core/gimpbrush-load.c#L170 # valid/min
          - https://github.com/GNOME/gimp/blob/441631322b/app/core/gimpbrush-header.h#L24 # valid/max
      - id: height
        type: u4
        valid:
          min: 1
          max: 10000
        doc-ref:
          - https://github.com/GNOME/gimp/blob/441631322b/app/core/gimpbrush-load.c#L177 # valid/min
          - https://github.com/GNOME/gimp/blob/441631322b/app/core/gimpbrush-header.h#L24 # valid/max
      - id: bytes_per_pixel
        type: u4
        enum: color_depth
      - id: magic
        contents: GIMP
      - id: spacing
        type: u4
        doc: Default spacing to be used for brush. Percentage of brush width.
      - id: brush_name
        type: strz
        size-eos: true
        encoding: UTF-8
  bitmap:
    seq:
      - id: rows
        type: row
        repeat: expr
        repeat-expr: _root.header.height
  row:
    seq:
      - id: pixels
        type:
          switch-on: _root.header.bytes_per_pixel
          cases:
            color_depth::grayscale: pixel_gray
            color_depth::rgba: pixel_rgba
        repeat: expr
        repeat-expr: _root.header.width
    types:
      pixel_gray:
        -webide-representation: 'R={red:dec} G={green:dec} B={blue:dec} A={alpha:dec}'
        seq:
          - id: gray
            type: u1
        instances:
          red:
            value: 0
            -webide-parse-mode: eager
          green:
            value: 0
            -webide-parse-mode: eager
          blue:
            value: 0
            -webide-parse-mode: eager
          alpha:
            value: gray

      pixel_rgba:
        -webide-representation: 'R={red:dec} G={green:dec} B={blue:dec} A={alpha:dec}'
        seq:
          - id: red
            type: u1
          - id: green
            type: u1
          - id: blue
            type: u1
          - id: alpha
            type: u1
instances:
  len_body:
    value: header.width * header.height * header.bytes_per_pixel.to_i
  body:
    pos: len_header
    size: len_body
    -affected-by: 188
    # type: bitmap # The \`bitmap\` type works, but it might be slow and memory intensive for larger bitmaps
                   # because it creates a class instance for every pixel.
                   # So it is not suitable for production, but you can use it as a reference to create your
                   # own implementation.
enums:
  color_depth:
    1: grayscale
    4: rgba
`
  },
  {
    id: "ksy_icc_4",
    name: "ICC profile, version 4",
    category: "Images",
    metadata: {
      isGenerated: true,
      fileExtensions: ["icc","icm"],
      description: "ICC profile, version 4",
      originalCategory: "image",
      filePath: "image/icc_4.ksy",
      endian: "be"
    },
    content: `meta:
  id: icc_4
  title: ICC profile, version 4
  file-extension:
    - icc
    - icm
  xref:
    justsolve: ICC_profile
    mime: application/vnd.iccprofile
    wikidata: Q29206892
  license: CC0-1.0
  encoding: ASCII
  endian: be
seq:
  - id: header
    type: profile_header
  - id: tag_table
    type: tag_table
types:
  profile_header:
    seq:
      - id: size
        type: u4
      - id: preferred_cmm_type
        type: u4
        enum: cmm_signatures
      - id: version
        type: version_field
      - id: device_class
        type: u4
        enum: profile_classes
      - id: color_space
        type: u4
        enum: data_colour_spaces
      - id: pcs
        type: str
        size: 4
      - id: creation_date_time
        type: date_time_number
      - id: file_signature
        contents: 'acsp'
      - id: primary_platform
        type: u4
        enum: primary_platforms
      - id: profile_flags
        type: profile_flags
      - id: device_manufacturer
        type: device_manufacturer
      - id: device_model
        type: str
        size: 4
      - id: device_attributes
        type: device_attributes
      - id: rendering_intent
        type: u4
        enum: rendering_intents
      - id: nciexyz_values_of_illuminant_of_pcs
        type: xyz_number
      - id: creator
        type: device_manufacturer
      - id: identifier
        size: 16
      - id: reserved_data
        size: 28
    types:
      version_field:
        seq:
          - id: major
            contents: [0x04]
          - id: minor
            type: b4
          - id: bug_fix_level
            type: b4
          - id: reserved
            contents: [0x00, 0x00]
      profile_flags:
        seq:
          - id: embedded_profile
            type: b1
          - id: profile_can_be_used_independently_of_embedded_colour_data
            type: b1
          - id: other_flags
            type: b30
    enums:
      cmm_signatures:
        0x41444245: adobe_cmm #ADBE
        0x41434D53: agfa_cmm #ACMS
        0x6170706C: apple_cmm #appl
        0x43434D53: color_gear_cmm #CCMS
        0x5543434D: color_gear_cmm_lite #UCCM
        0x55434D53: color_gear_cmm_c #UCMS
        0x45464920: efi_cmm #EFI
        0x46462020: fuji_film_cmm #FF
        0x45584143: exact_scan_cmm #EXAC
        0x48434d4D: harlequin_rip_cmm #HCMM
        0x6172676C: argyll_cms_cmm #argl
        0x44676f53: logosync_cmm #LgoS
        0x48444d20: heidelberg_cmm #HDM
        0x6C636d73: little_cms_cmm #lcms
        0x52494d58: reficcmax_cmm #RIMX
        0x44494d58: demoiccmax_cmm #DIMX
        0x4b434d53: kodak_cmm #KCMS
        0x4d434d44: konica_minolta_cmm #MCML
        0x57435320: windows_color_system_cmm #WCS
        0x5349474E: mutoh_cmm #SIGN
        0x4f4e5958: onyx_graphics_cmm #ONYX
        0x52474d53: device_link_cmm #RGMS
        0x53494343: sample_icc_cmm #SICC
        0x54434d4d: toshiba_cmm #TCMM
        0x33324254: the_imaging_factory_cmm #32BT
        0x7669766f: vivo_cmm #vivo
        0x57544720: ware_to_go_cmm #WTG
        0x7a633030: zoran_cmm #zc00
      profile_classes:
        0x73636E72: input_device_profile #scnr
        0x6D6E7472: display_device_profile #mntr
        0x70727472: output_device_profile #prtr
        0x6C696E6B: device_link_profile #link
        0x73706163: color_space_profile #spac
        0x61627374: abstract_profile #abst
        0x6E6D636C: named_color_profile #nmcl
      data_colour_spaces:
        0x58595A20: nciexyz_or_pcsxyz #XYZ
        0x4C616220: cielab_or_pcslab #Lab
        0x4C757620: cieluv #Luv
        0x59436272: ycbcr #Ycbr
        0x59787920: cieyxy #Yxy
        0x52474220: rgb #RGB
        0x47524159: gray #GRAY
        0x48535620: hsv #HSV
        0x484C5320: hls #HLS
        0x434D594B: cmyk #CMYK
        0x434D5920: cmy #CMY
        0x32434C52: two_colour #2CLR
        0x33434C52: three_colour #3CLR
        0x34434C52: four_colour #4CLR
        0x35434C52: five_colour #5CLR
        0x36434C52: six_colour #6CLR
        0x37434C52: seven_colour #7CLR
        0x38434C52: eight_colour #8CLR
        0x39434C52: nine_colour #9CLR
        0x41434C52: ten_colour #ACLR
        0x42434C52: eleven_colour #BCLR
        0x43434C52: twelve_colour #CCLR
        0x44434C52: thirteen_colour #DCLR
        0x45434C52: fourteen_colour #ECLR
        0x46434C52: fifteen_colour #FCLR
      primary_platforms:
        0x4150504C: apple_computer_inc #APPL
        0x4D534654: microsoft_corporation #MSFT
        0x53474920: silicon_graphics_inc #SGI
        0x53554E57: sun_microsystems #SUNW
      rendering_intents:
        0: perceptual
        1: media_relative_colorimetric
        2: saturation
        3: icc_absolute_colorimetric
  device_manufacturer:
    seq:
      - id: device_manufacturer
        type: u4
        enum: device_manufacturers
    enums:
      device_manufacturers:
        0x34643270: erdt_systems_gmbh_and_co_kg #4d2p
        0x41414D41: aamazing_technologies_inc #AAMA
        0x41434552: acer_peripherals #ACER
        0x41434C54: acolyte_color_research #ACLT
        0x41435449: actix_sytems_inc #ACTI
        0x41444152: adara_technology_inc #ADAR
        0x41444245: adobe_systems_incorporated #ADBE
        0x41444920: adi_systems_inc #ADI
        0x41474641: agfa_graphics_nv #AGFA
        0x414C4D44: alps_electric_usa_inc #ALMD
        0x414C5053: alps_electric_usa_inc_2 #ALPS
        0x414C574E: alwan_color_expertise #ALWN
        0x414D5449: amiable_technologies_inc #AMTI
        0x414F4320: aoc_international_usa_ltd #AOC
        0x41504147: apago #APAG
        0x4150504C: apple_computer_inc #APPL
        0x41535420: ast #AST
        0x41542654: atandt_computer_systems #AT&T
        0x4241454C: barbieri_electronic #BAEL
        0x62657267: bergdesign_incorporated #berg
        0x62494343: basiccolor_gmbh #bICC
        0x4252434F: barco_nv #BRCO
        0x42524B50: breakpoint_pty_limited #BRKP
        0x42524F54: brother_industries_ltd #BROT
        0x42554C4C: bull #BULL
        0x42555320: bus_computer_systems #BUS
        0x432D4954: c_itoh #C-IT
        0x43414D52: intel_corporation #CAMR
        0x43414E4F: canon_inc_canon_development_americas_inc #CANO
        0x43415252: carroll_touch #CARR
        0x43415349: casio_computer_co_ltd #CASI
        0x43425553: colorbus_pl #CBUS
        0x43454C20: crossfield #CEL
        0x43454C78: crossfield_2 #CELx
        0x63657964: integrated_color_solutions_inc #ceyd
        0x43475320: cgs_publishing_technologies_international_gmbh #CGS
        0x43484D20: rochester_robotics #CHM
        0x4349474C: colour_imaging_group_london #CIGL
        0x43495449: citizen #CITI
        0x434C3030: candela_ltd #CL00
        0x434C4951: color_iq #CLIQ
        0x636C7370: macdermid_colorspan_inc #clsp
        0x434D434F: chromaco_inc #CMCO
        0x434D6958: chromix #CMiX
        0x434F4C4F: colorgraphic_communications_corporation #COLO
        0x434F4D50: compaq_computer_corporation #COMP
        0x434F4D70: compeq_usa_focus_technology #COMp
        0x434F4E52: conrac_display_products #CONR
        0x434F5244: cordata_technologies_inc #CORD
        0x43505120: compaq_computer_corporation_2 #CPQ
        0x4350524F: colorpro #CPRO
        0x43524E20: cornerstone #CRN
        0x43545820: ctx_international_inc #CTX
        0x43564953: colorvision #CVIS
        0x43574320: fujitsu_laboratories_ltd #CWC
        0x44415249: darius_technology_ltd #DARI
        0x44415441: dataproducts #DATA
        0x44435020: dry_creek_photo #DCP
        0x44435243: digital_contents_resource_center_chung_ang_university #DCRC
        0x44454C4C: dell_computer_corporation #DELL
        0x44494320: dainippon_ink_and_chemicals #DIC
        0x4449434F: diconix #DICO
        0x44494749: digital #DIGI
        0x444C2643: digital_light_and_color #DL&C
        0x44504C47: doppelganger_llc #DPLG
        0x44532020: dainippon_screen #DS
        0x64732020: dainippon_screen_2 #ds
        0x44534F4C: doosol #DSOL
        0x4455504E: dupont #DUPN
        0x6475706E: dupont_2 #dupn
        0x45697A6F: eizo_nanao_corporation #Eizo
        0x4550534F: epson #EPSO
        0x45534B4F: esko_graphics #ESKO
        0x45545249: electronics_and_telecommunications_research_institute #ETRI
        0x45564552: everex_systems_inc #EVER
        0x45584143: exactcode_gmbh #EXAC
        0x46414C43: falco_data_products_inc #FALC
        0x46462020: fuji_photo_film_coltd #FF
        0x46464549: fujifilm_electronic_imaging_ltd #FFEI
        0x66666569: fujifilm_electronic_imaging_ltd_2 #ffei
        0x666C7578: fluxdata_corporation #flux
        0x464E5244: fnord_software #FNRD
        0x464F5241: fora_inc #FORA
        0x464F5245: forefront_technology_corporation #FORE
        0x46502A2A: fujitsu #FP
        0x46504120: waytech_development_inc #FPA
        0x46554A49: fujitsu_2 #FUJI
        0x46582020: fuji_xerox_co_ltd #FX
        0x47434320: gcc_technologies_inc #GCC
        0x4747534C: global_graphics_software_limited #GGSL
        0x474D4220: gretagmacbeth #GMB
        0x474D4720: gmg_gmbh_and_co_kg #GMG
        0x474F4C44: goldstar_technology_inc #GOLD
        0x47505254: giantprint_pty_ltd #GPRT
        0x47544D42: gretagmacbeth_2 #GTMB
        0x47564320: waytech_development_inc_2 #GVC
        0x4757324B: sony_corporation #GW2K
        0x48434920: hci #HCI
        0x48444D20: heidelberger_druckmaschinen_ag #HDM
        0x4845524D: hermes #HERM
        0x48495441: hitachi_america_ltd #HITA
        0x48695469: hiti_digital_inc #HiTi
        0x48502020: hewlett_packard #HP
        0x48544320: hitachi_ltd #HTC
        0x49424D20: ibm_corporation #IBM
        0x49444E54: scitex_corporation_ltd #IDNT
        0x49646E74: scitex_corporation_ltd_2 #Idnt
        0x49454320: hewlett_packard_2 #IEC
        0x49495941: iiyama_north_america_inc #IIYA
        0x494B4547: ikegami_electronics_inc #IKEG
        0x494D4147: image_systems_corporation #IMAG
        0x494D4920: ingram_micro_inc #IMI
        0x496E6361: inca_digital_printers_ltd #Inca
        0x494E5443: intel_corporation_2 #INTC
        0x494E544C: intl #INTL
        0x494E5452: intra_electronics_usa_inc #INTR
        0x494F434F: iocomm_international_technology_corporation #IOCO
        0x49505320: infoprint_solutions_company #IPS
        0x49524953: scitex_corporation_ltd_3 #IRIS
        0x49726973: scitex_corporation_ltd_4 #Iris
        0x69726973: scitex_corporation_ltd_5 #iris
        0x49534C20: ichikawa_soft_laboratory #ISL
        0x49544E4C: itnl #ITNL
        0x49564d20: ivm #IVM
        0x49574154: iwatsu_electric_co_ltd #IWAT
        0x4A534654: jetsoft_development #JSFT
        0x4A564320: jvc_information_products_co #JVC
        0x4B415254: scitex_corporation_ltd_6 #KART
        0x4B617274: scitex_corporation_ltd_7 #Kart
        0x6B617274: scitex_corporation_ltd_8 #kart
        0x4B464320: kfc_computek_components_corporation #KFC
        0x4B4C4820: klh_computers #KLH
        0x4B4D4844: konica_minolta_holdings_inc #KMHD
        0x4B4E4341: konica_corporation #KNCA
        0x4B4F4441: kodak #KODA
        0x4B594F43: kyocera #KYOC
        0x4C434147: leica_camera_ag #LCAG
        0x4C434344: leeds_colour #LCCD
        0x4C44414B: left_dakota #LDAK
        0x4C454144: leading_technology_inc #LEAD
        0x4C45584D: lexmark_international_inc #LEXM
        0x4C494E4B: link_computer_inc #LINK
        0x4C494E4F: linotronic #LINO
        0x4C495445: lite_on_inc #LITE
        0x4D414743: mag_computronic_usa_inc #MAGC
        0x4D414749: mag_innovision_inc #MAGI
        0x4D414E4E: mannesmann #MANN
        0x4D49434E: micron_technology_inc #MICN
        0x4D494352: microtek #MICR
        0x4D494356: microvitec_inc #MICV
        0x4D494E4F: minolta #MINO
        0x4D495453: mitsubishi_electronics_america_inc #MITS
        0x4D495473: mitsuba_corporation #MITs
        0x4D697473: mitsubishi_electric_corporation_kyoto_works #Mits
        0x4D4E4C54: minolta_2 #MNLT
        0x4D4F4447: modgraph_inc #MODG
        0x4D4F4E49: monitronix_inc #MONI
        0x4D4F4E53: monaco_systems_inc #MONS
        0x4D4F5253: morse_technology_inc #MORS
        0x4D4F5449: motive_systems #MOTI
        0x4D534654: microsoft_corporation #MSFT
        0x4D55544F: mutoh_industries_ltd #MUTO
        0x4E414E41: nanao_usa_corporation #NANA
        0x4E454320: nec_corporation #NEC
        0x4E455850: nexpress_solutions_llc #NEXP
        0x4E495353: nissei_sangyo_america_ltd #NISS
        0x4E4B4F4E: nikon_corporation #NKON
        0x6F623464: erdt_systems_gmbh_and_co_kg_2 #ob4d
        0x6F626963: medigraph_gmbh #obic
        0x4F434520: oce_technologies_bv #OCE
        0x4F434543: ocecolor #OCEC
        0x4F4B4920: oki #OKI
        0x4F4B4944: okidata #OKID
        0x4F4B4950: okidata_2 #OKIP
        0x4F4C4956: olivetti #OLIV
        0x4F4C594D: olympus_optical_co_ltd #OLYM
        0x4F4E5958: onyx_graphics #ONYX
        0x4F505449: optiquest #OPTI
        0x5041434B: packard_bell #PACK
        0x50414E41: matsushita_electric_industrial_co_ltd #PANA
        0x50414E54: pantone_inc #PANT
        0x50424E20: packard_bell_2 #PBN
        0x50465520: pfu_limited #PFU
        0x5048494C: philips_consumer_electronics_co #PHIL
        0x504E5458: hoya_corporation_pentax_imaging_systems_division #PNTX
        0x504F6E65: phase_one_a_s #POne
        0x5052454D: premier_computer_innovations #PREM
        0x5052494E: princeton_graphic_systems #PRIN
        0x50524950: princeton_publishing_labs #PRIP
        0x514C5558: qlux #QLUX
        0x514D5320: qms_inc #QMS
        0x51504344: qpcard_ab #QPCD
        0x51554144: quadlaser #QUAD
        0x71756279: qubyx_sarl #quby
        0x51554D45: qume_corporation #QUME
        0x52414449: radius_inc #RADI
        0x52444478: integrated_color_solutions_inc_2 #RDDx
        0x52444720: roland_dg_corporation #RDG
        0x5245444D: redms_group_inc #REDM
        0x52454C49: relisys #RELI
        0x52474D53: rolf_gierling_multitools #RGMS
        0x5249434F: ricoh_corporation #RICO
        0x524E4C44: edmund_ronald #RNLD
        0x524F5941: royal #ROYA
        0x52504320: ricoh_printing_systemsltd #RPC
        0x52544C20: royal_information_electronics_co_ltd #RTL
        0x53414D50: sampo_corporation_of_america #SAMP
        0x53414D53: samsung_inc #SAMS
        0x53414E54: jaime_santana_pomares #SANT
        0x53434954: scitex_corporation_ltd_9 #SCIT
        0x53636974: scitex_corporation_ltd_10 #Scit
        0x73636974: scitex_corporation_ltd_11 #scit
        0x5343524E: dainippon_screen_3 #SCRN
        0x7363726E: dainippon_screen_4 #scrn
        0x53445020: scitex_corporation_ltd_12 #SDP
        0x53647020: scitex_corporation_ltd_13 #Sdp
        0x73647020: scitex_corporation_ltd_14 #sdp
        0x53454320: samsung_electronics_coltd #SEC
        0x5345494B: seiko_instruments_usa_inc #SEIK
        0x5345496B: seikosha #SEIk
        0x53475559: scanguycom #SGUY
        0x53484152: sharp_laboratories #SHAR
        0x53494343: international_color_consortium #SICC
        0x73697769: siwi_grafika_corporation #siwi
        0x534F4E59: sony_corporation_2 #SONY
        0x536F6E79: sony_corporation_3 #Sony
        0x5350434C: spectracal #SPCL
        0x53544152: star #STAR
        0x53544320: sampo_technology_corporation #STC
        0x54414C4F: talon_technology_corporation #TALO
        0x54414E44: tandy #TAND
        0x54415455: tatung_co_of_america_inc #TATU
        0x54415841: taxan_america_inc #TAXA
        0x54445320: tokyo_denshi_sekei_kk #TDS
        0x5445434F: teco_information_systems_inc #TECO
        0x54454752: tegra #TEGR
        0x54454B54: tektronix_inc #TEKT
        0x54492020: texas_instruments #TI
        0x544D4B52: typemaker_ltd #TMKR
        0x544F5342: toshiba_corp #TOSB
        0x544F5348: toshiba_inc #TOSH
        0x544F544B: totoku_electric_co_ltd #TOTK
        0x54524955: triumph #TRIU
        0x54534254: toshiba_tec_corporation #TSBT
        0x54545820: ttx_computer_products_inc #TTX
        0x54564D20: tvm_professional_monitor_corporation #TVM
        0x54572020: tw_casper_corporation #TW
        0x554C5358: ulead_systems #ULSX
        0x554E4953: unisys #UNIS
        0x55545A46: utz_fehlau_and_sohn #UTZF
        0x56415249: varityper #VARI
        0x56494557: viewsonic #VIEW
        0x5649534C: visual_communication #VISL
        0x57414E47: wang #WANG
        0x574C4252: wilbur_imaging #WLBR
        0x57544732: ware_to_go #WTG2
        0x57595345: wyse_technology #WYSE
        0x58455258: xerox_corporation #XERX
        0x58524954: x_rite #XRIT
        0x7978796D: yxymaster_gmbh #yxym
        0x5A313233: lavanyas_test_company #Z123
        0x5A656272: zebra_technologies_inc #Zebr
        0x5A52414E: zoran_corporation #ZRAN
  device_attributes:
    seq:
      - id: reflective_or_transparency
        type: b1
        enum: device_attributes_reflective_or_transparency
      - id: glossy_or_matte
        type: b1
        enum: device_attributes_glossy_or_matte
      - id: positive_or_negative_media_polarity
        type: b1
        enum: device_attributes_positive_or_negative_media_polarity
      - id: colour_or_black_and_white_media
        type: b1
        enum: device_attributes_colour_or_black_and_white_media
      - id: reserved
        type: b28
      - id: vendor_specific
        type: b32
    enums:
      device_attributes_reflective_or_transparency:
        0: reflective
        1: transparency
      device_attributes_glossy_or_matte:
        0: glossy
        1: matte
      device_attributes_positive_or_negative_media_polarity:
        0: positive_media_polarity
        1: negative_media_polarity
      device_attributes_colour_or_black_and_white_media:
        0: colour_media
        1: black_and_white_media
  date_time_number:
    seq:
      - id: year
        type: u2
      - id: month
        type: u2
      - id: day
        type: u2
      - id: hour
        type: u2
      - id: minute
        type: u2
      - id: second
        type: u2
  position_number:
    seq:
      - id: offset_to_data_element
        type: u4
      - id: size_of_data_element
        type: u4
  response_16_number:
    seq:
      - id: number
        type: u4
      - id: reserved
        contents: [0x00, 0x00]
      - id: measurement_value
        type: s_15_fixed_16_number
  s_15_fixed_16_number:
    seq:
      - id: number
        size: 4
  u_16_fixed_16_number:
    seq:
      - id: number
        size: 4
  u_1_fixed_15_number:
    seq:
      - id: number
        size: 2
  u_8_fixed_8_number:
    seq:
      - id: number
        size: 2
  xyz_number:
    seq:
      - id: x
        size: 4
      - id: y
        size: 4
      - id: z
        size: 4
  tag_table:
    seq:
      - id: tag_count
        type: u4
      - id: tags
        type: tag_definition
        repeat: expr
        repeat-expr: tag_count
    types:
      tag_definition:
        seq:
          - id: tag_signature
            type: u4
            enum: tag_signatures
          - id: offset_to_data_element
            type: u4
          - id: size_of_data_element
            type: u4
        instances:
          tag_data_element:
            pos: offset_to_data_element
            size: size_of_data_element
            type:
              switch-on: tag_signature
              cases:
                tag_signatures::a_to_b_0: a_to_b_0_tag
                tag_signatures::a_to_b_1: a_to_b_1_tag
                tag_signatures::a_to_b_2: a_to_b_2_tag
                tag_signatures::blue_matrix_column: blue_matrix_column_tag
                tag_signatures::blue_trc: blue_trc_tag
                tag_signatures::b_to_a_0: b_to_a_0_tag
                tag_signatures::b_to_a_1: b_to_a_1_tag
                tag_signatures::b_to_a_2: b_to_a_2_tag
                tag_signatures::b_to_d_0: b_to_d_0_tag
                tag_signatures::b_to_d_1: b_to_d_1_tag
                tag_signatures::b_to_d_2: b_to_d_2_tag
                tag_signatures::b_to_d_3: b_to_d_3_tag
                tag_signatures::calibration_date_time: calibration_date_time_tag
                tag_signatures::char_target: char_target_tag
                tag_signatures::chromatic_adaptation: chromatic_adaptation_tag
                tag_signatures::chromaticity: chromaticity_tag
                tag_signatures::colorant_order: colorant_order_tag
                tag_signatures::colorant_table: colorant_table_tag
                tag_signatures::colorant_table_out: colorant_table_out_tag
                tag_signatures::colorimetric_intent_image_state: colorimetric_intent_image_state_tag
                tag_signatures::copyright: copyright_tag
                tag_signatures::device_mfg_desc: device_mfg_desc_tag
                tag_signatures::device_model_desc: device_model_desc_tag
                tag_signatures::d_to_b_0: d_to_b_0_tag
                tag_signatures::d_to_b_1: d_to_b_1_tag
                tag_signatures::d_to_b_2: d_to_b_2_tag
                tag_signatures::d_to_b_3: d_to_b_3_tag
                tag_signatures::gamut: gamut_tag
                tag_signatures::gray_trc: gray_trc_tag
                tag_signatures::green_matrix_column: green_matrix_column_tag
                tag_signatures::green_trc: green_trc_tag
                tag_signatures::luminance: luminance_tag
                tag_signatures::measurement: measurement_tag
                tag_signatures::media_white_point: media_white_point_tag
                tag_signatures::named_color_2: named_color_2_tag
                tag_signatures::output_response: output_response_tag
                tag_signatures::perceptual_rendering_intent_gamut: perceptual_rendering_intent_gamut_tag
                tag_signatures::preview_0: preview_0_tag
                tag_signatures::preview_1: preview_1_tag
                tag_signatures::preview_2: preview_2_tag
                tag_signatures::profile_description: profile_description_tag
                tag_signatures::profile_sequence: profile_sequence_tag
                tag_signatures::profile_sequence_identifier: profile_sequence_identifier_tag
                tag_signatures::red_matrix_column: red_matrix_column_tag
                tag_signatures::red_trc: red_trc_tag
                tag_signatures::saturation_rendering_intent_gamut: saturation_rendering_intent_gamut_tag
                tag_signatures::technology: technology_tag
                tag_signatures::viewing_cond_desc: viewing_cond_desc_tag
                tag_signatures::viewing_conditions: viewing_conditions_tag
        types:
          a_to_b_0_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_function_table_with_one_byte_precision_type: lut_8_type
                    tag_type_signatures::multi_function_table_with_two_byte_precision_type: lut_16_type
                    tag_type_signatures::multi_function_a_to_b_table_type: lut_a_to_b_type
          a_to_b_1_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_function_table_with_one_byte_precision_type: lut_8_type
                    tag_type_signatures::multi_function_table_with_two_byte_precision_type: lut_16_type
                    tag_type_signatures::multi_function_a_to_b_table_type: lut_a_to_b_type
          a_to_b_2_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_function_table_with_one_byte_precision_type: lut_8_type
                    tag_type_signatures::multi_function_table_with_two_byte_precision_type: lut_16_type
                    tag_type_signatures::multi_function_a_to_b_table_type: lut_a_to_b_type
          blue_matrix_column_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::xyz_type: xyz_type
          blue_trc_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::curve_type: curve_type
                    tag_type_signatures::parametric_curve_type: parametric_curve_type
          b_to_a_0_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_function_table_with_one_byte_precision_type: lut_8_type
                    tag_type_signatures::multi_function_table_with_two_byte_precision_type: lut_16_type
                    tag_type_signatures::multi_function_b_to_a_table_type: lut_b_to_a_type
          b_to_a_1_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_function_table_with_one_byte_precision_type: lut_8_type
                    tag_type_signatures::multi_function_table_with_two_byte_precision_type: lut_16_type
                    tag_type_signatures::multi_function_b_to_a_table_type: lut_b_to_a_type
          b_to_a_2_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_function_table_with_one_byte_precision_type: lut_8_type
                    tag_type_signatures::multi_function_table_with_two_byte_precision_type: lut_16_type
                    tag_type_signatures::multi_function_b_to_a_table_type: lut_b_to_a_type
          b_to_d_0_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_process_elements_type: multi_process_elements_type
          b_to_d_1_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_process_elements_type: multi_process_elements_type
          b_to_d_2_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_process_elements_type: multi_process_elements_type
          b_to_d_3_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_process_elements_type: multi_process_elements_type
          calibration_date_time_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::date_time_type: date_time_type
          char_target_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::text_type: text_type
          chromatic_adaptation_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::s_15_fixed_16_array_type: s_15_fixed_16_array_type
          chromaticity_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::chromaticity_type: chromaticity_type
          colorant_order_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::colorant_order_type: colorant_order_type
          colorant_table_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::colorant_table_type: colorant_table_type
          colorant_table_out_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::colorant_table_type: colorant_table_type
          colorimetric_intent_image_state_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::signature_type: signature_type
          copyright_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_localized_unicode_type: multi_localized_unicode_type
          device_mfg_desc_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_localized_unicode_type: multi_localized_unicode_type
          device_model_desc_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_localized_unicode_type: multi_localized_unicode_type
          d_to_b_0_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_process_elements_type: multi_process_elements_type
          d_to_b_1_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_process_elements_type: multi_process_elements_type
          d_to_b_2_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_process_elements_type: multi_process_elements_type
          d_to_b_3_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_process_elements_type: multi_process_elements_type
          gamut_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_function_table_with_one_byte_precision_type: lut_8_type
                    tag_type_signatures::multi_function_table_with_two_byte_precision_type: lut_16_type
                    tag_type_signatures::multi_function_b_to_a_table_type: lut_b_to_a_type
          gray_trc_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::curve_type: curve_type
                    tag_type_signatures::parametric_curve_type: parametric_curve_type
          green_matrix_column_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::xyz_type: xyz_type
          green_trc_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::curve_type: curve_type
                    tag_type_signatures::parametric_curve_type: parametric_curve_type
          luminance_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::xyz_type: xyz_type
          measurement_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::measurement_type: measurement_type
          media_white_point_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::xyz_type: xyz_type
          named_color_2_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::named_color_2_type: named_color_2_type
          output_response_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::response_curve_set_16_type: response_curve_set_16_type
          perceptual_rendering_intent_gamut_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::signature_type: signature_type
          preview_0_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_function_table_with_one_byte_precision_type: lut_8_type
                    tag_type_signatures::multi_function_table_with_two_byte_precision_type: lut_16_type
                    tag_type_signatures::multi_function_a_to_b_table_type: lut_a_to_b_type
                    tag_type_signatures::multi_function_b_to_a_table_type: lut_b_to_a_type
          preview_1_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_function_table_with_one_byte_precision_type: lut_8_type
                    tag_type_signatures::multi_function_table_with_two_byte_precision_type: lut_16_type
                    tag_type_signatures::multi_function_b_to_a_table_type: lut_b_to_a_type
          preview_2_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_function_table_with_one_byte_precision_type: lut_8_type
                    tag_type_signatures::multi_function_table_with_two_byte_precision_type: lut_16_type
                    tag_type_signatures::multi_function_b_to_a_table_type: lut_b_to_a_type
          profile_description_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_localized_unicode_type: multi_localized_unicode_type
          profile_sequence_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::profile_sequence_desc_type: profile_sequence_desc_type
          profile_sequence_identifier_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::profile_sequence_identifier_type: profile_sequence_identifier_type
          red_matrix_column_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::xyz_type: xyz_type
          red_trc_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::curve_type: curve_type
                    tag_type_signatures::parametric_curve_type: parametric_curve_type
          saturation_rendering_intent_gamut_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::signature_type: signature_type
          technology_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::signature_type: signature_type
          viewing_cond_desc_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::multi_localized_unicode_type: multi_localized_unicode_type
          viewing_conditions_tag:
            seq:
              - id: tag_type
                type: u4
                enum: tag_type_signatures
              - id: tag_data
                type:
                  switch-on: tag_type
                  cases:
                    tag_type_signatures::viewing_conditions_type: viewing_conditions_type
          chromaticity_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: number_of_device_channels
                type: u2
              - id: colorant_and_phosphor_encoding
                type: u2
                enum: colorant_and_phosphor_encodings
              - id: ciexy_coordinates_per_channel
                type: ciexy_coordinate_values
                repeat: expr
                repeat-expr: number_of_device_channels
            types:
              ciexy_coordinate_values:
                seq:
                  - id: x_coordinate
                    type: u2
                  - id: y_coordinate
                    type: u2
            enums:
              colorant_and_phosphor_encodings:
                0x0000: unknown
                0x0001: itu_r_bt_709_2
                0x0002: smpte_rp145
                0x0003: ebu_tech_3213_e
                0x0004: p22
          colorant_order_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: count_of_colorants
                type: u4
              - id: numbers_of_colorants_in_order_of_printing
                type: u1
                repeat: expr
                repeat-expr: count_of_colorants
          colorant_table_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: count_of_colorants
                type: u4
              - id: colorants
                type: colorant
                repeat: expr
                repeat-expr: count_of_colorants
            types:
              colorant:
                seq:
                  - id: name
                    type: strz
                  - id: padding
                    contents: [0x00]
                    repeat: expr
                    repeat-expr: 32 - name.length
                  - id: pcs_values
                    size: 6
          curve_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: number_of_entries
                type: u4
              - id: curve_values
                type: u2
                repeat: expr
                repeat-expr: number_of_entries
                if: number_of_entries > 1
              - id: curve_value
                type: u1
                if: number_of_entries == 1
          data_type:
            seq:
              - id: data_flag
                type: u4
                enum: data_types
            enums:
              data_types:
                0x00000000: ascii_data
                0x00000001: binary_data
          date_time_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: date_and_time
                type: date_time_number
          lut_16_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: number_of_input_channels
                type: u1
              - id: number_of_output_channels
                type: u1
              - id: number_of_clut_grid_points
                type: u1
              - id: padding
                contents: [0x00]
              - id: encoded_e_parameters
                type: s4
                repeat: expr
                repeat-expr: 9
              - id: number_of_input_table_entries
                type: u2
              - id: number_of_output_table_entries
                type: u2
              - id: input_tables
                size: 2 * number_of_input_channels * number_of_input_table_entries
              - id: clut_values
                size: 2 * (number_of_clut_grid_points ^ number_of_input_channels) * number_of_output_channels
              - id: output_tables
                size: 2 * number_of_output_channels * number_of_output_table_entries
          lut_8_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: number_of_input_channels
                type: u1
              - id: number_of_output_channels
                type: u1
              - id: number_of_clut_grid_points
                type: u1
              - id: padding
                contents: [0x00]
              - id: encoded_e_parameters
                type: s4
                repeat: expr
                repeat-expr: 9
              - id: number_of_input_table_entries
                type: u4
              - id: number_of_output_table_entries
                type: u4
              - id: input_tables
                size: 256 * number_of_input_channels
              - id: clut_values
                size: (number_of_clut_grid_points ^ number_of_input_channels) * number_of_output_channels
              - id: output_tables
                size: 256 * number_of_output_channels
          lut_a_to_b_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: number_of_input_channels
                type: u1
              - id: number_of_output_channels
                type: u1
              - id: padding
                contents: [0x00, 0x00]
              - id: offset_to_first_b_curve
                type: u4
              - id: offset_to_matrix
                type: u4
              - id: offset_to_first_m_curve
                type: u4
              - id: offset_to_clut
                type: u4
              - id: offset_to_first_a_curve
                type: u4
              - id: data
                size-eos: true
          lut_b_to_a_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: number_of_input_channels
                type: u1
              - id: number_of_output_channels
                type: u1
              - id: padding
                contents: [0x00, 0x00]
              - id: offset_to_first_b_curve
                type: u4
              - id: offset_to_matrix
                type: u4
              - id: offset_to_first_m_curve
                type: u4
              - id: offset_to_clut
                type: u4
              - id: offset_to_first_a_curve
                type: u4
              - id: data
                size-eos: true
          measurement_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: standard_observer_encoding
                type: u4
                enum: standard_observer_encodings
              - id: nciexyz_tristimulus_values_for_measurement_backing
                type: xyz_number
              - id: measurement_geometry_encoding
                type: u4
                enum: measurement_geometry_encodings
              - id: measurement_flare_encoding
                type: u4
                enum: measurement_flare_encodings
              - id: standard_illuminant_encoding
                type: standard_illuminant_encoding
            enums:
              standard_observer_encodings:
                0x00000000: unknown
                0x00000001: cie_1931_standard_colorimetric_observer
                0x00000002: cie_1964_standard_colorimetric_observer
              measurement_geometry_encodings:
                0x00000000: unknown
                0x00000001: zero_degrees_to_45_degrees_or_45_degrees_to_zero_degrees
                0x00000002: zero_degrees_to_d_degrees_or_d_degrees_to_zero_degrees
              measurement_flare_encodings:
                0x00000000: zero_percent
                0x00010000: one_hundred_percent
          multi_localized_unicode_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: number_of_records
                type: u4
              - id: record_size
                type: u4
              - id: records
                type: record
                repeat: expr
                repeat-expr: number_of_records
            types:
              record:
                seq:
                  - id: language_code
                    type: u2
                  - id: country_code
                    type: u2
                  - id: string_length
                    type: u4
                  - id: string_offset
                    type: u4
                instances:
                  string_data:
                    pos: string_offset
                    size: string_length
                    type: str
                    encoding: UTF-16BE
          multi_process_elements_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: number_of_input_channels
                type: u2
              - id: number_of_output_channels
                type: u2
              - id: number_of_processing_elements
                type: u4
              - id: process_element_positions_table
                type: position_number
                repeat: expr
                repeat-expr: number_of_processing_elements
              - id: data
                size-eos: true
          named_color_2_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: vendor_specific_flag
                type: u4
              - id: count_of_named_colours
                type: u4
              - id: number_of_device_coordinates_for_each_named_colour
                type: u4
              - id: prefix_for_each_colour_name
                type: strz
              - id: prefix_for_each_colour_name_padding
                contents: [0x00]
                repeat: expr
                repeat-expr: 32 - prefix_for_each_colour_name.length
              - id: suffix_for_each_colour_name
                type: strz
              - id: suffix_for_each_colour_name_padding
                contents: [0x00]
                repeat: expr
                repeat-expr: 32 - suffix_for_each_colour_name.length
              - id: named_colour_definitions
                type: named_colour_definition
                repeat: expr
                repeat-expr: count_of_named_colours
            types:
              named_colour_definition:
                seq:
                  - id: root_name
                    type: strz
                  - id: root_name_padding
                    contents: [0x00]
                    repeat: expr
                    repeat-expr: 32 - root_name.length
                  - id: pcs_coordinates
                    size: 6
                  - id: device_coordinates
                    type: u2
                    repeat: expr
                    repeat-expr: _parent.number_of_device_coordinates_for_each_named_colour
                    if: _parent.number_of_device_coordinates_for_each_named_colour > 0
          parametric_curve_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: function_type
                type: u2
                enum: parametric_curve_type_functions
              - id: reserved_2
                contents: [0x00, 0x00]
              - id: parameters
                type:
                  switch-on: function_type
                  cases:
                    parametric_curve_type_functions::y_equals_x_to_power_of_g: params_y_equals_x_to_power_of_g
                    parametric_curve_type_functions::cie_122_1996: params_cie_122_1996
                    parametric_curve_type_functions::iec_61966_3: params_iec_61966_3
                    parametric_curve_type_functions::iec_61966_2_1: params_iec_61966_2_1
                    parametric_curve_type_functions::y_equals_ob_ax_plus_b_cb_to_power_of_g_plus_c: params_y_equals_ob_ax_plus_b_cb_to_power_of_g_plus_c
            types:
              params_y_equals_x_to_power_of_g:
                seq:
                  - id: g
                    type: s4
              params_cie_122_1996:
                seq:
                  - id: g
                    type: s4
                  - id: a
                    type: s4
                  - id: b
                    type: s4
              params_iec_61966_3:
                seq:
                  - id: g
                    type: s4
                  - id: a
                    type: s4
                  - id: b
                    type: s4
                  - id: c
                    type: s4
              params_iec_61966_2_1:
                seq:
                  - id: g
                    type: s4
                  - id: a
                    type: s4
                  - id: b
                    type: s4
                  - id: c
                    type: s4
                  - id: d
                    type: s4
              params_y_equals_ob_ax_plus_b_cb_to_power_of_g_plus_c:
                seq:
                  - id: g
                    type: s4
                  - id: a
                    type: s4
                  - id: b
                    type: s4
                  - id: c
                    type: s4
                  - id: d
                    type: s4
                  - id: e
                    type: s4
                  - id: f
                    type: s4
            enums:
              parametric_curve_type_functions:
                0x0000: y_equals_x_to_power_of_g
                0x0001: cie_122_1996
                0x0002: iec_61966_3
                0x0003: iec_61966_2_1
                0x0004: y_equals_ob_ax_plus_b_cb_to_power_of_g_plus_c
          profile_sequence_desc_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: number_of_description_structures
                type: u4
              - id: profile_descriptions
                type: profile_description
                repeat: expr
                repeat-expr: number_of_description_structures
            types:
              profile_description:
                seq:
                  - id: device_manufacturer
                    type: device_manufacturer
                  - id: device_model
                    type: str
                    size: 4
                  - id: device_attributes
                    type: device_attributes
                  - id: device_technology
                    type: technology_tag
                  - id: description_of_device_manufacturer
                    type: device_mfg_desc_tag
                  - id: description_of_device_model
                    type: device_model_desc_tag
          profile_sequence_identifier_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: number_of_structures
                type: u4
              - id: positions_table
                type: position_number
                repeat: expr
                repeat-expr: number_of_structures
              - id: profile_identifiers
                type: profile_identifier
                repeat: expr
                repeat-expr: number_of_structures
            types:
              profile_identifier:
                seq:
                  - id: profile_id
                    size: 16
                  - id: profile_description
                    type: multi_localized_unicode_type
          response_curve_set_16_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: number_of_channels
                type: u2
              - id: count_of_measurement_types
                type: u2
              - id: response_curve_structure_offsets
                type: u4
                repeat: expr
                repeat-expr: count_of_measurement_types
              - id: response_curve_structures
                size-eos: true
          s_15_fixed_16_array_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: values
                type: s_15_fixed_16_number
                repeat: eos
          signature_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: signature
                type: str
                size: 4
          text_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: value
                type: strz
                size-eos: true
          u_16_fixed_16_array_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: values
                type: u_16_fixed_16_number
                repeat: eos
          u_int_16_array_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: values
                type: u2
                repeat: eos
          u_int_32_array_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: values
                type: u4
                repeat: eos
          u_int_64_array_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: values
                type: u8
                repeat: eos
          u_int_8_array_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: values
                type: u1
                repeat: eos
          viewing_conditions_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: un_normalized_ciexyz_values_for_illuminant
                type: xyz_number
              - id: un_normalized_ciexyz_values_for_surround
                type: xyz_number
              - id: illuminant_type
                type: standard_illuminant_encoding
          xyz_type:
            seq:
              - id: reserved
                contents: [0x00, 0x00, 0x00, 0x00]
              - id: values
                type: xyz_number
                repeat: eos
        enums:
          tag_signatures:
            0x41324230: a_to_b_0 #A2B0
            0x41324231: a_to_b_1 #A2B1
            0x41324232: a_to_b_2 #A2B2
            0x6258595A: blue_matrix_column #bXYZ
            0x62545243: blue_trc #bTRC
            0x42324130: b_to_a_0 #B2A0
            0x42324131: b_to_a_1 #B2A1
            0x42324132: b_to_a_2 #B2A2
            0x42324430: b_to_d_0 #B2D0
            0x42324431: b_to_d_1 #B2D1
            0x42324432: b_to_d_2 #B2D2
            0x42324433: b_to_d_3 #B2D3
            0x63616C74: calibration_date_time #calt
            0x74617267: char_target #targ
            0x63686164: chromatic_adaptation #chad
            0x6368726D: chromaticity #chrm
            0x636C726F: colorant_order #clro
            0x636C7274: colorant_table #clrt
            0x636C6F74: colorant_table_out #clot
            0x63696973: colorimetric_intent_image_state #ciis
            0x63707274: copyright #cprt
            0x646D6E64: device_mfg_desc #dmnd
            0x646D6464: device_model_desc #dmdd
            0x44324230: d_to_b_0 #D2B0
            0x44324231: d_to_b_1 #D2B1
            0x44324232: d_to_b_2 #D2B2
            0x44324233: d_to_b_3 #D2B3
            0x67616D74: gamut #gamt
            0x6B545243: gray_trc #kTRC
            0x6758595A: green_matrix_column #gXYZ
            0x67545243: green_trc #gTRC
            0x6C756D69: luminance #lumi
            0x6D656173: measurement #meas
            0x77747074: media_white_point #wtpt
            0x6E636C32: named_color_2 #ncl2
            0x72657370: output_response #resp
            0x72696730: perceptual_rendering_intent_gamut #rig0
            0x70726530: preview_0 #pre0
            0x70726531: preview_1 #pre1
            0x70726532: preview_2 #pre2
            0x64657363: profile_description #desc
            0x70736571: profile_sequence #pseq
            0x70736964: profile_sequence_identifier #psid
            0x7258595A: red_matrix_column #rXYZ
            0x72545243: red_trc #rTRC
            0x72696732: saturation_rendering_intent_gamut #rig2
            0x74656368: technology #tech
            0x76756564: viewing_cond_desc #vued
            0x76696577: viewing_conditions #view
          tag_type_signatures:
            0x6368726D: chromaticity_type #chrm
            0x636C726F: colorant_order_type #clro
            0x636c7274: colorant_table_type #clrt
            0x63757276: curve_type #curv
            0x64617461: data_type #data
            0x6474696D: date_time_type #dtim
            0x6D667432: multi_function_table_with_two_byte_precision_type #mft2
            0x6D667431: multi_function_table_with_one_byte_precision_type #mft1
            0x6D414220: multi_function_a_to_b_table_type #mAB
            0x6D424120: multi_function_b_to_a_table_type #mBA
            0x6D656173: measurement_type #meas
            0x6D6C7563: multi_localized_unicode_type #mluc
            0x6D706574: multi_process_elements_type #mpet
            0x6E636C32: named_color_2_type #ncl2
            0x70617261: parametric_curve_type #para
            0x70736571: profile_sequence_desc_type #pseq
            0x70736964: profile_sequence_identifier_type #psid
            0x72637332: response_curve_set_16_type #rcs2
            0x73663332: s_15_fixed_16_array_type #sf32
            0x73696720: signature_type #sig
            0x74657874: text_type #text
            0x75663332: u_16_fixed_16_array_type #uf32
            0x75693136: u_int_16_array_type #ui16
            0x75693332: u_int_32_array_type #ui32
            0x75693634: u_int_64_array_type #ui64
            0x75693038: u_int_8_array_type #ui08
            0x76696577: viewing_conditions_type #view
            0x58595A20: xyz_type #XYZ
          multi_process_elements_types:
            0x6D666C74: curve_set_element_table_type #cvst
            0x63757266: one_dimensional_curves_type #curf
            0x70617266: formula_curve_segments_type #parf
            0x73616D66: sampled_curve_segment_type #samf
            0x6D617466: matrix_element_type #matf
            0x636C7574: clut_element_type #clut
            0x62414353: bacs_element_type #bACS
            0x65414353: eacs_element_type #eACS
  standard_illuminant_encoding:
    seq:
      - id: standard_illuminant_encoding
        type: u4
        enum: standard_illuminant_encodings
    enums:
      standard_illuminant_encodings:
        0x00000000: unknown
        0x00000001: d50
        0x00000002: d65
        0x00000003: d93
        0x00000004: f2
        0x00000005: d55
        0x00000006: a
        0x00000007: equi_power
        0x00000008: f8
`
  },
  {
    id: "ksy_ico",
    name: "Microsoft Windows icon file",
    category: "Images",
    metadata: {
      isGenerated: true,
      fileExtensions: ["ico"],
      description: "Microsoft Windows icon file",
      originalCategory: "image",
      filePath: "image/ico.ksy",
      signature: {"offset":0,"bytes":[0,0,1,0]},
      endian: "le"
    },
    content: `meta:
  id: ico
  title: Microsoft Windows icon file
  file-extension: ico
  xref:
    justsolve: ICO
    mime:
      - image/x-icon
      - image/vnd.microsoft.icon
    pronom: x-fmt/418
    wikidata: Q729366
  tags:
    - windows
  license: CC0-1.0
  endian: le
doc: |
  Microsoft Windows uses specific file format to store applications
  icons - ICO. This is a container that contains one or more image
  files (effectively, DIB parts of BMP files or full PNG files are
  contained inside).
doc-ref: https://learn.microsoft.com/en-us/previous-versions/ms997538(v=msdn.10)
seq:
  - id: magic
    contents: [0, 0, 1, 0]
  - id: num_images
    -orig-id: idCount
    type: u2
    doc: Number of images contained in this file
  - id: images
    -orig-id: idEntries
    type: icon_dir_entry
    repeat: expr
    repeat-expr: num_images
types:
  icon_dir_entry:
    -orig-id: ICONDIRENTRY
    seq:
      - id: width
        -orig-id: bWidth
        type: u1
        doc: Width of image, px
      - id: height
        -orig-id: bHeight
        type: u1
        doc: Height of image, px
      - id: num_colors
        -orig-id: bColorCount
        type: u1
        doc: |
          Number of colors in palette of the image or 0 if image has
          no palette (i.e. RGB, RGBA, etc)
      - id: reserved
        -orig-id: bReserved
        contents: [0]
      - id: num_planes
        -orig-id: wPlanes
        type: u2
        doc: Number of color planes
      - id: bpp
        -orig-id: wBitCount
        type: u2
        doc: Bits per pixel in the image
      - id: len_img
        -orig-id: dwBytesInRes
        type: u4
        doc: Size of the image data
      - id: ofs_img
        -orig-id: dwImageOffset
        type: u4
        doc: Absolute offset of the image data start in the file
    instances:
      img:
        pos: ofs_img
        size: len_img
        doc: |
          Raw image data. Use \`is_png\` to determine whether this is an
          embedded PNG file (true) or a DIB bitmap (false) and call a
          relevant parser, if needed to parse image data further.
      png_header:
        pos: ofs_img
        size: 8
        doc: |
          Pre-reads first 8 bytes of the image to determine if it's an
          embedded PNG file.
      is_png:
        value: png_header == [137, 80, 78, 71, 13, 10, 26, 10]
        doc: True if this image is in PNG format.
`
  },
  {
    id: "ksy_jpeg",
    name: "JPEG (Joint Photographic Experts Group) File Interchange Format",
    category: "Images",
    metadata: {
      isGenerated: true,
      fileExtensions: ["jpg","jpeg","jpe","jif","jfif","jfi"],
      description: "JPEG (Joint Photographic Experts Group) File Interchange Format",
      originalCategory: "image",
      filePath: "image/jpeg.ksy",
      endian: "be"
    },
    content: `meta:
  id: jpeg
  title: JPEG (Joint Photographic Experts Group) File Interchange Format
  file-extension:
    - jpg
    - jpeg
    - jpe
    - jif
    - jfif
    - jfi
  xref:
    ecma: TR/98
    forensicswiki: jpeg
    justsolve: JFIF
    loc: fdd000017
    mime: image/jpeg
    pronom:
      - fmt/42 # JFIF 1.00
      - fmt/43 # JFIF 1.01
      - fmt/44 # JFIF 1.02
    wikidata: Q26329975
  license: CC0-1.0
  imports:
    - exif
  endian: be
doc: |
  JPEG File Interchange Format, or JFIF, or, more colloquially known
  as just "JPEG" or "JPG", is a popular 2D bitmap image file format,
  offering lossy compression which works reasonably well with
  photographic images.

  Format is organized as a container format, serving multiple
  "segments", each starting with a magic and a marker. JFIF standard
  dictates order and mandatory apperance of segments:

  * SOI
  * APP0 (with JFIF magic)
  * APP0 (with JFXX magic, optional)
  * everything else
  * SOS
  * JPEG-compressed stream
  * EOI
seq:
  - id: segments
    type: segment
    repeat: eos
types:
  segment:
    seq:
      - id: magic
        contents: [0xff]
      - id: marker
        type: u1
        enum: marker_enum
      - id: length
        type: u2
        if: marker != marker_enum::soi and marker != marker_enum::eoi
      - id: data
        size: length - 2
        if: marker != marker_enum::soi and marker != marker_enum::eoi
        type:
          switch-on: marker
          cases:
            'marker_enum::app0': segment_app0
            'marker_enum::app1': segment_app1
            'marker_enum::sof0': segment_sof0
            'marker_enum::sos': segment_sos
      - id: image_data
        size-eos: true
        if: marker == marker_enum::sos
    enums:
      marker_enum:
        0x01: tem
        0xc0: sof0 # start of frame 0
        0xc1: sof1 # start of frame 1
        0xc2: sof2 # start of frame 2
        0xc3: sof3 # start of frame 3
        0xc4: dht # define Huffman table
        0xc5: sof5 # start of frame 5
        0xc6: sof6 # start of frame 6
        0xc7: sof7 # start of frame 7
        0xd8: soi # start of image
        0xd9: eoi # end of image
        0xda: sos # start of scan
        0xdb: dqt # define quantization table
        0xdc: dnl # define number of lines
        0xdd: dri # define restart interval
        0xde: dhp # define hierarchical progression
        0xe0: app0
        0xe1: app1
        0xe2: app2
        0xe3: app3
        0xe4: app4
        0xe5: app5
        0xe6: app6
        0xe7: app7
        0xe8: app8
        0xe9: app9
        0xea: app10
        0xeb: app11
        0xec: app12
        0xed: app13
        0xee: app14
        0xef: app15
        0xfe: com # comment
  segment_app0:
    seq:
      - id: magic
        type: str
        encoding: ASCII
        size: 5
      - id: version_major
        type: u1
      - id: version_minor
        type: u1
      - id: density_units
        type: u1
        enum: density_unit
      - id: density_x
        type: u2
        doc: Horizontal pixel density. Must not be zero.
      - id: density_y
        type: u2
        doc: Vertical pixel density. Must not be zero.
      - id: thumbnail_x
        type: u1
        doc: Horizontal pixel count of the following embedded RGB thumbnail. May be zero.
      - id: thumbnail_y
        type: u1
        doc: Vertical pixel count of the following embedded RGB thumbnail. May be zero.
      - id: thumbnail
        size: thumbnail_x * thumbnail_y * 3
        doc: Uncompressed 24 bit RGB (8 bits per color channel) raster thumbnail data in the order R0, G0, B0, ... Rn, Gn, Bn
    enums:
      density_unit:
        0: no_units
        1: pixels_per_inch
        2: pixels_per_cm
  segment_app1:
    seq:
      - id: magic
        type: strz
        encoding: ASCII
      - id: body
        type:
          switch-on: magic
          cases:
            '"Exif"': exif_in_jpeg
  segment_sof0:
    seq:
      - id: bits_per_sample
        type: u1
      - id: image_height
        type: u2
      - id: image_width
        type: u2
      - id: num_components
        type: u1
      - id: components
        type: component
        repeat: expr
        repeat-expr: num_components
    types:
      component:
        seq:
          - id: id
            type: u1
            enum: component_id
            doc: Component selector
          - id: sampling_factors
            type: u1
          - id: quantization_table_id
            type: u1
        instances:
          sampling_x:
            value: (sampling_factors & 0xf0) >> 4
          sampling_y:
            value: sampling_factors & 0xf
  segment_sos:
    seq:
      - id: num_components
        type: u1
        doc: Number of components in scan
      - id: components
        type: component
        repeat: expr
        repeat-expr: num_components
        doc: Scan components specification
      - id: start_spectral_selection
        type: u1
        doc: Start of spectral selection or predictor selection
      - id: end_spectral
        type: u1
        doc: End of spectral selection
      - id: appr_bit_pos
        type: u1
        doc: Successive approximation bit position high + Successive approximation bit position low or point transform
    types:
      component:
        seq:
          - id: id
            type: u1
            enum: component_id
            doc: Scan component selector
          - id: huffman_table
            type: u1
  # Extra wrapper for EXIF, as there is extra 0 byte that needs to be
  # parsed. The actual EXIF specification is defined in external .ksy
  # file, as it is shared with other formats (TIFF, PNG, XCF, etc).
  exif_in_jpeg:
    seq:
      - id: extra_zero
        contents: [0]
      - id: data
        size-eos: true
        type: exif
enums:
  component_id:
    1: y
    2: cb
    3: cr
    4: i
    5: q
`
  },
  {
    id: "ksy_nitf",
    name: "National Imagery Transmission Format",
    category: "Images",
    metadata: {
      isGenerated: true,
      fileExtensions: ["ntf","nitf","ntf.r0","ntf.r1","ntf.r2","ntf.r3","ntf.r4","ntf.r5"],
      description: "National Imagery Transmission Format",
      originalCategory: "image",
      filePath: "image/nitf.ksy",
      endian: "be"
    },
    content: `meta:
  id: nitf
  title: National Imagery Transmission Format
  file-extension:
    - ntf
    - nitf
    - ntf.r0
    - ntf.r1
    - ntf.r2
    - ntf.r3
    - ntf.r4
    - ntf.r5
  xref:
    justsolve: National_Imagery_Transmission_Format
    pronom: fmt/366 # NITF 2.1
    wikidata: Q1961044
  license: MIT
  ks-version: 0.8
  encoding: UTF-8
  endian: be
doc: |
  The NITF (National Image Transition Format) format is a file format developed by the U.S. Government for
  storing imagery, e.g. from satellites.

  According to the [foreword of the specification](https://web.archive.org/web/20181105050336/https://www.gwg.nga.mil/ntb/baseline/docs/2500c/2500C.pdf):
  > The National Imagery Transmission Format Standard (NITFS) is the suite of standards for formatting digital
  > imagery and imagery-related products and exchanging them among members of the Intelligence Community (IC) as
  > defined by the Executive Order 12333, and other United States Government departments and agencies."

  This implementation is set to version format (\`file_version\`) of 02.10 and \`standard_type\` of \`BF01\`.
  It was implemented by [River Loop Security](https://www.riverloopsecurity.com/).
doc-ref: https://web.archive.org/web/20181105050336/https://www.gwg.nga.mil/ntb/baseline/docs/2500c/2500C.pdf
seq:
  - id: header
    type: header
  - id: image_segments
    type: image_segment(_index)
    repeat: expr
    repeat-expr: header.num_image_segments.to_i
  - id: graphics_segments
    type: graphics_segment(_index)
    repeat: expr
    repeat-expr: header.num_graphics_segments.to_i
  - id: text_segments
    type: text_segment(_index)
    repeat: expr
    repeat-expr: header.num_text_files.to_i
  - id: data_extension_segments
    type: data_extension_segment(_index)
    repeat: expr
    repeat-expr: header.num_data_extension.to_i
  - id: reserved_extension_segments
    type: reserved_extension_segment(_index)
    repeat: expr
    repeat-expr: header.num_reserved_extension.to_i
types:
  header:
    seq:
      - id: file_profile_name
        -orig-id: fhdr
        contents: 'NITF'
      - id: file_version
        -orig-id: fver
        contents: '02.10'
      - id: complexity_level
        -orig-id: clevel
        size: 2
      - id: standard_type
        -orig-id: stype
        contents: 'BF01'
        doc: 'Value of BF01 indicates the file is formatted using ISO/IEC IS 12087-5.'
      - id: originating_station_id
        -orig-id: ostaid
        type: str
        size: 10
      - id: file_date_time
        -orig-id: fdt
        type: date_time
      - id: file_title
        -orig-id: ftitle
        type: str
        size: 80
      - id: file_security
        -orig-id: fclasnfo
        type: clasnfo
      - id: file_copy_number
        -orig-id: fscop
        type: str
        size: 5
      - id: file_num_of_copys
        -orig-id: fscpys
        type: str
        size: 5
      - id: encryption
        -orig-id: encryp
        type: encrypt
      - id: file_bg_color
        -orig-id: fbkgc
        size: 3
      - id: originator_name
        -orig-id: oname
        type: str
        size: 24
      - id: originator_phone
        -orig-id: ophone
        type: str
        size: 18
      - id: file_length
        -orig-id: fl
        type: str
        size: 12
      - id: file_header_length
        -orig-id: hl
        type: str
        size: 6
      - id: num_image_segments
        -orig-id: numi
        type: str
        size: 3
      - id: linfo
        type: length_image_info
        repeat: expr
        repeat-expr: num_image_segments.to_i
      - id: num_graphics_segments
        -orig-id: nums
        type: str
        size: 3
      - id: lnnfo
        type: length_graphic_info
        repeat: expr
        repeat-expr: num_graphics_segments.to_i
      - id: reserved_numx
        -orig-id: numx
        type: str
        size: 3
      - id: num_text_files
        -orig-id: numt
        type: str
        size: 3
      - id: ltnfo
        type: length_text_info
        repeat: expr
        repeat-expr: num_text_files.to_i
      - id: num_data_extension
        -orig-id: numdes
        type: str
        size: 3
      - id: ldnfo
        type: length_data_info
        repeat: expr
        repeat-expr: num_data_extension.to_i
      - id: num_reserved_extension
        -orig-id: numres
        type: str
        size: 3
      - id: lrnfo
        type: length_reserved_info
        repeat: expr
        repeat-expr: num_reserved_extension.to_i
      - id: user_defined_header
        type: tre_header
      - id: extended_header
        type: tre_header
  date_time:
    seq:
      - type: str
        size: 14
        doc: 'UTC time of image acquisition in the format CCYYMMDDhhmmss: CC century, YY last two digits of the year, MM month, DD day, hh hour, mm minute, ss second'
  encrypt:
    seq:
      - type: str
        size: 1
  clasnfo:
    seq:
      - id: security_class
        -orig-id: sclas
        type: str
        size: 1
      - id: security_system
        -orig-id: sclsy
        type: str
        size: 2
      - id: codewords
        -orig-id: scode
        type: str
        size: 11
      - id: control_and_handling
        -orig-id: sctlh
        type: str
        size: 2
      - id: releaseability
        -orig-id: srel
        type: str
        size: 20
      - id: declass_type
        -orig-id: sdctp
        type: str
        size: 2
      - id: declass_date
        -orig-id: sdcdt
        type: str
        size: 8
      - id: declass_exemption
        -orig-id: sdcxm
        type: str
        size: 4
      - id: downgrade
        -orig-id: sdg
        type: str
        size: 1
      - id: downgrade_date
        -orig-id: sdgdt
        type: str
        size: 8
      - id: class_text
        -orig-id: scltx
        type: str
        size: 43
      - id: class_authority_type
        -orig-id: scatp
        type: str
        size: 1
      - id: class_authority
        -orig-id: scaut
        type: str
        size: 40
      - id: class_reason
        -orig-id: scrsn
        type: str
        size: 1
      - id: source_date
        -orig-id: ssrdt
        type: str
        size: 8
      - id: control_number
        -orig-id: sctln
        type: str
        size: 15
  length_image_info:
    seq:
      - id: length_image_subheader
        -orig-id: lish
        type: str
        size: 6
      - id: length_image_segment
        -orig-id: li
        type: str
        size: 10
  length_graphic_info:
    seq:
      - id: length_graphic_subheader
        -orig-id: lssh
        type: str
        size: 4
      - id: length_graphic_segment
        -orig-id: ls
        type: str
        size: 6
  length_text_info:
    seq:
      - id: length_text_subheader
        -orig-id: ltsh
        type: str
        size: 4
      - id: length_text_segment
        -orig-id: lt
        type: str
        size: 5
  length_data_info:
    seq:
      - id: length_data_extension_subheader
        -orig-id: ldsh
        type: str
        size: 4
      - id: length_data_extension_segment
        -orig-id: ld
        type: str
        size: 9
  length_reserved_info:
    seq:
      - id: length_reserved_extension_subheader
        -orig-id: lresh
        type: str
        size: 4
      - id: length_reserved_extension_segment
        -orig-id: lre
        type: str
        size: 7
  image_segment:
    params:
      - id: idx
        type: u2
    seq:
      - id: image_sub_header
        type: image_sub_header
      - id: image_data_mask
        type: image_data_mask
        if: has_mask
      - id: image_data_field
        if: has_mask
        size: _parent.header.linfo[idx].length_image_segment.to_i - image_data_mask.total_size
    instances:
      has_mask:
        value: image_sub_header.img_compression.substring(0, 2) == 'MM'
  image_sub_header:
    seq:
      - id: file_part_type
        -orig-id: im
        contents: 'IM'
      - id: image_id_1
        -orig-id: iid1
        type: str
        size: 10
      - id: image_date_time
        -orig-id: idatim
        type: date_time
      - id: target_id
        -orig-id: tgtid
        type: str
        size: 17
      - id: image_id_2
        -orig-id: iid2
        type: str
        size: 80
      - id: image_security_classification
        -orig-id: iclasnfo
        type: clasnfo
      - id: encryption
        -orig-id: encryp
        type: encrypt
      - id: image_source
        -orig-id: isorce
        type: str
        size: 42
      - id: num_sig_rows
        -orig-id: nrows
        type: str
        size: 8
        doc: 'Total number of rows of significant pixels in the image; only rows indexed 0 to (NROWS - 1) of the image contain significant data.'
      - id: num_sig_cols
        -orig-id: ncols
        type: str
        size: 8
      - id: pixel_value_type
        -orig-id: pvtype
        type: str
        size: 3
      - id: image_representation
        -orig-id: irep
        type: str
        size: 8
        doc: 'MONO, RGB, RGB/LUT, MULTI, NODISPLY, NVECTOR, POLAR, VPH, YCbCr601'
      - id: image_category
        -orig-id: icat
        type: str
        size: 8
        doc: 'VIS, SL, TI, FL, RD, EO, OP, HR, HS,CP, BP, SAR, SARIQ, IR, MAP, MS, FP, MRI, XRAY, CAT, VD, PAT, LEG, DTEM, MATR, LOCG, BARO, CURRENT, DEPTH, WIND'
      - id: actual_bits_per_pixel_per_band
        -orig-id: abpp
        type: str
        size: 2
      - id: pixel_justification
        -orig-id: pjust
        type: str
        size: 1
      - id: image_coordinate_rep
        -orig-id: icords
        type: str
        size: 1
      - id: image_geo_loc
        -orig-id: igeolo
        type: str
        size: 60
      - id: num_img_comments
        -orig-id: nicom
        type: str
        size: 1
      - id: img_comments
        -orig-id: icom
        type: image_comment
        repeat: expr
        repeat-expr: num_img_comments.to_i
      - id: img_compression
        -orig-id: ic
        type: str
        size: 2
      - id: compression_rate_code
        -orig-id: comrat
        type: str
        size: 4
      - id: num_bands
        -orig-id: nbands
        type: str
        size: 1
      - id: num_multispectral_bands
        -orig-id: xbands
        type: str
        size: 5
        if: num_bands.to_i == 0
      - id: bands
        type: band_info
        repeat: expr
        repeat-expr: "num_bands.to_i != 0 ? num_bands.to_i : num_multispectral_bands.to_i"
      - id: img_sync_code
        -orig-id: isync
        type: str
        size: 1
        doc: 'Reserved for future use.'
      - id: img_mode
        -orig-id: imode
        type: str
        size: 1
        doc: 'B = Band Interleaved by Block, P = Band Interleaved by Pixel, R = Band Interleaved by Row, S = Band Sequential'
      - id: num_blocks_per_row
        -orig-id: nbpr
        type: str
        size: 4
      - id: num_blocks_per_col
        -orig-id: nbpc
        type: str
        size: 4
      - id: num_pixels_per_block_horz
        -orig-id: nppbh
        type: str
        size: 4
      - id: num_pixels_per_block_vert
        -orig-id: nppbv
        type: str
        size: 4
      - id: num_pixels_per_band
        -orig-id: nbpp
        type: str
        size: 2
      - id: img_display_level
        -orig-id: idlvl
        type: str
        size: 3
      - id: attachment_level
        -orig-id: ialvl
        type: str
        size: 3
      - id: img_location
        -orig-id: iloc
        type: str
        size: 10
      - id: img_magnification
        -orig-id: imag
        type: str
        size: 4
      - id: user_def_img_data_len
        -orig-id: udidl
        type: str
        size: 5
      - id: user_def_overflow
        -orig-id: udofl
        type: str
        size: 3
        if: user_def_img_data_len.to_i != 0
      - id: user_def_img_data
        -orig-id: udid
        type: u1
        if: user_def_img_data_len.to_i > 2
        repeat: expr
        repeat-expr: user_def_img_data_len.to_i - 3
      - id: image_extended_sub_header
        type: tre_header
  band_info:
    seq:
      - id: representation
        -orig-id: irepband
        type: str
        size: 2
        doc: 'Indicates processing required to display the nth band of image w.r.t. the general image type recorded by IREP field'
      - id: subcategory
        -orig-id: isubcat
        type: str
        size: 6
      - id: img_filter_condition
        -orig-id: ifc
        contents: 'N'
      - id: img_filter_code
        -orig-id: imflt
        type: str
        size: 3
        doc: 'Reserved'
      - id: num_luts
        -orig-id: nluts
        type: str
        size: 1
      - id: num_lut_entries
        -orig-id: nelut
        type: str
        size: 5
        if: num_luts.to_i != 0
        doc: 'Number of entries in each of the LUTs for the nth image band'
      - id: luts
        -orig-id: lutd
        size: num_lut_entries.to_i
        repeat: expr
        repeat-expr: num_luts.to_i
  image_comment:
    seq:
      - type: str
        size: 80
  image_data_mask:
    instances:
      tpxcd_size:
        value: "(tpxcdlnth % 8 == 0 ? tpxcdlnth : tpxcdlnth + (8 - tpxcdlnth % 8)) / 8"
      bmrtmr_count:
        value: >
          _parent.image_sub_header.num_blocks_per_row.to_i * _parent.image_sub_header.num_blocks_per_col.to_i *
          (_parent.image_sub_header.img_mode != 'S' ?
            1 :
            (_parent.image_sub_header.num_bands.to_i != 0 ?
              _parent.image_sub_header.num_bands.to_i :
              _parent.image_sub_header.num_multispectral_bands.to_i))
      has_bmr:
        value: bmrlnth != 0
      has_tmr:
        value: tmrlnth != 0
      bmrbnd_size:
        value: "has_bmr ? bmrtmr_count * 4 : 0"
      tmrbnd_size:
        value: "has_tmr ? bmrtmr_count * 4 : 0"
      total_size:
        value: 4 + 2 + 2 + 2 + tpxcd_size + bmrbnd_size + tmrbnd_size
    seq:
      - id: blocked_img_data_offset
        -orig-id: imdatoff
        type: u4
      - id: bmrlnth
        type: u2
        doc: 'Block Mask Record Length'
      - id: tmrlnth
        type: u2
        doc: 'Pad Pixel Mask Record Length'
      - id: tpxcdlnth
        type: u2
        doc: 'Pad Output Pixel Code Length'
      - id: tpxcd
        size: tpxcd_size
        doc: 'Pad Output Pixel Code'
      - id: bmrbnd
        type: u4
        repeat: expr
        repeat-expr: bmrtmr_count
        if: has_bmr
        doc: 'Block n, Band m Offset'
      - id: tmrbnd
        type: u4
        repeat: expr
        repeat-expr: bmrtmr_count
        if: has_tmr
        doc: 'Pad Pixel n, Band m'
  graphics_segment:
    params:
      - id: idx
        type: u2
    seq:
      - id: graphic_sub_header
        type: graphic_sub_header
      - id: graphic_data_field
        size: _parent.header.lnnfo[idx].length_graphic_segment.to_i
  graphic_sub_header:
    seq:
      - id: file_part_type_sy
        -orig-id: sy
        contents: 'SY'
      - id: graphic_id
        -orig-id: sid
        type: str
        size: 10
      - id: graphic_name
        -orig-id: sname
        type: str
        size: 20
      - id: graphic_classification
        -orig-id: sclasnfo
        type: clasnfo
      - id: encryption
        -orig-id: encryp
        type: encrypt
      - id: graphic_type
        -orig-id: sfmt
        contents: 'C'
      - id: reserved1
        -orig-id: sstruct
        type: str
        size: 13
        doc: 'Reserved'
      - id: graphic_display_level
        -orig-id: sdlvl
        type: str
        size: 3
      - id: graphic_attachment_level
        -orig-id: salvl
        type: str
        size: 3
      - id: graphic_location
        -orig-id: sloc
        type: str
        size: 10
      - id: first_graphic_bound_loc
        -orig-id: sbnd1
        type: str
        size: 10
      - id: graphic_color
        -orig-id: scolor
        type: str
        size: 1
      - id: second_graphic_bound_loc
        -orig-id: sbnd2
        type: str
        size: 10
      - id: reserved2
        -orig-id: sres2
        type: str
        size: 2
        doc: 'Reserved'
      - id: graphics_extended_sub_header
        type: tre_header
  tre_header:
    seq:
      - id: header_data_length
        -orig-id: hdl
        type: str
        size: 5
      - id: header_overflow
        -orig-id: ofl
        type: str
        size: 3
        if: header_data_length.to_i != 0
      - id: header_data
        type: u1
        if: header_data_length.to_i > 2
        repeat: expr
        repeat-expr: header_data_length.to_i - 3
  text_segment:
    params:
      - id: idx
        type: u2
    seq:
      - id: text_sub_header
        size: 1
      - id: text_data_field
        size: _parent.header.ltnfo[idx].length_text_segment.to_i
  text_sub_header:
    seq:
      - id: text_date_time
        -orig-id: txtdt
        type: str
        size: 14
      - id: text_title
        -orig-id: txtitl
        type: str
        size: 80
      - id: text_security_class
        -orig-id: tclasnfo
        type: clasnfo
      - id: encryp
        type: encrypt
      - id: text_format
        -orig-id: txtfmt
        type: str
        size: 3
        doc: 'MTF (USMTF see MIL-STD-6040), STA (indicates BCS), UT1 (indicates ECS), U8S'
      - id: text_extended_sub_header
        type: tre_header
  data_extension_segment:
    params:
      - id: idx
        type: u2
    seq:
      - id: data_sub_header
        type: data_sub_header
        size: _parent.header.ldnfo[idx].length_data_extension_subheader.to_i
      - id: data_data_field
        size: _parent.header.ldnfo[idx].length_data_extension_segment.to_i
  data_sub_header_base:
    seq:
      - id: file_part_type_de
        -orig-id: de
        contents: 'DE'
        doc: 'File Part Type desigantor for Data Extension'
      - id: desid
        type: str
        size: 25
      - id: data_definition_version
        -orig-id: desver
        type: str
        size: 2
      - id: declasnfo
        type: clasnfo
  data_sub_header:
    instances:
      tre_ofl:
        value: des_base.desid == 'TRE_OVERFLOW'
    seq:
      - id: des_base
        type: data_sub_header_base
      - id: overflowed_header_type
        -orig-id: desoflw
        type: str
        size: 6
        if: tre_ofl
      - id: data_item_overflowed
        -orig-id: desitem
        type: str
        size: 3
        if: tre_ofl
      - id: des_defined_subheader_fields_len
        -orig-id: desshl
        type: str
        size: 4
      - id: desshf
        type: str
        size: des_defined_subheader_fields_len.to_i
      - id: des_defined_data_field
        -orig-id: desdata
        type: str
        size-eos: true
  data_sub_header_tre:
    seq:
      - id: des_base
        type: data_sub_header_base
      - id: overflowed_header_type
        -orig-id: desoflw
        type: str
        size: 6
        if: des_base.desid == 'TRE_OVERFLOW'
      - id: data_item_overflowed
        -orig-id: desitem
        type: str
        size: 3
        if: des_base.desid == 'TRE_OVERFLOW'
      - id: des_defined_subheader_fields_len
        -orig-id: desshl
        type: str
        size: 4
      - id: des_defined_data_field
        -orig-id: desdata
        type: str
        size: des_defined_subheader_fields_len.to_i
  data_sub_header_streaming:
    doc: 'Streaming file Header Data Extension Segment Subheader'
    seq:
      - id: des_base
        type: data_sub_header_base
      - id: des_defined_subheader_fields_len
        -orig-id: desshl
        type: str
        size: 4
      - id: sfh_l1
        type: str
        size: 7
        doc: 'SFH Length 1: number of bytes in sfh_dr field'
      - id: sfh_delim1
        type: u4
        doc: 'Shall contain the value 0x0A6E1D97.'
      - id: sfh_dr
        type: u1
        repeat: expr
        repeat-expr: sfh_l1.to_i
      - id: sfh_delim2
        type: u4
        doc: 'Shall contain the value 0x0ECA14BF.'
      - id: sfh_l2
        type: str
        size: 7
        doc: 'A repeat of sfh_l1.'
  reserved_extension_segment:
    params:
      - id: idx
        type: u2
    seq:
      - id: reserved_sub_header
        type: reserved_sub_header
        size: _parent.header.lrnfo[idx].length_reserved_extension_subheader.to_i
      - id: reserved_data_field
        size: _parent.header.lrnfo[idx].length_reserved_extension_segment.to_i
  reserved_sub_header:
    seq:
      - id: file_part_type_re
        -orig-id: re
        contents: 'RE'
      - id: res_type_id
        -orig-id: resid
        type: str
        size: 25
      - id: res_version
        -orig-id: resver
        type: str
        size: 2
      - id: reclasnfo
        type: clasnfo
      - id: res_user_defined_subheader_length
        -orig-id: resshl
        type: str
        size: 4
      - id: res_user_defined_subheader_fields
        -orig-id: resshf
        type: str
        size: res_user_defined_subheader_length.to_i
      - id: res_user_defined_data
        -orig-id: resdata
        type: str
        size-eos: true
  tre:
    seq:
      - id: extension_type_id
        -orig-id: etag
        type: str
        size: 6
        doc: 'RETAG or CETAG'
      - id: edata_length
        -orig-id: el
        type: str
        size: 5
        doc: 'REL or CEL'
      - id: edata
        type: str
        size: edata_length.to_i
        doc: 'REDATA or CEDATA'
`
  },
  {
    id: "ksy_pcx",
    name: "Pcx",
    category: "Images",
    metadata: {
      isGenerated: true,
      fileExtensions: ["pcx"],
      description: "",
      originalCategory: "image",
      filePath: "image/pcx.ksy",
      endian: "le"
    },
    content: `meta:
  id: pcx
  file-extension: pcx
  xref:
    justsolve: PCX
    mime:
      - image/vnd.zbrush.pcx
      - image/x-pcx
    pronom:
      # see \`/enums/versions\` map
      - fmt/86 # PCX 0
      - fmt/87 # PCX 2
      - fmt/88 # PCX 3
      - fmt/89 # PCX 4
      - fmt/90 # PCX 5
    wikidata: Q535473
  license: CC0-1.0
  endian: le
doc: |
  PCX is a bitmap image format originally used by PC Paintbrush from
  ZSoft Corporation. Originally, it was a relatively simple 128-byte
  header + uncompressed bitmap format, but latest versions introduced
  more complicated palette support and RLE compression.

  There's an option to encode 32-bit or 16-bit RGBA pixels, and thus
  it can potentially include transparency. Theoretically, it's
  possible to encode resolution or pixel density in the some of the
  header fields too, but in reality there's no uniform standard for
  these, so different implementations treat these differently.

  PCX format was never made a formal standard. "ZSoft Corporation
  Technical Reference Manual" for "Image File (.PCX) Format", last
  updated in 1991, is likely the closest authoritative source.
doc-ref: https://web.archive.org/web/20100206055706/http://www.qzx.com/pc-gpe/pcx.txt
seq:
  - id: hdr
    type: header
    size: 128
instances:
  palette_256:
    pos: _io.size - 769
    type: t_palette_256
    if: hdr.version == versions::v3_0 and hdr.bits_per_pixel == 8 and hdr.num_planes == 1
    doc-ref: https://web.archive.org/web/20100206055706/http://www.qzx.com/pc-gpe/pcx.txt - "VGA 256 Color Palette Information"
types:
  header:
    doc-ref: https://web.archive.org/web/20100206055706/http://www.qzx.com/pc-gpe/pcx.txt - "ZSoft .PCX FILE HEADER FORMAT"
    seq:
      - id: magic
        contents: [0x0a]
        doc: |
          Technically, this field was supposed to be "manufacturer"
          mark to distinguish between various software vendors, and
          0x0a was supposed to mean "ZSoft", but everyone else ended
          up writing a 0x0a into this field, so that's what majority
          of modern software expects to have in this attribute.
      - id: version
        type: u1
        enum: versions
      - id: encoding
        type: u1
        enum: encodings
      - id: bits_per_pixel
        type: u1
      - id: img_x_min
        type: u2
      - id: img_y_min
        type: u2
      - id: img_x_max
        type: u2
      - id: img_y_max
        type: u2
      - id: hdpi
        type: u2
      - id: vdpi
        type: u2
      - id: palette_16
        size: 48
      - id: reserved
        contents: [0]
      - id: num_planes
        type: u1
      - id: bytes_per_line
        type: u2
      - id: palette_info
        type: u2
      - id: h_screen_size
        type: u2
      - id: v_screen_size
        type: u2
  t_palette_256:
    seq:
      - id: magic
        contents: [0x0c]
      - id: colors
        type: rgb
        repeat: expr
        repeat-expr: 256
  rgb:
    seq:
      - id: r
        type: u1
      - id: g
        type: u1
      - id: b
        type: u1
enums:
  versions:
    0: v2_5
    2: v2_8_with_palette
    3: v2_8_without_palette
    4: paintbrush_for_windows
    5: v3_0
  encodings:
    1: rle
`
  },
  {
    id: "ksy_pcx_dcx",
    name: "Pcx Dcx",
    category: "Images",
    metadata: {
      isGenerated: true,
      fileExtensions: ["dcx"],
      description: "",
      originalCategory: "image",
      filePath: "image/pcx_dcx.ksy",
      signature: {"offset":0,"bytes":[177,104,222,58]},
      endian: "le"
    },
    content: `meta:
  id: pcx_dcx
  file-extension: dcx
  xref:
    justsolve: DCX
    mime: image/x-dcx
    pronom: x-fmt/348
    wikidata: Q28205890
  license: CC0-1.0
  imports:
    - pcx
  endian: le
doc: |
  DCX is a simple extension of PCX image format allowing to bundle
  many PCX images (typically, pages of a document) in one file. It saw
  some limited use in DOS-era fax software, but was largely
  superseded with multi-page TIFFs and PDFs since then.
seq:
  - id: magic
    contents: [0xb1, 0x68, 0xde, 0x3a]
  - id: files
    type: pcx_offset
    repeat: until
    repeat-until: _.ofs_body == 0
types:
  pcx_offset:
    seq:
      - id: ofs_body
        type: u4
    instances:
      body:
        pos: ofs_body
        type: pcx
        if: ofs_body != 0
`
  },
  {
    id: "ksy_pif",
    name: "Portable Image Format",
    category: "Images",
    metadata: {
      isGenerated: true,
      fileExtensions: ["pif"],
      description: "Portable Image Format",
      originalCategory: "image",
      filePath: "image/pif.ksy",
      endian: "le"
    },
    content: `meta:
  id: pif
  title: Portable Image Format
  file-extension: pif
  xref:
    justsolve: PIF_(Portable_Image_Format)
  license: LGPL-2.1
  ks-version: 0.9
  endian: le
  bit-endian: le
doc: |
  The Portable Image Format (PIF) is a basic, bitmap-like image format with the
  focus on ease of use (implementation) and small size for embedded
  applications.

  See <https://github.com/gfcwfzkm/PIF-Image-Format> for more info.
doc-ref:
  - https://github.com/gfcwfzkm/PIF-Image-Format/blob/4ec261b/Specification/PIF%20Format%20Specification.pdf
  - https://github.com/gfcwfzkm/PIF-Image-Format/blob/4ec261b/C%20Library/pifdec.c#L300
seq:
  - id: file_header
    type: pif_header
  - id: info_header
    type: information_header
  - id: color_table
    size: info_header.len_color_table
    type: color_table_data
    if: info_header.uses_indexed_mode
instances:
  image_data:
    pos: file_header.ofs_image_data
    size: info_header.len_image_data
types:
  pif_header:
    seq:
      - id: magic
        contents: ["PIF", 0x00]
      - id: len_file
        type: u4
        valid:
          min: ofs_image_data_min
      - id: ofs_image_data
        type: u4
        valid:
          min: ofs_image_data_min
          max: len_file
    instances:
      ofs_image_data_min:
        value: _root.file_header._sizeof + _root.info_header._sizeof
  information_header:
    seq:
      - id: image_type
        type: u2
        enum: image_type
        valid:
          any-of:
            - image_type::rgb888
            - image_type::rgb565
            - image_type::rgb332
            - image_type::rgb16c
            - image_type::black_white
            - image_type::indexed_rgb888
            - image_type::indexed_rgb565
            - image_type::indexed_rgb332
      - id: bits_per_pixel
        type: u2
        valid:
          expr: |
            image_type == image_type::rgb888 ? _ == 24 :
            image_type == image_type::rgb565 ? _ == 16 :
            image_type == image_type::rgb332 ? _ == 8 :
            image_type == image_type::rgb16c ? _ == 4 :
            image_type == image_type::black_white ? _ == 1 :
            uses_indexed_mode ? _ <= 8 :
            true
          # ^ shouldn't get there (all cases have been covered before)
        doc: |
          See <https://github.com/gfcwfzkm/PIF-Image-Format/blob/4ec261b/Specification/PIF%20Format%20Specification.pdf>:

          > Bits per Pixel: Bit size that each Pixel occupies. Bit size for an
          > Indexed Image cannot go beyond 8 bits.
      - id: width
        type: u2
      - id: height
        type: u2
      - id: len_image_data
        type: u4
        valid:
          max: _root.file_header.len_file - _root.file_header.ofs_image_data
      - id: len_color_table
        type: u2
        valid:
          min: 'uses_indexed_mode ? len_color_table_entry * 1 : 0'
          max: |
            uses_indexed_mode ? (
              len_color_table_max < len_color_table_full
                ? len_color_table_max
                : len_color_table_full
            ) : 0
        doc: |
          See <https://github.com/gfcwfzkm/PIF-Image-Format/blob/4ec261b/Specification/PIF%20Format%20Specification.pdf>:

          > Color Table Size: (...), only used in Indexed mode, otherwise zero.
          ---
          > **Note**: The presence of the Color Table is mandatory when Bits per
          > Pixel <= 8, unless Image Type states RGB332, RGB16C or B/W
          ---
          > **Color Table** (semi-optional)
          >
          > (...) The amount of Colors has to be same or less than [Bits per
          > Pixel] allow, otherwise the image is invalid.
      - id: compression
        type: u2
        enum: compression_type
        valid:
          any-of:
            - compression_type::none
            - compression_type::rle
    instances:
      len_color_table_entry:
        value: |
          image_type == image_type::indexed_rgb888 ? 3 :
          image_type == image_type::indexed_rgb565 ? 2 :
          image_type == image_type::indexed_rgb332 ? 1 :
          0
      len_color_table_full:
        value: len_color_table_entry * (1 << bits_per_pixel)
      len_color_table_max:
        value: _root.file_header.ofs_image_data - _root.file_header.ofs_image_data_min
      uses_indexed_mode:
        value: len_color_table_entry != 0
  color_table_data:
    seq:
      - id: entries
        type:
          switch-on: _root.info_header.image_type
          cases:
            image_type::indexed_rgb888: b24
            image_type::indexed_rgb565: b16
            image_type::indexed_rgb332: b8
        repeat: eos
enums:
  image_type:
    0x433c: rgb888
    0xe5c5: rgb565
    0x1e53: rgb332
    0xb895:
      id: rgb16c
      doc: |
        Formula to convert the 4-bit color value in RGB16C mode to RGB values
        (each in the range from 0 to 255):

        \`\`\`
        red   = 170 * ((color_value & 0b0100) >> 2) + 85 * ((color_value & 0b1000) >> 3)
        green = 170 * ((color_value & 0b0010) >> 1) + 85 * ((color_value & 0b1000) >> 3)
        blue  = 170 * ((color_value & 0b0001) >> 0) + 85 * ((color_value & 0b1000) >> 3)
        \`\`\`

        See also <https://en.wikipedia.org/wiki/Color_Graphics_Adapter#Color_palette>
    0x7daa:
      id: black_white
      doc: '0: black, 1: white'
      doc-ref: https://github.com/gfcwfzkm/PIF-Image-Format/blob/4ec261b/C%20Library/pifdec.c#L233
    0x4952: indexed_rgb888
    0x4947: indexed_rgb565
    0x4942: indexed_rgb332
  compression_type:
    0x0000: none
    0x7dde: rle
`
  },
  {
    id: "ksy_png",
    name: "PNG (Portable Network Graphics) file",
    category: "Images",
    metadata: {
      isGenerated: true,
      fileExtensions: ["png","apng"],
      description: "PNG (Portable Network Graphics) file",
      originalCategory: "image",
      filePath: "image/png.ksy",
      signature: {"offset":0,"bytes":[137,80,78,71,13,10,26,10]},
      endian: "be"
    },
    content: `meta:
  id: png
  title: PNG (Portable Network Graphics) file
  file-extension:
    - png
    - apng
  xref:
    forensicswiki: portable_network_graphics_(png)
    iso: 15948:2004
    justsolve:
      - PNG
      - APNG
    loc: fdd000153
    mime:
      - image/png
      - image/apng
      - image/vnd.mozilla.apng
    pronom:
      - fmt/11 # PNG 1.0
      - fmt/12 # PNG 1.1
      - fmt/13 # PNG 1.2
      - fmt/935 # APNG
    rfc: 2083
    wikidata:
      - Q178051 # PNG
      - Q433224 # APNG
  license: CC0-1.0
  ks-version: 0.9
  endian: be
doc: |
  Test files for APNG can be found at the following locations:

    * <https://philip.html5.org/tests/apng/tests.html>
    * <http://littlesvr.ca/apng/>
seq:
  # https://www.w3.org/TR/png/#5PNG-file-signature
  - id: magic
    contents: [137, 80, 78, 71, 13, 10, 26, 10]
  # https://www.w3.org/TR/png/#11IHDR
  # Always appears first, stores values referenced by other chunks
  - id: ihdr_len
    type: u4
    valid: 13
  - id: ihdr_type
    contents: "IHDR"
  - id: ihdr
    type: ihdr_chunk
  - id: ihdr_crc
    size: 4
  # The rest of the chunks
  - id: chunks
    type: chunk
    repeat: until
    repeat-until: _.type == "IEND" or _io.eof
types:
  chunk:
    seq:
      - id: len
        type: u4
      - id: type
        type: str
        size: 4
        encoding: UTF-8
      - id: body
        size: len
        type:
          switch-on: type
          cases:
            # Critical chunks
            # '"IHDR"': ihdr_chunk
            '"PLTE"': plte_chunk
            # IDAT = raw
            # IEND = empty, thus raw

            # Ancillary chunks
            '"cHRM"': chrm_chunk
            '"gAMA"': gama_chunk
            # iCCP
            # sBIT
            '"sRGB"': srgb_chunk
            '"bKGD"': bkgd_chunk
            # hIST
            # tRNS
            '"pHYs"': phys_chunk
            # sPLT
            '"tIME"': time_chunk
            '"iTXt"': international_text_chunk
            '"tEXt"': text_chunk
            '"zTXt"': compressed_text_chunk

            # animated PNG chunks
            '"acTL"': animation_control_chunk
            '"fcTL"': frame_control_chunk
            '"fdAT"': frame_data_chunk
      - id: crc
        size: 4
  ihdr_chunk:
    doc-ref: https://www.w3.org/TR/png/#11IHDR
    seq:
      - id: width
        type: u4
      - id: height
        type: u4
      - id: bit_depth
        type: u1
      - id: color_type
        type: u1
        enum: color_type
      - id: compression_method
        type: u1
      - id: filter_method
        type: u1
      - id: interlace_method
        type: u1
  plte_chunk:
    doc-ref: https://www.w3.org/TR/png/#11PLTE
    seq:
      - id: entries
        type: rgb
        repeat: eos
  rgb:
    seq:
      - id: r
        type: u1
      - id: g
        type: u1
      - id: b
        type: u1
  chrm_chunk:
    doc-ref: https://www.w3.org/TR/png/#11cHRM
    seq:
      - id: white_point
        type: point
      - id: red
        type: point
      - id: green
        type: point
      - id: blue
        type: point
  point:
    seq:
      - id: x_int
        type: u4
      - id: y_int
        type: u4
    instances:
      x:
        value: x_int / 100000.0
      y:
        value: y_int / 100000.0
  gama_chunk:
    doc-ref: https://www.w3.org/TR/png/#11gAMA
    seq:
      - id: gamma_int
        type: u4
    instances:
      gamma_ratio:
        value: 100000.0 / gamma_int
  srgb_chunk:
    doc-ref: https://www.w3.org/TR/png/#11sRGB
    seq:
      - id: render_intent
        type: u1
        enum: intent
    enums:
      intent:
        0: perceptual
        1: relative_colorimetric
        2: saturation
        3: absolute_colorimetric
  bkgd_chunk:
    doc: |
      Background chunk stores default background color to display this
      image against. Contents depend on \`color_type\` of the image.
    doc-ref: https://www.w3.org/TR/png/#11bKGD
    seq:
      - id: bkgd
        type:
          switch-on: _root.ihdr.color_type
          cases:
            color_type::greyscale: bkgd_greyscale
            color_type::greyscale_alpha: bkgd_greyscale
            color_type::truecolor: bkgd_truecolor
            color_type::truecolor_alpha: bkgd_truecolor
            color_type::indexed: bkgd_indexed
  bkgd_greyscale:
    doc: Background chunk for greyscale images.
    seq:
      - id: value
        type: u2
  bkgd_truecolor:
    doc: Background chunk for truecolor images.
    seq:
      - id: red
        type: u2
      - id: green
        type: u2
      - id: blue
        type: u2
  bkgd_indexed:
    doc: Background chunk for images with indexed palette.
    seq:
      - id: palette_index
        type: u1
  phys_chunk:
    doc: |
      "Physical size" chunk stores data that allows to translate
      logical pixels into physical units (meters, etc) and vice-versa.
    doc-ref: https://www.w3.org/TR/png/#11pHYs
    seq:
      - id: pixels_per_unit_x
        type: u4
        doc: |
          Number of pixels per physical unit (typically, 1 meter) by X
          axis.
      - id: pixels_per_unit_y
        type: u4
        doc: |
          Number of pixels per physical unit (typically, 1 meter) by Y
          axis.
      - id: unit
        type: u1
        enum: phys_unit
  time_chunk:
    doc: |
      Time chunk stores time stamp of last modification of this image,
      up to 1 second precision in UTC timezone.
    doc-ref: https://www.w3.org/TR/png/#11tIME
    seq:
      - id: year
        type: u2
      - id: month
        type: u1
      - id: day
        type: u1
      - id: hour
        type: u1
      - id: minute
        type: u1
      - id: second
        type: u1
  international_text_chunk:
    doc: |
      International text chunk effectively allows to store key-value string pairs in
      PNG container. Both "key" (keyword) and "value" (text) parts are
      given in pre-defined subset of iso8859-1 without control
      characters.
    doc-ref: https://www.w3.org/TR/png/#11iTXt
    seq:
      - id: keyword
        type: strz
        encoding: UTF-8
        doc: Indicates purpose of the following text data.
      - id: compression_flag
        type: u1
        doc: |
          0 = text is uncompressed, 1 = text is compressed with a
          method specified in \`compression_method\`.
      - id: compression_method
        type: u1
        enum: compression_methods
      - id: language_tag
        type: strz
        encoding: ASCII
        doc: |
          Human language used in \`translated_keyword\` and \`text\`
          attributes - should be a language code conforming to ISO
          646.IRV:1991.
      - id: translated_keyword
        type: strz
        encoding: UTF-8
        doc: |
          Keyword translated into language specified in
          \`language_tag\`. Line breaks are not allowed.
      - id: text
        type: str
        encoding: UTF-8
        size-eos: true
        doc: |
          Text contents ("value" of this key-value pair), written in
          language specified in \`language_tag\`. Line breaks are
          allowed.
  text_chunk:
    doc: |
      Text chunk effectively allows to store key-value string pairs in
      PNG container. Both "key" (keyword) and "value" (text) parts are
      given in pre-defined subset of iso8859-1 without control
      characters.
    doc-ref: https://www.w3.org/TR/png/#11tEXt
    seq:
      - id: keyword
        type: strz
        encoding: iso8859-1
        doc: Indicates purpose of the following text data.
      - id: text
        type: str
        size-eos: true
        encoding: iso8859-1
  compressed_text_chunk:
    doc: |
      Compressed text chunk effectively allows to store key-value
      string pairs in PNG container, compressing "value" part (which
      can be quite lengthy) with zlib compression.
    doc-ref: https://www.w3.org/TR/png/#11zTXt
    seq:
      - id: keyword
        type: strz
        encoding: UTF-8
        doc: Indicates purpose of the following text data.
      - id: compression_method
        type: u1
        enum: compression_methods
      - id: text_datastream
        process: zlib
        size-eos: true
  animation_control_chunk:
    doc-ref: https://wiki.mozilla.org/APNG_Specification#.60acTL.60:_The_Animation_Control_Chunk
    seq:
      - id: num_frames
        type: u4
        doc: Number of frames, must be equal to the number of \`frame_control_chunk\`s
      - id: num_plays
        type: u4
        doc: Number of times to loop, 0 indicates infinite looping.
  frame_control_chunk:
    doc-ref: https://wiki.mozilla.org/APNG_Specification#.60fcTL.60:_The_Frame_Control_Chunk
    seq:
      - id: sequence_number
        type: u4
        doc: Sequence number of the animation chunk
      - id: width
        type: u4
        valid:
          min: 1
          max: _root.ihdr.width
        doc: Width of the following frame
      - id: height
        type: u4
        valid:
          min: 1
          max: _root.ihdr.height
        doc: Height of the following frame
      - id: x_offset
        type: u4
        valid:
          max: _root.ihdr.width - width
        doc: X position at which to render the following frame
      - id: y_offset
        type: u4
        valid:
          max: _root.ihdr.height - height
        doc: Y position at which to render the following frame
      - id: delay_num
        type: u2
        doc: Frame delay fraction numerator
      - id: delay_den
        type: u2
        doc: Frame delay fraction denominator
      - id: dispose_op
        type: u1
        enum: dispose_op_values
        doc: Type of frame area disposal to be done after rendering this frame
      - id: blend_op
        type: u1
        enum: blend_op_values
        doc: Type of frame area rendering for this frame
    instances:
      delay:
        value: 'delay_num / (delay_den == 0 ? 100.0 : delay_den)'
        doc: Time to display this frame, in seconds
  frame_data_chunk:
    doc-ref: https://wiki.mozilla.org/APNG_Specification#.60fdAT.60:_The_Frame_Data_Chunk
    seq:
      - id: sequence_number
        type: u4
        doc: |
          Sequence number of the animation chunk. The fcTL and fdAT chunks
          have a 4 byte sequence number. Both chunk types share the sequence.
          The first fcTL chunk must contain sequence number 0, and the sequence
          numbers in the remaining fcTL and fdAT chunks must be in order, with
          no gaps or duplicates.
      - id: frame_data
        size-eos: true
        doc: |
          Frame data for the frame. At least one fdAT chunk is required for
          each frame. The compressed datastream is the concatenation of the
          contents of the data fields of all the fdAT chunks within a frame.
enums:
  color_type:
    0: greyscale
    2: truecolor
    3: indexed
    4: greyscale_alpha
    6: truecolor_alpha
  phys_unit:
    0: unknown
    1: meter
  compression_methods:
    0: zlib
  dispose_op_values:
    0:
      id: none
      doc: |
        No disposal is done on this frame before rendering the next;
        the contents of the output buffer are left as is.
      doc-ref: https://wiki.mozilla.org/APNG_Specification#.60fcTL.60:_The_Frame_Control_Chunk
    1:
      id: background
      doc: |
        The frame's region of the output buffer is to be cleared to
        fully transparent black before rendering the next frame.
      doc-ref: https://wiki.mozilla.org/APNG_Specification#.60fcTL.60:_The_Frame_Control_Chunk
    2:
      id: previous
      doc: |
        The frame's region of the output buffer is to be reverted
        to the previous contents before rendering the next frame.
      doc-ref: https://wiki.mozilla.org/APNG_Specification#.60fcTL.60:_The_Frame_Control_Chunk
  blend_op_values:
    0:
      id: source
      doc: |
        All color components of the frame, including alpha,
        overwrite the current contents of the frame's output buffer region.
    1:
      id: over
      doc: |
        The frame is composited onto the output buffer based on its alpha
`
  },
  {
    id: "ksy_psx_tim",
    name: "Psx Tim",
    category: "Images",
    metadata: {
      isGenerated: true,
      fileExtensions: ["tim"],
      description: "",
      originalCategory: "image",
      filePath: "image/psx_tim.ksy",
      signature: {"offset":0,"bytes":[16,0,0,0]},
      endian: "le"
    },
    content: `meta:
  id: psx_tim
  application: Sony PlayStation (PSX) typical image format
  file-extension: tim
  xref:
    justsolve: TIM_(PlayStation_graphics)
    wikidata: Q28207389
  license: CC0-1.0
  ks-version: 0.9
  endian: le
doc-ref:
  - http://fileformats.archiveteam.org/wiki/TIM_(PlayStation_graphics)
  - https://mrclick.zophar.net/TilEd/download/timgfx.txt
  - https://www.romhacking.net/documents/31/
seq:
  - id: magic
    contents: [0x10, 0, 0, 0]
  - id: flags
    type: u4
    doc: Encodes bits-per-pixel and whether CLUT is present in a file or not
  - id: clut
    type: bitmap
    if: has_clut
    doc: CLUT (Color LookUp Table), one or several palettes for indexed color image, represented as a
  - id: img
    type: bitmap
types:
  bitmap:
    seq:
      - id: len
        type: u4
      - id: origin_x
        type: u2
      - id: origin_y
        type: u2
      - id: width
        type: u2
      - id: height
        type: u2
      - id: body
        size: len - 12 # 4 + 4 * 2
instances:
  has_clut:
    value: flags & 0b1000 != 0
  bpp:
    value: flags & 0b0011
enums:
  bpp_type:
    0: bpp_4
    1: bpp_8
    2: bpp_16
    3: bpp_24
`
  },
  {
    id: "ksy_tga",
    name: "TGA (AKA Truevision TGA, AKA TARGA) raster image file format",
    category: "Images",
    metadata: {
      isGenerated: true,
      fileExtensions: ["tga","icb","vda","vst"],
      description: "TGA (AKA Truevision TGA, AKA TARGA) raster image file format",
      originalCategory: "image",
      filePath: "image/tga.ksy",
      endian: "le"
    },
    content: `meta:
  id: tga
  title: TGA (AKA Truevision TGA, AKA TARGA) raster image file format
  xref:
    justsolve: TGA
    loc: fdd000180 # TGA 2.0
    pronom: fmt/402 # TGA 2.0
    wikidata: Q1063976
  file-extension:
    - tga
    - icb
    - vda
    - vst
  license: CC0-1.0
  encoding: ASCII
  endian: le
doc:
  TGA (AKA Truevision TGA, AKA TARGA), is a raster image file format
  created by Truevision. It supports up to 32 bits per pixel (three
  8-bit RGB channels + 8-bit alpha channel), color mapping and
  optional lossless RLE compression.
doc-ref: https://www.dca.fee.unicamp.br/~martino/disciplinas/ea978/tgaffs.pdf
seq:
  - id: image_id_len
    type: u1
  - id: color_map_type
    type: u1
    enum: color_map_enum
  - id: image_type
    type: u1
    enum: image_type_enum
  - id: color_map_ofs
    type: u2
  - id: num_color_map
    type: u2
    doc: Number of entries in a color map
  - id: color_map_depth
    type: u1
    doc: Number of bits in a each color maps entry
  - id: x_offset
    type: u2
  - id: y_offset
    type: u2
  - id: width
    type: u2
    doc: Width of the image, in pixels
  - id: height
    type: u2
    doc: Height of the image, in pixels
  - id: image_depth
    type: u1
  - id: img_descriptor
    type: u1
  - id: image_id
    size: image_id_len
    doc: |
      Arbitrary application-specific information that is used to
      identify image. May contain text or some binary data.
  - id: color_map
    repeat: expr
    repeat-expr: num_color_map
    size: (color_map_depth + 7) / 8
    if: color_map_type == color_map_enum::has_color_map
    doc: Color map
instances:
  footer:
    pos: _io.size - 26
    type: tga_footer
enums:
  color_map_enum:
    0: no_color_map
    1: has_color_map
  image_type_enum:
    0: no_image_data
    1: uncomp_color_mapped
    2: uncomp_true_color
    3: uncomp_bw
    9: rle_color_mapped
    10: rle_true_color
    11: rle_bw
types:
  tga_footer:
    seq:
      - id: ext_area_ofs
        type: u4
        doc: Offset to extension area
      - id: dev_dir_ofs
        type: u4
        doc: Offset to developer directory
      - id: version_magic
        size: 18
    instances:
      is_valid:
        value: 'version_magic == [0x54, 0x52, 0x55, 0x45, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x2d, 0x58, 0x46, 0x49, 0x4c, 0x45, 0x2e, 0x00]'
      ext_area:
        pos: ext_area_ofs
        type: tga_ext_area
        if: is_valid
  tga_ext_area:
    seq:
      - id: ext_area_size
        type: u2
        doc: Extension area size in bytes (always 495)
      - id: author_name
        type: str
        size: 41
      - id: comments
        repeat: expr
        repeat-expr: 4
        type: str
        size: 81
        doc: Comments, organized as four lines, each consisting of 80 characters plus a NULL
      - id: timestamp
        size: 12
        doc: Image creation date / time
      - id: job_id
        type: str
        size: 41
        doc: Internal job ID, to be used in image workflow systems
      - id: job_time
        type: str
        size: 6
        doc: Hours, minutes and seconds spent creating the file (for billing, etc.)
      - id: software_id
        type: str
        size: 41
        doc: The application that created the file.
      - id: software_version
        size: 3
      - id: key_color
        type: u4
      - id: pixel_aspect_ratio
        type: u4
      - id: gamma_value
        type: u4
      - id: color_corr_ofs
        type: u4
        doc: Number of bytes from the beginning of the file to the color correction table if present
      - id: postage_stamp_ofs
        type: u4
        doc: Number of bytes from the beginning of the file to the postage stamp image if present
      - id: scan_line_ofs
        type: u4
        doc: Number of bytes from the beginning of the file to the scan lines table if present
      - id: attributes
        type: u1
        doc: Specifies the alpha channel
`
  },
  {
    id: "ksy_wmf",
    name: "Windows Metafile (WMF) vector image",
    category: "Images",
    metadata: {
      isGenerated: true,
      fileExtensions: ["wmf"],
      description: "Windows Metafile (WMF) vector image",
      originalCategory: "image",
      filePath: "image/wmf.ksy",
      endian: "le"
    },
    content: `meta:
  id: wmf
  title: Windows Metafile (WMF) vector image
  file-extension: wmf
  xref:
    justsolve: Windows_Metafile
    mime: image/wmf
    pronom: x-fmt/119
    wikidata: Q1072083
  tags:
    - windows
  license: CC0-1.0
  endian: le
doc: |
  WMF (Windows Metafile) is a relatively early vector image format
  introduced for Microsoft Windows in 1990.

  Inside, it provides a serialized list of Windows GDI (Graphics
  Device Interface) function calls, which, if played back, result in
  an image being drawn on a given surface (display, off-screen buffer,
  printer, etc).
doc-ref: https://www.loc.gov/preservation/digital/formats/digformatspecs/WindowsMetafileFormat(wmf)Specification.pdf
seq:
  - id: special_header
    type: special_header
  - id: header
    type: header
  - id: records
    type: record
    repeat: until
    repeat-until: _.function == func::eof
types:
  special_header:
    seq:
      - id: magic
        contents: [0xd7, 0xcd, 0xc6, 0x9a]
      - id: handle
        contents: [0, 0]
      - id: left
        type: s2
      - id: top
        type: s2
      - id: right
        type: s2
      - id: bottom
        type: s2
      - id: inch
        type: u2
      - id: reserved
        contents: [0, 0, 0, 0]
      - id: checksum
        type: u2
  header:
    seq:
      - id: metafile_type
        type: u2
        enum: metafile_type
      - id: header_size
        type: u2
      - id: version
        type: u2
      - id: size
        type: u4
      - id: number_of_objects
        type: u2
      - id: max_record
        type: u4
      - id: number_of_members
        type: u2
    enums:
      metafile_type:
        # section 2.1.20
        1: memory_metafile
        2: disk_metafile
  record:
    seq:
      - id: size
        type: u4
      - id: function
        type: u2
        enum: func
      - id: params
        size: (size - 3) * 2
        type:
          switch-on: function
          cases:
            'func::polyline': params_polyline
            'func::polygon': params_polygon
            'func::setbkcolor': color_ref
            'func::setbkmode': params_setbkmode
            'func::setpolyfillmode': params_setpolyfillmode
            #'func::params_setrelabs': reserved
            'func::setrop2': params_setrop2
            'func::setwindowext': params_setwindowext
            'func::setwindoworg': params_setwindoworg
  params_polyline:
    doc-ref: section 2.3.3.14
    seq:
      - id: num_points
        type: s2
      - id: points
        repeat: expr
        repeat-expr: num_points
        type: point_s
  params_polygon:
    doc-ref: section 2.3.3.15 = params_polyline
    seq:
      - id: num_points
        type: s2
      - id: points
        repeat: expr
        repeat-expr: num_points
        type: point_s
  # section 2.3.5.14
  #params_setbkcolor:
  #  seq:
  #    - id: color_ref
  #      type: color_ref
  params_setbkmode:
    doc-ref: section 2.3.5.15
    seq:
      - id: bk_mode
        type: u2
        enum: mix_mode
        doc: Defines current graphic context background mix mode.
  params_setpolyfillmode:
    doc-ref: section 2.3.5.20
    seq:
      - id: poly_fill_mode
        type: u2
        enum: poly_fill_mode
        doc: Defines current polygon fill mode.
  params_setrop2:
    doc-ref: section 2.3.5.22
    seq:
      - id: draw_mode
        type: u2
        enum: bin_raster_op
        doc: Defines current foreground binary raster operation mixing mode.
  params_setwindowext:
    doc-ref: section 2.3.5.30
    seq:
      - id: y
        type: s2
        doc: Vertical extent of the window in logical units.
      - id: x
        type: s2
        doc: Horizontal extent of the window in logical units.
  params_setwindoworg:
    doc-ref: section 2.3.5.31
    seq:
      - id: y
        type: s2
        doc: Y coordinate of the window origin, in logical units.
      - id: x
        type: s2
        doc: X coordinate of the window origin, in logical units.
  color_ref:
    doc-ref: section 2.2.1.7
    seq:
      - id: red
        type: u1
      - id: green
        type: u1
      - id: blue
        type: u1
      - id: reserved
        type: u1
  point_s:
    doc-ref: section 2.2.1.12
    seq:
      - id: x
        type: s2
        doc: X coordinate of the point, in logical units.
      - id: y
        type: s2
        doc: Y coordinate of the point, in logical units.
enums:
  func:
    0x0000: eof
    0x0035: realizepalette
    0x0037: setpalentries
    0x0102: setbkmode
    0x0103: setmapmode
    0x0104: setrop2
    0x0105: setrelabs
    0x0106: setpolyfillmode
    0x0107: setstretchbltmode
    0x0108: settextcharextra
    0x0127: restoredc
    0x0139: resizepalette
    0x0142: dibcreatepatternbrush
    0x0149: setlayout
    0x0201: setbkcolor
    0x0209: settextcolor
    0x0211: offsetviewportorg
    0x0213: lineto
    0x0214: moveto
    0x0220: offsetcliprgn
    0x0228: fillregion
    0x0231: setmapperflags
    0x0234: selectpalette
    0x0324: polygon
    0x0325: polyline
    0x020a: settextjustification
    0x020b: setwindoworg
    0x020c: setwindowext
    0x020d: setviewportorg
    0x020e: setviewportext
    0x020f: offsetwindoworg
    0x0410: scalewindowext
    0x0412: scaleviewportext
    0x0415: excludecliprect
    0x0416: intersectcliprect
    0x0418: ellipse
    0x0419: floodfill
    0x0429: frameregion
    0x0436: animatepalette
    0x0521: textout
    0x0538: polypolygon
    0x0548: extfloodfill
    0x041b: rectangle
    0x041f: setpixel
    0x061c: roundrect
    0x061d: patblt
    0x001e: savedc
    0x081a: pie
    0x0b23: stretchblt
    0x0626: escape
    0x012a: invertregion
    0x012b: paintregion
    0x012c: selectclipregion
    0x012d: selectobject
    0x012e: settextalign
    0x0817: arc
    0x0830: chord
    0x0922: bitblt
    0x0a32: exttextout
    0x0d33: setdibtodev
    0x0940: dibbitblt
    0x0b41: dibstretchblt
    0x0f43: stretchdib
    0x01f0: deleteobject
    0x00f7: createpalette
    0x01f9: createpatternbrush
    0x02fa: createpenindirect
    0x02fb: createfontindirect
    0x02fc: createbrushindirect
    0x06ff: createregion
  # section 2.1.2
  bin_raster_op:
    0x0001: black
    0x0002: notmergepen
    0x0003: masknotpen
    0x0004: notcopypen
    0x0005: maskpennot
    0x0006: not
    0x0007: xorpen
    0x0008: notmaskpen
    0x0009: maskpen
    0x000a: notxorpen
    0x000b: nop
    0x000c: mergenotpen
    0x000d: copypen
    0x000e: mergepennot
    0x000f: mergepen
    0x0010: white
  # section 2.1.22
  mix_mode:
    0x0001: transparent
    0x0002: opaque
  # section 2.1.27
  poly_fill_mode:
    0x0001: alternate
    0x0002: winding
`
  },
  {
    id: "ksy_xwd",
    name: "xwd (X Window Dump) bitmap image",
    category: "Images",
    metadata: {
      isGenerated: true,
      fileExtensions: ["xwd"],
      description: "xwd (X Window Dump) bitmap image",
      originalCategory: "image",
      filePath: "image/xwd.ksy",
      endian: "be"
    },
    content: `meta:
  id: xwd
  title: xwd (X Window Dump) bitmap image
  application: xwd
  file-extension: xwd
  xref:
    justsolve: XWD
    pronom: fmt/401
  license: CC0-1.0
  endian: be
doc: |
  xwd is a file format written by eponymous X11 screen capture
  application (xwd stands for "X Window Dump"). Typically, an average
  user transforms xwd format into something more widespread by any of
  \`xwdtopnm\` and \`pnmto...\` utilities right away.

  xwd format itself provides a raw uncompressed bitmap with some
  metainformation, like pixel format, width, height, bit depth,
  etc. Note that technically format includes machine-dependent fields
  and thus is probably a poor choice for true cross-platform usage.
seq:
  - id: len_header
    type: u4
    doc: Size of the header in bytes
  - id: hdr
    size: len_header - 4
    type: header
  - id: color_map
    size: 12
    type: color_map_entry
    repeat: expr
    repeat-expr: hdr.color_map_entries
types:
  header:
    seq:
      - id: file_version
        type: u4
        doc: X11WD file version (always 07h)
      - id: pixmap_format
        type: u4
        doc: Format of the image data
        enum: pixmap_format
      - id: pixmap_depth
        type: u4
        doc: Pixmap depth in pixels - in practice, bits per pixel
      - id: pixmap_width
        type: u4
        doc: Pixmap width in pixels
      - id: pixmap_height
        type: u4
        doc: Pixmap height in pixels
      - id: x_offset
        type: u4
        doc: Bitmap X offset (number of pixels to ignore at the beginning of each scan-line)
      - id: byte_order
        type: u4
        doc: Byte order of image data
        enum: byte_order
      - id: bitmap_unit
        type: u4
        doc: Bitmap base data size
      - id: bitmap_bit_order
        type: u4
        doc: Bit-order of image data
      - id: bitmap_pad
        type: u4
        doc: Bitmap scan-line pad
      - id: bits_per_pixel
        type: u4
        doc: Bits per pixel
      - id: bytes_per_line
        type: u4
        doc: Bytes per scan-line
      - id: visual_class
        type: u4
        doc: Class of the image
        enum: visual_class
      - id: red_mask
        type: u4
        doc: Red mask
      - id: green_mask
        type: u4
        doc: Green mask
      - id: blue_mask
        type: u4
        doc: Blue mask
      - id: bits_per_rgb
        type: u4
        doc: Size of each color mask in bits
      - id: number_of_colors
        type: u4
        doc: Number of colors in image
      - id: color_map_entries
        type: u4
        doc: Number of entries in color map
      - id: window_width
        type: u4
        doc: Window width
      - id: window_height
        type: u4
        doc: Window height
      - id: window_x
        type: s4
        doc: Window upper left X coordinate
      - id: window_y
        type: s4
        doc: Window upper left Y coordinate
      - id: window_border_width
        type: u4
        doc: Window border width
      - id: creator
        type: strz
        encoding: UTF-8
        doc: Program that created this xwd file
  color_map_entry:
    seq:
      - id: entry_number
        type: u4
        doc: Number of the color map entry
      - id: red
        type: u2
      - id: green
        type: u2
      - id: blue
        type: u2
      - id: flags
        type: u1
      - id: padding
        type: u1
enums:
  pixmap_format:
    0: x_y_bitmap
    1: x_y_pixmap
    2: z_pixmap
  byte_order:
    0: le
    1: be
  visual_class:
    0: static_gray
    1: gray_scale
    2: static_color
    3: pseudo_color
    4: true_color
    5: direct_color
`
  },
  {
    id: "ksy_aix_utmp",
    name: "utmp log file, IBM AIX version",
    category: "Logs",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "utmp log file, IBM AIX version",
      originalCategory: "log",
      filePath: "log/aix_utmp.ksy",
      endian: "be"
    },
    content: `meta:
  id: aix_utmp
  title: utmp log file, IBM AIX version
  license: CC0-1.0
  endian: be
doc: This spec can be used to parse utmp, wtmp and other similar as created by IBM AIX.
doc-ref: https://www.ibm.com/docs/en/aix/7.1?topic=files-utmph-file
seq:
  - id: records
    type: record
    repeat: eos
types:
  record:
    seq:
      - id: user
        -orig-id: ut_user
        doc: User login name
        size: 256
        type: str
        encoding: ascii
      - id: inittab_id
        -orig-id: ut_id
        doc: /etc/inittab id
        size: 14
        type: str
        encoding: ascii
      - id: device
        -orig-id: ut_line
        doc: device name (console, lnxx)
        size: 64
        type: str
        encoding: ascii
      - id: pid
        -orig-id: ut_pid
        type: u8
        doc: process id
      - id: type
        -orig-id: ut_type
        type: s2
        doc: Type of login
        enum: entry_type
      - id: timestamp
        -orig-id: ut_time
        type: s8
        doc: time entry was made
      - id: exit_status
        -orig-id: ut_exit
        type: exit_status
        doc: the exit status of a process marked as DEAD PROCESS
      - id: hostname
        -orig-id: ut_host
        size: 256
        doc: host name
        type: str
        encoding: ascii
      - id: dbl_word_pad
        type: s4
      - id: reserved_a
        size: 8
      - id: reserved_v
        size: 24
  exit_status:
    seq:
      - id: termination_code
        -orig-id: e_termination
        type: s2
        doc: process termination status
      - id: exit_code
        -orig-id: e_exit
        type: s2
        doc: process exit status
enums:
  entry_type:
    0: empty
    1: run_lvl
    2: boot_time
    3: old_time
    4: new_time
    5: init_process
    6: login_process
    7: user_process
    8: dead_process
    9: accounting
`
  },
  {
    id: "ksy_glibc_utmp",
    name: "utmp log file, Linux/glibc version",
    category: "Logs",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "utmp log file, Linux/glibc version",
      originalCategory: "log",
      filePath: "log/glibc_utmp.ksy",
      endian: "le"
    },
    content: `meta:
  id: glibc_utmp
  title: utmp log file, Linux/glibc version
  xref:
    wikidata: Q3570128
  tags:
    - linux
    - log
  license: CC0-1.0
  endian: le
seq:
  - id: records
    size: 0x180
    type: record
    repeat: eos
types:
  record:
    seq:
      - id: ut_type
        type: s4
        doc: Type of login
        enum: entry_type
      - id: pid
        type: s4
        doc: Process ID of login process
      - id: line
        type: str
        encoding: UTF-8
        size: 32
        doc: Devicename
      - id: id
        type: str
        encoding: UTF-8
        size: 4
        doc: Inittab ID
      - id: user
        type: str
        encoding: UTF-8
        size: 32
        doc: Username
      - id: host
        type: str
        encoding: UTF-8
        size: 256
        doc: Hostname for remote login
      - id: exit
        type: u4
        doc: Exit status of a process marked as DEAD_PROCESS
      - id: session
        type: s4
        doc: Session ID, used for windowing
      - id: tv
        type: timeval
        doc: Time entry was made
      - id: addr_v6
        size: 16
        doc: Internet address of remote host
      - id: reserved
        size: 20
  timeval:
    seq:
      - id: sec
        type: u4
        doc: Seconds
      - id: usec
        type: s4
        doc: Microseconds
enums:
  entry_type:
    0: empty
    1: run_lvl
    2: boot_time
    3: new_time
    4: old_time
    5: init_process
    6: login_process
    7: user_process
    8: dead_process
    9: accounting
`
  },
  {
    id: "ksy_hashcat_restore",
    name: "Hashcat Restore file",
    category: "Logs",
    metadata: {
      isGenerated: true,
      fileExtensions: ["restore"],
      description: "Hashcat Restore file",
      originalCategory: "log",
      filePath: "log/hashcat_restore.ksy",
      endian: "le"
    },
    content: `meta:
  id: hashcat_restore
  title: Hashcat Restore file
  file-extension: restore
  license: CC0-1.0
  endian: le
doc-ref: https://hashcat.net/wiki/doku.php?id=restore
seq:
  - id: version
    type: u4
  - id: cwd
    type: strz
    size: 256
    encoding: UTF-8
  - id: dicts_pos
    type: u4
  - id: masks_pos
    type: u4
  - id: padding
    size: 4
  - id: current_restore_point
    type: u8
  - id: argc
    type: u4
  - id: padding2
    size: 12
  - id: argv
    type: strz
    encoding: UTF-8
    terminator: 0x0A
    repeat: expr
    repeat-expr: argc
`
  },
  {
    id: "ksy_mcap",
    name: "MCAP",
    category: "Logs",
    metadata: {
      isGenerated: true,
      fileExtensions: ["mcap"],
      description: "MCAP",
      originalCategory: "log",
      filePath: "log/mcap.ksy",
      endian: "le"
    },
    content: `meta:
  id: mcap
  title: MCAP
  file-extension: mcap
  license: Apache-2.0
  endian: le
doc: |
  MCAP is a modular container format and logging library for pub/sub messages with
  arbitrary message serialization. It is primarily intended for use in robotics
  applications, and works well under various workloads, resource constraints, and
  durability requirements.

  Time values (\`log_time\`, \`publish_time\`, \`create_time\`) are represented in
  nanoseconds since a user-understood epoch (i.e. Unix epoch, robot boot time,
  etc.)
doc-ref: https://github.com/foxglove/mcap/tree/c1cc51d/docs/specification#readme
seq:
  - id: header_magic
    type: magic

  - id: records
    type: record
    repeat: until
    repeat-until: _.op == opcode::footer

  - id: footer_magic
    type: magic

instances:
  footer:
    pos: ofs_footer
    size-eos: true
    type: record
  ofs_footer:
    value: "_io.size - footer.op._sizeof - footer.len_body._sizeof - sizeof<footer> - sizeof<magic>"

enums:
  opcode:
    0x01: header
    0x02: footer
    0x03: schema
    0x04: channel
    0x05: message
    0x06: chunk
    0x07: message_index
    0x08: chunk_index
    0x09: attachment
    0x0a: attachment_index
    0x0b: statistics
    0x0c: metadata
    0x0d: metadata_index
    0x0e: summary_offset
    0x0f: data_end

types:
  magic:
    seq:
      - id: magic
        contents: [0x89, "MCAP0\\r\\n"]

  prefixed_str:
    seq:
      - id: len_str
        type: u4
      - id: str
        type: str
        size: len_str
        encoding: UTF-8

  tuple_str_str:
    seq:
      - id: key
        type: prefixed_str
      - id: value
        type: prefixed_str

  map_str_str:
    seq:
      - id: len_entries
        type: u4
      - id: entries
        size: len_entries
        type: entries
    types:
      entries:
        seq:
          - id: entries
            type: tuple_str_str
            repeat: eos

  records:
    seq:
      - id: records
        type: record
        repeat: eos

  record:
    seq:
      - id: op
        type: u1
        enum: opcode
      - id: len_body
        type: u8
      - id: body
        size: len_body
        type:
          switch-on: op
          cases:
            opcode::header: header
            opcode::footer: footer
            opcode::schema: schema
            opcode::channel: channel
            opcode::message: message
            opcode::chunk: chunk
            opcode::message_index: message_index
            opcode::chunk_index: chunk_index
            opcode::attachment: attachment
            opcode::attachment_index: attachment_index
            opcode::statistics: statistics
            opcode::metadata: metadata
            opcode::metadata_index: metadata_index
            opcode::summary_offset: summary_offset
            opcode::data_end: data_end

  header:
    seq:
      - id: profile
        type: prefixed_str
      - id: library
        type: prefixed_str

  footer:
    seq:
      - id: ofs_summary_section
        -orig-id: summary_start
        type: u8
      - id: ofs_summary_offset_section
        -orig-id: summary_offset_start
        type: u8
      - id: summary_crc32
        -orig-id: summary_crc
        type: u4
        doc: |
          A CRC-32 of all bytes from the start of the Summary section up through and
          including the end of the previous field (summary_offset_start) in the footer
          record. A value of 0 indicates the CRC-32 is not available.
    instances:
      summary_section:
        io: _root._io
        pos: ofs_summary_section
        size: "(ofs_summary_offset_section != 0 ? ofs_summary_offset_section : _root.ofs_footer) - ofs_summary_section"
        type: records
        if: ofs_summary_section != 0
      summary_offset_section:
        io: _root._io
        pos: ofs_summary_offset_section
        size: "_root.ofs_footer - ofs_summary_offset_section"
        type: records
        if: ofs_summary_offset_section != 0
      ofs_summary_crc32_input:
        value: "ofs_summary_section != 0 ? ofs_summary_section : _root.ofs_footer"
      summary_crc32_input:
        io: _root._io
        pos: ofs_summary_crc32_input
        size: "_root._io.size - ofs_summary_crc32_input - sizeof<magic> - summary_crc32._sizeof"

  schema:
    seq:
      - id: id
        type: u2
      - id: name
        type: prefixed_str
      - id: encoding
        type: prefixed_str
      - id: len_data
        type: u4
      - id: data
        size: len_data

  channel:
    seq:
      - id: id
        type: u2
      - id: schema_id
        type: u2
      - id: topic
        type: prefixed_str
      - id: message_encoding
        type: prefixed_str
      - id: metadata
        type: map_str_str

  message:
    seq:
      - id: channel_id
        type: u2
      - id: sequence
        type: u4
      - id: log_time
        type: u8
      - id: publish_time
        type: u8
      - id: data
        size-eos: true

  chunk:
    seq:
      - id: message_start_time
        type: u8
      - id: message_end_time
        type: u8
      - id: uncompressed_size
        type: u8
      - id: uncompressed_crc32
        -orig-id: uncompressed_crc
        type: u4
        doc: |
          CRC-32 checksum of uncompressed \`records\` field. A value of zero indicates that
          CRC validation should not be performed.
      - id: compression
        type: prefixed_str
      - id: len_records
        type: u8
      - id: records
        size: len_records
        type:
          switch-on: compression.str
          cases:
            '""': records

  message_index:
    seq:
      - id: channel_id
        type: u2
      - id: len_records
        type: u4
      - id: records
        size: len_records
        type: message_index_entries
    types:
      message_index_entry:
        seq:
          - id: log_time
            type: u8
          - id: offset
            type: u8
      message_index_entries:
        seq:
          - id: entries
            type: message_index_entry
            repeat: eos

  chunk_index:
    seq:
      - id: message_start_time
        type: u8
      - id: message_end_time
        type: u8
      - id: ofs_chunk
        -orig-id: chunk_start_offset
        type: u8
      - id: len_chunk
        -orig-id: chunk_length
        type: u8
      - id: len_message_index_offsets
        type: u4
      - id: message_index_offsets
        size: len_message_index_offsets
        type: message_index_offsets
      - id: message_index_length
        type: u8
      - id: compression
        type: prefixed_str
      - id: compressed_size
        type: u8
      - id: uncompressed_size
        type: u8
    instances:
      chunk:
        io: _root._io
        pos: ofs_chunk
        size: len_chunk
        type: record
    types:
      message_index_offset:
        seq:
          - id: channel_id
            type: u2
          - id: offset
            type: u8
      message_index_offsets:
        seq:
          - id: entries
            type: message_index_offset
            repeat: eos

  attachment:
    seq:
      - id: log_time
        type: u8
      - id: create_time
        type: u8
      - id: name
        type: prefixed_str
      - id: content_type
        type: prefixed_str
      - id: len_data
        type: u8
      - id: data
        size: len_data
      # Trigger _io.pos computation: https://github.com/kaitai-io/kaitai_struct/issues/721#issuecomment-623011059
      - id: invoke_crc32_input_end
        size: 0
        if: crc32_input_end >= 0
      - id: crc32
        -orig-id: crc
        type: u4
        doc: |
          CRC-32 checksum of preceding fields in the record. A value of zero indicates that
          CRC validation should not be performed.

    instances:
      crc32_input_end:
        value: _io.pos
      crc32_input:
        pos: 0
        size: crc32_input_end

  attachment_index:
    seq:
      - id: ofs_attachment
        -orig-id: offset
        type: u8
      - id: len_attachment
        -orig-id: length
        type: u8
      - id: log_time
        type: u8
      - id: create_time
        type: u8
      - id: data_size
        type: u8
      - id: name
        type: prefixed_str
      - id: content_type
        type: prefixed_str
    instances:
      attachment:
        io: _root._io
        pos: ofs_attachment
        size: len_attachment
        type: record

  statistics:
    seq:
      - id: message_count
        type: u8
      - id: schema_count
        type: u2
      - id: channel_count
        type: u4
      - id: attachment_count
        type: u4
      - id: metadata_count
        type: u4
      - id: chunk_count
        type: u4
      - id: message_start_time
        type: u8
      - id: message_end_time
        type: u8
      - id: len_channel_message_counts
        type: u4
      - id: channel_message_counts
        size: len_channel_message_counts
        type: channel_message_counts
    types:
      channel_message_counts:
        seq:
          - id: entries
            type: channel_message_count
            repeat: eos
      channel_message_count:
        seq:
          - id: channel_id
            type: u2
          - id: message_count
            type: u8

  metadata:
    seq:
      - id: name
        type: prefixed_str
      - id: metadata
        type: map_str_str

  metadata_index:
    seq:
      - id: ofs_metadata
        -orig-id: offset
        type: u8
      - id: len_metadata
        -orig-id: length
        type: u8
      - id: name
        type: prefixed_str
    instances:
      metadata:
        io: _root._io
        pos: ofs_metadata
        size: len_metadata
        type: record

  summary_offset:
    seq:
      - id: group_opcode
        type: u1
        enum: opcode
      - id: ofs_group
        -orig-id: group_start
        type: u8
      - id: len_group
        -orig-id: group_length
        type: u8
    instances:
      group:
        io: _root._io
        pos: ofs_group
        size: len_group
        type: records

  data_end:
    seq:
      - id: data_section_crc32
        -orig-id: data_section_crc
        type: u4
        doc: |
          CRC-32 of all bytes in the data section. A value of 0 indicates the CRC-32 is not
          available.
`
  },
  {
    id: "ksy_sudoers_ts",
    name: "Sudoers Time Stamp file",
    category: "Logs",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Sudoers Time Stamp file",
      originalCategory: "log",
      filePath: "log/sudoers_ts.ksy",
      endian: "le"
    },
    content: `meta:
  id: sudoers_ts
  title: Sudoers Time Stamp file
  license: CC0-1.0
  tags:
    - linux
  endian: le
doc: |
  This spec can be used to parse sudo time stamp files located in directories
  such as /run/sudo/ts/\$USER or /var/lib/sudo/ts/\$USER.
doc-ref: https://www.sudo.ws/docs/man/1.8.27/sudoers_timestamp.man/
seq:
  - id: records
    type: record
    repeat: eos
types:
  record:
    seq:
      - id: version
        doc: version number of the timestamp_entry struct
        type: u2
      - id: len_record
        doc: size of the record in bytes
        type: u2
        -orig-id: size
      - id: payload
        size: len_record - 4
        type:
          switch-on: version
          cases:
            1: record_v1
            2: record_v2
  record_v1:
    seq:
      - id: type
        doc: record type
        type: u2
        enum: ts_type
      - id: flags
        doc: record flags
        type: ts_flag
      - id: auth_uid
        doc: user ID that was used for authentication
        type: u4
      - id: sid
        doc: session ID associated with tty/ppid
        type: u4
      - id: ts
        doc: time stamp, from a monotonic time source
        type: timespec
      - id: ttydev
        doc: device number of the terminal associated with the session
        if: type == ts_type::tty
        type: u4
      - id: ppid
        doc: ID of the parent process
        if: type == ts_type::ppid
        type: u4
  record_v2:
    seq:
      - id: type
        doc: record type
        type: u2
        enum: ts_type
      - id: flags
        doc: record flags
        type: ts_flag
      - id: auth_uid
        doc: user ID that was used for authentication
        type: u4
      - id: sid
        doc: ID of the user's terminal session, if present (when type is TS_TTY)
        type: u4
      - id: start_time
        doc: start time of the session leader for records of type TS_TTY or of the parent process for records of type TS_PPID
        type: timespec
      - id: ts
        doc: actual time stamp, from a monotonic time source
        type: timespec
      - id: ttydev
        doc: device number of the terminal associated with the session
        if: type == ts_type::tty
        type: u4
      - id: ppid
        doc: ID of the parent process
        if: type == ts_type::ppid
        type: u4
  timespec:
    seq:
      - id: sec
        type: s8
        doc: seconds
      - id: nsec
        type: s8
        doc: nanoseconds
  ts_flag:
    seq:
      - id: reserved0
        doc: Reserved (unused) bits
        type: b6
      - id: anyuid
        doc: ignore uid
        type: b1
        -orig-id: TS_ANYUID
      - id: disabled
        doc: entry disabled
        type: b1
        -orig-id: TS_DISABLED
      - id: reserved1
        doc: Reserved (unused) bits
        type: b8
enums:
  ts_type:
    1: global
    2: tty
    3: ppid
    4: lockexcl
`
  },
  {
    id: "ksy_systemd_journal",
    name: "systemd journal file",
    category: "Logs",
    metadata: {
      isGenerated: true,
      fileExtensions: ["journal"],
      description: "systemd journal file",
      originalCategory: "log",
      filePath: "log/systemd_journal.ksy",
      endian: "le"
    },
    content: `meta:
  id: systemd_journal
  title: systemd journal file
  file-extension: journal
  xref:
    forensicswiki: systemd
  tags:
    - linux
    - log
  license: CC0-1.0
  endian: le
doc: |
  systemd, a popular user-space system/service management suite on Linux,
  offers logging functionality, storing incoming logs in a binary journal
  format.

  On live Linux system running systemd, these journals are typically located at:

  * /run/log/journal/machine-id/*.journal (volatile, lost after reboot)
  * /var/log/journal/machine-id/*.journal (persistent, but disabled by default on Debian / Ubuntu)
doc-ref: https://www.freedesktop.org/wiki/Software/systemd/journal-files/
seq:
  - id: header
    type: header
    size: len_header
  - id: objects
    type: journal_object
    repeat: expr
    repeat-expr: header.num_objects
instances:
  len_header:
    pos: 0x58
    type: u8
    doc: |
      Header length is used to set substream size, as it thus required
      prior to declaration of header.
  data_hash_table:
    pos: header.ofs_data_hash_table
    size: header.len_data_hash_table
  field_hash_table:
    pos: header.ofs_field_hash_table
    size: header.len_field_hash_table
enums:
  state:
    0:
      id: offline
      doc: File is closed and thus not being written into right now
    1:
      id: online
      doc: File is open and thus might be undergoing update at the moment
    2:
      id: archived
      doc: File has been rotated, no further updates to this file are to be expected
types:
  header:
    seq:
      - id: signature
        contents: LPKSHHRH
      - id: compatible_flags
        type: u4
      - id: incompatible_flags
        type: u4
      - id: state
        type: u1
        enum: state
      - id: reserved
        size: 7
      - id: file_id
        size: 16
      - id: machine_id
        size: 16
      - id: boot_id
        size: 16
      - id: seqnum_id
        size: 16
      - id: len_header
        -orig-id: header_size
        type: u8
      - id: len_arena
        -orig-id: arena_size
        type: u8
      - id: ofs_data_hash_table
        -orig-id: data_hash_table_offset
        type: u8
      - id: len_data_hash_table
        -orig-id: data_hash_table_size
        type: u8
      - id: ofs_field_hash_table
        -orig-id: field_hash_table_offset
        type: u8
      - id: len_field_hash_table
        -orig-id: field_hash_table_size
        type: u8
      - id: ofs_tail_object
        -orig-id: tail_object_offset
        type: u8
      - id: num_objects
        -orig-id: n_objects
        type: u8
      - id: num_entries
        -orig-id: n_entries
        type: u8
      - id: tail_entry_seqnum
        type: u8
      - id: head_entry_seqnum
        type: u8
      - id: ofs_entry_array
        -orig-id: entry_array_offset
        type: u8
      - id: head_entry_realtime
        type: u8
      - id: tail_entry_realtime
        type: u8
      - id: tail_entry_monotonic
        type: u8

      # Added in 187
      - id: num_data
        -orig-id: n_data
        type: u8
        if: not _io.eof
      - id: num_fields
        -orig-id: n_fields
        type: u8
        if: not _io.eof

      # Added in 189
      - id: num_tags
        -orig-id: n_tags
        type: u8
        if: not _io.eof
      - id: num_entry_arrays
        -orig-id: n_entry_arrays
        type: u8
        if: not _io.eof
  journal_object:
    doc-ref: 'https://www.freedesktop.org/wiki/Software/systemd/journal-files/#objects'
    seq:
      - id: padding
        size: (8 - _io.pos) % 8
      - id: object_type
        type: u1
        enum: object_types
      - id: flags
        type: u1
      - id: reserved
        size: 6
      - id: len_object
        type: u8
      - id: payload
        size: len_object - 16
        type:
          switch-on: object_type
          cases:
            'object_types::data': data_object
    enums:
      object_types:
        0: unused
        1: data
        2: field
        3: entry
        4: data_hash_table
        5: field_hash_table
        6: entry_array
        7: tag
  data_object:
    doc: |
      Data objects are designed to carry log payload, typically in
      form of a "key=value" string in \`payload\` attribute.
    doc-ref: 'https://www.freedesktop.org/wiki/Software/systemd/journal-files/#dataobjects'
    seq:
      - id: hash
        type: u8
      - id: ofs_next_hash
        -orig-id: next_hash_offset
        type: u8
      - id: ofs_head_field
        -orig-id: head_field_offset
        type: u8
      - id: ofs_entry
        -orig-id: entry_offset
        type: u8
      - id: ofs_entry_array
        -orig-id: entry_array_offset
        type: u8
      - id: num_entries
        -orig-id: n_entries
        type: u8
      - id: payload
        size-eos: true
    instances:
      next_hash:
        io: _root._io
        pos: ofs_next_hash
        type: journal_object
        if: ofs_next_hash != 0
      head_field:
        io: _root._io
        pos: ofs_head_field
        type: journal_object
        if: ofs_head_field != 0
      entry:
        io: _root._io
        pos: ofs_entry
        type: journal_object
        if: ofs_entry != 0
      entry_array:
        io: _root._io
        pos: ofs_entry_array
        type: journal_object
        if: ofs_entry_array != 0
`
  },
  {
    id: "ksy_windows_evt_log",
    name: "Windows Event Log (EVT)",
    category: "Logs",
    metadata: {
      isGenerated: true,
      fileExtensions: ["evt"],
      description: "Windows Event Log (EVT)",
      originalCategory: "log",
      filePath: "log/windows_evt_log.ksy",
      endian: "le"
    },
    content: `meta:
  id: windows_evt_log
  title: Windows Event Log (EVT)
  file-extension: evt
  xref:
    forensicswiki: windows_event_log_(evt)
    justsolve: Windows_Event_Log
  tags:
    - windows
    - log
  license: CC0-1.0
  ks-version: 0.9
  endian: le
doc: |
  EVT files are Windows Event Log files written by older Windows
  operating systems (2000, XP, 2003). They are used as binary log
  files by several major Windows subsystems and
  applications. Typically, several of them can be found in
  \`%WINDIR%\\system32\\config\` directory:

  * Application = \`AppEvent.evt\`
  * System = \`SysEvent.evt\`
  * Security = \`SecEvent.evt\`

  Alternatively, one can export any system event log as distinct .evt
  file using relevant option in Event Viewer application.

  A Windows application can submit an entry into these logs using
  [ReportEventA](https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-reporteventa)
  function of Windows API.

  Internally, EVT files consist of a fixed-size header and event
  records. There are several usage scenarios (non-wrapping vs wrapping
  log files) which result in slightly different organization of
  records.
doc-ref: https://learn.microsoft.com/en-us/windows/win32/eventlog/event-log-file-format
seq:
  - id: header
    type: header
  - id: records
    type: record
    repeat: eos
types:
  header:
    doc-ref: https://learn.microsoft.com/en-us/previous-versions/windows/desktop/legacy/bb309024(v=vs.85)
    seq:
      - id: len_header
        -orig-id: HeaderSize
        type: u4
        doc: Size of the header structure, must be 0x30.
      - id: magic
        -orig-id: Signature
        contents: "LfLe"
      - id: version_major
        -orig-id: MajorVersion
        type: u4
      - id: version_minor
        -orig-id: MinorVersion
        type: u4
      - id: ofs_start
        -orig-id: StartOffset
        type: u4
        doc: Offset of oldest record kept in this log file.
      - id: ofs_end
        -orig-id: EndOffset
        type: u4
        doc: Offset of EOF log record, which is a placeholder for new record.
      - id: cur_rec_idx
        -orig-id: CurrentRecordNumber
        type: u4
        doc: |
          Index of current record, where a new submission would be
          written to (normally there should to EOF log record there).
      - id: oldest_rec_idx
        -orig-id: OldestRecordNumber
        type: u4
        doc: Index of oldest record in the log file
      - id: len_file_max
        -orig-id: MaxSize
        type: u4
        doc: Total maximum size of the log file
      - id: flags
        -orig-id: Flags
        type: flags
      - id: retention
        -orig-id: Retention
        type: u4
      - id: len_header_2
        -orig-id: EndHeaderSize
        type: u4
        doc: Size of the header structure repeated again, and again it must be 0x30.
    types:
      flags:
        seq:
          - id: reserved
            type: b28
          - id: archive
            -orig-id: ELF_LOGFILE_ARCHIVE_SET
            type: b1
            doc: True if archive attribute has been set for this log file.
          - id: log_full
            -orig-id: ELF_LOGFILE_LOGFULL_WRITTEN
            type: b1
            doc: True if last write operation failed due to log being full.
          - id: wrap
            -orig-id: ELF_LOGFILE_HEADER_WRAP
            type: b1
            doc: True if wrapping of record has occured.
          - id: dirty
            -orig-id: ELF_LOGFILE_HEADER_DIRTY
            type: b1
            doc: |
              True if write operation was in progress, but log file
              wasn't properly closed.
  record:
    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-eventlogrecord
    seq:
      - id: len_record
        -orig-id: Length
        type: u4
        doc: Size of whole record, including all headers, footers and data
      - id: type
        -orig-id: Reserved
        type: u4
        doc: |
          Type of record. Normal log records specify "LfLe"
          (0x654c664c) in this field, cursor records use 0x11111111.
      - id: body
        size: len_record - 12
        type:
          switch-on: type
          cases:
            0x654c664c: record_body
            0x11111111: cursor_record_body
        doc: |
          Record body interpretation depends on type of record. Body
          size is specified in a way that it won't include a 8-byte
          "header" (\`len_record\` + \`type\`) and a "footer"
          (\`len_record2\`).
      - id: len_record2
        type: u4
        doc: Size of whole record again.
  record_body:
    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-eventlogrecord
    seq:
      - id: idx
        -orig-id: RecordNumber
        type: u4
        doc: Index of record in the file.
      - id: time_generated
        -orig-id: TimeGenerated
        type: u4
        doc: Time when this record was generated, POSIX timestamp format.
      - id: time_written
        -orig-id: TimeWritten
        type: u4
        doc: Time when thsi record was written into the log file, POSIX timestamp format.
      - id: event_id
        -orig-id: EventID
        type: u4
        doc: |
          Identifier of an event, meaning is specific to particular
          source of events / event type.
      - id: event_type
        -orig-id: EventType
        type: u2
        enum: event_types
        doc: Type of event.
        doc-ref: https://learn.microsoft.com/en-us/windows/win32/eventlog/event-types
      - id: num_strings
        -orig-id: NumStrings
        type: u2
        doc: Number of strings present in the log.
      - id: event_category
        -orig-id: EventCategory
        type: u2
        doc-ref: https://learn.microsoft.com/en-us/windows/win32/eventlog/event-categories
      - id: reserved
        -orig-id: ReservedFlags, ClosingRecordNumber
        size: 6
      - id: ofs_strings
        -orig-id: StringOffset
        type: u4
        doc: Offset of strings present in the log
      - id: len_user_sid
        -orig-id: UserSidLength
        type: u4
      - id: ofs_user_sid
        -orig-id: UserSidOffset
        type: u4
      - id: len_data
        -orig-id: DataLength
        type: u4
      - id: ofs_data
        -orig-id: DataOffset
        type: u4
    instances:
#      strings:
#        pos: ofs_strings - 8
      user_sid:
        pos: ofs_user_sid - 8
        size: len_user_sid
      data:
        pos: ofs_data - 8
        size: len_data
    enums:
      event_types:
        1: error
        2: audit_failure
        3: audit_success
        4: info
        5: warning
  cursor_record_body:
    doc-ref: 'https://forensics.wiki/windows_event_log_(evt)/#cursor-record'
    seq:
      - id: magic
        contents: [0x22, 0x22, 0x22, 0x22, 0x33, 0x33, 0x33, 0x33, 0x44, 0x44, 0x44, 0x44]
      - id: ofs_first_record
        type: u4
      - id: ofs_next_record
        type: u4
      - id: idx_next_record
        type: u4
      - id: idx_first_record
        type: u4
`
  },
  {
    id: "ksy_code_6502",
    name: "Code 6502",
    category: "Machine Code",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "",
      originalCategory: "machine_code",
      filePath: "machine_code/code_6502.ksy",
      endian: "le"
    },
    content: `meta:
  id: code_6502
  xref:
    wikidata: Q19368646
  license: CC0-1.0
  endian: le
doc: |
  This spec can be used to disassemble raw stream of 6502 CPU machine
  code into individual operations. Each operation includes an opcode
  and, optionally, an argument. Register arguments are part of the
  \`opcode\` enum.
seq:
  - id: operations
    type: operation
    repeat: eos
types:
  operation:
    seq:
      - id: code
        type: u1
        enum: opcode
      - id: args
        type:
          switch-on: code
          cases:
            'opcode::ora_x_ind': u1
            'opcode::ora_zpg': u1
            'opcode::asl_zpg': u1
            'opcode::ora_imm': u1
            'opcode::ora_abs': u2
            'opcode::asl_abs': u2
            'opcode::bpl_rel': s1
            'opcode::ora_ind_y': u1
            'opcode::ora_zpg_x': u1
            'opcode::asl_zpg_x': u1
            'opcode::ora_abs_y': u2
            'opcode::ora_abs_x': u2
            'opcode::asl_abs_x': u2
            'opcode::jsr_abs': u2
            'opcode::and_x_ind': u1
            'opcode::bit_zpg': u1
            'opcode::and_zpg': u1
            'opcode::rol_zpg': u1
            'opcode::and_imm': u1
            'opcode::bit_abs': u2
            'opcode::and_abs': u2
            'opcode::rol_abs': u2
            'opcode::bmi_rel': s1
            'opcode::and_ind_y': u1
            'opcode::and_zpg_x': u1
            'opcode::rol_zpg_x': u1
            'opcode::and_abs_y': u2
            'opcode::and_abs_x': u2
            'opcode::rol_abs_x': u2
            'opcode::eor_x_ind': u1
            'opcode::eor_zpg': u1
            'opcode::lsr_zpg': u1
            'opcode::eor_imm': u1
            'opcode::jmp_abs': u2
            'opcode::eor_abs': u2
            'opcode::lsr_abs': u2
            'opcode::bvc_rel': s1
            'opcode::eor_ind_y': u1
            'opcode::eor_zpg_x': u1
            'opcode::lsr_zpg_x': u1
            'opcode::eor_abs_y': u2
            'opcode::eor_abs_x': u2
            'opcode::lsr_abs_x': u2
            'opcode::adc_x_ind': u1
            'opcode::adc_zpg': u1
            'opcode::ror_zpg': u1
            'opcode::adc_imm': u1
            'opcode::jmp_ind': u2
            'opcode::adc_abs': u2
            'opcode::ror_abs': u2
            'opcode::bvs_rel': s1
            'opcode::adc_ind_y': u1
            'opcode::adc_zpg_x': u1
            'opcode::ror_zpg_x': u1
            'opcode::adc_abs_y': u2
            'opcode::adc_abs_x': u2
            'opcode::ror_abs_x': u2
            'opcode::sta_x_ind': u1
            'opcode::sty_zpg': u1
            'opcode::sta_zpg': u1
            'opcode::stx_zpg': u1
            'opcode::sty_abs': u2
            'opcode::sta_abs': u2
            'opcode::stx_abs': u2
            'opcode::bcc_rel': s1
            'opcode::sta_ind_y': u1
            'opcode::sty_zpg_x': u1
            'opcode::sta_zpg_x': u1
            'opcode::stx_zpg_y': u1
            'opcode::sta_abs_y': u2
            'opcode::sta_abs_x': u2
            'opcode::ldy_imm': u1
            'opcode::lda_x_ind': u1
            'opcode::ldx_imm': u1
            'opcode::ldy_zpg': u1
            'opcode::lda_zpg': u1
            'opcode::ldx_zpg': u1
            'opcode::lda_imm': u1
            'opcode::ldy_abs': u2
            'opcode::lda_abs': u2
            'opcode::ldx_abs': u2
            'opcode::bcs_rel': s1
            'opcode::lda_ind_y': u1
            'opcode::ldy_zpg_x': u1
            'opcode::lda_zpg_x': u1
            'opcode::ldx_zpg_y': u1
            'opcode::lda_abs_y': u2
            'opcode::ldy_abs_x': u2
            'opcode::lda_abs_x': u2
            'opcode::ldx_abs_y': u2
            'opcode::cpy_imm': u1
            'opcode::cmp_x_ind': u1
            'opcode::cpy_zpg': u1
            'opcode::cmp_zpg': u1
            'opcode::dec_zpg': u1
            'opcode::cmp_imm': u1
            'opcode::cpy_abs': u2
            'opcode::cmp_abs': u2
            'opcode::dec_abs': u2
            'opcode::bne_rel': s1
            'opcode::cmp_ind_y': u1
            'opcode::cmp_zpg_x': u1
            'opcode::dec_zpg_x': u1
            'opcode::cmp_abs_y': u2
            'opcode::cmp_abs_x': u2
            'opcode::dec_abs_x': u2
            'opcode::cpx_imm': u1
            'opcode::sbc_x_ind': u1
            'opcode::cpx_zpg': u1
            'opcode::sbc_zpg': u1
            'opcode::inc_zpg': u1
            'opcode::sbc_imm': u1
            'opcode::cpx_abs': u2
            'opcode::sbc_abs': u2
            'opcode::inc_abs': u2
            'opcode::beq_rel': s1
            'opcode::sbc_ind_y': u1
            'opcode::sbc_zpg_x': u1
            'opcode::inc_zpg_x': u1
            'opcode::sbc_abs_y': u2
            'opcode::sbc_abs_x': u2
            'opcode::inc_abs_x': u2
enums:
  opcode:
    0x00: brk_impl
    0x01: ora_x_ind
    0x05: ora_zpg
    0x06: asl_zpg
    0x08: php_impl
    0x09: ora_imm
    0x0a: asl_a
    0x0d: ora_abs
    0x0e: asl_abs
    0x10: bpl_rel
    0x11: ora_ind_y
    0x15: ora_zpg_x
    0x16: asl_zpg_x
    0x18: clc_impl
    0x19: ora_abs_y
    0x1d: ora_abs_x
    0x1e: asl_abs_x
    0x20: jsr_abs
    0x21: and_x_ind
    0x24: bit_zpg
    0x25: and_zpg
    0x26: rol_zpg
    0x28: plp_impl
    0x29: and_imm
    0x2a: rol_a
    0x2c: bit_abs
    0x2d: and_abs
    0x2e: rol_abs
    0x30: bmi_rel
    0x31: and_ind_y
    0x35: and_zpg_x
    0x36: rol_zpg_x
    0x38: sec_impl
    0x39: and_abs_y
    0x3d: and_abs_x
    0x3e: rol_abs_x
    0x40: rti_impl
    0x41: eor_x_ind
    0x45: eor_zpg
    0x46: lsr_zpg
    0x48: pha_impl
    0x49: eor_imm
    0x4a: lsr_a
    0x4c: jmp_abs
    0x4d: eor_abs
    0x4e: lsr_abs
    0x50: bvc_rel
    0x51: eor_ind_y
    0x55: eor_zpg_x
    0x56: lsr_zpg_x
    0x58: cli_impl
    0x59: eor_abs_y
    0x5d: eor_abs_x
    0x5e: lsr_abs_x
    0x60: rts_impl
    0x61: adc_x_ind
    0x65: adc_zpg
    0x66: ror_zpg
    0x68: pla_impl
    0x69: adc_imm
    0x6a: ror_a
    0x6c: jmp_ind
    0x6d: adc_abs
    0x6e: ror_abs
    0x70: bvs_rel
    0x71: adc_ind_y
    0x75: adc_zpg_x
    0x76: ror_zpg_x
    0x78: sei_impl
    0x79: adc_abs_y
    0x7d: adc_abs_x
    0x7e: ror_abs_x
    0x81: sta_x_ind
    0x84: sty_zpg
    0x85: sta_zpg
    0x86: stx_zpg
    0x88: dey_impl
    0x8a: txa_impl
    0x8c: sty_abs
    0x8d: sta_abs
    0x8e: stx_abs
    0x90: bcc_rel
    0x91: sta_ind_y
    0x94: sty_zpg_x
    0x95: sta_zpg_x
    0x96: stx_zpg_y
    0x98: tya_impl
    0x99: sta_abs_y
    0x9a: txs_impl
    0x9d: sta_abs_x
    0xa0: ldy_imm
    0xa1: lda_x_ind
    0xa2: ldx_imm
    0xa4: ldy_zpg
    0xa5: lda_zpg
    0xa6: ldx_zpg
    0xa8: tay_impl
    0xa9: lda_imm
    0xaa: tax_impl
    0xac: ldy_abs
    0xad: lda_abs
    0xae: ldx_abs
    0xb0: bcs_rel
    0xb1: lda_ind_y
    0xb4: ldy_zpg_x
    0xb5: lda_zpg_x
    0xb6: ldx_zpg_y
    0xb8: clv_impl
    0xb9: lda_abs_y
    0xba: tsx_impl
    0xbc: ldy_abs_x
    0xbd: lda_abs_x
    0xbe: ldx_abs_y
    0xc0: cpy_imm
    0xc1: cmp_x_ind
    0xc4: cpy_zpg
    0xc5: cmp_zpg
    0xc6: dec_zpg
    0xc8: iny_impl
    0xc9: cmp_imm
    0xca: dex_impl
    0xcc: cpy_abs
    0xcd: cmp_abs
    0xce: dec_abs
    0xd0: bne_rel
    0xd1: cmp_ind_y
    0xd5: cmp_zpg_x
    0xd6: dec_zpg_x
    0xd8: cld_impl
    0xd9: cmp_abs_y
    0xdd: cmp_abs_x
    0xde: dec_abs_x
    0xe0: cpx_imm
    0xe1: sbc_x_ind
    0xe4: cpx_zpg
    0xe5: sbc_zpg
    0xe6: inc_zpg
    0xe8: inx_impl
    0xe9: sbc_imm
    0xea: nop_impl
    0xec: cpx_abs
    0xed: sbc_abs
    0xee: inc_abs
    0xf0: beq_rel
    0xf1: sbc_ind_y
    0xf5: sbc_zpg_x
    0xf6: inc_zpg_x
    0xf8: sed_impl
    0xf9: sbc_abs_y
    0xfd: sbc_abs_x
    0xfe: inc_abs_x
`
  },
  {
    id: "ksy_compressed_resource",
    name: "Compressed Macintosh resource",
    category: "macOS",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Compressed Macintosh resource",
      originalCategory: "macos",
      filePath: "macos/compressed_resource.ksy",
      endian: "be"
    },
    content: `meta:
  id: compressed_resource
  title: Compressed Macintosh resource
  application: Mac OS
  license: MIT
  ks-version: "0.9"
  imports:
    - /common/bytes_with_io
  endian: be
doc: |
  Compressed Macintosh resource data,
  as stored in resources with the "compressed" attribute.

  Resource decompression is not documented by Apple.
  It is mostly used internally in System 7,
  some of Apple's own applications (such as ResEdit),
  and also by some third-party applications.
  Later versions of Classic Mac OS make less use of resource compression,
  but still support it fully for backwards compatibility.
  Carbon in Mac OS X no longer supports resource compression in any way.

  The data of all compressed resources starts with a common header,
  followed by the compressed data.
  The data is decompressed using code in a \`'dcmp'\` resource.
  Some decompressors used by Apple are included in the System file,
  but applications can also include custom decompressors.
  The header of the compressed data indicates the ID of the \`'dcmp'\` resource used to decompress the data,
  along with some parameters for the decompressor.
doc-ref:
  - 'http://www.alysis.us/arctechnology.htm'
  - 'http://preserve.mactech.com/articles/mactech/Vol.09/09.01/ResCompression/index.html'
  - 'https://github.com/dgelessus/python-rsrcfork/tree/f891a6e/src/rsrcfork/compress'
seq:
  - id: header
    type: header
    doc: |
      The header of the compressed data.
  - id: compressed_data
    size-eos: true
    doc: |
      The compressed resource data.

      The format of this data is completely dependent on the decompressor and its parameters,
      as specified in the header.
      For details about the compressed data formats implemented by Apple's decompressors,
      see the specs in the resource_compression subdirectory.
types:
  header:
    doc: |
      Compressed resource data header,
      as stored at the start of all compressed resources.
    seq:
      - id: common_part
        type: common_part
        doc: |
          The common part of the header.
          Among other things,
          this part contains the header type,
          which determines the format of the data in the type-specific part of the header.
      - id: type_specific_part_raw_with_io
        type: bytes_with_io
        size: common_part.len_header - common_part._sizeof
        doc: |
          Use \`type_specific_part_raw\` instead,
          unless you need access to this field's \`_io\`.
    instances:
      type_specific_part_raw:
        value: type_specific_part_raw_with_io.data
        doc: |
          The type-specific part of the header,
          as a raw byte array.
      type_specific_part:
        io: type_specific_part_raw_with_io._io
        pos: 0
        type:
          switch-on: common_part.header_type
          cases:
            8: type_specific_part_type_8
            9: type_specific_part_type_9
        doc: |
          The type-specific part of the header,
          parsed according to the type from the common part.
    types:
      common_part:
        doc: |
          The common part of a compressed resource data header.
          The format of this part is the same for all compressed resources.
        seq:
          - id: magic
            contents: [0xa8, 0x9f, 0x65, 0x72]
            doc: |
              The signature of all compressed resource data.

              When interpreted as MacRoman, this byte sequence decodes to \`®üer\`.
          - id: len_header
            type: u2
            valid: 0x12
            doc: |
              The byte length of the entire header (common and type-specific parts).

              The meaning of this field is mostly a guess,
              as all known header types result in a total length of \`0x12\`.
          - id: header_type
            type: u1
            doc: |
              Type of the header.
              This determines the format of the data in the type-specific part of the header.

              The only known header type values are \`8\` and \`9\`.

              Every known decompressor is only compatible with one of the header types
              (but every header type is used by more than one decompressor).
              Apple's decompressors with IDs 0 and 1 use header type 8,
              and those with IDs 2 and 3 use header type 9.
          - id: unknown
            type: u1
            valid: 0x01
            doc: |
              The meaning of this field is not known.
              It has the value \`0x01\` in all known compressed resources.
          - id: len_decompressed
            type: u4
            doc: |
              The byte length of the data after decompression.
      type_specific_part_type_8:
        doc: |
          The type-specific part of a compressed resource header with header type \`8\`.
        seq:
          - id: working_buffer_fractional_size
            type: u1
            doc: |
              The ratio of the compressed data size to the uncompressed data size,
              times 256.

              This parameter affects the amount of memory allocated by the Resource Manager during decompression,
              but does not have a direct effect on the decompressor
              (except that it will misbehave if insufficient memory is provided).
              Alternative decompressors that decompress resources into a separate buffer rather than in-place can generally ignore this parameter.
          - id: expansion_buffer_size
            type: u1
            doc: |
              The maximum number of bytes that the compressed data might "grow" during decompression.

              This parameter affects the amount of memory allocated by the Resource Manager during decompression,
              but does not have a direct effect on the decompressor
              (except that it will misbehave if insufficient memory is provided).
              Alternative decompressors that decompress resources into a separate buffer rather than in-place can generally ignore this parameter.
          - id: decompressor_id
            type: s2
            doc: |
              The ID of the \`'dcmp'\` resource that should be used to decompress this resource.
          - id: reserved
            type: u2
            valid: 0
            doc: |
              The meaning of this field is not known.
              It has the value \`0\` in all known compressed resources,
              so it is most likely reserved.
      type_specific_part_type_9:
        doc: |
          The type-specific part of a compressed resource header with header type \`9\`.
        seq:
          - id: decompressor_id
            type: s2
            doc: |
              The ID of the \`'dcmp'\` resource that should be used to decompress this resource.
          - id: decompressor_specific_parameters_with_io
            type: bytes_with_io
            size: 4
            doc: |
              Use \`decompressor_specific_parameters\` instead,
              unless you need access to this field's \`_io\`.
        instances:
          decompressor_specific_parameters:
            value: decompressor_specific_parameters_with_io.data
            doc: |
              Decompressor-specific parameters.
              The exact structure and meaning of this field is different for each decompressor.

              This field always has the same length,
              but decompressors don't always use the entirety of the field,
              so depending on the decompressor some parts of this field may be meaningless.
`
  },
  {
    id: "ksy_ds_store",
    name: "macOS '.DS_Store' format",
    category: "macOS",
    metadata: {
      isGenerated: true,
      fileExtensions: ["DS_Store"],
      description: "macOS '.DS_Store' format",
      originalCategory: "macos",
      filePath: "macos/ds_store.ksy",
      signature: {"offset":0,"bytes":[0,0,0,1]},
      endian: "be"
    },
    content: `meta:
  id: ds_store
  title: macOS '.DS_Store' format
  file-extension: DS_Store
  xref:
    justsolve: Desktop_Services_Store
    pronom: fmt/394
    wikidata: Q307271
  license: MIT
  ks-version: 0.9
  encoding: UTF-8
  endian: be
doc: |
  Apple macOS '.DS_Store' file format.
doc-ref:
  - https://en.wikipedia.org/wiki/.DS_Store
  - https://metacpan.org/dist/Mac-Finder-DSStore/view/DSStoreFormat.pod
  - https://0day.work/parsing-the-ds_store-file-format/
seq:
  - id: alignment_header
    contents: [0x00, 0x00, 0x00, 0x01]
  - id: buddy_allocator_header
    type: buddy_allocator_header
instances:
  buddy_allocator_body:
    pos: buddy_allocator_header.ofs_bookkeeping_info_block + 4
    size: buddy_allocator_header.len_bookkeeping_info_block
    type: buddy_allocator_body
  block_address_mask:
    value: 0x1f
    doc: |
      Bitmask used to calculate the position and the size of each block
      of the B-tree from the block addresses.
types:
  buddy_allocator_header:
    seq:
      - id: magic
        contents: ["Bud1"]
        doc: Magic number 'Bud1'.
      - id: ofs_bookkeeping_info_block
        type: u4
      - id: len_bookkeeping_info_block
        type: u4
      - id: copy_ofs_bookkeeping_info_block
        type: u4
        doc: Needs to match 'offset_bookkeeping_info_block'.
      - size: 16
        doc: |
          Unused field which might simply be the unused space at the end of the block,
          since the minimum allocation size is 32 bytes.
  buddy_allocator_body:
    seq:
      - id: num_blocks
        type: u4
        doc: Number of blocks in the allocated-blocks list.
      - size: 4
        doc: Unknown field which appears to always be 0.
      - id: block_addresses
        type: block_descriptor
        repeat: expr
        repeat-expr: num_block_addresses
        doc: Addresses of the different blocks.
      - id: num_directories
        type: u4
        doc: Indicates the number of directory entries.
      - id: directory_entries
        type: directory_entry
        repeat: expr
        repeat-expr: num_directories
        doc: Each directory is an independent B-tree.
      - id: free_lists
        type: free_list
        repeat: expr
        repeat-expr: num_free_lists
    types:
      block_descriptor:
        seq:
          - id: address_raw
            type: u4
        instances:
          offset:
            value: (address_raw & ~_root.block_address_mask) + 4
          size:
            value: 1 << (address_raw & _root.block_address_mask)
      directory_entry:
        seq:
          - id: len_name
            type: u1
          - id: name
            size: len_name
            type: str
          - id: block_id
            type: u4
      free_list:
        seq:
          - id: counter
            type: u4
          - id: offsets
            type: u4
            repeat: expr
            repeat-expr: counter
    instances:
      num_block_addresses:
        value: 256
      num_free_lists:
        value: 32
      directories:
        io: _root._io
        type: master_block_ref(_index)
        repeat: expr
        repeat-expr: num_directories
        doc: Master blocks of the different B-trees.
  master_block_ref:
    params:
      - id: idx
        type: u8
    instances:
      master_block:
        pos: _parent.block_addresses[_parent.directory_entries[idx].block_id].offset
        size: _parent.block_addresses[_parent.directory_entries[idx].block_id].size
        type: master_block
    types:
      master_block:
        seq:
          - id: block_id
            type: u4
            doc: Block number of the B-tree's root node.
          - id: num_internal_nodes
            type: u4
            doc: Number of internal node levels.
          - id: num_records
            type: u4
            doc: Number of records in the tree.
          - id: num_nodes
            type: u4
            doc: Number of nodes in the tree.
          - type: u4
            doc: Always 0x1000, probably the B-tree node page size.
        instances:
          root_block:
            io: _root._io
            pos: _root.buddy_allocator_body.block_addresses[block_id].offset
            type: block
  block:
    seq:
      - id: mode
        type: u4
        doc: If mode is 0, this is a leaf node, otherwise it is an internal node.
      - id: counter
        type: u4
        doc: Number of records or number of block id + record pairs.
      - id: data
        type: block_data(mode)
        repeat: expr
        repeat-expr: counter
    types:
      block_data:
        params:
          - id: mode
            type: u4
        seq:
          - id: block_id
            type: u4
            if: mode > 0
          - id: record
            type: record
        instances:
          block:
            io: _root._io
            pos: _root.buddy_allocator_body.block_addresses[block_id.as<u4>].offset
            type: block
            if: mode > 0
        types:
          record:
            seq:
              - id: filename
                type: ustr
              - id: structure_type
                type: four_char_code
                doc: Description of the entry's property.
              - id: data_type
                size: 4
                type: str
                doc: Data type of the value.
              - id: value
                type:
                  switch-on: data_type
                  cases:
                    '"long"': u4
                    '"shor"': u4
                    '"bool"': u1
                    '"blob"': record_blob
                    '"type"': four_char_code
                    '"ustr"': ustr
                    '"comp"': u8
                    '"dutc"': u8
            types:
              record_blob:
                seq:
                  - id: length
                    type: u4
                  - id: value
                    size: length
              ustr:
                seq:
                  - id: length
                    type: u4
                  - id: value
                    size: 2 * length
                    type: str
                    encoding: UTF-16BE
              four_char_code:
                seq:
                  - id: value
                    size: 4
                    type: str
    instances:
      rightmost_block:
        io: _root._io
        pos: _root.buddy_allocator_body.block_addresses[mode].offset
        type: block
        if: mode > 0
        doc: Rightmost child block pointer.
`
  },
  {
    id: "ksy_mac_os_resource_snd",
    name: "Classic MacOS Sound Resource",
    category: "macOS",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Classic MacOS Sound Resource",
      originalCategory: "macos",
      filePath: "macos/mac_os_resource_snd.ksy",
      endian: "be"
    },
    content: `meta:
  id: mac_os_resource_snd
  title: Classic MacOS Sound Resource
  application: Sound Manager
  xref:
    mac-os-resource-type: 'snd '
    wikidata: Q7564684
  license: MIT
  endian: be
doc: |
  Sound resources were introduced in Classic MacOS with the Sound Manager program.
  They can contain sound commands to generate sounds with given frequencies as well as sampled sound data.
  They are mostly found in resource forks, but can occasionally appear standalone or embedded in other files.
doc-ref: "https://developer.apple.com/library/archive/documentation/mac/pdf/Sound/Sound_Manager.pdf"
seq:
  - id: format
    type: u2
  - id: num_data_formats
    -orig-id: number_of_data_formats
    type: u2
    if: format == 1
  - id: data_formats
    type: data_format
    repeat: expr
    repeat-expr: num_data_formats
    if: format == 1
  - id: reference_count
    type: u2
    if: format == 2
  - id: num_sound_commands
    -orig-id: number_of_sound_commands
    type: u2
  - id: sound_commands
    type: sound_command
    repeat: expr
    repeat-expr: num_sound_commands
instances:
  midi_note_to_frequency:
    value: |
      [
        8.18, 8.66, 9.18, 9.72, 10.30, 10.91, 11.56, 12.25,
        12.98, 13.75, 14.57, 15.43, 16.35, 17.32, 18.35, 19.45,
        20.60, 21.83, 23.12, 24.50, 25.96, 27.50, 29.14, 30.87,
        32.70, 34.65, 36.71, 38.89, 41.20, 43.65, 46.25, 49.00,
        51.91, 55.00, 58.27, 61.74, 65.41, 69.30, 73.42, 77.78,
        82.41, 87.31, 92.50, 98.00, 103.83, 110.00, 116.54, 123.47,
        130.81, 138.59, 146.83, 155.56, 164.81, 174.61, 185.00, 196.00,
        207.65, 220.00, 233.08, 246.94, 261.63, 277.18, 293.66, 311.13,
        329.63, 349.23, 369.99, 392.00, 415.30, 440.00, 466.16, 493.88,
        523.25, 554.37, 587.33, 622.25, 659.26, 698.46, 739.99, 783.99,
        830.61, 880.00, 932.33, 987.77, 1046.50, 1108.73, 1174.66, 1244.51,
        1318.51, 1396.91, 1479.98, 1567.98, 1661.22, 1760.00, 1864.66, 1975.53,
        2093.00, 2217.46, 2349.32, 2489.02, 2637.02, 2793.83, 2959.96, 3135.96,
        3322.44, 3520.00, 3729.31, 3951.07, 4186.01, 4434.92, 4698.64, 4978.03,
        5274.04, 5587.65, 5919.91, 6271.93, 6644.88, 7040.00, 7458.62, 7902.13,
        8372.02, 8869.84, 9397.27, 9956.06, 10548.08, 11175.30, 11839.82, 12543.85
      ]
    doc: |
      Lookup table to convert a MIDI note into a frequency in Hz
      The lookup table represents the formula (2 ** ((midi_note - 69) / 12)) * 440
    doc-ref: https://en.wikipedia.org/wiki/MIDI_tuning_standard
types:
  data_format:
    seq:
      - id: id
        type: u2
        enum: data_type
      - id: options
        type: u4
        doc: contains initialisation options for the SndNewChannel function
    instances:
      wave_init_channel_mask:
        value: 0x07
        doc: wave table only, Sound Manager 2.0 and earlier
      wave_init:
        value: options & wave_init_channel_mask
        enum: wave_init_option
        if: id == data_type::wave_table_synth
      init_pan_mask:
        -orig-id: initPanMask
        value: 0x0003
        doc: mask for right/left pan values
      pan_init:
        value: options & init_pan_mask
        enum: init_option
      init_stereo_mask:
        -orig-id: initStereoMask
        value: 0x00C0
        doc: mask for mono/stereo values
      stereo_init:
        value: options & init_stereo_mask
        enum: init_option
      init_comp_mask:
        -orig-id: initCompMask
        value: 0xFF00
        doc: mask for compression IDs
      comp_init:
        value: options & init_comp_mask
        enum: init_option
  sound_command:
    seq:
      - id: is_data_offset
        type: b1
      - id: cmd
        type: b15
        enum: cmd_type
      - id: param1
        type: u2
      - id: param2
        type: u4
    instances:
      sound_header:
        pos: param2
        type: sound_header
        if: is_data_offset and cmd == cmd_type::buffer_cmd
  sound_header:
    seq:
      - size: 0
        if: start_ofs < 0 # invoking the \`start_ofs\` value instance to save the current \`_io.pos\`
      - id: sample_ptr
        -orig-id: samplePtr
        type: u4
        doc: pointer to samples (or 0 if samples follow data structure)
      - id: num_samples
        -orig-id: length
        type: u4
        doc: number of samples
        if: sound_header_type == sound_header_type::standard
      - id: num_channels
        -orig-id: numChannels
        type: u4
        doc: number of channels in sample
        if: sound_header_type == sound_header_type::extended or sound_header_type == sound_header_type::compressed
      - id: sample_rate
        -orig-id: sampleRate
        type: unsigned_fixed_point
        doc: The rate at which the sample was originally recorded.
      - id: loop_start
        -orig-id: loopStart
        type: u4
        doc: loop point beginning
      - id: loop_end
        -orig-id: loopEnd
        type: u4
        doc: loop point ending
      - id: encode
        type: u1
        enum: sound_header_type
        doc: sample's encoding option
      - id: midi_note
        type: u1
        doc: base frequency of sample, expressed as MIDI note values, 60 is middle C
        -orig-id: baseFrequency
      - id: extended_or_compressed
        type: extended_or_compressed
        if: sound_header_type == sound_header_type::extended or sound_header_type == sound_header_type::compressed
      - id: sample_area
        -orig-id: sampleArea
        size: |
          sound_header_type == sound_header_type::standard ? num_samples :
          sound_header_type == sound_header_type::extended ? extended_or_compressed.num_frames * num_channels * extended_or_compressed.bits_per_sample / 8 :
          _io.size - _io.pos
        doc: sampled-sound data
        if: sample_ptr == 0
    instances:
      start_ofs:
        value: _io.pos
      base_freqeuncy:
        value: _root.midi_note_to_frequency[midi_note]
        #TODO: If https://github.com/kaitai-io/kaitai_struct/issues/216 is implemented:
        #TODO: value: (2 ** ((midi_note - 69) / 12)) * 440
        if: midi_note >= 0 and midi_note < 128
        doc: |
          base frequency of sample in Hz
          Calculated with the formula (2 ** ((midi_note - 69) / 12)) * 440
        doc-ref: https://en.wikipedia.org/wiki/MIDI_tuning_standard
      sound_header_type:
        pos: start_ofs + 20
        type: u1
        enum: sound_header_type
  extended_or_compressed:
    seq:
      - id: num_frames
        type: u4
      - id: aiff_sample_rate
        size: 10
        doc: rate of original sample (Extended80)
      - id: marker_chunk
        -orig-id: markerChunk
        type: u4
        doc: reserved
      - id: extended
        type: extended
        if: _parent.sound_header_type == sound_header_type::extended
      - id: compressed
        type: compressed
        if: _parent.sound_header_type == sound_header_type::compressed
      - id: bits_per_sample
        -orig-id: sampleSize
        type: u2
        doc: number of bits per sample
      - id: reserved
        -orig-id: futureUse1, futureUse2, futureUse3, futureUse4
        size: 14
        doc: reserved
        if: _parent.sound_header_type == sound_header_type::extended
  extended:
    seq:
      - id: instrument_chunk_ptr
        -orig-id: instrumentChunks
        type: u4
        doc: pointer to instrument info
      - id: aes_recording_ptr
        -orig-id: AESRecording
        type: u4
        doc: pointer to audio info
  compressed:
    seq:
      - id: format
        size: 4
        type: str
        encoding: ASCII
        doc: data format type
      - id: reserved
        -orig-id: futureUse2
        size: 4
      - id: state_vars_ptr
        -orig-id: stateVars
        type: u4
        doc: pointer to StateBlock
      - id: left_over_samples_ptr
        -orig-id: leftOverSamples
        type: u4
        doc: pointer to LeftOverBlock
      - id: compression_id
        -orig-id: compressionID
        type: s2
        doc: ID of compression algorithm
      - id: packet_size
        -orig-id: packetSize
        type: u2
        doc: number of bits per packet
      - id: synthesizer_id
        -orig-id: snthID
        type: u2
        doc: |
          Latest Sound Manager documentation specifies this field as:
          This field is unused. You should set it to 0.
          Inside Macintosh (Volume VI, 1991) specifies it as:
          Indicates the resource ID number of the 'snth' resource that was used to compress the packets contained in the compressed sound header.
        doc-ref: "https://vintageapple.org/inside_o/pdf/Inside_Macintosh_Volume_VI_1991.pdf Page 22-49, absolute page number 1169 in the PDF"
    instances:
      compression_type:
        value: compression_id
        enum: compression_type_enum
  unsigned_fixed_point:
    seq:
      - id: integer_part
        type: u2
      - id: fraction_part
        type: u2
    instances:
      value:
        value: integer_part + fraction_part/65535.0
enums:
  data_type:
    0x01: square_wave_synth
    0x03: wave_table_synth
    0x05: sampled_synth
  wave_init_option:
    0x04:
      id: channel0
      -orig-id: waveInitChannel0
      doc: Play sounds through the first wave-table channel
    0x05:
      id: channel1
      -orig-id: waveInitChannel1
      doc: Play sounds through the second wave-table channel
    0x06:
      id: channel2
      -orig-id: waveInitChannel2
      doc: Play sounds through the third wave-table channel
    0x07:
      id: channel3
      -orig-id: waveInitChannel3
      doc: Play sounds through the fourth wave-table channel
  init_option:
    0x0002:
      id: chan_left
      -orig-id: initChanLeft
      doc: left stereo channel
    0x0003:
      id: chan_right
      -orig-id: initChanRight
      doc: right stereo channel
    0x0004:
      id: no_interp
      -orig-id: initNoInterp
      doc: no linear interpolation
    0x0008:
      id: no_drop
      -orig-id: initNoDrop
      doc: no drop-sample conversion
    0x0080:
      id: mono
      -orig-id: initMono
      doc: monophonic channel
    0x00C0:
      id: stereo
      -orig-id: initStereo
      doc: stereo channel
    0x0300:
      id: mace3
      -orig-id: initMACE3
      doc: MACE 3:1
    0x0400:
      id: mace6
      -orig-id: initMACE6
      doc: MACE 6:1

  cmd_type:
    0:
      id: null_cmd
      -orig-id: nullCmd
      doc: do nothing
    3:
      id: quiet_cmd
      -orig-id: quietCmd
      doc: stop a sound that is playing
    4:
      id: flush_cmd
      -orig-id: flushCmd
      doc: flush a sound channel
    5:
      id: re_init_cmd
      -orig-id: reInitCmd
      doc: reinitialize a sound channel
    10:
      id: wait_cmd
      -orig-id: waitCmd
      doc: suspend processing in a channel
    11:
      id: pause_cmd
      -orig-id: pauseCmd
      doc: pause processing in a channel
    12:
      id: resume_cmd
      -orig-id: resumeCmd
      doc: resume processing in a channel
    13:
      id: call_back_cmd
      -orig-id: callBackCmd
      doc: execute a callback procedure
    14:
      id: sync_cmd
      -orig-id: syncCmd
      doc: synchronize channels
    15:
      id: empty_cmd
      -orig-id: emptyCmd
      doc: |
        If no other commands are pending in the sound channel after a
        resumeCmd command, the Sound Manager sends an emptyCmd command.
        The emptyCmd command is sent only by the Sound Manager and
        should not be issued by your application.
    24:
      id: available_cmd
      -orig-id: availableCmd
      doc: see if initialization options are supported
    25:
      id: version_cmd
      -orig-id: versionCmd
      doc: determine version
    26:
      id: total_load_cmd
      -orig-id: totalLoadCmd
      doc: report total CPU load
    27:
      id: load_cmd
      -orig-id: loadCmd
      doc: report CPU load for a new channel
    40:
      id: freq_duration_cmd
      -orig-id: freqDurationCmd
      doc: play a note for a duration
    41:
      id: rest_cmd
      -orig-id: restCmd
      doc: rest a channel for a duration
    42:
      id: freq_cmd
      -orig-id: freqCmd
      doc: change the pitch of a sound
    43:
      id: amp_cmd
      -orig-id: ampCmd
      doc: change the amplitude of a sound
    44:
      id: timbre_cmd
      -orig-id: timbreCmd
      doc: change the timbre of a sound
    45:
      id: get_amp_cmd
      -orig-id: getAmpCmd
      doc: get the amplitude of a sound
    46:
      id: volume_cmd
      -orig-id: volumeCmd
      doc: set volume
    47:
      id: get_volume_cmd
      -orig-id: getVolumeCmd
      doc: get volume
    60:
      id: wave_table_cmd
      -orig-id: waveTableCmd
      doc: install a wave table as a voice
    61:
      id: phase_cmd
      -orig-id: phaseCmd
      doc: Not documented
    80:
      id: sound_cmd
      -orig-id: soundCmd
      doc: install a sampled sound as a voice
    81:
      id: buffer_cmd
      -orig-id: bufferCmd
      doc: play a sampled sound
    82:
      id: rate_cmd
      -orig-id: rateCmd
      doc: set the pitch of a sampled sound
    85:
      id: get_rate_cmd
      -orig-id: getRateCmd
      doc: get the pitch of a sampled sound
  sound_header_type:
    0x00: standard
    0xFF: extended
    0xFE: compressed
  compression_type_enum:
    -2: variable_compression
    -1: fixed_compression
    0: not_compressed
    1: two_to_one
    2: eight_to_three
    3: three_to_one
    4: six_to_one
`
  },
  {
    id: "ksy_dcmp_0",
    name: "Compressed Macintosh resource data, Apple `'dcmp' (0)` format",
    category: "macOS",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Compressed Macintosh resource data, Apple `'dcmp' (0)` format",
      originalCategory: "macos",
      filePath: "macos/resource_compression/dcmp_0.ksy",
      endian: "be"
    },
    content: `meta:
  id: dcmp_0
  title: Compressed Macintosh resource data, Apple \`'dcmp' (0)\` format
  application: Mac OS
  license: MIT
  ks-version: "0.8"
  imports:
    - dcmp_variable_length_integer
  endian: be
doc: |
  Compressed resource data in \`'dcmp' (0)\` format,
  as stored in compressed resources with header type \`8\` and decompressor ID \`0\`.

  The \`'dcmp' (0)\` decompressor resource is included in the System file of System 7.0 and later.
  This compression format is used for most compressed resources in System 7.0's files.
  This decompressor is also included with and used by some other Apple applications,
  such as ResEdit.

  This compression format supports some basic general-purpose compression schemes,
  including backreferences to previous data,
  run-length encoding,
  and delta encoding.
  It also includes some types of compression tailored specifically to Mac OS resources,
  including a set of single-byte codes that correspond to entries in a hard-coded lookup table,
  and a specialized kind of delta encoding for segment loader jump tables.

  Almost all parts of this compression format operate on units of 2 or 4 bytes.
  As a result,
  it is nearly impossible to store data with an odd length in this format.
  To work around this limitation,
  odd-length resources are padded with an extra byte before compressing them with this format.
  This extra byte is ignored after decompression,
  as the real (odd) length of the resource is stored in the compressed resource header.

  The \`'dcmp' (1)\` compression format (see dcmp_1.ksy) is very similar to this format,
  with the main difference that it operates mostly on single bytes rather than two-byte units.
doc-ref: 'https://github.com/dgelessus/python-rsrcfork/blob/f891a6e/src/rsrcfork/compress/dcmp0.py'
seq:
  - id: chunks
    type: chunk
    repeat: until
    repeat-until: _.tag == 0xff
    doc: |
      The sequence of chunks that make up the compressed data.
types:
  chunk:
    doc: |
      A single chunk of compressed data.
      Each chunk in the compressed data expands to a sequence of bytes in the uncompressed data,
      except when \`tag == 0xff\`,
      which marks the end of the data and does not correspond to any bytes in the uncompressed data.

      Most chunks are stateless and always expand to the same data,
      regardless of where the chunk appears in the sequence.
      However,
      some chunks affect the behavior of future chunks,
      or expand to different data depending on which chunks came before them.
    seq:
      - id: tag
        type: u1
        doc: |
          The chunk's tag byte.
          This controls the structure of the body and the meaning of the chunk.
      - id: body
        type:
          switch-on: |
            tag >= 0x00 and tag <= 0x1f ? tag_kind::literal
            : tag >= 0x20 and tag <= 0x4a ? tag_kind::backreference
            : tag >= 0x4b and tag <= 0xfd ? tag_kind::table_lookup
            : tag == 0xfe ? tag_kind::extended
            : tag == 0xff ? tag_kind::end
            : tag_kind::invalid
          cases:
            'tag_kind::literal': literal_body(tag)
            'tag_kind::backreference': backreference_body(tag)
            'tag_kind::table_lookup': table_lookup_body(tag)
            'tag_kind::extended': extended_body
            'tag_kind::end': end_body
        doc: |
          The chunk's body.

          Certain chunks do not have any data following the tag byte.
          In this case,
          the body is a zero-length structure.
    enums:
      # Internal enum, only for use in the type switch above.
      # This is a workaround for kaitai-io/kaitai_struct#489.
      tag_kind:
        -1: invalid
        0: literal
        1: backreference
        2: table_lookup
        3: extended
        4: end
    types:
      literal_body:
        doc: |
          The body of a literal data chunk.

          The data that this chunk expands to is stored literally in the body (\`literal\`).
          Optionally,
          the literal data may also be stored for use by future backreference chunks (\`do_store\`).

          The length of the literal data is stored as a number of two-byte units.
          This means that the literal data always has an even length in bytes.
        params:
          - id: tag
            type: u1
            doc: |
              The tag byte preceding this chunk body.
        seq:
          - id: len_literal_div2_separate
            type: u1
            if: is_len_literal_div2_separate
            doc: |
              The length of the literal data,
              in two-byte units.

              This field is only present if the tag byte's low nibble is zero.
              In practice,
              this only happens if the length is 0x10 or greater,
              because smaller lengths can be encoded into the tag byte.
          - id: literal
            size: len_literal
            doc: |
              The literal data.
        instances:
          do_store:
            value: (tag & 0x10) != 0
            doc: |
              Whether this literal should be stored for use by future backreference chunks.

              See the documentation of the \`backreference_body\` type for details about backreference chunks.
          len_literal_div2_in_tag:
            value: tag & 0x0f
            doc: |
              The part of the tag byte that indicates the length of the literal data,
              in two-byte units.
              If this value is 0,
              the length is stored in a separate byte after the tag byte and before the literal data.
          is_len_literal_div2_separate:
            value: len_literal_div2_in_tag == 0
            doc: |
              Whether the length of the literal is stored separately from the tag.
          len_literal_div2:
            value: |
              is_len_literal_div2_separate
              ? len_literal_div2_separate
              : len_literal_div2_in_tag
            doc: |
              The length of the literal data,
              in two-byte units.

              In practice,
              this value is always greater than zero,
              as there is no use in storing a zero-length literal.
          len_literal:
            value: len_literal_div2 * 2
            doc: |
              The length of the literal data,
              in bytes.
      backreference_body:
        doc: |
          The body of a backreference chunk.

          This chunk expands to the data stored in a preceding literal chunk,
          indicated by an index number (\`index\`).
        params:
          - id: tag
            type: u1
            doc: |
              The tag byte preceding this chunk body.
        seq:
          - id: index_separate_minus
            type:
              switch-on: tag
              cases:
                0x20: u1
                0x21: u1
                0x22: u2
            if: is_index_separate
            doc: |
              The index of the referenced literal chunk,
              stored separately from the tag.
              The value in this field is stored minus 0x28.
              If the tag byte is 0x21,
              the value is also stored minus 0x100,
              *on top of* the regular offset
              (i. e. minus 0x128 in total).

              In other words,
              for tag bytes 0x20 and 0x21,
              the index is actually 9 bits large,
              with the low 8 bits stored separately and the highest bit stored in the lowest bit of the tag byte.

              This field is only present if the tag byte is 0x20 through 0x22.
              For higher tag bytes,
              the index is encoded in the tag byte.
              Values smaller than 0x28 cannot be stored in this field,
              they must always be encoded in the tag byte.
        instances:
          is_index_separate:
            value: tag >= 0x20 and tag <= 0x22
            doc: |
              Whether the index is stored separately from the tag.
          index_in_tag:
            value: tag - 0x23
            doc: |
              The index of the referenced literal chunk,
              as stored in the tag byte.
          index_separate:
            value: |
              index_separate_minus + 0x28 + (tag == 0x21 ? 0x100 : 0)
            if: is_index_separate
            doc: |
              The index of the referenced literal chunk,
              as stored separately from the tag byte,
              with the implicit offset corrected for.
          index:
            value: |
              is_index_separate ? index_separate : index_in_tag
            doc: |
              The index of the referenced literal chunk.

              Stored literals are assigned index numbers in the order in which they appear in the compressed data,
              starting at 0.
              Non-stored literals are not counted in the numbering and cannot be referenced using backreferences.
              Once an index is assigned to a stored literal,
              it is never changed or unassigned for the entire length of the compressed data.

              As the name indicates,
              a backreference can only reference stored literal chunks found *before* the backreference,
              not ones that come after it.
      table_lookup_body:
        doc: |
          The body of a table lookup chunk.
          This body is always empty.

          This chunk always expands to two bytes (\`value\`),
          determined from the tag byte using a fixed lookup table (\`lookup_table\`).
          This lookup table is hardcoded in the decompressor and always the same for all compressed data.
        params:
          - id: tag
            type: u1
            doc: |
              The tag byte preceding this chunk body.
        seq: []
        instances:
          lookup_table:
            value: |
              [
                [0x00, 0x00],
                [0x4e, 0xba], [0x00, 0x08], [0x4e, 0x75], [0x00, 0x0c],
                [0x4e, 0xad], [0x20, 0x53], [0x2f, 0x0b], [0x61, 0x00],
                [0x00, 0x10], [0x70, 0x00], [0x2f, 0x00], [0x48, 0x6e],
                [0x20, 0x50], [0x20, 0x6e], [0x2f, 0x2e], [0xff, 0xfc],
                [0x48, 0xe7], [0x3f, 0x3c], [0x00, 0x04], [0xff, 0xf8],
                [0x2f, 0x0c], [0x20, 0x06], [0x4e, 0xed], [0x4e, 0x56],
                [0x20, 0x68], [0x4e, 0x5e], [0x00, 0x01], [0x58, 0x8f],
                [0x4f, 0xef], [0x00, 0x02], [0x00, 0x18], [0x60, 0x00],
                [0xff, 0xff], [0x50, 0x8f], [0x4e, 0x90], [0x00, 0x06],
                [0x26, 0x6e], [0x00, 0x14], [0xff, 0xf4], [0x4c, 0xee],
                [0x00, 0x0a], [0x00, 0x0e], [0x41, 0xee], [0x4c, 0xdf],
                [0x48, 0xc0], [0xff, 0xf0], [0x2d, 0x40], [0x00, 0x12],
                [0x30, 0x2e], [0x70, 0x01], [0x2f, 0x28], [0x20, 0x54],
                [0x67, 0x00], [0x00, 0x20], [0x00, 0x1c], [0x20, 0x5f],
                [0x18, 0x00], [0x26, 0x6f], [0x48, 0x78], [0x00, 0x16],
                [0x41, 0xfa], [0x30, 0x3c], [0x28, 0x40], [0x72, 0x00],
                [0x28, 0x6e], [0x20, 0x0c], [0x66, 0x00], [0x20, 0x6b],
                [0x2f, 0x07], [0x55, 0x8f], [0x00, 0x28], [0xff, 0xfe],
                [0xff, 0xec], [0x22, 0xd8], [0x20, 0x0b], [0x00, 0x0f],
                [0x59, 0x8f], [0x2f, 0x3c], [0xff, 0x00], [0x01, 0x18],
                [0x81, 0xe1], [0x4a, 0x00], [0x4e, 0xb0], [0xff, 0xe8],
                [0x48, 0xc7], [0x00, 0x03], [0x00, 0x22], [0x00, 0x07],
                [0x00, 0x1a], [0x67, 0x06], [0x67, 0x08], [0x4e, 0xf9],
                [0x00, 0x24], [0x20, 0x78], [0x08, 0x00], [0x66, 0x04],
                [0x00, 0x2a], [0x4e, 0xd0], [0x30, 0x28], [0x26, 0x5f],
                [0x67, 0x04], [0x00, 0x30], [0x43, 0xee], [0x3f, 0x00],
                [0x20, 0x1f], [0x00, 0x1e], [0xff, 0xf6], [0x20, 0x2e],
                [0x42, 0xa7], [0x20, 0x07], [0xff, 0xfa], [0x60, 0x02],
                [0x3d, 0x40], [0x0c, 0x40], [0x66, 0x06], [0x00, 0x26],
                [0x2d, 0x48], [0x2f, 0x01], [0x70, 0xff], [0x60, 0x04],
                [0x18, 0x80], [0x4a, 0x40], [0x00, 0x40], [0x00, 0x2c],
                [0x2f, 0x08], [0x00, 0x11], [0xff, 0xe4], [0x21, 0x40],
                [0x26, 0x40], [0xff, 0xf2], [0x42, 0x6e], [0x4e, 0xb9],
                [0x3d, 0x7c], [0x00, 0x38], [0x00, 0x0d], [0x60, 0x06],
                [0x42, 0x2e], [0x20, 0x3c], [0x67, 0x0c], [0x2d, 0x68],
                [0x66, 0x08], [0x4a, 0x2e], [0x4a, 0xae], [0x00, 0x2e],
                [0x48, 0x40], [0x22, 0x5f], [0x22, 0x00], [0x67, 0x0a],
                [0x30, 0x07], [0x42, 0x67], [0x00, 0x32], [0x20, 0x28],
                [0x00, 0x09], [0x48, 0x7a], [0x02, 0x00], [0x2f, 0x2b],
                [0x00, 0x05], [0x22, 0x6e], [0x66, 0x02], [0xe5, 0x80],
                [0x67, 0x0e], [0x66, 0x0a], [0x00, 0x50], [0x3e, 0x00],
                [0x66, 0x0c], [0x2e, 0x00], [0xff, 0xee], [0x20, 0x6d],
                [0x20, 0x40], [0xff, 0xe0], [0x53, 0x40], [0x60, 0x08],
                [0x04, 0x80], [0x00, 0x68], [0x0b, 0x7c], [0x44, 0x00],
                [0x41, 0xe8], [0x48, 0x41],
              ]
            doc: |
              Fixed lookup table that maps tag byte numbers to two bytes each.

              The entries in the lookup table are offset -
              index 0 stands for tag 0x4b, 1 for 0x4c, etc.
          value:
            value: lookup_table[tag - 0x4b]
            doc: |
              The two bytes that the tag byte expands to,
              based on the fixed lookup table.
      extended_body:
        doc: |
          The body of an extended chunk.
          The meaning of this chunk depends on the extended tag byte stored in the chunk data.
        seq:
          - id: tag
            type: u1
            doc: |
              The chunk's extended tag byte.
              This controls the structure of the body and the meaning of the chunk.
          - id: body
            type:
              switch-on: tag
              cases:
                0x00: jump_table_body
                0x02: repeat_body(tag)
                0x03: repeat_body(tag)
                0x04: delta_encoding_16_bit_body
                0x06: delta_encoding_32_bit_body
            doc: |
              The chunk's body.
        types:
          jump_table_body:
            doc: |
              The body of a jump table chunk.

              This chunk generates parts of a segment loader jump table,
              in the format found in \`'CODE' (0)\` resources.
              It expands to the following data,
              with all non-constant numbers encoded as unsigned 16-bit big-endian integers:

              * \`0x3f 0x3c\` (push following segment number onto stack)
              * The segment number
              * \`0xa9 0xf0\` (\`_LoadSeg\` trap)
              * For each address:
                * The address
                * \`0x3f 0x3c\` (push following segment number onto stack)
                * The segment number
                * \`0xa9 0xf0\` (\`_LoadSeg\` trap)

              Note that this generates one jump table entry without an address before it,
              meaning that this address needs to be generated by the preceding chunk.
              All following jump table entries are generated with the addresses encoded in this chunk.
            seq:
              - id: segment_number_raw
                type: dcmp_variable_length_integer
                doc: |
                  Raw variable-length integer representation of \`segment_number\`.
              - id: num_addresses_raw
                type: dcmp_variable_length_integer
                doc: |
                  Raw variable-length integer representation of \`num_addresses\`.
              - id: addresses_raw
                type: dcmp_variable_length_integer
                repeat: expr
                repeat-expr: num_addresses
                doc: |
                  The addresses for each generated jump table entry,
                  stored as variable-length integers.

                  The first address is stored literally and must be in the range \`0x0 <= x <= 0xffff\`,
                  i. e. an unsigned 16-bit integer.

                  All following addresses are stored as deltas relative to the previous address.
                  Each of these deltas is stored plus 6;
                  this value needs to be subtracted before (or after) adding it to the previous address.

                  Each delta (after subtracting 6) should be positive,
                  and adding it to the previous address should not result in a value larger than \`0xffff\`,
                  i. e. there should be no 16-bit unsigned integer wraparound.
                  These conditions are always met in all known jump table chunks,
                  so it is not known how the original decompressor behaves otherwise.
            instances:
              segment_number:
                value: segment_number_raw.value
                doc: |
                  The segment number for all of the generated jump table entries.

                  Although it is stored as a variable-length integer,
                  the segment number must be in the range \`0x0 <= x <= 0xffff\`,
                  i. e. an unsigned 16-bit integer.
              num_addresses:
                value: num_addresses_raw.value
                doc: |
                  The number of addresses stored in this chunk.

                  This number must be greater than 0.
          repeat_body:
            doc: |
              The body of a repeat chunk.

              This chunk expands to a 1-byte or 2-byte value repeated a number of times,
              i. e. it implements a form of run-length encoding.
            params:
              - id: tag
                type: u1
                doc: |
                  The extended tag byte preceding this chunk body.
            seq:
              - id: to_repeat_raw
                type: dcmp_variable_length_integer
                doc: |
                  Raw variable-length integer representation of \`to_repeat\`.
              - id: repeat_count_m1_raw
                type: dcmp_variable_length_integer
                doc: |
                  Raw variable-length integer representation of \`repeat_count_m1\`.
            instances:
              byte_count:
                value: |
                  tag == 0x02 ? 1
                  : tag == 0x03 ? 2
                  : -1
                doc: |
                  The length in bytes of the value to be repeated.
                  Regardless of the byte count,
                  the value to be repeated is stored as a variable-length integer.
              to_repeat:
                value: to_repeat_raw.value
                doc: |
                  The value to repeat.

                  Although it is stored as a variable-length integer,
                  this value must fit into an unsigned big-endian integer that is as long as \`byte_count\`,
                  i. e. either 8 or 16 bits.
              repeat_count_m1:
                value: repeat_count_m1_raw.value
                doc: |
                  The number of times to repeat the value,
                  minus one.

                  This value must not be negative.
              repeat_count:
                value: repeat_count_m1 + 1
                doc: |
                  The number of times to repeat the value.

                  This value must be positive.
          delta_encoding_16_bit_body:
            doc: |
              The body of a 16-bit delta encoding chunk.

              This chunk expands to a sequence of 16-bit big-endian integer values.
              The first value is stored literally.
              All following values are stored as deltas relative to the previous value.
            seq:
              - id: first_value_raw
                type: dcmp_variable_length_integer
                doc: |
                  Raw variable-length integer representation of \`first_value\`.
              - id: num_deltas_raw
                type: dcmp_variable_length_integer
                doc: |
                  Raw variable-length integer representation of \`num_deltas\`.
              - id: deltas
                type: s1
                repeat: expr
                repeat-expr: num_deltas
                doc: |
                  The deltas for each value relative to the previous value.

                  Each of these deltas is a signed 8-bit value.
                  When adding the delta to the previous value,
                  16-bit integer wraparound is performed if necessary,
                  so that the resulting value always fits into a 16-bit signed integer.
            instances:
              first_value:
                value: first_value_raw.value
                doc: |
                  The first value in the sequence.

                  Although it is stored as a variable-length integer,
                  this value must be in the range \`-0x8000 <= x <= 0x7fff\`,
                  i. e. a signed 16-bit integer.
              num_deltas:
                value: num_deltas_raw.value
                doc: |
                  The number of deltas stored in this chunk.

                  This number must not be negative.
          delta_encoding_32_bit_body:
            doc: |
              The body of a 32-bit delta encoding chunk.

              This chunk expands to a sequence of 32-bit big-endian integer values.
              The first value is stored literally.
              All following values are stored as deltas relative to the previous value.
            seq:
              - id: first_value_raw
                type: dcmp_variable_length_integer
                doc: |
                  Raw variable-length integer representation of \`first_value\`.
              - id: num_deltas_raw
                type: dcmp_variable_length_integer
                doc: |
                  Raw variable-length integer representation of \`num_deltas\`.
              - id: deltas_raw
                type: dcmp_variable_length_integer
                repeat: expr
                repeat-expr: num_deltas
                doc: |
                  The deltas for each value relative to the previous value,
                  stored as variable-length integers.

                  Each of these deltas is a signed value.
                  When adding the delta to the previous value,
                  32-bit integer wraparound is performed if necessary,
                  so that the resulting value always fits into a 32-bit signed integer.
            instances:
              first_value:
                value: first_value_raw.value
                doc: |
                  The first value in the sequence.
              num_deltas:
                value: num_deltas_raw.value
                doc: |
                  The number of deltas stored in this chunk.

                  This number must not be negative.
      end_body:
        doc: |
          The body of an end chunk.
          This body is always empty.

          The last chunk in the compressed data must always be an end chunk.
          An end chunk cannot appear elsewhere in the compressed data.
        seq: []
`
  },
  {
    id: "ksy_dcmp_1",
    name: "Compressed Macintosh resource data, Apple `'dcmp' (1)` format",
    category: "macOS",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Compressed Macintosh resource data, Apple `'dcmp' (1)` format",
      originalCategory: "macos",
      filePath: "macos/resource_compression/dcmp_1.ksy",
      endian: "be"
    },
    content: `meta:
  id: dcmp_1
  title: Compressed Macintosh resource data, Apple \`'dcmp' (1)\` format
  application: Mac OS
  license: MIT
  ks-version: "0.8"
  imports:
    - dcmp_variable_length_integer
  endian: be
doc: |
  Compressed resource data in \`'dcmp' (1)\` format,
  as stored in compressed resources with header type \`8\` and decompressor ID \`1\`.

  The \`'dcmp' (1)\` decompressor resource is included in the System file of System 7.0 and later.
  This compression format is used for a few compressed resources in System 7.0's files
  (such as the Finder Help file).
  This decompressor is also included with and used by some other Apple applications,
  such as ResEdit.
  (Note: ResEdit includes the \`'dcmp' (1)\` resource,
  but none of its resources actually use this decompressor.)

  This compression format supports some basic general-purpose compression schemes,
  including backreferences to previous data and run-length encoding.
  It also includes some types of compression tailored specifically to Mac OS resources,
  including a set of single-byte codes that correspond to entries in a hard-coded lookup table.

  The \`'dcmp' (0)\` compression format (see dcmp_0.ksy) is very similar to this format,
  with the main difference that it operates mostly on units of 2 or 4 bytes.
  This makes the \`\`dcmp' (0)\` format more suitable for word-aligned data,
  such as executable code, bitmaps, sounds, etc.
  The \`'dcmp' (0)\` format also appears to be generally preferred over \`'dcmp' (1)\`,
  with the latter only being used in resource files that contain mostly unaligned data,
  such as text.
doc-ref: 'https://github.com/dgelessus/python-rsrcfork/blob/f891a6e/src/rsrcfork/compress/dcmp1.py'
seq:
  - id: chunks
    type: chunk
    repeat: until
    repeat-until: _.tag == 0xff
    doc: |
      The sequence of chunks that make up the compressed data.
types:
  chunk:
    doc: |
      A single chunk of compressed data.
      Each chunk in the compressed data expands to a sequence of bytes in the uncompressed data,
      except when \`tag == 0xff\`,
      which marks the end of the data and does not correspond to any bytes in the uncompressed data.

      Most chunks are stateless and always expand to the same data,
      regardless of where the chunk appears in the sequence.
      However,
      some chunks affect the behavior of future chunks,
      or expand to different data depending on which chunks came before them.
    seq:
      - id: tag
        type: u1
        doc: |
          The chunk's tag byte.
          This controls the structure of the body and the meaning of the chunk.
      - id: body
        type:
          switch-on: |
            tag >= 0x00 and tag <= 0x1f ? tag_kind::literal
            : tag >= 0x20 and tag <= 0xcf ? tag_kind::backreference
            : tag >= 0xd0 and tag <= 0xd1 ? tag_kind::literal
            : tag == 0xd2 ? tag_kind::backreference
            : tag >= 0xd5 and tag <= 0xfd ? tag_kind::table_lookup
            : tag == 0xfe ? tag_kind::extended
            : tag == 0xff ? tag_kind::end
            : tag_kind::invalid
          cases:
            'tag_kind::literal': literal_body(tag)
            'tag_kind::backreference': backreference_body(tag)
            'tag_kind::table_lookup': table_lookup_body(tag)
            'tag_kind::extended': extended_body
            'tag_kind::end': end_body
        doc: |
          The chunk's body.

          Certain chunks do not have any data following the tag byte.
          In this case,
          the body is a zero-length structure.
    enums:
      # Internal enum, only for use in the type switch above.
      # This is a workaround for kaitai-io/kaitai_struct#489.
      tag_kind:
        -1: invalid
        0: literal
        1: backreference
        2: table_lookup
        3: extended
        4: end
    types:
      literal_body:
        doc: |
          The body of a literal data chunk.

          The data that this chunk expands to is stored literally in the body (\`literal\`).
          Optionally,
          the literal data may also be stored for use by future backreference chunks (\`do_store\`).
        params:
          - id: tag
            type: u1
            doc: |
              The tag byte preceding this chunk body.
        seq:
          - id: len_literal_separate
            type: u1
            if: is_len_literal_separate
            doc: |
              The length of the literal data,
              in bytes.

              This field is only present if the tag byte is 0xd0 or 0xd1.
              In practice,
              this only happens if the length is 0x11 or greater,
              because smaller lengths can be encoded into the tag byte.
          - id: literal
            size: len_literal
            doc: |
              The literal data.
        instances:
          do_store:
            value: |
              is_len_literal_separate ? tag == 0xd1 : (tag & 0x10) != 0
            doc: |
              Whether this literal should be stored for use by future backreference chunks.

              See the documentation of the \`backreference_body\` type for details about backreference chunks.
          len_literal_m1_in_tag:
            value: tag & 0x0f
            if: not is_len_literal_separate
            doc: |
              The part of the tag byte that indicates the length of the literal data,
              in bytes,
              minus one.

              If the tag byte is 0xd0 or 0xd1,
              the length is stored in a separate byte after the tag byte and before the literal data.
          is_len_literal_separate:
            value: tag >= 0xd0
            doc: |
              Whether the length of the literal is stored separately from the tag.
          len_literal:
            value: |
              is_len_literal_separate
              ? len_literal_separate
              : len_literal_m1_in_tag + 1
            doc: |
              The length of the literal data,
              in bytes.

              In practice,
              this value is always greater than zero,
              as there is no use in storing a zero-length literal.
      backreference_body:
        doc: |
          The body of a backreference chunk.

          This chunk expands to the data stored in a preceding literal chunk,
          indicated by an index number (\`index\`).
        params:
          - id: tag
            type: u1
            doc: |
              The tag byte preceding this chunk body.
        seq:
          - id: index_separate_minus
            type: u1
            if: is_index_separate
            doc: |
              The index of the referenced literal chunk,
              stored separately from the tag.
              The value in this field is stored minus 0xb0.

              This field is only present if the tag byte is 0xd2.
              For other tag bytes,
              the index is encoded in the tag byte.
              Values smaller than 0xb0 cannot be stored in this field,
              they must always be encoded in the tag byte.
        instances:
          is_index_separate:
            value: tag == 0xd2
            doc: |
              Whether the index is stored separately from the tag.
          index_in_tag:
            value: tag - 0x20
            doc: |
              The index of the referenced literal chunk,
              as stored in the tag byte.
          index_separate:
            value: |
              index_separate_minus + 0xb0
            if: is_index_separate
            doc: |
              The index of the referenced literal chunk,
              as stored separately from the tag byte,
              with the implicit offset corrected for.
          index:
            value: |
              is_index_separate ? index_separate : index_in_tag
            doc: |
              The index of the referenced literal chunk.

              Stored literals are assigned index numbers in the order in which they appear in the compressed data,
              starting at 0.
              Non-stored literals are not counted in the numbering and cannot be referenced using backreferences.
              Once an index is assigned to a stored literal,
              it is never changed or unassigned for the entire length of the compressed data.

              As the name indicates,
              a backreference can only reference stored literal chunks found *before* the backreference,
              not ones that come after it.
      table_lookup_body:
        doc: |
          The body of a table lookup chunk.
          This body is always empty.

          This chunk always expands to two bytes (\`value\`),
          determined from the tag byte using a fixed lookup table (\`lookup_table\`).
          This lookup table is hardcoded in the decompressor and always the same for all compressed data.
        params:
          - id: tag
            type: u1
            doc: |
              The tag byte preceding this chunk body.
        seq: []
        instances:
          lookup_table:
            value: |
              [
                [0x00, 0x00], [0x00, 0x01], [0x00, 0x02],
                [0x00, 0x03], [0x2e, 0x01], [0x3e, 0x01], [0x01, 0x01],
                [0x1e, 0x01], [0xff, 0xff], [0x0e, 0x01], [0x31, 0x00],
                [0x11, 0x12], [0x01, 0x07], [0x33, 0x32], [0x12, 0x39],
                [0xed, 0x10], [0x01, 0x27], [0x23, 0x22], [0x01, 0x37],
                [0x07, 0x06], [0x01, 0x17], [0x01, 0x23], [0x00, 0xff],
                [0x00, 0x2f], [0x07, 0x0e], [0xfd, 0x3c], [0x01, 0x35],
                [0x01, 0x15], [0x01, 0x02], [0x00, 0x07], [0x00, 0x3e],
                [0x05, 0xd5], [0x02, 0x01], [0x06, 0x07], [0x07, 0x08],
                [0x30, 0x01], [0x01, 0x33], [0x00, 0x10], [0x17, 0x16],
                [0x37, 0x3e], [0x36, 0x37],
              ]
            doc: |
              Fixed lookup table that maps tag byte numbers to two bytes each.

              The entries in the lookup table are offset -
              index 0 stands for tag 0xd5, 1 for 0xd6, etc.
          value:
            value: lookup_table[tag - 0xd5]
            doc: |
              The two bytes that the tag byte expands to,
              based on the fixed lookup table.
      extended_body:
        doc: |
          The body of an extended chunk.
          The meaning of this chunk depends on the extended tag byte stored in the chunk data.
        seq:
          - id: tag
            type: u1
            doc: |
              The chunk's extended tag byte.
              This controls the structure of the body and the meaning of the chunk.
          - id: body
            type:
              switch-on: tag
              cases:
                0x02: repeat_body
            doc: |
              The chunk's body.
        types:
          repeat_body:
            doc: |
              The body of a repeat chunk.

              This chunk expands to the same byte repeated a number of times,
              i. e. it implements a form of run-length encoding.
            seq:
              - id: to_repeat_raw
                type: dcmp_variable_length_integer
                doc: |
                  Raw variable-length integer representation of \`to_repeat\`.
              - id: repeat_count_m1_raw
                type: dcmp_variable_length_integer
                doc: |
                  Raw variable-length integer representation of \`repeat_count_m1\`.
            instances:
              to_repeat:
                value: to_repeat_raw.value
                doc: |
                  The value to repeat.

                  Although it is stored as a variable-length integer,
                  this value must fit into an unsigned 8-bit integer.
              repeat_count_m1:
                value: repeat_count_m1_raw.value
                doc: |
                  The number of times to repeat the value,
                  minus one.

                  This value must not be negative.
              repeat_count:
                value: repeat_count_m1 + 1
                doc: |
                  The number of times to repeat the value.

                  This value must be positive.
      end_body:
        doc: |
          The body of an end chunk.
          This body is always empty.

          The last chunk in the compressed data must always be an end chunk.
          An end chunk cannot appear elsewhere in the compressed data.
        seq: []
`
  },
  {
    id: "ksy_dcmp_2",
    name: "Compressed Macintosh resource data, Apple `'dcmp' (2)` format",
    category: "macOS",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Compressed Macintosh resource data, Apple `'dcmp' (2)` format",
      originalCategory: "macos",
      filePath: "macos/resource_compression/dcmp_2.ksy",
      endian: "be"
    },
    content: `meta:
  id: dcmp_2
  title: Compressed Macintosh resource data, Apple \`'dcmp' (2)\` format
  application: Mac OS
  license: MIT
  ks-version: "0.8"
  imports:
    - /common/bytes_with_io
  endian: be
doc: |
  Compressed resource data in \`'dcmp' (2)\` format,
  as stored in compressed resources with header type \`9\` and decompressor ID \`2\`.

  The \`'dcmp' (2)\` decompressor resource is included in the System file of System 7.0 and later.
  This compression format is used for a few compressed resources in System 7.0's files
  (such as the System file).
  This decompressor is also included with and used by some other Apple applications,
  such as ResEdit.
  (Note: ResEdit includes the \`'dcmp' (2)\` resource,
  but none of its resources actually use this decompressor.)

  This compression format is based on simple dictionary coding,
  where each byte in the compressed data expands to two bytes,
  based on a lookup table
  (either included in the compressed data or provided by the decompressor).
  An alternative "tagged" compression format is also supported,
  which allows using two-byte literals in addition to single-byte table references,
  at the cost of requiring an extra "tag" byte every 16 output bytes,
  to differentiate literals and table references.
doc-ref: 'https://github.com/dgelessus/python-rsrcfork/blob/f891a6e/src/rsrcfork/compress/dcmp2.py'
params:
  - id: len_decompressed
    type: u4
    doc: |
      The length of the decompressed data in bytes,
      from the compressed resource header.
  - id: header_parameters_with_io
    type: bytes_with_io
    doc: |
      The unparsed decompressor-specific parameters,
      from the compressed resource header.
seq:
  - id: custom_lookup_table
    size: 2
    repeat: expr
    repeat-expr: header_parameters.num_custom_lookup_table_entries
    if: header_parameters.flags.has_custom_lookup_table
    doc: |
      The custom lookup table to be used instead of the default lookup table.
  - id: data
    type:
      switch-on: header_parameters.flags.tagged
      cases:
        true: tagged_data
        # _ is equivalent to false here.
        # This is a workaround for kaitai-io/kaitai_struct#208 to make the compiler understand that the switch only has two cases,
        # so that it doesn't generate a third default case that maps to a byte array type.
        _: untagged_data
    # The data extends to one byte before EOS if the decompressed length is odd,
    # and otherwise extends completely to EOS.
    size: |
      _io.size - _io.pos - (is_len_decompressed_odd ? 1 : 0)
    doc: |
      The compressed data.
      The structure of the data varies depending on whether the "tagged" or "untagged" variant of the compression format is used.
  - id: last_byte
    size: 1
    if: is_len_decompressed_odd
    doc: |
      The last byte of the decompressed data,
      stored literally.
      Only present if the decompressed data has an odd length.

      This special case is necessary because the compressed data is otherwise always stored in two-byte groups,
      either literally or as table references,
      so otherwise there would be no way to compress odd-length resources using this format.
instances:
  header_parameters:
    io: header_parameters_with_io._io
    pos: 0
    type: header_parameters
    doc: |
      The parsed decompressor-specific parameters from the compressed resource header.
  is_len_decompressed_odd:
    value: len_decompressed % 2 != 0
    doc: |
      Whether the length of the decompressed data is odd.
      This affects the meaning of the last byte of the compressed data.
  default_lookup_table:
    value: |
      [
        [0x00, 0x00], [0x00, 0x08], [0x4e, 0xba], [0x20, 0x6e],
        [0x4e, 0x75], [0x00, 0x0c], [0x00, 0x04], [0x70, 0x00],
        [0x00, 0x10], [0x00, 0x02], [0x48, 0x6e], [0xff, 0xfc],
        [0x60, 0x00], [0x00, 0x01], [0x48, 0xe7], [0x2f, 0x2e],
        [0x4e, 0x56], [0x00, 0x06], [0x4e, 0x5e], [0x2f, 0x00],
        [0x61, 0x00], [0xff, 0xf8], [0x2f, 0x0b], [0xff, 0xff],
        [0x00, 0x14], [0x00, 0x0a], [0x00, 0x18], [0x20, 0x5f],
        [0x00, 0x0e], [0x20, 0x50], [0x3f, 0x3c], [0xff, 0xf4],
        [0x4c, 0xee], [0x30, 0x2e], [0x67, 0x00], [0x4c, 0xdf],
        [0x26, 0x6e], [0x00, 0x12], [0x00, 0x1c], [0x42, 0x67],
        [0xff, 0xf0], [0x30, 0x3c], [0x2f, 0x0c], [0x00, 0x03],
        [0x4e, 0xd0], [0x00, 0x20], [0x70, 0x01], [0x00, 0x16],
        [0x2d, 0x40], [0x48, 0xc0], [0x20, 0x78], [0x72, 0x00],
        [0x58, 0x8f], [0x66, 0x00], [0x4f, 0xef], [0x42, 0xa7],
        [0x67, 0x06], [0xff, 0xfa], [0x55, 0x8f], [0x28, 0x6e],
        [0x3f, 0x00], [0xff, 0xfe], [0x2f, 0x3c], [0x67, 0x04],
        [0x59, 0x8f], [0x20, 0x6b], [0x00, 0x24], [0x20, 0x1f],
        [0x41, 0xfa], [0x81, 0xe1], [0x66, 0x04], [0x67, 0x08],
        [0x00, 0x1a], [0x4e, 0xb9], [0x50, 0x8f], [0x20, 0x2e],
        [0x00, 0x07], [0x4e, 0xb0], [0xff, 0xf2], [0x3d, 0x40],
        [0x00, 0x1e], [0x20, 0x68], [0x66, 0x06], [0xff, 0xf6],
        [0x4e, 0xf9], [0x08, 0x00], [0x0c, 0x40], [0x3d, 0x7c],
        [0xff, 0xec], [0x00, 0x05], [0x20, 0x3c], [0xff, 0xe8],
        [0xde, 0xfc], [0x4a, 0x2e], [0x00, 0x30], [0x00, 0x28],
        [0x2f, 0x08], [0x20, 0x0b], [0x60, 0x02], [0x42, 0x6e],
        [0x2d, 0x48], [0x20, 0x53], [0x20, 0x40], [0x18, 0x00],
        [0x60, 0x04], [0x41, 0xee], [0x2f, 0x28], [0x2f, 0x01],
        [0x67, 0x0a], [0x48, 0x40], [0x20, 0x07], [0x66, 0x08],
        [0x01, 0x18], [0x2f, 0x07], [0x30, 0x28], [0x3f, 0x2e],
        [0x30, 0x2b], [0x22, 0x6e], [0x2f, 0x2b], [0x00, 0x2c],
        [0x67, 0x0c], [0x22, 0x5f], [0x60, 0x06], [0x00, 0xff],
        [0x30, 0x07], [0xff, 0xee], [0x53, 0x40], [0x00, 0x40],
        [0xff, 0xe4], [0x4a, 0x40], [0x66, 0x0a], [0x00, 0x0f],
        [0x4e, 0xad], [0x70, 0xff], [0x22, 0xd8], [0x48, 0x6b],
        [0x00, 0x22], [0x20, 0x4b], [0x67, 0x0e], [0x4a, 0xae],
        [0x4e, 0x90], [0xff, 0xe0], [0xff, 0xc0], [0x00, 0x2a],
        [0x27, 0x40], [0x67, 0x02], [0x51, 0xc8], [0x02, 0xb6],
        [0x48, 0x7a], [0x22, 0x78], [0xb0, 0x6e], [0xff, 0xe6],
        [0x00, 0x09], [0x32, 0x2e], [0x3e, 0x00], [0x48, 0x41],
        [0xff, 0xea], [0x43, 0xee], [0x4e, 0x71], [0x74, 0x00],
        [0x2f, 0x2c], [0x20, 0x6c], [0x00, 0x3c], [0x00, 0x26],
        [0x00, 0x50], [0x18, 0x80], [0x30, 0x1f], [0x22, 0x00],
        [0x66, 0x0c], [0xff, 0xda], [0x00, 0x38], [0x66, 0x02],
        [0x30, 0x2c], [0x20, 0x0c], [0x2d, 0x6e], [0x42, 0x40],
        [0xff, 0xe2], [0xa9, 0xf0], [0xff, 0x00], [0x37, 0x7c],
        [0xe5, 0x80], [0xff, 0xdc], [0x48, 0x68], [0x59, 0x4f],
        [0x00, 0x34], [0x3e, 0x1f], [0x60, 0x08], [0x2f, 0x06],
        [0xff, 0xde], [0x60, 0x0a], [0x70, 0x02], [0x00, 0x32],
        [0xff, 0xcc], [0x00, 0x80], [0x22, 0x51], [0x10, 0x1f],
        [0x31, 0x7c], [0xa0, 0x29], [0xff, 0xd8], [0x52, 0x40],
        [0x01, 0x00], [0x67, 0x10], [0xa0, 0x23], [0xff, 0xce],
        [0xff, 0xd4], [0x20, 0x06], [0x48, 0x78], [0x00, 0x2e],
        [0x50, 0x4f], [0x43, 0xfa], [0x67, 0x12], [0x76, 0x00],
        [0x41, 0xe8], [0x4a, 0x6e], [0x20, 0xd9], [0x00, 0x5a],
        [0x7f, 0xff], [0x51, 0xca], [0x00, 0x5c], [0x2e, 0x00],
        [0x02, 0x40], [0x48, 0xc7], [0x67, 0x14], [0x0c, 0x80],
        [0x2e, 0x9f], [0xff, 0xd6], [0x80, 0x00], [0x10, 0x00],
        [0x48, 0x42], [0x4a, 0x6b], [0xff, 0xd2], [0x00, 0x48],
        [0x4a, 0x47], [0x4e, 0xd1], [0x20, 0x6f], [0x00, 0x41],
        [0x60, 0x0c], [0x2a, 0x78], [0x42, 0x2e], [0x32, 0x00],
        [0x65, 0x74], [0x67, 0x16], [0x00, 0x44], [0x48, 0x6d],
        [0x20, 0x08], [0x48, 0x6c], [0x0b, 0x7c], [0x26, 0x40],
        [0x04, 0x00], [0x00, 0x68], [0x20, 0x6d], [0x00, 0x0d],
        [0x2a, 0x40], [0x00, 0x0b], [0x00, 0x3e], [0x02, 0x20],
      ]
    doc: |
      The default lookup table,
      which is used if no custom lookup table is included with the compressed data.
  lookup_table:
    value: |
      header_parameters.flags.has_custom_lookup_table
      ? custom_lookup_table
      : default_lookup_table
    doc: |
      The lookup table to be used for this compressed data.
types:
  header_parameters:
    doc: |
      Decompressor-specific parameters for this compression format,
      as stored in the compressed resource header.
    seq:
      - id: unknown
        type: u2
        doc: |
          The meaning of this field is unknown.
          It does not appear to have any effect on the format of the compressed data or the decompression process.

          The value of this field is usually zero and otherwise a small integer (< 10).
          For \`'lpch'\` resources,
          the value is always nonzero,
          and sometimes larger than usual.
      - id: num_custom_lookup_table_entries_m1
        type: u1
        doc: |
          The number of entries in the custom lookup table,
          minus one.

          If the default lookup table is used rather than a custom one,
          this value is zero.
      - id: flags
        type: flags
        doc: |
          Various flags that affect the format of the compressed data and the decompression process.
    instances:
      num_custom_lookup_table_entries:
        value: num_custom_lookup_table_entries_m1 + 1
        if: flags.has_custom_lookup_table
        doc: |
          The number of entries in the custom lookup table.
          Only used if a custom lookup table is present.
    types:
      flags:
        doc: |
          Flags for the decompressor,
          as stored in the decompressor-specific parameters.
        seq:
          - id: reserved
            type: b6
            doc: |
              These flags have no known usage or meaning and should always be zero.
          - id: tagged
            type: b1
            doc: |
              Whether the "tagged" variant of this compression format should be used,
              rather than the default "untagged" variant.
          - id: has_custom_lookup_table
            type: b1
            doc: |
              Whether a custom lookup table is included before the compressed data,
              which should be used instead of the default hardcoded lookup table.
        instances:
          as_int:
            pos: 0
            type: u1
            doc: |
              The flags as a packed integer,
              as they are stored in the data.
  untagged_data:
    doc: |
      Compressed data in the "untagged" variant of the format.
    seq:
      - id: table_references
        type: u1
        repeat: eos
        doc: |
          References into the lookup table.
          Each reference is an integer that is expanded to two bytes by looking it up in the table.
  tagged_data:
    doc: |
      Compressed data in the "tagged" variant of the format.
    seq:
      - id: chunks
        type: chunk
        repeat: eos
        doc: |
          The tagged chunks that make up the compressed data.
    types:
      chunk:
        doc: |
          A single tagged chunk of compressed data.

          Each chunk expands to 16 bytes of decompressed data.
          In compressed form,
          the chunks have a variable length
          (between 9 and 17 bytes)
          depending on the value of the tag byte.
        seq:
          - id: tag
            type: b1
            repeat: expr
            repeat-expr: 8
            doc: |
              The bits of the tag byte control the format and meaning of the 8 compressed data units that follow the tag byte.
          - id: units
            type:
              switch-on: tag[_index]
              cases:
                true: u1
                # If false, the type is unset, i. e. a byte array.
            # This size attribute is necessary when the tag bit is false,
            # to set the size of the byte array to 2.
            # When the tag bit is true,
            # the size is implicitly set by the u1 type,
            # so this attribute is redundant.
            # However there is no way to set the size attribute only conditionally,
            # so we need to include a value in all cases,
            # even when the tag bit is true and an explicit size is not normally necessary.
            size: |
              tag[_index] ? 1 : 2
            repeat: until
            repeat-until: _index >= 7 or _io.eof
            doc: |
              The compressed data units in this chunk.

              The format and meaning of each unit is controlled by the bit in the tag byte with the same index.
              If the bit is 0 (false),
              the unit is a pair of bytes,
              which are literally copied to the decompressed data.
              If the bit is 1 (true),
              the unit is a reference into the lookup table,
              an integer which is expanded to two bytes by looking it up in the table.
`
  },
  {
    id: "ksy_dcmp_variable_length_integer",
    name: "Variable-length integer used in Apple `'dcmp' (0)` and `'dcmp' (1)` compressed resource formats",
    category: "macOS",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Variable-length integer used in Apple `'dcmp' (0)` and `'dcmp' (1)` compressed resource formats",
      originalCategory: "macos",
      filePath: "macos/resource_compression/dcmp_variable_length_integer.ksy",
      endian: "be"
    },
    content: `meta:
  id: dcmp_variable_length_integer
  title: Variable-length integer used in Apple \`'dcmp' (0)\` and \`'dcmp' (1)\` compressed resource formats
  application: Mac OS
  license: MIT
  ks-version: "0.8"
  endian: be
doc: |
  A variable-length integer,
  in the format used by the 0xfe chunks in the \`'dcmp' (0)\` and \`'dcmp' (1)\` resource compression formats.
  See the dcmp_0 and dcmp_1 specs for more information about these compression formats.

  This variable-length integer format can store an integer \`x\` in any of the following ways:

  * In a single byte,
    if \`0 <= x <= 0x7f\`
    (7-bit unsigned integer)
  * In 2 bytes,
    if \`-0x4000 <= x <= 0x3eff\`
    (15-bit signed integer with the highest \`0x100\` values unavailable)
  * In 5 bytes, if \`-0x80000000 <= x <= 0x7fffffff\`
    (32-bit signed integer)

  In practice,
  values are always stored in the smallest possible format,
  but technically any of the larger formats could be used as well.
doc-ref: 'https://github.com/dgelessus/python-rsrcfork/blob/f891a6e/src/rsrcfork/compress/common.py'
seq:
  - id: first
    type: u1
    doc: |
      The first byte of the variable-length integer.
      This determines which storage format is used.

      * For the 1-byte format,
        this encodes the entire value of the value.
      * For the 2-byte format,
        this encodes the high 7 bits of the value,
        minus \`0xc0\`.
        The highest bit of the value,
        i. e. the second-highest bit of this field,
        is the sign bit.
      * For the 5-byte format,
        this is always \`0xff\`.
  - id: more
    type:
      switch-on: first
      cases:
        0xff: s4
        _: u1
    if: first >= 0x80
    doc: |
      The remaining bytes of the variable-length integer.

      * For the 1-byte format,
        this is not present.
      * For the 2-byte format,
        this encodes the low 8 bits of the value.
      * For the 5-byte format,
        this encodes the entire value.
instances:
  value:
    value: |
      first == 0xff ? more
      : first >= 0x80 ? (first << 8 | more) - 0xc000
      : first
    doc: |
      The decoded value of the variable-length integer.
`
  },
  {
    id: "ksy_resource_fork",
    name: "Macintosh resource fork data",
    category: "macOS",
    metadata: {
      isGenerated: true,
      fileExtensions: ["rsrc","dfont"],
      description: "Macintosh resource fork data",
      originalCategory: "macos",
      filePath: "macos/resource_fork.ksy",
      endian: "be"
    },
    content: `meta:
  id: resource_fork
  title: Macintosh resource fork data
  application: Mac OS
  file-extension:
    - rsrc # Resource fork data stored in a separate file (as a data fork)
    - dfont # Datafork font suitcase (a special case of the above, used by certain Mac fonts)
  xref:
    justsolve: Resource_Fork
    wikidata: Q3933446
  license: MIT
  ks-version: "0.9"
  imports:
    - /common/bytes_with_io
  endian: be
doc: |
  The data format of Macintosh resource forks,
  used on Classic Mac OS and Mac OS X/macOS to store additional structured data along with a file's main data (the data fork).
  The kinds of data stored in resource forks include:

  * Document resources:
    images, sounds, etc. used by a document
  * Application resources:
    graphics, GUI layouts, localizable strings,
    and even code used by an application, a library, or system files
  * Common metadata:
    custom icons and version metadata that could be displayed by the Finder
  * Application-specific metadata:
    because resource forks follow a common format,
    other applications can store new metadata in them,
    even if the original application does not recognize or understand it

  Macintosh file systems (MFS, HFS, HFS+, APFS) support resource forks natively,
  which allows storing resources along with any file.
  Non-Macintosh file systems and protocols have little or no support for resource forks,
  so the resource fork data must be stored in some other way when using such file systems or protocols.
  Various file formats and tools exist for this purpose,
  such as BinHex, MacBinary, AppleSingle, AppleDouble, or QuickTime RezWack.
  In some cases,
  resource forks are stored as plain data in separate files with a .rsrc extension,
  even on Mac systems that natively support resource forks.

  On modern Mac OS X/macOS systems,
  resource forks are used far less commonly than on classic Mac OS systems,
  because of compatibility issues with other systems and historical limitations in the format.
  Modern macOS APIs and libraries do not use resource forks,
  and the legacy Carbon API that still used them has been deprecated since OS X 10.8.
  Despite this,
  even current macOS systems still use resource forks for certain purposes,
  such as custom file icons.
doc-ref:
  - 'https://developer.apple.com/library/archive/documentation/mac/pdf/MoreMacintoshToolbox.pdf#page=151 Inside Macintosh, More Macintosh Toolbox, Resource Manager, Resource Manager Reference, Resource File Format'
  - 'https://www.pagetable.com/?p=50 Inside Macintosh, Volume I, The Resource Manager, Format of a Resource File'
  - 'https://github.com/kreativekorp/ksfl/wiki/Macintosh-Resource-File-Format'
  - 'https://github.com/dgelessus/mac_file_format_docs/blob/master/README.md#resource-forks'
seq:
  - id: header
    type: file_header
    doc: The resource file's header information.
  - id: system_data
    size: 112
    doc: |
      System-reserved data area.
      This field can generally be ignored when reading and writing.

      This field is used by the Classic Mac OS Finder as temporary storage space.
      It usually contains parts of the file metadata (name, type/creator code, etc.).
      Any existing data in this field is ignored and overwritten.

      In resource files written by Mac OS X,
      this field is set to all zero bytes.
  - id: application_data
    size: 128
    doc: |
      Application-specific data area.
      This field can generally be ignored when reading and writing.

      According to early revisions of Inside Macintosh,
      this field is "available for application data".
      In practice, it is almost never used for this purpose,
      and usually contains only junk data.

      In resource files written by Mac OS X,
      this field is set to all zero bytes.
instances:
  data_blocks_with_io:
    pos: header.ofs_data_blocks
    size: header.len_data_blocks
    type: bytes_with_io
    doc: |
      Use \`data_blocks\` instead,
      unless you need access to this instance's \`_io\`.
  data_blocks:
    value: data_blocks_with_io.data
    doc: |
      Storage area for the data blocks of all resources.

      These data blocks are not required to appear in any particular order,
      and there may be unused space between and around them.

      In practice,
      the data blocks in newly created resource files are usually contiguous.
      When existing resources are shortened,
      the Mac OS resource manager leaves unused space where the now removed resource data was,
      as this is quicker than moving the following resource data into the newly freed space.
      Such unused space may be cleaned up later when the resource manager "compacts" the resource file,
      which happens when resources are removed entirely,
      or when resources are added or grown so that more space is needed in the data area.
  resource_map:
    pos: header.ofs_resource_map
    size: header.len_resource_map
    type: resource_map
    doc: The resource file's resource map.
types:
  file_header:
    doc: |
      Resource file header,
      containing the offsets and lengths of the resource data area and resource map.
    seq:
      - id: ofs_data_blocks
        type: u4
        doc: |
          Offset of the resource data area,
          from the start of the resource file.

          In practice,
          this should always be \`256\`,
          i. e. the resource data area should directly follow the application-specific data area.
      - id: ofs_resource_map
        type: u4
        doc: |
          Offset of the resource map,
          from the start of the resource file.

          In practice,
          this should always be \`ofs_data_blocks + len_data_blocks\`,
          i. e. the resource map should directly follow the resource data area.
      - id: len_data_blocks
        type: u4
        doc: |
          Length of the resource data area.
      - id: len_resource_map
        type: u4
        doc: |
          Length of the resource map.

          In practice,
          this should always be \`_root._io.size - ofs_resource_map\`,
          i. e. the resource map should extend to the end of the resource file.
  data_block:
    doc: |
      A resource data block,
      as stored in the resource data area.

      Each data block stores the data contained in a resource,
      along with its length.
    seq:
      - id: len_data
        type: u4
        doc: |
          The length of the resource data stored in this block.
      - id: data
        size: len_data
        doc: |
          The data stored in this block.
  resource_map:
    doc: |
      Resource map,
      containing information about the resources in the file and where they are located in the data area.
    seq:
      - id: reserved_file_header_copy
        type: file_header
        doc: Reserved space for a copy of the resource file header.
      - id: reserved_next_resource_map_handle
        type: u4
        doc: Reserved space for a handle to the next loaded resource map in memory.
      - id: reserved_file_reference_number
        type: u2
        doc: Reserved space for the resource file's file reference number.
      - id: file_attributes
        type: file_attributes
        size: 2
        doc: The resource file's attributes.
      - id: ofs_type_list
        type: u2
        doc: |
          Offset of the resource type list,
          from the start of the resource map.

          In practice,
          this should always be \`sizeof<resource_map>\`,
          i. e. the resource type list should directly follow the resource map.
      - id: ofs_names
        type: u2
        doc: |
          Offset of the resource name area,
          from the start of the resource map.
    instances:
      type_list_and_reference_lists:
        pos: ofs_type_list
        size: ofs_names - ofs_type_list
        type: type_list_and_reference_lists
        doc: The resource map's resource type list, followed by the resource reference list area.
      names_with_io:
        pos: ofs_names
        size-eos: true
        type: bytes_with_io
        doc: |
          Use \`names\` instead,
          unless you need access to this instance's \`_io\`.
      names:
        value: names_with_io.data
        doc: Storage area for the names of all resources.
    types:
      file_attributes:
        doc: |
          A resource file's attributes,
          as stored in the resource map.

          These attributes are sometimes also referred to as resource map attributes,
          because of where they are stored in the file.
        seq:
          - id: resources_locked
            type: b1
            doc: |
              TODO What does this attribute actually do,
              and how is it different from \`read_only\`?

              This attribute is undocumented and not defined in <CarbonCore/Resources.h>,
              but ResEdit has a checkbox called "Resources Locked" for this attribute.
          - id: reserved0
            type: b6
            doc: |
              These attributes have no known usage or meaning and should always be zero.
          - id: printer_driver_multifinder_compatible
            type: b1
            doc: |
              Indicates that this printer driver is compatible with MultiFinder,
              i. e. can be used simultaneously by multiple applications.
              This attribute is only meant to be set on printer driver resource forks.

              This attribute is not documented in Inside Macintosh and is not defined in <CarbonCore/Resources.h>.
              It is documented in technote PR510,
              and ResEdit has a checkbox called "Printer Driver MultiFinder Compatible" for this attribute.
            doc-ref: https://developer.apple.com/library/archive/technotes/pr/pr_510.html Apple Technical Note PR510 - Printer Driver Q&As, section '"Printer driver is MultiFinder compatible" bit'
          - id: no_write_changes
            -orig-id: mapReadOnly
            type: b1
            doc: |
              Indicates that the Resource Manager should not write any changes from memory into the resource file.
              Any modification operations requested by the application will return successfully,
              but will not actually update the resource file.

              TODO Is this attribute supposed to be set on disk or only in memory?
          - id: needs_compact
            -orig-id: mapCompact
            type: b1
            doc: |
              Indicates that the resource file should be compacted the next time it is written by the Resource Manager.
              This attribute is only meant to be set in memory;
              it is cleared when the resource file is written to disk.

              This attribute is mainly used internally by the Resource Manager,
              but may also be set manually by the application.
          - id: map_needs_write
            -orig-id: mapChanged
            type: b1
            doc: |
              Indicates that the resource map has been changed in memory and should be written to the resource file on the next update.
              This attribute is only meant to be set in memory;
              it is cleared when the resource file is written to disk.

              This attribute is mainly used internally by the Resource Manager,
              but may also be set manually by the application.
          - id: reserved1
            type: b5
            doc: |
              These attributes have no known usage or meaning and should always be zero.
        instances:
          as_int:
            pos: 0
            type: u2
            doc: |
              The attributes as a packed integer,
              as they are stored in the file.
      type_list_and_reference_lists:
        doc: |
          Resource type list and storage area for resource reference lists in the resource map.

          The two parts are combined into a single type here for technical reasons:
          the start of the resource reference list area is not stored explicitly in the file,
          instead it always starts directly after the resource type list.
          The simplest way to implement this is by placing both types into a single \`seq\`.
        seq:
          - id: type_list
            type: type_list
            doc: The resource map's resource type list.
          - id: reference_lists
            size-eos: true
            doc: |
              Storage area for the resource map's resource reference lists.

              According to Inside Macintosh,
              the reference lists are stored contiguously,
              in the same order as their corresponding resource type list entries.
        types:
          type_list:
            doc: Resource type list in the resource map.
            seq:
              - id: num_types_m1
                type: u2
                doc: |
                  The number of resource types in this list,
                  minus one.

                  If the resource list is empty,
                  the value of this field is \`0xffff\`,
                  i. e. \`-1\` truncated to a 16-bit unsigned integer.
              - id: entries
                type: type_list_entry
                repeat: expr
                repeat-expr: num_types
                doc: Entries in the resource type list.
            instances:
              num_types:
                # The modulo 0x10000 simulates 16-bit unsigned integer wraparound,
                # so that empty lists are handled correctly (see doc for num_types_m1).
                value: (num_types_m1 + 1) % 0x10000
                doc: The number of resource types in this list.
            types:
              type_list_entry:
                doc: |
                  A single entry in the resource type list.

                  Each entry corresponds to exactly one resource reference list.
                seq:
                  - id: type
                    size: 4
                    doc: The four-character type code of the resources in the reference list.
                  - id: num_references_m1
                    type: u2
                    doc: |
                      The number of resources in the reference list for this type,
                      minus one.

                      Empty reference lists should never exist.
                  - id: ofs_reference_list
                    type: u2
                    doc: |
                      Offset of the resource reference list for this resource type,
                      from the start of the resource type list.

                      Although the offset is relative to the start of the type list,
                      it should never point into the type list itself,
                      but into the reference list storage area that directly follows it.
                      That is,
                      it should always be at least \`_parent._sizeof\`.
                instances:
                  num_references:
                    # Reference lists should never be empty,
                    # but just in case simulate the wraparound behavior here as well.
                    value: (num_references_m1 + 1) % 0x10000
                    doc: The number of resources in the reference list for this type.
                  reference_list:
                    io: _parent._parent._io
                    pos: ofs_reference_list
                    type: reference_list(num_references)
                    doc: |
                      The resource reference list for this resource type.
          reference_list:
            doc: |
              A resource reference list,
              as stored in the reference list area.

              Each reference list has exactly one matching entry in the resource type list,
              and describes all resources of a single type in the file.
            params:
              - id: num_references
                type: u2
                doc: |
                  The number of references in this resource reference list.

                  This information needs to be passed in as a parameter,
                  because it is stored in the reference list's type list entry,
                  and not in the reference list itself.
            seq:
              - id: references
                type: reference
                repeat: expr
                repeat-expr: num_references
                doc: The resource references in this reference list.
            types:
              reference:
                doc: A single resource reference in a resource reference list.
                seq:
                  - id: id
                    type: s2
                    doc: ID of the resource described by this reference.
                  - id: ofs_name
                    type: u2
                    doc: |
                      Offset of the name for the resource described by this reference,
                      from the start of the resource name area.

                      If the resource has no name,
                      the value of this field is \`0xffff\`
                      i. e. \`-1\` truncated to a 16-bit unsigned integer.
                  - id: attributes
                    type: attributes
                    size: 1
                    doc: Attributes of the resource described by this reference.
                  - id: ofs_data_block
                    type: b24 # 3-byte unsigned integer, packed together with the previous 1-byte field.
                    doc: |
                      Offset of the data block for the resource described by this reference,
                      from the start of the resource data area.
                  - id: reserved_handle
                    type: u4
                    doc: Reserved space for the resource's handle in memory.
                instances:
                  name:
                    io: _root.resource_map.names_with_io._io
                    pos: ofs_name
                    type: name
                    if: ofs_name != 0xffff
                    doc: |
                      The name (if any) of the resource described by this reference.
                  data_block:
                    io: _root.data_blocks_with_io._io
                    pos: ofs_data_block
                    type: data_block
                    doc: |
                      The data block containing the data for the resource described by this reference.
                types:
                  attributes:
                    doc: |
                      A resource's attributes,
                      as stored in a resource reference.
                    seq:
                      - id: system_reference
                        -orig-id: resSysRef
                        type: b1
                        doc: |
                          Indicates that this resource reference is a system reference rather than a regular local reference.
                          This attribute is nearly undocumented.
                          For all practical purposes,
                          it should be considered reserved and should always be zero.

                          This attribute was last documented in the Promotional Edition of Inside Macintosh,
                          in the Resource Manager chapter,
                          on pages 37-41,
                          in a "System References" section that calls itself "of historical interest only".
                          The final versions of Inside Macintosh only mention this attribute as "reserved for use by the Resource Manager".
                          <CarbonCore/Resources.h> contains a \`resSysRefBit\` constant,
                          but no corresponding \`resSysRef\` constant like for all other resource attributes.

                          According to the Inside Macintosh Promotional Edition,
                          a system reference was effectively an alias pointing to a resource stored in the system file,
                          possibly with a different ID and name (but not type) than the system reference.
                          If this attribute is set,
                          \`ofs_data_block\` is ignored and should be zero,
                          and \`reserved_handle\` contains
                          (in its high and low two bytes, respectively)
                          the ID and name offset of the real system resource that this system reference points to.

                          TODO Do any publicly available Mac OS versions support system references,
                          and do any real files/applications use them?
                          So far the answer seems to be no,
                          but I would like to be proven wrong!
                      - id: load_into_system_heap
                        -orig-id: resSysHeap
                        type: b1
                        doc: |
                          Indicates that this resource should be loaded into the system heap if possible,
                          rather than the application heap.

                          This attribute is only meant to be used by Mac OS itself,
                          for System and Finder resources,
                          and not by normal applications.

                          This attribute may be set both in memory and on disk,
                          but it only has any meaning while the resource file is loaded into memory.
                      - id: purgeable
                        -orig-id: resPurgeable
                        type: b1
                        doc: |
                          Indicates that this resource's data should be purgeable by the Mac OS Memory Manager.
                          This allows the resource data to be purged from memory if space is needed on the heap.
                          Purged resources can later be reloaded from disk if their data is needed again.

                          If the \`locked\` attribute is set,
                          this attribute has no effect
                          (i. e. locked resources are never purgeable).

                          This attribute may be set both in memory and on disk,
                          but it only has any meaning while the resource file is loaded into memory.
                      - id: locked
                        -orig-id: resLocked
                        type: b1
                        doc: |
                          Indicates that this resource's data should be locked to the Mac OS Memory Manager.
                          This prevents the resource data from being moved when the heap is compacted.

                          This attribute may be set both in memory and on disk,
                          but it only has any meaning while the resource file is loaded into memory.
                      - id: protected
                        -orig-id: resProtected
                        type: b1
                        doc: |
                          Indicates that this resource should be protected (i. e. unmodifiable) in memory.
                          This prevents the application from using the Resource Manager to change the resource's data or metadata,
                          or delete it.
                          The only exception are the resource's attributes,
                          which can always be changed,
                          even for protected resources.
                          This allows protected resources to be unprotected again by the application.

                          This attribute may be set both in memory and on disk,
                          but it only has any meaning while the resource file is loaded into memory.
                      - id: preload
                        -orig-id: resPreload
                        type: b1
                        doc: |
                          Indicates that this resource's data should be immediately loaded into memory when the resource file is opened.

                          This attribute may be set both in memory and on disk,
                          but it only has any meaning when the resource file is first opened.
                      - id: needs_write
                        -orig-id: resChanged
                        type: b1
                        doc: |
                          Indicates that this resource's data has been changed in memory and should be written to the resource file on the next update.
                          This attribute is only meant to be set in memory;
                          it is cleared when the resource file is written to disk.

                          This attribute is used internally by the Resource Manager and should not be set manually by the application.
                      - id: compressed
                        -orig-id: resCompressed
                        type: b1
                        doc: |
                          Indicates that this resource's data is compressed.
                          Compressed resource data is decompressed transparently by the Resource Manager when reading.

                          For a detailed description of the structure of compressed resources as they are stored in the file,
                          see the compressed_resource.ksy spec.
                    instances:
                      as_int:
                        pos: 0
                        type: u1
                        doc: |
                          The attributes as a packed integer,
                          as they are stored in the file.
      name:
        doc: |
          A resource name,
          as stored in the resource name storage area in the resource map.

          The resource names are not required to appear in any particular order.
          There may be unused space between and around resource names,
          but in practice they are often contiguous.
        seq:
          - id: len_value
            type: u1
            doc: |
              The length of the resource name, in bytes.
          - id: value
            size: len_value
            doc: |
              The resource name.

              This field is exposed as a byte array,
              because there is no universal encoding for resource names.
              Most Classic Mac software does not deal with encodings explicitly and instead assumes that all strings,
              including resource names,
              use the system encoding,
              which varies depending on the system language.
              This means that resource names can use different encodings depending on what system language they were created with.

              Many resource names are plain ASCII,
              meaning that the encoding often does not matter
              (because all Mac OS encodings are ASCII-compatible).
              For non-ASCII resource names,
              the most common encoding is perhaps MacRoman
              (used for English and other Western languages),
              but other encodings are also sometimes used,
              especially for software in non-Western languages.

              There is no requirement that all names in a single resource file use the same encoding.
              For example,
              localized software may have some (but not all) of its resource names translated.
              For non-Western languages,
              this can lead to some resource names using MacRoman,
              and others using a different encoding.
`
  },
  {
    id: "ksy_android_opengl_shaders_cache",
    name: "com.android.opengl.shaders_cache file",
    category: "Media",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "com.android.opengl.shaders_cache file",
      originalCategory: "media",
      filePath: "media/android_opengl_shaders_cache.ksy",
      signature: {"offset":0,"bytes":[69,71,76,36]},
      endian: "le"
    },
    content: `meta:
  id: android_opengl_shaders_cache
  title: com.android.opengl.shaders_cache file
  application: Android
  tags:
    - android
    - media
  license: Apache-2.0
  endian: le

doc: |
  Android apps using directly or indirectly OpenGL cache compiled shaders
  into com.android.opengl.shaders_cache file.
doc-ref: https://android.googlesource.com/platform/frameworks/native/+/master/opengl/libs/EGL/FileBlobCache.cpp

seq:
  - id: magic
    contents: "EGL\$"
  - id: crc32
    type: u4
    doc: crc32 of \`contents\`
  - id: contents
    type: cache
    size-eos: true

types:
  alignment:
    seq:
      - id: alignment
        size: "(_io.pos + 3) & ~3 - _io.pos"
        doc: garbage from memory
  prefixed_string:
    seq:
      - id: len_str
        type: u4
        -orig-id: mBuildIdLength
      - id: str
        type: strz
        encoding: ascii
        size: len_str
        -orig-id: mBuildId, buildId
      - id: alignment
        type: alignment
  cache:
    doc-ref: https://android.googlesource.com/platform/frameworks/native/+/master/opengl/libs/EGL/BlobCache.cpp
    seq:
      - id: magic
        -orig-id: mMagicNumber, blobCacheMagic
        contents: ["\$bB_"]
      - id: version
        type: u4
        -orig-id: mBlobCacheVersion, blobCacheVersion
      - id: device_version
        type: u4
        -orig-id: mDeviceVersion, blobCacheDeviceVersion
      - id: num_entries
        type: u4
        -orig-id: mNumEntries
      - id: build_id
        type: prefixed_string
        -orig-id: mBuildIdLength, mBuildId, buildId
        if: version >= 3 # hypothesis, needs deeper investigation
      - id: entries
        type: entry
        repeat: expr
        repeat-expr: num_entries
    types:
      entry:
        seq:
          - id: len_key
            type: u4
            -orig-id: mKeySize, keySize
          - id: len_value
            type: u4
            -orig-id: mValueSize, valueSize
          - id: key
            size: len_key
          - id: value
            size: len_value
          - id: alignment
            type: alignment
`
  },
  {
    id: "ksy_au",
    name: "AU audio format",
    category: "Media",
    metadata: {
      isGenerated: true,
      fileExtensions: ["au","snd"],
      description: "AU audio format",
      originalCategory: "media",
      filePath: "media/au.ksy",
      signature: {"offset":0,"bytes":[46,115,110,100]},
      endian: "be"
    },
    content: `meta:
  id: au
  title: AU audio format
  file-extension:
    - au # Sun
    - snd # NeXT
  xref:
    justsolve: AU
    mime:
      - audio/basic
      # According to <https://github.com/file/file/blob/905ca555b0/magic/Magdir/audio#L10-L45>
      # and <https://ftp.gnu.org/gnu/ccaudio/ccaudio2-2.2.0.tar.gz> 'ccaudio2-2.2.0/src/friends.cpp:304-311':
      - audio/x-adpcm # only for G.721 ADPCM (encodings::adpcm_g721)
    pronom: x-fmt/139
    wikidata: Q672985
  license: CC0-1.0
  ks-version: 0.9
  endian: be
doc: |
  The NeXT/Sun audio file format.

  Sample files:

  * <https://github.com/python/cpython/tree/b8a7daf077da/Lib/test/sndhdrdata>
  * <ftp://ftp-ccrma.stanford.edu/pub/Lisp/sf.tar.gz>
  * <https://www.mmsp.ece.mcgill.ca/Documents/AudioFormats/AU/Samples.html>

doc-ref:
  # - https://en.wikipedia.org/wiki/Au_file_format # incorrect encoding enum, don't use
  - https://www.mmsp.ece.mcgill.ca/Documents/AudioFormats/AU/AU.html
  - http://soundfile.sapp.org/doc/NextFormat/

  # Resources used to assemble the \`encodings\` enum:
  - http://soundfile.sapp.org/doc/NextFormat/soundstruct.h
  - https://github.com/andreiw/polaris/blob/deb47cb/usr/src/head/audio/au.h#L87-L112
  - https://github.com/libsndfile/libsndfile/blob/86c9f9eb/src/au.c#L39-L74
  - https://github.com/chirlu/sox/blob/dd8b63bd/src/au.c#L34-L49
  - https://github.com/mpruett/audiofile/blob/b62c902/libaudiofile/NeXT.cpp#L65-L96

seq:
  - id: magic
    contents: ".snd"
  - id: ofs_data
    type: u4
  - id: header
    type: header
    size: ofs_data - magic._sizeof - ofs_data._sizeof
instances:
  len_data:
    value: 'header.data_size == 0xffff_ffff ? _io.size - ofs_data : header.data_size'
types:
  header:
    seq:
      - id: data_size
        type: u4
        doc: |
          don't read this field, access \`_root.len_data\` instead

          value \`0xffff_ffff\` means unspecified size
      - id: encoding
        type: u4
        enum: encodings
      - id: sample_rate
        type: u4
      - id: num_channels
        type: u4
        valid:
          min: 1
        doc: number of interleaved channels
      - id: comment
        size-eos: true
        type: strz
        encoding: ASCII
        doc: |
          Most resources claim that this field must be at least 4 bytes long.
          However, most programs don't enforce it, and [Audacity](
          https://www.audacityteam.org/) even generates .au files with this field
          being 0-byte long. According to <https://nixdoc.net/man-pages/IRIX/man4/dmedia/next.4.html>,
          "NeXT files require that this chunk be at least 4 bytes (chars) long,
          whereas this chunk may be zerolength in a Sun .au file."

          By convention, size should be a multiple of 4 -
          see <https://github.com/chirlu/sox/blob/dd8b63bd/src/au.c#L132-L133>.
          Page <http://soundfile.sapp.org/doc/NextFormat/> also mentions that for some
          sound playing programs, this field must have an even byte size. So a multiple
          of 4 is probably best for compatibility.

          Must be null-terminated. It is usually an ASCII text string, but this space
          might be also used to store application-specific binary (i.e. non-ASCII) data.
enums:
  encodings:
    1:
      id: mulaw_8
      doc: 8-bit G.711 mu-law
    2:
      id: linear_8
      doc: 8-bit signed linear PCM
    3:
      id: linear_16
      doc: 16-bit signed linear PCM
    4:
      id: linear_24
      doc: 24-bit signed linear PCM
    5:
      id: linear_32
      doc: 32-bit signed linear PCM
    6:
      id: float
      doc: 32-bit IEEE floating point
    7:
      id: double
      doc: 64-bit IEEE double-precision floating point
    8:
      id: fragmented
      doc: sampled data which has become fragmented due to editing
    9:
      id: nested
      doc: multiple sound structures
    10:
      id: dsp_core
      doc: a loadable DSP core program
    11: fixed_point_8
    12: fixed_point_16
    13: fixed_point_24
    14: fixed_point_32
    16:
      id: display
      doc: non-audio display data used by the Sound Kit's \`SoundView\` class, can't be played
    17:
      id: mulaw_squelch
      doc: 8-bit mu-law with run-length encoding of silence
    18:
      id: emphasized
      doc: 16-bit linear with emphasis
    19:
      id: compressed
      doc: 16-bit linear with NeXT compression
    20:
      id: compressed_emphasized
      doc: 16-bit linear with emphasis and NeXT compression
    21:
      id: dsp_commands
      doc: Music Kit DSP commands
    22:
      id: dsp_commands_samples
      doc: Music Kit DSP samples
    23:
      id: adpcm_g721
      doc: 4-bit G.721 ADPCM (32 kb/s)
    24:
      id: adpcm_g722
      doc: G.722 ADPCM
    25:
      id: adpcm_g723_3
      doc: 3-bit G.723 ADPCM (24 kb/s)
    26:
      id: adpcm_g723_5
      doc: 5-bit G.723 ADPCM (40 kb/s)
    27:
      id: alaw_8
      doc: 8-bit G.711 A-law
    28: aes
    29: delta_mulaw_8
`
  },
  {
    id: "ksy_avi",
    name: "Microsoft AVI file",
    category: "Media",
    metadata: {
      isGenerated: true,
      fileExtensions: ["avi"],
      description: "Microsoft AVI file",
      originalCategory: "media",
      filePath: "media/avi.ksy",
      signature: {"offset":0,"bytes":[82,73,70,70]},
      endian: "le"
    },
    content: `meta:
  id: avi
  title: Microsoft AVI file
  file-extension: avi
  xref:
    justsolve: AVI
    loc: fdd000059
    mime: video/x-msvideo
    pronom: fmt/5
    wikidata: Q209054
  tags:
    - windows
  license: CC0-1.0
  ks-version: 0.7
  endian: le
doc-ref: https://learn.microsoft.com/en-us/previous-versions/ms779636(v=vs.85)
seq:
  - id: magic1
    contents: RIFF
  - id: file_size
    type: u4
  - id: magic2
    contents: 'AVI '
  - id: data
    type: blocks
    size: file_size - 4
types:
  # either a chunk or list
  blocks:
    seq:
      - id: entries
        type: block
        repeat: eos
  block:
    seq:
      - id: four_cc
        type: u4
        enum: chunk_type
      - id: block_size
        type: u4
      - id: data
        size: block_size
        type:
          switch-on: four_cc
          cases:
            'chunk_type::list': list_body
            'chunk_type::avih': avih_body
            'chunk_type::strh': strh_body
  list_body:
    seq:
      - id: list_type
        type: u4
        enum: chunk_type
      - id: data
        type: blocks
  avih_body:
    doc: Main header of an AVI file, defined as AVIMAINHEADER structure
    doc-ref: https://learn.microsoft.com/en-us/previous-versions/ms779632(v=vs.85)
    seq:
      - id: micro_sec_per_frame
        type: u4
      - id: max_bytes_per_sec
        type: u4
      - id: padding_granularity
        type: u4
      - id: flags
        type: u4
      - id: total_frames
        type: u4
      - id: initial_frames
        type: u4
      - id: streams
        type: u4
      - id: suggested_buffer_size
        type: u4
      - id: width
        type: u4
      - id: height
        type: u4
      - id: reserved
        size: 16
  strh_body:
    doc: Stream header (one header per stream), defined as AVISTREAMHEADER structure
    doc-ref: https://learn.microsoft.com/en-us/previous-versions/ms779638(v=vs.85)
    seq:
      - id: fcc_type
        type: u4
        enum: stream_type
        doc: Type of the data contained in the stream
      - id: fcc_handler
        type: u4
        enum: handler_type
        doc: Type of preferred data handler for the stream (specifies codec for audio / video streams)
      - id: flags
        type: u4
      - id: priority
        type: u2
      - id: language
        type: u2
      - id: initial_frames
        type: u4
      - id: scale
        type: u4
      - id: rate
        type: u4
      - id: start
        type: u4
      - id: length
        type: u4
      - id: suggested_buffer_size
        type: u4
      - id: quality
        type: u4
      - id: sample_size
        type: u4
      - id: frame
        type: rect
  strf_body:
    doc: Stream format description
  rect:
    seq:
      - id: left
        type: s2
      - id: top
        type: s2
      - id: right
        type: s2
      - id: bottom
        type: s2
enums:
  chunk_type:
    0x31786469: idx1
    0x4b4e554a: junk
    0x4f464e49: info
    0x54465349: isft
    0x5453494c: list
    0x66727473: strf
    0x68697661: avih
    0x68727473: strh
    0x69766f6d: movi
    0x6c726468: hdrl
    0x6c727473: strl
  stream_type:
    0x7364696d: mids # MIDI stream
    0x73646976: vids # Video stream
    0x73647561: auds # Audio stream
    0x73747874: txts # Text stream
  handler_type:
    0x00000055: mp3
    0x00002000: ac3
    0x00002001: dts
    0x64697663: cvid
    0x64697678: xvid
`
  },
  {
    id: "ksy_blender_blend",
    name: "Blender Blend",
    category: "Media",
    metadata: {
      isGenerated: true,
      fileExtensions: ["blend"],
      description: "",
      originalCategory: "media",
      filePath: "media/blender_blend.ksy",
      endian: "le"
    },
    content: `meta:
  id: blender_blend
  application: Blender
  file-extension: blend
  xref:
    justsolve: BLEND
    mime: application/x-blender
    pronom:
      - fmt/902
      - fmt/903
    wikidata: Q15671948
  license: CC0-1.0
  endian: le
doc: |
  Blender is an open source suite for 3D modelling, sculpting,
  animation, compositing, rendering, preparation of assets for its own
  game engine and exporting to others, etc. \`.blend\` is its own binary
  format that saves whole state of suite: current scene, animations,
  all software settings, extensions, etc.

  Internally, .blend format is a hybrid semi-self-descriptive
  format. On top level, it contains a simple header and a sequence of
  file blocks, which more or less follow typical [TLV
  pattern](https://en.wikipedia.org/wiki/Type-length-value). Pre-last
  block would be a structure with code \`DNA1\`, which is a essentially
  a machine-readable schema of all other structures used in this file.
seq:
  - id: hdr
    type: header
  - id: blocks
    type: file_block
    repeat: eos
instances:
  sdna_structs:
    value: 'blocks[blocks.size - 2].body.as<dna1_body>.structs'
types:
  header:
    seq:
      - id: magic
        contents: BLENDER
      - id: ptr_size_id
        type: u1
        enum: ptr_size
        doc: Size of a pointer; all pointers in the file are stored in this format
      - id: endian
        type: u1
        doc: Type of byte ordering used
        enum: endian
      - id: version
        type: str
        size: 3
        encoding: ASCII
        doc: Blender version used to save this file
    instances:
      psize:
        value: 'ptr_size_id == ptr_size::bits_64 ? 8 : 4'
        doc: Number of bytes that a pointer occupies
  file_block:
    seq:
      - id: code
        type: str
        size: 4
        encoding: ASCII
        doc: Identifier of the file block
      - id: len_body
        type: u4
        doc: Total length of the data after the header of file block
      - id: mem_addr
        size: _root.hdr.psize
        doc: Memory address the structure was located when written to disk
      - id: sdna_index
        type: u4
        doc: Index of the SDNA structure
      - id: count
        type: u4
        doc: Number of structure located in this file-block
      - id: body
        size: len_body
        type:
          switch-on: code
          cases:
            '"DNA1"': dna1_body
    instances:
      sdna_struct:
        value: _root.sdna_structs[sdna_index]
        if: sdna_index != 0
  dna1_body:
    doc: |
      DNA1, also known as "Structure DNA", is a special block in
      .blend file, which contains machine-readable specifications of
      all other structures used in this .blend file.

      Effectively, this block contains:

      * a sequence of "names" (strings which represent field names)
      * a sequence of "types" (strings which represent type name)
      * a sequence of "type lengths"
      * a sequence of "structs" (which describe contents of every
        structure, referring to types and names by index)
    doc-ref: 'https://archive.blender.org/wiki/index.php/Dev:Source/Architecture/File_Format/#Structure_DNA'
    seq:
      - id: id
        contents: SDNA

      - id: name_magic
        contents: NAME
      - id: num_names
        type: u4
      - id: names
        type: strz
        encoding: UTF-8
        repeat: expr
        repeat-expr: num_names

      - id: padding_1
        size: (4 - _io.pos) % 4

      - id: type_magic
        contents: TYPE
        #align: 4 - https://github.com/kaitai-io/kaitai_struct/issues/12
      - id: num_types
        type: u4
      - id: types
        type: strz
        encoding: UTF-8
        repeat: expr
        repeat-expr: num_types

      - id: padding_2
        size: (4 - _io.pos) % 4

      - id: tlen_magic
        contents: TLEN
        #align: 4 - https://github.com/kaitai-io/kaitai_struct/issues/12
      - id: lengths
        type: u2
        repeat: expr
        repeat-expr: num_types

      - id: padding_3
        size: (4 - _io.pos) % 4

      - id: strc_magic
        contents: STRC
      - id: num_structs
        type: u4
      - id: structs
        type: dna_struct
        repeat: expr
        repeat-expr: num_structs
  dna_struct:
    doc: |
      DNA struct contains a \`type\` (type name), which is specified as
      an index in types table, and sequence of fields.
    seq:
      - id: idx_type
        type: u2
      - id: num_fields
        type: u2
      - id: fields
        type: dna_field
        repeat: expr
        repeat-expr: num_fields
    instances:
      type:
        value: _parent.types[idx_type]
  dna_field:
    seq:
      - id: idx_type
        type: u2
      - id: idx_name
        type: u2
    instances:
      type:
        value: _parent._parent.types[idx_type]
      name:
        value: _parent._parent.names[idx_name]
enums:
  ptr_size:
    0x5f: bits_32
    0x2d: bits_64
  endian:
    0x56: be
    0x76: le
`
  },
  {
    id: "ksy_creative_voice_file",
    name: "Creative Voice File",
    category: "Media",
    metadata: {
      isGenerated: true,
      fileExtensions: ["voc"],
      description: "Creative Voice File",
      originalCategory: "media",
      filePath: "media/creative_voice_file.ksy",
      signature: {"offset":0,"bytes":[12,26]},
      endian: "le"
    },
    content: `meta:
  id: creative_voice_file
  title: Creative Voice File
  file-extension: voc
  xref:
    justsolve: Creative_Voice_File
    mime: audio/x-voc
    wikidata: Q27967410
  license: CC0-1.0
  endian: le
doc: |
  Creative Voice File is a container file format for digital audio
  wave data. Initial revisions were able to support only unsigned
  8-bit PCM and ADPCM data, later versions were revised to add support
  for 16-bit PCM and a-law / u-law formats.

  This format was actively used in 1990s, around the advent of
  Creative's sound cards (Sound Blaster family). It was a popular
  choice for a digital sound container in lots of games and multimedia
  software due to simplicity and availability of Creative's recording
  / editing tools.
doc-ref: 'https://wiki.multimedia.cx/index.php?title=Creative_Voice'
# https://fabiensanglard.net/reverse_engineering_strike_commander/docs/Creative%20Voice%20(VOC)%20file%20format.txt
seq:
  - id: magic
    contents:
      - 'Creative Voice File'
      - 0x1a
  - id: header_size
    type: u2
    doc: Total size of this main header (usually 0x001A)
  - id: version
    type: u2
  - id: checksum
    type: u2
    doc: 'Checksum: this must be equal to ~version + 0x1234'
  - id: blocks
    type: block
    repeat: eos
    doc: Series of blocks that contain the actual audio data
types:
  block:
    seq:
      - id: block_type
        type: u1
        enum: block_types
        doc: Byte that determines type of block content
      - id: body_size1
        type: u2
        if: block_type != block_types::terminator
      - id: body_size2
        type: u1
        if: block_type != block_types::terminator
      - id: body
        size: body_size
        type:
          switch-on: block_type
          cases:
            'block_types::sound_data': block_sound_data
            'block_types::silence': block_silence
            'block_types::marker': block_marker
            #'block_types::text': block_text
            'block_types::repeat_start': block_repeat_start
            #'block_types::repeat_end': always_empty_block
            'block_types::extra_info': block_extra_info
            'block_types::sound_data_new': block_sound_data_new
        if: block_type != block_types::terminator
        doc: Block body, type depends on block type byte
    instances:
      body_size:
        value: body_size1 + (body_size2 << 16)
        if: block_type != block_types::terminator
        doc: |
          body_size is a 24-bit little-endian integer, so we're
          emulating that by adding two standard-sized integers
          (body_size1 and body_size2).
  block_sound_data:
    doc-ref: 'https://wiki.multimedia.cx/index.php?title=Creative_Voice#Block_type_0x01:_Sound_data'
    seq:
      - id: freq_div
        type: u1
        doc: Frequency divisor, used to determine sample rate
      - id: codec
        type: u1
        enum: codecs
      - id: wave
        size-eos: true
    instances:
      sample_rate:
        value: 1000000.0 / (256 - freq_div)
  block_silence:
    doc-ref: 'https://wiki.multimedia.cx/index.php?title=Creative_Voice#Block_type_0x03:_Silence'
    seq:
      - id: duration_samples
        type: u2
        doc: Duration of silence, in samples
      - id: freq_div
        type: u1
        doc: Frequency divisor, used to determine sample rate
    instances:
      sample_rate:
        value: 1000000.0 / (256 - freq_div)
      duration_sec:
        value: duration_samples / sample_rate
        doc: Duration of silence, in seconds
  block_marker:
    doc-ref: 'https://wiki.multimedia.cx/index.php?title=Creative_Voice#Block_type_0x04:_Marker'
    seq:
      - id: marker_id
        type: u2
        doc: Marker ID
  block_repeat_start:
    doc-ref: 'https://wiki.multimedia.cx/index.php?title=Creative_Voice#Block_type_0x06:_Repeat_start'
    seq:
      - id: repeat_count_1
        type: u2
        doc: Number of repetitions minus 1; 0xffff means infinite repetitions
  block_extra_info:
    doc-ref: 'https://wiki.multimedia.cx/index.php?title=Creative_Voice#Block_type_0x08:_Extra_info'
    seq:
      - id: freq_div
        type: u2
        doc: Frequency divisor
      - id: codec
        type: u1
        enum: codecs
      - id: num_channels_1
        type: u1
        doc: Number of channels minus 1 (0 = mono, 1 = stereo)
    instances:
      num_channels:
        value: num_channels_1 + 1
        doc: Number of channels (1 = mono, 2 = stereo)
      sample_rate:
        value: 256000000.0 / (num_channels * (65536 - freq_div))
  block_sound_data_new:
    doc-ref: 'https://wiki.multimedia.cx/index.php?title=Creative_Voice#Block_type_0x09:_Sound_data_.28New_format.29'
    seq:
      - id: sample_rate
        type: u4
      - id: bits_per_sample
        type: u1
      - id: num_channels
        type: u1
      - id: codec
        type: u2
        enum: codecs
      - id: reserved
        size: 4
      - id: wave
        size-eos: true
enums:
  block_types:
    0: terminator
    1: sound_data
    2: sound_data_cont
    3: silence
    4: marker
    5: text
    6: repeat_start
    7: repeat_end
    8: extra_info
    9: sound_data_new
  # https://wiki.multimedia.cx/index.php?title=Creative_Voice#Supported_codec_ids
  codecs:
    0x00: pcm_8bit_unsigned
    0x01: adpcm_4bit # 4 bits to 8 bits Creative ADPCM
    0x02: adpcm_2_6bit # 3 bits to 8 bits Creative ADPCM (AKA 2.6 bits)
    0x03: adpcm_2_bit # 2 bits to 8 bits Creative ADPCM
    0x04: pcm_16bit_signed # 16 bits signed PCM
    0x06: alaw
    0x07: ulaw
    0x0200: adpcm_4_to_16bit # 4 bits to 16 bits Creative ADPCM
`
  },
  {
    id: "ksy_genmidi_op2",
    name: "GENMIDI.OP2 OPL2 sound bank",
    category: "Media",
    metadata: {
      isGenerated: true,
      fileExtensions: ["op2"],
      description: "GENMIDI.OP2 OPL2 sound bank",
      originalCategory: "media",
      filePath: "media/genmidi_op2.ksy",
      signature: {"offset":0,"bytes":[35,79,80,76,95,73,73,35]},
      endian: "le"
    },
    content: `meta:
  id: genmidi_op2
  title: GENMIDI.OP2 OPL2 sound bank
  file-extension: op2
  xref:
    wikidata: Q32098356
  license: CC0-1.0
  ks-version: 0.9
  encoding: ASCII
  endian: le
doc: |
  GENMIDI.OP2 is a sound bank file used by players based on DMX sound
  library to play MIDI files with General MIDI instruments using OPL2
  sound chip (which was commonly installed on popular AdLib and Sound
  Blaster sound cards).

  Major users of DMX sound library include:

  * Original Doom game engine (and games based on it: Heretic, Hexen, Strife, Chex Quest)
  * Raptor: Call of the Shadows
doc-ref:
  - http://www.fit.vutbr.cz/~arnost/muslib/op2_form.zip
  - https://doom.fandom.com/wiki/GENMIDI
  - https://moddingwiki.shikadi.net/wiki/OP2_Bank_Format
seq:
  - id: magic
    contents: "#OPL_II#"
  - id: instruments
    type: instrument_entry
    repeat: expr
    repeat-expr: 175
  - id: instrument_names
    type: str
    size: 32
    pad-right: 0
    terminator: 0
    repeat: expr
    repeat-expr: 175
types:
  instrument_entry:
    seq:
      - id: flags
        type: u2
      - id: finetune
        type: u1
      - id: note
        type: u1
        doc: MIDI note for fixed instruments, 0 otherwise
      - id: instruments
        repeat: expr
        repeat-expr: 2
        type: instrument
  instrument:
    seq:
      - id: op1
        type: op_settings
      - id: feedback
        type: u1
        doc: Feedback/AM-FM (both operators)
      - id: op2
        type: op_settings
      - id: unused
        type: u1
      - id: base_note
        type: s2
        doc: Base note offset
  op_settings:
    doc: |
      OPL2 settings for one operator (carrier or modulator)
    seq:
      - id: trem_vibr
        type: u1
        doc: Tremolo/vibrato/sustain/KSR/multi
      - id: att_dec
        type: u1
        doc: Attack rate/decay rate
      - id: sust_rel
        type: u1
        doc: Sustain level/release rate
      - id: wave
        type: u1
        doc: Waveform select
      - id: scale
        type: u1
        doc: Key scale level
      - id: level
        type: u1
        doc: Output level
`
  },
  {
    id: "ksy_id3v1_1",
    name: "ID3v1.1 tag for .mp3 files",
    category: "Media",
    metadata: {
      isGenerated: true,
      fileExtensions: ["mp3"],
      description: "ID3v1.1 tag for .mp3 files",
      originalCategory: "media",
      filePath: "media/id3v1_1.ksy"
    },
    content: `meta:
  id: id3v1_1
  title: ID3v1.1 tag for .mp3 files
  file-extension: mp3
  xref:
    forensicswiki: id3
    justsolve: ID3
    loc: fdd000107 # ID3v1
    wikidata: Q1054220
  license: CC0-1.0
doc: |
  ID3v1.1 tag is a method to store simple metadata in .mp3 files. The
  tag is appended to the end of file and spans exactly 128 bytes.

  This type is supposed to be used on full .mp3 files, seeking to
  proper position automatically. If you're interesting in parsing only
  the tag itself, please use \`id3v1_1::id3_v1_1_tag\` subtype.
doc-ref: https://id3.org/ID3v1
instances:
  id3v1_tag:
    pos: _io.size - 128
    type: id3_v1_1_tag
types:
  id3_v1_1_tag:
    doc: |
      ID3v1.1 tag itself, a fixed size 128 byte structure. Contains
      several metadata fields as fixed-size strings.

      Note that string encoding is not specified by standard, so real
      encoding used would vary a lot from one implementation to
      another. Most Windows-based applications tend to use "ANSI"
      (i.e. locale-dependent encoding, usually one byte per
      character). Some embedded applications allow selection of
      charset.
    seq:
      - id: magic
        contents: 'TAG'
      - id: title
        size: 30
        doc: Song title
      - id: artist
        size: 30
        doc: Artist name
      - id: album
        size: 30
        doc: Album title
      - id: year
        type: str
        encoding: ASCII
        size: 4
        doc: Year of release
      - id: comment
        size: 30
        doc: Arbitary comment
      - id: genre
        type: u1
        enum: genre_enum
    enums:
      genre_enum:
        0: blues
        1: classic_rock
        2: country
        3: dance
        4: disco
        5: funk
        6: grunge
        7: hip_hop
        8: jazz
        9: metal
        10: new_age
        11: oldies
        12: other
        13: pop
        14: rnb
        15: rap
        16: reggae
        17: rock
        18: techno
        19: industrial
        20: alternative
        21: ska
        22: death_metal
        23: pranks
        24: soundtrack
        25: euro_techno
        26: ambient
        27: trip_hop
        28: vocal
        29: jazz_funk
        30: fusion
        31: trance
        32: classical
        33: instrumental
        34: acid
        35: house
        36: game
        37: sound_clip
        38: gospel
        39: noise
        40: alternrock
        41: bass
        42: soul
        43: punk
        44: space
        45: meditative
        46: instrumental_pop
        47: instrumental_rock
        48: ethnic
        49: gothic
        50: darkwave
        51: techno_industrial
        52: electronic
        53: pop_folk
        54: eurodance
        55: dream
        56: southern_rock
        57: comedy
        58: cult
        59: gangsta
        60: top_40
        61: christian_rap
        62: pop_funk
        63: jungle
        64: native_american
        65: cabaret
        66: new_wave
        67: psychadelic
        68: rave
        69: showtunes
        70: trailer
        71: lo_fi
        72: tribal
        73: acid_punk
        74: acid_jazz
        75: polka
        76: retro
        77: musical
        78: rock_n_roll
        79: hard_rock
        80: folk
        81: folk_rock
        82: national_folk
        83: swing
        84: fast_fusion
        85: bebob
        86: latin
        87: revival
        88: celtic
        89: bluegrass
        90: avantgarde
        91: gothic_rock
        92: progressive_rock
        93: psychedelic_rock
        94: symphonic_rock
        95: slow_rock
        96: big_band
        97: chorus
        98: easy_listening
        99: acoustic
        100: humour
        101: speech
        102: chanson
        103: opera
        104: chamber_music
        105: sonata
        106: symphony
        107: booty_bass
        108: primus
        109: porn_groove
        110: satire
        111: slow_jam
        112: club
        113: tango
        114: samba
        115: folklore
        116: ballad
        117: power_ballad
        118: rhythmic_soul
        119: freestyle
        120: duet
        121: punk_rock
        122: drum_solo
        123: a_capella
        124: euro_house
        125: dance_hall
`
  },
  {
    id: "ksy_id3v2_3",
    name: "ID3v2.3 tag for .mp3 files",
    category: "Media",
    metadata: {
      isGenerated: true,
      fileExtensions: ["mp3"],
      description: "ID3v2.3 tag for .mp3 files",
      originalCategory: "media",
      filePath: "media/id3v2_3.ksy",
      endian: "be"
    },
    content: `meta:
  id: id3v2_3
  title: ID3v2.3 tag for .mp3 files
  file-extension: mp3
  xref:
    forensicswiki: id3
    justsolve: ID3
    loc: fdd000108 # ID3v2
    wikidata: Q1054220
  license: CC0-1.0
  endian: be

doc-ref: https://id3.org/id3v2.3.0

seq:
  - id: tag
    type: tag

types:
  tag:
    doc-ref: Section 3. ID3v2 overview
    seq:
      - id: header
        type: header
      - id: header_ex
        type: header_ex
        if: header.flags.flag_headerex
      - id: frames
        type: frame
        repeat: until
        repeat-until: _io.pos + _.size > header.size.value or _.is_invalid
      - id: padding
        if: header.flags.flag_headerex
        size: header_ex.padding_size - _io.pos

  header:
    doc: ID3v2 fixed header
    doc-ref: Section 3.1. ID3v2 header
    seq:
      - id: magic
        contents: 'ID3'
      - id: version_major
        type: u1
      - id: version_revision
        type: u1
      - id: flags
        type: flags
      - id: size
        type: u4be_synchsafe
    types:
      flags:
        seq:
          - id: flag_unsynchronization
            type: b1
          - id: flag_headerex
            type: b1
          - id: flag_experimental
            type: b1
          - id: reserved
            type: b5

  header_ex:
    doc: ID3v2 extended header
    doc-ref: Section 3.2. ID3v2 extended header
    seq:
      - id: size
        type: u4
      - id: flags_ex
        type: flags_ex
      - id: padding_size
        type: u4
      - id: crc
        type: u4
        if: flags_ex.flag_crc
    types:
      flags_ex:
        seq:
          - id: flag_crc
            type: b1
          - id: reserved
            type: b15

  frame:
    doc-ref: Section 3.3. ID3v2 frame overview
    seq:
      - id: id
        type: str
        size: 4
        encoding: ASCII
      - id: size
        type: u4
      - id: flags
        type: flags
      - id: data
        size: size
    instances:
      is_invalid:
        value: "id == '\\x00\\x00\\x00\\x00'"
    types:
      flags:
        seq:
          - id: flag_discard_alter_tag
            type: b1
          - id: flag_discard_alter_file
            type: b1
          - id: flag_read_only
            type: b1
          - id: reserved1
            type: b5
          - id: flag_compressed
            type: b1
          - id: flag_encrypted
            type: b1
          - id: flag_grouping
            type: b1
          - id: reserved2
            type: b5

  # Section 6.2. Synchsafe integers
  u1be_synchsafe:
    seq:
      - id: padding
        type: b1
      - id: value
        type: b7
  u2be_synchsafe:
    seq:
      - id: byte0
        type: u1be_synchsafe
      - id: byte1
        type: u1be_synchsafe
    instances:
      value:
        value: (byte0.value << 7) | byte1.value
  u4be_synchsafe:
    seq:
      - id: short0
        type: u2be_synchsafe
      - id: short1
        type: u2be_synchsafe
    instances:
      value:
        value: (short0.value << 14) | short1.value
`
  },
  {
    id: "ksy_id3v2_4",
    name: "ID3v2.4 tag for .mp3 files",
    category: "Media",
    metadata: {
      isGenerated: true,
      fileExtensions: ["mp3"],
      description: "ID3v2.4 tag for .mp3 files",
      originalCategory: "media",
      filePath: "media/id3v2_4.ksy",
      endian: "be"
    },
    content: `meta:
  id: id3v2_4
  title: ID3v2.4 tag for .mp3 files
  file-extension: mp3
  xref:
    forensicswiki: id3
    justsolve: ID3
    loc: fdd000108 # ID3v2
    wikidata: Q1054220
  license: CC0-1.0
  endian: be

doc-ref:
  - http://id3.org/id3v2.4.0-structure
  - http://id3.org/id3v2.4.0-frames

seq:
  - id: tag
    type: tag

types:
  # Section 3. ID3v2 overview
  tag:
    seq:
      - id: header
        type: header
      - id: header_ex
        type: header_ex
        if: header.flags.flag_headerex
      - id: frames
        type: frame
        repeat: until
        repeat-until: _io.pos + _.size.value > header.size.value or _.is_invalid
      - id: padding
        type: padding
        if: not header.flags.flag_footer
      - id: footer
        type: footer
        if: header.flags.flag_footer

  # Section 3.1. ID3v2 header
  header:
    seq:
      - id: magic
        contents: 'ID3'
      - id: version_major
        type: u1
      - id: version_revision
        type: u1
      - id: flags
        type: flags
      - id: size
        type: u4be_synchsafe
    types:
      flags:
        seq:
          - id: flag_unsynchronization
            type: b1
          - id: flag_headerex
            type: b1
          - id: flag_experimental
            type: b1
          - id: flag_footer
            type: b1
          - id: reserved
            type: b4

  # Section 3.2. ID3v2 extended header
  header_ex:
    seq:
      - id: size
        type: u4be_synchsafe
      - id: flags_ex
        type: flags_ex
      - id: data
        size: size.value - 5
    types:
      flags_ex:
        seq:
          - id: reserved1
            type: b1
          - id: flag_update
            type: b1
          - id: flag_crc
            type: b1
          - id: flag_restrictions
            type: b1
          - id: reserved2
            type: b4

  # Section 3.3. Padding
  padding:
    seq:
      - id: padding
        size: _root.tag.header.size.value - _io.pos

  # Section 3.4. ID3v2 footer
  footer:
    seq:
      - id: magic
        contents: '3DI'
      - id: version_major
        type: u1
      - id: version_revision
        type: u1
      - id: flags
        type: flags
      - id: size
        type: u4be_synchsafe
    types:
      flags:
        seq:
          - id: flag_unsynchronization
            type: b1
          - id: flag_headerex
            type: b1
          - id: flag_experimental
            type: b1
          - id: flag_footer
            type: b1
          - id: reserved
            type: b4

  # Section 4. ID3v2 frames overview
  frame:
    seq:
      - id: id
        type: str
        size: 4
        encoding: ASCII
      - id: size
        type: u4be_synchsafe
      - id: flags_status
        type: flags_status
      - id: flags_format
        type: flags_format
      - id: data
        size: size.value
    types:
      flags_status:
        seq:
          - id: reserved1
            type: b1
          - id: flag_discard_alter_tag
            type: b1
          - id: flag_discard_alter_file
            type: b1
          - id: flag_read_only
            type: b1
          - id: reserved2
            type: b4
      flags_format:
        seq:
          - id: reserved1
            type: b1
          - id: flag_grouping
            type: b1
          - id: reserved2
            type: b2
          - id: flag_compressed
            type: b1
          - id: flag_encrypted
            type: b1
          - id: flag_unsynchronisated
            type: b1
          - id: flag_indicator
            type: b1
    instances:
      is_invalid:
        value: "id == '\\x00\\x00\\x00\\x00'"

  # Section 6.2. Synchsafe integers
  u1be_synchsafe:
    seq:
      - id: padding
        type: b1
      - id: value
        type: b7
  u2be_synchsafe:
    seq:
      - id: byte0
        type: u1be_synchsafe
      - id: byte1
        type: u1be_synchsafe
    instances:
      value:
        value: (byte0.value << 7) | byte1.value
  u4be_synchsafe:
    seq:
      - id: short0
        type: u2be_synchsafe
      - id: short1
        type: u2be_synchsafe
    instances:
      value:
        value: (short0.value << 14) | short1.value
`
  },
  {
    id: "ksy_magicavoxel_vox",
    name: "MagicaVoxel File",
    category: "Media",
    metadata: {
      isGenerated: true,
      fileExtensions: ["vox"],
      description: "MagicaVoxel File",
      originalCategory: "media",
      filePath: "media/magicavoxel_vox.ksy",
      signature: {"offset":0,"bytes":[86,79,88,32]},
      endian: "le"
    },
    content: `meta:
  id: magicavoxel_vox
  title: MagicaVoxel File
  application: MagicaVoxel
  file-extension: vox
  xref:
    pronom: fmt/976
    wikidata: Q50374901
  license: MIT
  ks-version: 0.9 # for doc-ref array
  endian: le
doc-ref:
  - https://ephtracy.github.io/ MagicaVoxel Homepage
  - https://github.com/ephtracy/voxel-model/blob/master/MagicaVoxel-file-format-vox.txt Format Description
seq:
  - id: magic
    contents: 'VOX '
  - id: version
    type: u4
    doc: 150 expected
  - id: main
    type: chunk
types:
  chunk:
    seq:
      - id: chunk_id
        type: u4be
        enum: chunk_type
      - id: num_bytes_of_chunk_content
        type: u4
      - id: num_bytes_of_children_chunks
        type: u4
      - id: chunk_content
        if: num_bytes_of_chunk_content != 0
        size: num_bytes_of_chunk_content
        type:
          switch-on: chunk_id
          cases:
            'chunk_type::pack': pack
            'chunk_type::size': size
            'chunk_type::xyzi': xyzi
            'chunk_type::rgba': rgba
            'chunk_type::matt': matt
      - id: children_chunks
        if: num_bytes_of_children_chunks != 0
        type: chunk
        repeat: eos
  pack:
    seq:
      - id: num_models
        type: u4
  size:
    seq:
      - id: size_x
        type: u4
      - id: size_y
        type: u4
      - id: size_z
        type: u4
  xyzi:
    seq:
      - id: num_voxels
        type: u4
      - id: voxels
        type: voxel
        repeat: expr
        repeat-expr: num_voxels
  rgba:
    seq:
      - id: colors
        type: color
        repeat: expr
        repeat-expr: 256
  voxel:
    seq:
      - id: x
        type: u1
      - id: y
        type: u1
      - id: z
        type: u1
      - id: color_index
        type: u1
  color:
    seq:
      - id: r
        type: u1
      - id: g
        type: u1
      - id: b
        type: u1
      - id: a
        type: u1
  matt:
    seq:
      - id: id
        type: u4
      - id: material_type
        type: u4
        enum: material_type
      - id: material_weight
        type: f4
      - id: property_bits
        type: u4
        # .to_i not implemented for C# runtime yet
        #enum: property_bits_type
      - id: plastic
        if: has_plastic
        type: f4
      - id: roughness
        if: has_roughness
        type: f4
      - id: specular
        if: has_specular
        type: f4
      - id: ior
        if: has_ior
        type: f4
      - id: attenuation
        if: has_attenuation
        type: f4
      - id: power
        if: has_power
        type: f4
      - id: glow
        if: has_glow
        type: f4
      - id: is_total_power
        if: has_is_total_power
        type: f4
    instances:
      has_plastic:
        value: '(property_bits & 1) != 0'
      has_roughness:
        value: '(property_bits & 2) != 0'
      has_specular:
        value: '(property_bits & 4) != 0'
      has_ior:
        value: '(property_bits & 8) != 0'
      has_attenuation:
        value: '(property_bits & 16) != 0'
      has_power:
        value: '(property_bits & 32) != 0'
      has_glow:
        value: '(property_bits & 64) != 0'
      has_is_total_power:
        value: '(property_bits & 128) != 0'
enums:
  chunk_type:
    0x4d41494e: main
    0x5041434b: pack
    0x53495a45: size
    0x58595a49: xyzi
    0x52474241: rgba
    0x4d415454: matt
  material_type:
    0: diffuse
    1: metal
    2: glass
    3: emissive
  property_bits_type:
    1: plastic
    2: roughness
    4: specular
    8: ior
    16: attenuation
    32: power
    64: glow
    128: is_total_power
# Support for constant lists would be useful here for the default color palette when the RGBA chunk is missing
# instances:
#   default_palette:
#     value: [
# 0x00000000, 0xffffffff, 0xffccffff, 0xff99ffff, 0xff66ffff, 0xff33ffff, 0xff00ffff, 0xffffccff, 0xffccccff, 0xff99ccff, 0xff66ccff, 0xff33ccff, 0xff00ccff, 0xffff99ff, 0xffcc99ff, 0xff9999ff,>
# 0xff6699ff, 0xff3399ff, 0xff0099ff, 0xffff66ff, 0xffcc66ff, 0xff9966ff, 0xff6666ff, 0xff3366ff, 0xff0066ff, 0xffff33ff, 0xffcc33ff, 0xff9933ff, 0xff6633ff, 0xff3333ff, 0xff0033ff, 0xffff00ff,>
#	0xffcc00ff, 0xff9900ff, 0xff6600ff, 0xff3300ff, 0xff0000ff, 0xffffffcc, 0xffccffcc, 0xff99ffcc, 0xff66ffcc, 0xff33ffcc, 0xff00ffcc, 0xffffcccc, 0xffcccccc, 0xff99cccc, 0xff66cccc, 0xff33cccc,>
#	0xff00cccc, 0xffff99cc, 0xffcc99cc, 0xff9999cc, 0xff6699cc, 0xff3399cc, 0xff0099cc, 0xffff66cc, 0xffcc66cc, 0xff9966cc, 0xff6666cc, 0xff3366cc, 0xff0066cc, 0xffff33cc, 0xffcc33cc, 0xff9933cc,>
#	0xff6633cc, 0xff3333cc, 0xff0033cc, 0xffff00cc, 0xffcc00cc, 0xff9900cc, 0xff6600cc, 0xff3300cc, 0xff0000cc, 0xffffff99, 0xffccff99, 0xff99ff99, 0xff66ff99, 0xff33ff99, 0xff00ff99, 0xffffcc99,>
#	0xffcccc99, 0xff99cc99, 0xff66cc99, 0xff33cc99, 0xff00cc99, 0xffff9999, 0xffcc9999, 0xff999999, 0xff669999, 0xff339999, 0xff009999, 0xffff6699, 0xffcc6699, 0xff996699, 0xff666699, 0xff336699,>
#	0xff006699, 0xffff3399, 0xffcc3399, 0xff993399, 0xff663399, 0xff333399, 0xff003399, 0xffff0099, 0xffcc0099, 0xff990099, 0xff660099, 0xff330099, 0xff000099, 0xffffff66, 0xffccff66, 0xff99ff66,>
#	0xff66ff66, 0xff33ff66, 0xff00ff66, 0xffffcc66, 0xffcccc66, 0xff99cc66, 0xff66cc66, 0xff33cc66, 0xff00cc66, 0xffff9966, 0xffcc9966, 0xff999966, 0xff669966, 0xff339966, 0xff009966, 0xffff6666,>
#	0xffcc6666, 0xff996666, 0xff666666, 0xff336666, 0xff006666, 0xffff3366, 0xffcc3366, 0xff993366, 0xff663366, 0xff333366, 0xff003366, 0xffff0066, 0xffcc0066, 0xff990066, 0xff660066, 0xff330066,>
#	0xff000066, 0xffffff33, 0xffccff33, 0xff99ff33, 0xff66ff33, 0xff33ff33, 0xff00ff33, 0xffffcc33, 0xffcccc33, 0xff99cc33, 0xff66cc33, 0xff33cc33, 0xff00cc33, 0xffff9933, 0xffcc9933, 0xff999933,>
#	0xff669933, 0xff339933, 0xff009933, 0xffff6633, 0xffcc6633, 0xff996633, 0xff666633, 0xff336633, 0xff006633, 0xffff3333, 0xffcc3333, 0xff993333, 0xff663333, 0xff333333, 0xff003333, 0xffff0033,>
#	0xffcc0033, 0xff990033, 0xff660033, 0xff330033, 0xff000033, 0xffffff00, 0xffccff00, 0xff99ff00, 0xff66ff00, 0xff33ff00, 0xff00ff00, 0xffffcc00, 0xffcccc00, 0xff99cc00, 0xff66cc00, 0xff33cc00,>
#	0xff00cc00, 0xffff9900, 0xffcc9900, 0xff999900, 0xff669900, 0xff339900, 0xff009900, 0xffff6600, 0xffcc6600, 0xff996600, 0xff666600, 0xff336600, 0xff006600, 0xffff3300, 0xffcc3300, 0xff993300,>
#	0xff663300, 0xff333300, 0xff003300, 0xffff0000, 0xffcc0000, 0xff990000, 0xff660000, 0xff330000, 0xff0000ee, 0xff0000dd, 0xff0000bb, 0xff0000aa, 0xff000088, 0xff000077, 0xff000055, 0xff000044,>
#	0xff000022, 0xff000011, 0xff00ee00, 0xff00dd00, 0xff00bb00, 0xff00aa00, 0xff008800, 0xff007700, 0xff005500, 0xff004400, 0xff002200, 0xff001100, 0xffee0000, 0xffdd0000, 0xffbb0000, 0xffaa0000,>
#	0xff880000, 0xff770000, 0xff550000, 0xff440000, 0xff220000, 0xff110000, 0xffeeeeee, 0xffdddddd, 0xffbbbbbb, 0xffaaaaaa, 0xff888888, 0xff777777, 0xff555555, 0xff444444, 0xff222222, 0xff111111>
#]
`
  },
  {
    id: "ksy_ogg",
    name: "Ogg media container file",
    category: "Media",
    metadata: {
      isGenerated: true,
      fileExtensions: ["ogg","ogv","oga","spx","ogx"],
      description: "Ogg media container file",
      originalCategory: "media",
      filePath: "media/ogg.ksy",
      endian: "le"
    },
    content: `meta:
  id: ogg
  title: Ogg media container file
  file-extension:
    - ogg
    - ogv
    - oga
    - spx
    - ogx
  xref:
    justsolve: Ogg
    loc: fdd000026
    pronom: fmt/944
    wikidata: Q188199
  license: CC0-1.0
  endian: le
doc: |
  Ogg is a popular media container format, which provides basic
  streaming / buffering mechanisms and is content-agnostic. Most
  popular codecs that are used within Ogg streams are Vorbis (thus
  making Ogg/Vorbis streams) and Theora (Ogg/Theora).

  Ogg stream is a sequence Ogg pages. They can be read sequentially,
  or one can jump into arbitrary stream location and scan for "OggS"
  sync code to find the beginning of a new Ogg page and continue
  decoding the stream contents from that one.
seq:
  - id: pages
    repeat: eos
    type: page
types:
  page:
    doc: |
      Ogg page is a basic unit of data in an Ogg bitstream, usually
      it's around 4-8 KB, with a maximum size of 65307 bytes.
    seq:
      - id: sync_code
        contents: "OggS"
      - id: version
        contents: [0]
        doc: Version of the Ogg bitstream format. Currently must be 0.
      - id: reserved1
        type: b5
      - id: is_end_of_stream
        type: b1
        doc: |
          EOS (End Of Stream) mark. This page is the last page in the
          logical bitstream. The EOS flag must be set on the final page of
          every logical bitstream, and must not be set on any other page.
      - id: is_beginning_of_stream
        type: b1
        doc: |
          BOS (Beginning Of Stream) mark. This page is the first page in
          the logical bitstream. The BOS flag must be set on the first
          page of every logical bitstream, and must not be set on any
          other page.
      - id: is_continuation
        type: b1
        doc: |
          The first packet on this page is a continuation of the previous
          packet in the logical bitstream.
      - id: granule_pos
        type: u8
        doc: |
          "Granule position" is the time marker in Ogg files. It is an
          abstract value, whose meaning is determined by the codec. It
          may, for example, be a count of the number of samples, the
          number of frames or a more complex scheme.
      - id: bitstream_serial
        type: u4
        doc: |
          Serial number that identifies a page as belonging to a
          particular logical bitstream. Each logical bitstream in a file
          has a unique value, and this field allows implementations to
          deliver the pages to the appropriate decoder. In a typical
          Vorbis and Theora file, one stream is the audio (Vorbis), and
          the other is the video (Theora).
      - id: page_seq_num
        type: u4
        doc: |
          Sequential number of page, guaranteed to be monotonically
          increasing for each logical bitstream. The first page is 0, the
          second 1, etc. This allows implementations to detect when data
          has been lost.
      - id: crc32
        type: u4
        doc: |
          This field provides a CRC32 checksum of the data in the entire
          page (including the page header, calculated with the checksum
          field set to 0). This allows verification that the data has not
          been corrupted since it was created. Pages that fail the
          checksum should be discarded. The checksum is generated using a
          polynomial value of 0x04C11DB7.
      - id: num_segments
        type: u1
        doc: |
          The number of segments that exist in this page. There can be a
          maximum of 255 segments in any one page.
      - id: len_segments
        type: u1
        repeat: expr
        repeat-expr: num_segments
        doc: |
          Table of lengths of segments.
      - id: segments
        repeat: expr
        repeat-expr: num_segments
        size: len_segments[_index]
        doc: Segment content bytes make up the rest of the Ogg page.
`
  },
  {
    id: "ksy_quicktime_mov",
    name: "Quicktime Mov",
    category: "Media",
    metadata: {
      isGenerated: true,
      fileExtensions: ["mov"],
      description: "",
      originalCategory: "media",
      filePath: "media/quicktime_mov.ksy",
      endian: "be"
    },
    content: `meta:
  id: quicktime_mov
  application: QuickTime, MP4 ISO 14496-14 media
  file-extension: mov
  xref:
    justsolve: QuickTime
    loc: fdd000052
    mime: video/quicktime
    pronom: x-fmt/384
    wikidata: Q942350
  license: CC0-1.0
  endian: be
doc-ref: 'https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap1/qtff1.html#//apple_ref/doc/uid/TP40000939-CH203-BBCGDDDF'
seq:
  - id: atoms
    type: atom_list
types:
  atom_list:
    seq:
      - id: items
        type: atom
        repeat: eos
  atom:
    seq:
      - id: len32
        type: u4
      - id: atom_type
        type: u4
        enum: atom_type
      - id: len64
        type: u8
        if: len32 == 1
      - id: body
        size: len
        type:
          switch-on: atom_type
          cases:
            # Atom types which actually just contain other atoms inside it
            'atom_type::dinf': atom_list
            'atom_type::mdia': atom_list
            'atom_type::minf': atom_list
            'atom_type::moof': atom_list
            'atom_type::moov': atom_list
            'atom_type::stbl': atom_list
            'atom_type::traf': atom_list
            'atom_type::trak': atom_list

            # Leaf atoms that have some distinct format inside
            'atom_type::ftyp': ftyp_body
            'atom_type::tkhd': tkhd_body
            'atom_type::mvhd': mvhd_body
    instances:
      len:
        value: 'len32 == 0 ? (_io.size - 8) : (len32 == 1 ? len64 - 16 : len32 - 8)'
  ftyp_body:
    doc-ref: 'https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap1/qtff1.html#//apple_ref/doc/uid/TP40000939-CH203-CJBCBIFF'
    seq:
      - id: major_brand
        type: u4
        enum: brand
      - id: minor_version
        size: 4
      - id: compatible_brands
        type: u4
        enum: brand
        repeat: eos
  mvhd_body:
    doc-ref: 'https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-BBCGFGJG'
    seq:
      - id: version
        type: u1
        doc: Version of this movie header atom
      - id: flags
        size: 3
      - id: creation_time
        type: u4
      - id: modification_time
        type: u4
      - id: time_scale
        type: u4
        doc: |
          A time value that indicates the time scale for this
          movie - the number of time units that pass per second
          in its time coordinate system. A time coordinate system that
          measures time in sixtieths of a second, for example, has a
          time scale of 60.
      - id: duration
        type: u4
        doc: |
          A time value that indicates the duration of the movie in
          time scale units. Note that this property is derived from
          the movie's tracks. The value of this field corresponds to
          the duration of the longest track in the movie.
      - id: preferred_rate
        type: fixed32
        doc: The rate at which to play this movie. A value of 1.0 indicates normal rate.
      - id: preferred_volume
        type: fixed16
        doc: How loud to play this movie's sound. A value of 1.0 indicates full volume.
      - id: reserved1
        size: 10
      - id: matrix
        size: 36
        doc: A matrix shows how to map points from one coordinate space into another.
      - id: preview_time
        type: u4
        doc: The time value in the movie at which the preview begins.
      - id: preview_duration
        type: u4
        doc: The duration of the movie preview in movie time scale units.
      - id: poster_time
        type: u4
        doc: The time value of the time of the movie poster.
      - id: selection_time
        type: u4
        doc: The time value for the start time of the current selection.
      - id: selection_duration
        type: u4
        doc: The duration of the current selection in movie time scale units.
      - id: current_time
        type: u4
        doc: The time value for current time position within the movie.
      - id: next_track_id
        type: u4
        doc: |
          Indicates a value to use for the track ID number of the next
          track added to this movie. Note that 0 is not a valid track
          ID value.
  tkhd_body:
    doc-ref: 'https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25550'
    seq:
      - id: version
        type: u1
      - id: flags
        size: 3
      - id: creation_time
        type: u4
      - id: modification_time
        type: u4
      - id: track_id
        type: u4
        doc: Integer that uniquely identifies the track. The value 0 cannot be used.
      - id: reserved1
        size: 4
      - id: duration
        type: u4
      - id: reserved2
        size: 8
      - id: layer
        type: u2
      - id: alternative_group
        type: u2
      - id: volume
        type: u2
      - id: reserved3
        type: u2
      - id: matrix
        size: 36
      - id: width
        type: fixed32
      - id: height
        type: fixed32
  fixed32:
    doc: Fixed-point 32-bit number.
    seq:
      - id: int_part
        type: s2
      - id: frac_part
        type: u2
  fixed16:
    doc: Fixed-point 16-bit number.
    seq:
      - id: int_part
        type: s1
      - id: frac_part
        type: u1
enums:
  atom_type:
    0x58747261: xtra
    0x64696e66: dinf
    0x64726566: dref
    0x65647473: edts
    0x656c7374: elst
    0x66726565: free
    0x66747970: ftyp
    0x68646c72: hdlr
    0x696f6473: iods
    0x6d646174: mdat
    0x6d646864: mdhd
    0x6d646961: mdia
    0x6d657461: meta
    0x6d696e66: minf
    0x6d6f6f66: moof
    0x6d6f6f76: moov
    0x6d766864: mvhd
    0x736d6864: smhd
    0x7374626c: stbl
    0x7374636f: stco
    0x73747363: stsc
    0x73747364: stsd
    0x7374737a: stsz
    0x73747473: stts
    0x746b6864: tkhd
    0x74726166: traf
    0x7472616b: trak
    0x74726566: tref
    0x75647461: udta
    0x766d6864: vmhd

  # https://mp4ra.org/#/brands
  #
  # JS code to scrape the enum \`brand\` (paste into the browser JS console on the above page):
  # \`\`\`javascript
  # copy(Array.from(document.querySelector('tbody').querySelectorAll('tr')).map(r => {
  #   const code = r.querySelector('td:nth-child(1)').innerText.replace(/\\\$20/g, '\\x20');
  #   if (!code.trim()) return null;
  #   return [
  #     '0x' + Array.from((new TextEncoder()).encode(code), b => b.toString(16).padStart(2, '0')).join(''),
  #     (/^\\d/.test(code) ? 'x_' : '') + code.trim().toLowerCase(),
  #   ];
  # }).filter(entry => !!entry).map(entry => \`    \${entry[0]}: \${entry[1]}\\n\`).join(''));
  # \`\`\`
  brand:
    0x33673261: x_3g2a
    0x33676536: x_3ge6
    0x33676537: x_3ge7
    0x33676539: x_3ge9
    0x33676639: x_3gf9
    0x33676736: x_3gg6
    0x33676739: x_3gg9
    0x33676839: x_3gh9
    0x33676d39: x_3gm9
    0x33676d41: x_3gma
    0x33677034: x_3gp4
    0x33677035: x_3gp5
    0x33677036: x_3gp6
    0x33677037: x_3gp7
    0x33677038: x_3gp8
    0x33677039: x_3gp9
    0x33677236: x_3gr6
    0x33677239: x_3gr9
    0x33677336: x_3gs6
    0x33677339: x_3gs9
    0x33677438: x_3gt8
    0x33677439: x_3gt9
    0x33677476: x_3gtv
    0x33677672: x_3gvr
    0x33767261: x_3vra
    0x33767262: x_3vrb
    0x3376726d: x_3vrm
    0x61647469: adti
    0x61696433: aid3
    0x41525249: arri
    0x61763031: av01
    0x61766331: avc1
    0x61766369: avci
    0x61766373: avcs
    0x61766465: avde
    0x61766966: avif
    0x6176696f: avio
    0x61766973: avis
    0x6262786d: bbxm
    0x43414550: caep
    0x43446573: cdes
    0x6361346d: ca4m
    0x63613473: ca4s
    0x63616161: caaa
    0x63616163: caac
    0x6361626c: cabl
    0x63616d61: cama
    0x63616d63: camc
    0x63617176: caqv
    0x63617375: casu
    0x63636561: ccea
    0x63636666: ccff
    0x63646d31: cdm1
    0x63646d34: cdm4
    0x63656163: ceac
    0x63666864: cfhd
    0x63667364: cfsd
    0x63686431: chd1
    0x63686466: chdf
    0x63686576: chev
    0x63686864: chhd
    0x63686831: chh1
    0x636c6731: clg1
    0x636d6632: cmf2
    0x636d6663: cmfc
    0x636d6666: cmff
    0x636d666c: cmfl
    0x636d6673: cmfs
    0x636d686d: cmhm
    0x636d6873: cmhs
    0x636f6d70: comp
    0x63736831: csh1
    0x63756431: cud1
    0x63756438: cud8
    0x63757664: cuvd
    0x63766964: cvid
    0x63767663: cvvc
    0x63777674: cwvt
    0x64613061: da0a
    0x64613062: da0b
    0x64613161: da1a
    0x64613162: da1b
    0x64613261: da2a
    0x64613262: da2b
    0x64613361: da3a
    0x64613362: da3b
    0x64617368: dash
    0x64627931: dby1
    0x646d6231: dmb1
    0x64736d73: dsms
    0x64747331: dts1
    0x64747332: dts2
    0x64747333: dts3
    0x64763161: dv1a
    0x64763162: dv1b
    0x64763261: dv2a
    0x64763262: dv2b
    0x64763361: dv3a
    0x64763362: dv3b
    0x64767231: dvr1
    0x64767431: dvt1
    0x64786f20: dxo
    0x656d7367: emsg
    0x68656963: heic
    0x6865696d: heim
    0x68656973: heis
    0x68656978: heix
    0x68656f69: heoi
    0x68657663: hevc
    0x68657664: hevd
    0x68657669: hevi
    0x6865766d: hevm
    0x68657673: hevs
    0x68657678: hevx
    0x68766365: hvce
    0x68766369: hvci
    0x68766378: hvcx
    0x68767469: hvti
    0x69667364: ifsd
    0x69666873: ifhs
    0x69666864: ifhd
    0x69666878: ifhx
    0x69666868: ifhh
    0x69666875: ifhu
    0x69666872: ifhr
    0x69666161: ifaa
    0x69666173: ifas
    0x69666168: ifah
    0x69666169: ifai
    0x69666175: ifau
    0x69666176: ifav
    0x6966726d: ifrm
    0x696d3169: im1i
    0x696d3174: im1t
    0x696d3269: im2i
    0x696d3274: im2t
    0x69736332: isc2
    0x69736f32: iso2
    0x69736f33: iso3
    0x69736f34: iso4
    0x69736f35: iso5
    0x69736f36: iso6
    0x69736f37: iso7
    0x69736f38: iso8
    0x69736f39: iso9
    0x69736f61: isoa
    0x69736f62: isob
    0x69736f63: isoc
    0x69736f6d: isom
    0x6a326b69: j2ki
    0x6a326b73: j2ks
    0x6a326973: j2is
    0x4a325030: j2p0
    0x4a325031: j2p1
    0x6a703220: jp2
    0x6a706567: jpeg
    0x6a706773: jpgs
    0x6a706d20: jpm
    0x6a706f69: jpoi
    0x6a707369: jpsi
    0x6a707820: jpx
    0x6a707862: jpxb
    0x6a786c20: jxl
    0x6a787320: jxs
    0x6a787363: jxsc
    0x6a787369: jxsi
    0x6a787373: jxss
    0x4c434147: lcag
    0x6c687465: lhte
    0x6c687469: lhti
    0x6c6d7367: lmsg
    0x4d344120: m4a
    0x4d344220: m4b
    0x4d345020: m4p
    0x4d345620: m4v
    0x4d413142: ma1b
    0x4d413141: ma1a
    0x4d46534d: mfsm
    0x4d475356: mgsv
    0x4d694142: miab
    0x4d694143: miac
    0x6d696166: miaf
    0x4d69416e: mian
    0x4d694275: mibu
    0x4d69436d: micm
    0x6d696631: mif1
    0x4d694841: miha
    0x4d694842: mihb
    0x4d694845: mihe
    0x4d695072: mipr
    0x6d6a3273: mj2s
    0x6d6a7032: mjp2
    0x6d703231: mp21
    0x6d703431: mp41
    0x6d703432: mp42
    0x6d703731: mp71
    0x4d505049: mppi
    0x6d707566: mpuf
    0x6d736631: msf1
    0x6d736468: msdh
    0x6d736978: msix
    0x4d534e56: msnv
    0x6e696b6f: niko
    0x6e6c736c: nlsl
    0x6e726173: nras
    0x6f613264: oa2d
    0x6f61626c: oabl
    0x6f646366: odcf
    0x6f6d7070: ompp
    0x6f706632: opf2
    0x6f707832: opx2
    0x6f766470: ovdp
    0x6f766c79: ovly
    0x70616666: paff
    0x70616e61: pana
    0x70696666: piff
    0x706d6666: pmff
    0x706e7669: pnvi
    0x71742020: qt
    0x72656c6f: relo
    0x72697378: risx
    0x524f5353: ross
    0x73647620: sdv
    0x53454155: seau
    0x5345424b: sebk
    0x73656e76: senv
    0x73696d73: sims
    0x73697378: sisx
    0x73697469: siti
    0x73697476: sitv
    0x736c6831: slh1
    0x736c6832: slh2
    0x736c6833: slh3
    0x73737373: ssss
    0x74746d6c: ttml
    0x74747776: ttwv
    0x75687669: uhvi
    0x756e6966: unif
    0x75767675: uvvu
    0x76336d70: v3mp
    0x76336d74: v3mt
    0x76336e74: v3nt
    0x76337374: v3st
    0x76766369: vvci
    0x76766f69: vvoi
    0x76777074: vwpt
    0x58415643: xavc
    0x79743420: yt4
    0x63686432: chd2
    0x63696e74: cint
    0x636c6732: clg2
    0x63756432: cud2
    0x63756439: cud9
    0x6d696632: mif2
    0x70726564: pred
`
  },
  {
    id: "ksy_standard_midi_file",
    name: "Standard MIDI file",
    category: "Media",
    metadata: {
      isGenerated: true,
      fileExtensions: ["mid","midi","smf"],
      description: "Standard MIDI file",
      originalCategory: "media",
      filePath: "media/standard_midi_file.ksy",
      endian: "be"
    },
    content: `meta:
  id: standard_midi_file
  title: Standard MIDI file
  file-extension:
    - mid
    - midi
    - smf
  xref:
    justsolve: MIDI
    loc:
      - fdd000102 # MIDI Sequence Data
      - fdd000119 # Standard MIDI File
    mime: audio/midi
    pronom: x-fmt/230
    wikidata: Q10610388
  license: CC0-1.0
  imports:
    - /common/vlq_base128_be
  endian: be
doc: |
  Standard MIDI file, typically known just as "MID", is a standard way
  to serialize series of MIDI events, which is a protocol used in many
  music synthesizers to transfer music data: notes being played,
  effects being applied, etc.

  Internally, file consists of a header and series of tracks, every
  track listing MIDI events with certain header designating time these
  events are happening.

  NOTE: Rarely, MIDI files employ certain stateful compression scheme
  to avoid storing certain elements of further elements, instead
  reusing them from events which happened earlier in the
  stream. Kaitai Struct (as of v0.9) is currently unable to parse
  these, but files employing this mechanism are relatively rare.
seq:
  - id: hdr
    type: header
  - id: tracks
    type: track
    repeat: expr
    repeat-expr: hdr.num_tracks
types:
  header:
    seq:
      - id: magic
        contents: "MThd"
      - id: len_header
        type: u4
      - id: format
        type: u2
      - id: num_tracks
        type: u2
      - id: division
        type: s2
  track:
    seq:
      - id: magic
        contents: "MTrk"
      - id: len_events
        type: u4
      - id: events
        type: track_events
        size: len_events
  track_events:
    seq:
      - id: event
        type: track_event
        repeat: eos
  track_event:
    seq:
      - id: v_time
        type: vlq_base128_be
      - id: event_header
        type: u1
      - id: meta_event_body
        type: meta_event_body
        if: event_header == 0xff
      - id: sysex_body
        type: sysex_event_body
        if: event_header == 0xf0
      - id: event_body
        type:
          switch-on: event_type
          cases:
            0x80: note_off_event
            0x90: note_on_event
            0xa0: polyphonic_pressure_event
            0xb0: controller_event
            0xc0: program_change_event
            0xd0: channel_pressure_event
            0xe0: pitch_bend_event
    instances:
      event_type:
        value: event_header & 0xf0
      channel:
        value: event_header & 0xf
        if: event_type != 0xf0
  meta_event_body:
    seq:
      - id: meta_type
        type: u1
        enum: meta_type_enum
      - id: len
        type: vlq_base128_be
      - id: body
        size: len.value
    enums:
      meta_type_enum:
        0x00: sequence_number
        0x01: text_event
        0x02: copyright
        0x03: sequence_track_name
        0x04: instrument_name
        0x05: lyric_text
        0x06: marker_text
        0x07: cue_point
        0x20: midi_channel_prefix_assignment
        0x2f: end_of_track
        0x51: tempo
        0x54: smpte_offset
        0x58: time_signature
        0x59: key_signature
        0x7f: sequencer_specific_event
  note_off_event:
    seq:
      - id: note
        type: u1
      - id: velocity
        type: u1
  note_on_event:
    seq:
      - id: note
        type: u1
      - id: velocity
        type: u1
  polyphonic_pressure_event:
    seq:
      - id: note
        type: u1
      - id: pressure
        type: u1
  controller_event:
    seq:
      - id: controller
        type: u1
      - id: value
        type: u1
  program_change_event:
    seq:
      - id: program
        type: u1
  channel_pressure_event:
    seq:
      - id: pressure
        type: u1
  pitch_bend_event:
    seq:
      - id: b1
        type: u1
      - id: b2
        type: u1
    instances:
      bend_value:
        value: (b2 << 7) + b1 - 0x4000
      adj_bend_value:
        value: bend_value - 0x4000
  sysex_event_body:
    seq:
      - id: len
        type: vlq_base128_be
      - id: data
        size: len.value
`
  },
  {
    id: "ksy_stl",
    name: "Stl",
    category: "Media",
    metadata: {
      isGenerated: true,
      fileExtensions: ["stl"],
      description: "",
      originalCategory: "media",
      filePath: "media/stl.ksy",
      endian: "le"
    },
    content: `meta:
  id: stl
  application: 3D Systems Stereolithography
  file-extension: stl
  xref:
    justsolve: STL
    loc: fdd000505
    pronom: fmt/865
    wikidata: Q1238229
  license: CC0-1.0
  endian: le
doc: |
  STL files are used to represent simple 3D models, defined using
  triangular 3D faces.

  Initially it was introduced as native format for 3D Systems
  Stereolithography CAD system, but due to its extreme simplicity, it
  was adopted by a wide range of 3D modelling, CAD, rapid prototyping
  and 3D printing applications as the simplest 3D model exchange
  format.

  STL is extremely bare-bones format: there are no complex headers, no
  texture / color support, no units specifications, no distinct vertex
  arrays. Whole model is specified as a collection of triangular
  faces.

  There are two versions of the format (text and binary), this spec
  describes binary version.
seq:
  - id: header
    size: 80
  - id: num_triangles
    type: u4
  - id: triangles
    type: triangle
    repeat: expr
    repeat-expr: num_triangles
types:
  triangle:
    doc: |
      Each STL triangle is defined by its 3 points in 3D space and a
      normal vector, which is generally used to determine where is
      "inside" and "outside" of the model.
    seq:
      - id: normal
        type: vec3d
      - id: vertices
        type: vec3d
        repeat: expr
        repeat-expr: 3
      - id: abr
        type: u2
        doc: |
          In theory (per standard), it's "attribute byte count" with
          no other details given on what "attribute" is and what
          should be stored in this field.

          In practice, software dealing with STL either expected to
          see 0 here, or uses this 16-bit field per se to store
          additional attributes (such as RGB color of a vertex or
          color index).
  vec3d:
    seq:
      - id: x
        type: f4
      - id: y
        type: f4
      - id: z
        type: f4
`
  },
  {
    id: "ksy_fasttracker_xm_module",
    name: "Extended Module",
    category: "Media",
    metadata: {
      isGenerated: true,
      fileExtensions: ["xm"],
      description: "Extended Module",
      originalCategory: "media",
      filePath: "media/tracker_modules/fasttracker_xm_module.ksy",
      endian: "le"
    },
    content: `meta:
  id: fasttracker_xm_module
  title: Extended Module
  application:
    - FastTracker 2
    - Protracker
    - MilkyTracker
    - libmodplug
    - Mikmod
  file-extension: xm
  xref:
    justsolve: Extended_Module
    pronom: fmt/323
    wikidata: Q376852
  license: Unlicense
  endian: le
  encoding: utf-8
doc: |
  XM (standing for eXtended Module) is a popular module music file
  format, that was introduced in 1994 in FastTracker2 by Triton demo
  group. Akin to MOD files, it bundles both digital samples
  (instruments) and instructions on which note to play at what time
  (patterns), which provides good audio quality with relatively small
  file size. Audio is reproducible without relying on the sound of
  particular hardware samplers or synths.
doc-ref: |
  http://sid.ethz.ch/debian/milkytracker/milkytracker-0.90.85%2Bdfsg/resources/reference/xm-form.txt
  ftp://ftp.modland.com/pub/documents/format_documentation/FastTracker%202%20v2.04%20(.xm).html
seq:
  - id: preheader
    type: preheader
  - id: header
    size: preheader.header_size - 4
    type: header
  - id: patterns
    type: pattern
    repeat: expr
    repeat-expr: header.num_patterns
  - id: instruments
    type: instrument
    repeat: expr
    repeat-expr: header.num_instruments
types:
  preheader:
    seq:
      - id: signature0
        contents: 'Extended Module: '
      - id: module_name
        size: 20
        type: strz
        doc: Module name, padded with zeroes
      - id: signature1
        contents: [0x1a]
      - id: tracker_name
        size: 20
        type: strz
        doc: Tracker name
      - id: version_number
        type: version
        doc: "Format versions below [0x01, 0x04] have a LOT of differences. Check this field!"
      - id: header_size
        type: u4
        doc: Header size << Calculated FROM THIS OFFSET, not from the beginning of the file! >>
    types:
      version:
        seq:
          - id: minor
            type: u1
            doc: currently 0x04
          - id: major
            type: u1
            doc: currently 0x01
        instances:
          value:
            value: (major<<8) | minor
  header:
    seq:
      - id: song_length
        type: u2
        doc: Song length (in pattern order table)
      - id: restart_position
        type: u2
      - id: num_channels
        type: u2
        doc: "(2,4,6,8,10,...,32)"
      - id: num_patterns
        type: u2
        doc: "(max 256)"
      - id: num_instruments
        type: u2
        doc: "(max 128)"
      - id: flags
        type: flags
      - id: default_tempo
        type: u2
      - id: default_bpm
        type: u2
      - id: pattern_order_table
        type: u1
        doc: "max 256"
        repeat: expr
        #repeat-expr: song_length
        repeat-expr: 256
  flags:
    seq:
      - id: reserved
        type: b15
      - id: freq_table_type
        type: b1
        doc: "0 = Amiga frequency table (see below); 1 = Linear frequency table"
  pattern:
    seq:
      - id: header
        type: header
      - id: packed_data
        size: header.main.len_packed_pattern
    types:
      header:
        seq:
          - id: header_length
            type: u4
            doc: Pattern header length
          - id: main
            type: header_main
            size: header_length - 4
        types:
          header_main:
            seq:
                - id: packing_type
                  type: u1
                  doc: Packing type (always 0)
                - id: num_rows_raw
                  type:
                    switch-on: _root.preheader.version_number.value
                    cases:
                      0x0102: u1
                      _: u2
                  doc: Number of rows in pattern (1..256)
                - id: len_packed_pattern
                  type: u2
                  doc: Packed pattern data size
            instances:
              num_rows:
                value: 'num_rows_raw + (_root.preheader.version_number.value == 0x0102 ? 1 : 0)'
  instrument:
    doc: |
      XM's notion of "instrument" typically constitutes of a
      instrument metadata and one or several samples. Metadata
      includes:

      * instrument's name
      * instruction of which sample to use for which note
      * volume and panning envelopes and looping instructions
      * vibrato settings
    seq:
      - id: header_size
        type: u4
        doc: |
          Instrument size << header that is >>
          << "Instrument Size" field tends to be more than the actual size of the structure documented here (it includes also the extended instrument sample header above). So remember to check it and skip the additional bytes before the first sample header >>
      - id: header
        size: header_size - 4
        type: header
      - id: samples_headers
        type: sample_header
        repeat: expr
        repeat-expr: header.num_samples
      - id: samples
        type: samples_data(samples_headers[_index])
        repeat: expr
        repeat-expr: header.num_samples
    types:
      header:
        seq:
          - id: name
            size: 22
            type: strz
          - id: type
            type: u1
            doc: Usually zero, but this seems pretty random, don't assume it's zero
          - id: num_samples
            type: u2
          - id: extra_header
            type: extra_header
            if: num_samples > 0
      extra_header:
        seq:
          - id: len_sample_header
            type: u4
          - id: idx_sample_per_note
            type: u1
            repeat: expr
            repeat-expr: 96
            doc: |
              Index of sample that should be used for any particular
              note. In the simplest case, where it's only one sample
              is available, it's an array of full of zeroes.
          - id: volume_points
            type: envelope_point
            repeat: expr
            repeat-expr: 12
            doc: Points for volume envelope. Only \`num_volume_points\` will be actually used.
          - id: panning_points
            type: envelope_point
            repeat: expr
            repeat-expr: 12
            doc: Points for panning envelope. Only \`num_panning_points\` will be actually used.
          - id: num_volume_points
            type: u1
          - id: num_panning_points
            type: u1

          - id: volume_sustain_point
            type: u1
          - id: volume_loop_start_point
            type: u1
          - id: volume_loop_end_point
            type: u1

          - id: panning_sustain_point
            type: u1
          - id: panning_loop_start_point
            type: u1
          - id: panning_loop_end_point
            type: u1

          - id: volume_type
            type: u1
            enum: type
          - id: panning_type
            type: u1
            enum: type

          - id: vibrato_type
            type: u1
          - id: vibrato_sweep
            type: u1
          - id: vibrato_depth
            type: u1
          - id: vibrato_rate
            type: u1
          - id: volume_fadeout
            type: u2
          - id: reserved
            type: u2
        types:
          envelope_point:
            doc: |
              Envelope frame-counters work in range 0..FFFFh (0..65535 dec).
              BUT! FT2 only itself supports only range 0..FFh (0..255 dec).
              Some other trackers (like SoundTracker for Unix), however, can use the full range 0..FFFF, so it should be supported.
              !!TIP: This is also a good way to detect if the module has been made with FT2 or not. (In case the tracker name is brain- deadly left unchanged!)
              Of course it does not help if all instruments have the values inside FT2 supported range.
              The value-field of the envelope point is ranged between 00..3Fh (0..64 dec).
            seq:
              - id: x
                type: u2
                doc: Frame number of the point
              - id: y
                type: u2
                doc: Value of the point
        enums:
          type:
            0: on
            1: sustain
            2: loop
      samples_data:
        doc: |
          The saved data uses simple delta-encoding to achieve better compression ratios (when compressed with pkzip, etc.)
          Pseudocode for converting the delta-coded data to normal data,
          old = 0;
          for i in range(data_len):
            new = sample[i] + old;
            sample[i] = new;
            old = new;
        params:
          - id: header
            type: sample_header
        seq:
          - id: data
            size: 'header.sample_length * (header.type.is_sample_data_16_bit ? 2 : 1)'
      sample_header:
        seq:
          - id: sample_length
            type: u4
          - id: sample_loop_start
            type: u4
          - id: sample_loop_length
            type: u4

          - id: volume
            type: u1
          - id: fine_tune
            type: s1
            doc: -16..+15
          - id: type
            type: loop_type
          - id: panning
            type: u1
            doc: (0-255)
          - id: relative_note_number
            type: s1
          - id: reserved
            type: u1
          - id: name
            size: 22
            type: strz
        types:
          loop_type:
            seq:
              - id: reserved0
                type: b3
              - id: is_sample_data_16_bit
                type: b1
              - id: reserved1
                type: b2
              - id: loop_type
                type: b2
                enum: loop_type
            enums:
              loop_type:
                0: none
                1: forward
                2: ping_pong
`
  },
  {
    id: "ksy_s3m",
    name: "Scream Tracker 3 module",
    category: "Media",
    metadata: {
      isGenerated: true,
      fileExtensions: ["s3m"],
      description: "Scream Tracker 3 module",
      originalCategory: "media",
      filePath: "media/tracker_modules/s3m.ksy",
      signature: {"offset":0,"bytes":[26]},
      endian: "le"
    },
    content: `meta:
  id: s3m
  title: Scream Tracker 3 module
  file-extension: s3m
  xref:
    justsolve: Scream_Tracker_3_module
    pronom: fmt/718
    wikidata: Q1461901
  license: CC0-1.0
  endian: le
doc: |
  Scream Tracker 3 module is a tracker music file format that, as all
  tracker music, bundles both sound samples and instructions on which
  notes to play. It originates from a Scream Tracker 3 music editor
  (1994) by Future Crew, derived from original Scream Tracker 2 (.stm)
  module format.

  Instrument descriptions in S3M format allow to use either digital
  samples or setup and control AdLib (OPL2) synth.

  Music is organized in so called \`patterns\`. "Pattern" is a generally
  a 64-row long table, which instructs which notes to play on which
  time measure. "Patterns" are played one-by-one in a sequence
  determined by \`orders\`, which is essentially an array of pattern IDs
  - this way it's possible to reuse certain patterns more than once
  for repetitive musical phrases.
doc-ref: http://hackipedia.org/browse.cgi/File%20formats/Music%20tracker/S3M%2c%20ScreamTracker%203/Scream%20Tracker%203.20%20by%20Future%20Crew.txt
seq:
  - id: song_name
    size: 28
    terminator: 0
  - id: magic1
    contents: [0x1a]
  - id: file_type
    -orig-id: Typ
    type: u1
  - id: reserved1
    size: 2
  - id: num_orders
    -orig-id: OrdNum
    type: u2
    doc: Number of orders in a song
  - id: num_instruments
    -orig-id: InsNum
    type: u2
    doc: Number of instruments in a song
  - id: num_patterns
    -orig-id: PatNum
    type: u2
    doc: Number of patterns in a song
  - id: flags
    -orig-id: Flags
    type: u2
  - id: version
    -orig-id: Cwt/v
    type: u2
    doc: Scream Tracker version that was used to save this file
  - id: samples_format
    -orig-id: Ffi
    type: u2
    doc: '1 = signed samples, 2 = unsigned samples'
  - id: magic2
    contents: 'SCRM'
  - id: global_volume
    -orig-id: g.v
    type: u1
  - id: initial_speed
    -orig-id: i.s
    type: u1
  - id: initial_tempo
    -orig-id: i.t
    type: u1
  - id: is_stereo
    type: b1
  - id: master_volume
    -orig-id: m.v
    type: b7
  - id: ultra_click_removal
    -orig-id: u.c
    type: u1
  - id: has_custom_pan
    -orig-id: d.p
    type: u1
  - id: reserved2
    size: 8
  - id: ofs_special
    -orig-id: Special
    type: u2
    doc: Offset of special data, not used by Scream Tracker directly.
  - id: channels
    type: channel
    repeat: expr
    repeat-expr: 32
  - id: orders
    size: num_orders
  - id: instruments
    type: instrument_ptr
    repeat: expr
    repeat-expr: num_instruments
  - id: patterns
    type: pattern_ptr
    repeat: expr
    repeat-expr: num_patterns
  - id: channel_pans
    type: channel_pan
    repeat: expr
    repeat-expr: 32
    if: has_custom_pan == 252
types:
  channel:
    seq:
      - id: is_disabled
        type: b1
      - id: ch_type
        type: b7
        doc: Channel type (0..7 = left sample channels, 8..15 = right sample channels, 16..31 = AdLib synth channels)
  instrument_ptr:
    seq:
      - id: paraptr
        type: u2
    instances:
      body:
        pos: paraptr * 0x10
        type: instrument
  instrument:
    seq:
      - id: type
        type: u1
        enum: inst_types
      - id: filename
        terminator: 0
        size: 12
      - id: body
        type:
          switch-on: type
          cases:
            'inst_types::sample': sampled
            _: adlib
      - id: tuning_hz
        type: u4
      - id: reserved2
        size: 12
      - id: sample_name
        size: 28
        terminator: 0
      - id: magic
        contents: 'SCRS'
    enums:
      inst_types:
        1: sample
        2: melodic
        3: bass_drum
        4: snare_drum
        5: tom
        6: cymbal
        7: hihat
    types:
      sampled:
        seq:
          - id: paraptr_sample
            -orig-id: MemSeg
            type: swapped_u3
          - id: len_sample
            -orig-id: Length
            type: u4
          - id: loop_begin
            -orig-id: LoopBeg
            type: u4
          - id: loop_end
            -orig-id: LoopEnd
            type: u4
          - id: default_volume
            -orig-id: Vol
            type: u1
            doc: Default volume
          - id: reserved1
            type: u1
          - id: is_packed
            -orig-id: '[P]'
            type: u1
            doc: 0 = unpacked, 1 = DP30ADPCM packing
          - id: flags
            -orig-id: '[F]'
            type: u1
        instances:
          sample:
            pos: paraptr_sample.value * 0x10
            size: len_sample
      adlib:
        # TODO
        seq:
          - id: reserved1
            contents: [0, 0, 0]
          - size: 16
  pattern_ptr:
    seq:
      - id: paraptr
        type: u2
    instances:
      body:
        pos: paraptr * 0x10
        type: pattern
  pattern:
    seq:
      - id: size
        type: u2
      - id: body
        size: size - 2
        type: pattern_cells
  pattern_cells:
    seq:
      - id: cells
        type: pattern_cell
        repeat: eos
  pattern_cell:
    seq:
      - id: has_fx
        type: b1
      - id: has_volume
        type: b1
      - id: has_note_and_instrument
        type: b1
      - id: channel_num
        type: b5
      - id: note
        type: u1
        if: has_note_and_instrument
      - id: instrument
        type: u1
        if: has_note_and_instrument
      - id: volume
        type: u1
        if: has_volume
      - id: fx_type
        type: u1
        if: has_fx
      - id: fx_value
        type: u1
        if: has_fx
  swapped_u3:
    doc: Custom 3-byte integer, stored in mixed endian manner.
    seq:
      - id: hi
        type: u1
      - id: lo
        type: u2
    instances:
      value:
        value: lo | (hi << 16)
  channel_pan:
    seq:
      - id: reserved1
        type: b2
      - id: has_custom_pan
        type: b1
        doc: |
          If true, then use a custom pan setting provided in the \`pan\`
          field. If false, the channel would use the default setting
          (0x7 for mono, 0x3 or 0xc for stereo).
      - id: reserved2
        type: b1
      - id: pan
        type: b4
`
  },
  {
    id: "ksy_vp8_duck_ivf",
    name: "Duck IVF (container format for VP8)",
    category: "Media",
    metadata: {
      isGenerated: true,
      fileExtensions: ["ivf"],
      description: "Duck IVF (container format for VP8)",
      originalCategory: "media",
      filePath: "media/vp8_duck_ivf.ksy",
      signature: {"offset":0,"bytes":[68,75,73,70]},
      endian: "le"
    },
    content: `meta:
  id: vp8_duck_ivf
  title: Duck IVF (container format for VP8)
  file-extension: ivf
  xref:
    justsolve: VP8
    loc: fdd000578
    wikidata: Q1063970
  license: CC0-1.0
  ks-version: 0.7
  endian: le
doc: |
  Duck IVF is a simple container format for raw VP8 data, which is an open and
  royalty-free video compression format, currently developed by Google.

  Test .ivf files are available at
  <https://chromium.googlesource.com/webm/vp8-test-vectors>
doc-ref: https://wiki.multimedia.cx/index.php/Duck_IVF
seq:
## header start
  - id: magic1
    contents: DKIF
    doc: Magic Number of IVF Files
  - id: version
    type: u2
    doc: This should be 0
  - id: len_header
    type: u2
    doc: Normally the header length is 32 byte
  - id: codec
    contents: VP80
    doc: Name of the codec e.g. 'VP80' for VP8
  - id: width
    type: u2
    doc: The (initial) width of the video, every keyframe may change the resolution
  - id: height
    type: u2
    doc: The (initial) height of the video, every keyframe may change the resolution
  - id: framerate
    type: u4
    doc: the (framerate * timescale) e.g. for 30 fps -> 30000
  - id: timescale
    type: u4
    doc: the timescale is a divider of the seconds (VPX is integer math only) mostly 1000
  - id: num_frames
    type: u4
    doc: the number of frames (if not a camera stream)
  - id: unused
    type: u4
## header end

## payload start
  - id: image_data
    type: blocks
    repeat: expr
    repeat-expr: num_frames
## payload end

## type definitions
types:
  blocks:
    seq:
      - id: entries
        type: block
  block:
    seq:
      - id: len_frame
        doc: size of the frame data
        type: u4
      - id: timestamp
        type: u8
      - id: framedata
        size: len_frame
`
  },
  {
    id: "ksy_wav",
    name: "Microsoft WAVE audio file",
    category: "Media",
    metadata: {
      isGenerated: true,
      fileExtensions: ["wav","bwf"],
      description: "Microsoft WAVE audio file",
      originalCategory: "media",
      filePath: "media/wav.ksy",
      endian: "le"
    },
    content: `meta:
  id: wav
  title: Microsoft WAVE audio file
  file-extension:
    - wav
    - bwf
  xref:
    justsolve:
      - WAV
      - BWF
    loc:
      - fdd000001 # WAV
      - fdd000002 # WAV PCM
      - fdd000356 # BWF v1
      - fdd000003 # BWF v1 PCM
      - fdd000357 # BWF v2
      - fdd000359 # BWF v2 PCM
    mime:
      - audio/vnd.wave
      - audio/wav
      - audio/wave
      - audio/x-wav
    pronom:
      - fmt/6 # WAV
      - fmt/141 # WAV PCM
      - fmt/142 # WAV non-PCM but not extensible
      - fmt/143 # WAV extensible

      # see <http://fileformats.archiveteam.org/wiki/BWF>
      - fmt/1 # BWF v0
      - fmt/703 # BWF v0 PCM
      - fmt/706 # BWF v0 MPEG
      - fmt/709 # BWF v0 extensible

      - fmt/2 # BWF v1
      - fmt/704 # BWF v1 PCM
      - fmt/707 # BWF v1 MPEG
      - fmt/710 # BWF v1 extensible

      - fmt/527 # BWF v2
      - fmt/705 # BWF v2 PCM
      - fmt/708 # BWF v2 MPEG
      - fmt/711 # BWF v2 extensible
    rfc: 2361
    wikidata:
      - Q217570 # WAV
      - Q922446 # BWF
  tags:
    - windows
  license: BSD-3-Clause-Attribution
  imports:
    - /common/riff
  encoding: ASCII
  endian: le
doc: |
  The WAVE file format is a subset of Microsoft's RIFF specification for the
  storage of multimedia files. A RIFF file starts out with a file header
  followed by a sequence of data chunks. A WAVE file is often just a RIFF
  file with a single "WAVE" chunk which consists of two sub-chunks --
  a "fmt " chunk specifying the data format and a "data" chunk containing
  the actual sample data, although other chunks exist and are used.

  An extension of the file format is the Broadcast Wave Format (BWF) for radio
  broadcasts. Sample files can be found at:

  <https://www.bbc.co.uk/rd/publications/saqas>

  This Kaitai implementation was written by John Byrd of Gigantic Software
  (jbyrd@giganticsoftware.com), and it is likely to contain bugs.
doc-ref:
  - http://soundfile.sapp.org/doc/WaveFormat/
  - https://www.mmsp.ece.mcgill.ca/Documents/AudioFormats/WAVE/WAVE.html
  - https://web.archive.org/web/20101031101749/http://www.ebu.ch/fr/technical/publications/userguides/bwf_user_guide.php
seq:
  - id: chunk
    type: 'riff::chunk'
instances:
  chunk_id:
    value: chunk.id
    enum: fourcc
  is_riff_chunk:
    value: 'chunk_id == fourcc::riff'
  parent_chunk_data:
    io: chunk.data_slot._io
    pos: 0
    type: 'riff::parent_chunk_data'
    if: is_riff_chunk
  form_type:
    value: parent_chunk_data.form_type
    enum: fourcc
  is_form_type_wave:
    value: 'is_riff_chunk and form_type == fourcc::wave'
  subchunks:
    io: parent_chunk_data.subchunks_slot._io
    pos: 0
    type: chunk_type
    repeat: eos
    if: is_form_type_wave
types:
  chunk_type:
    seq:
      - id: chunk
        type: 'riff::chunk'
    instances:
      chunk_id:
        value: chunk.id
        enum: fourcc
      chunk_data:
        io: chunk.data_slot._io
        pos: 0
        type:
          switch-on: chunk_id
          cases:
            'fourcc::fmt': format_chunk_type
            'fourcc::cue': cue_chunk_type
            'fourcc::data': data_chunk_type
            'fourcc::list': list_chunk_type
            'fourcc::fact': fact_chunk_type
            'fourcc::pmx': pmx_chunk_type
            'fourcc::ixml': ixml_chunk_type
            'fourcc::bext': bext_chunk_type
            'fourcc::axml': axml_chunk_type
            'fourcc::afsp': afsp_chunk_type

  list_chunk_type:
    seq:
      - id: parent_chunk_data
        type: 'riff::parent_chunk_data'
    instances:
      form_type:
        value: parent_chunk_data.form_type
        enum: fourcc
      subchunks:
        io: parent_chunk_data.subchunks_slot._io
        pos: 0
        type:
          switch-on: form_type
          cases:
            'fourcc::info': info_chunk_type
        repeat: eos

  info_chunk_type:
    seq:
      - id: chunk
        type: 'riff::chunk'
    instances:
      chunk_data:
        io: chunk.data_slot._io
        pos: 0
        type: strz

  bext_chunk_type:
    doc-ref: https://en.wikipedia.org/wiki/Broadcast_Wave_Format
    seq:
      - id: description
        size: 256
        type: strz
      - id: originator
        size: 32
        type: strz
      - id: originator_reference
        size: 32
        type: strz
      - id: origination_date
        size: 10
        type: str
      - id: origination_time
        size: 8
        type: str
      - id: time_reference_low
        type: u4
      - id: time_reference_high
        type: u4
      - id: version
        type: u2
      - id: umid
        size: 64
      - id: loudness_value
        type: u2
      - id: loudness_range
        type: u2
      - id: max_true_peak_level
        type: u2
      - id: max_momentary_loudness
        type: u2
      - id: max_short_term_loudness
        type: u2

  axml_chunk_type:
    doc-ref: https://tech.ebu.ch/docs/tech/tech3285s5.pdf
    seq:
      - id: data
        size-eos: true
        type: str
        encoding: UTF-8

  ixml_chunk_type:
    doc-ref: https://en.wikipedia.org/wiki/IXML
    seq:
      - id: data
        size-eos: true
        type: str
        encoding: UTF-8

  cue_chunk_type:
    seq:
      - id: dw_cue_points
        type: u4
      - id: cue_points
        type: cue_point_type
        repeat: expr
        repeat-expr: dw_cue_points

  cue_point_type:
    seq:
      - id: dw_name
        type: u4
      - id: dw_position
        type: u4
      - id: fcc_chunk
        type: u4
      - id: dw_chunk_start
        type: u4
      - id: dw_block_start
        type: u4
      - id: dw_sample_offset
        type: u4

  data_chunk_type:
    seq:
      - id: data
        size-eos: true

  fact_chunk_type:
    doc: |
      required for all non-PCM formats
      (\`w_format_tag != w_format_tag_type::pcm\` or \`not is_basic_pcm\` in
      \`format_chunk_type\` context)
    seq:
      - id: num_samples_per_channel
        -orig-id: dwSampleLength
        type: u4

  format_chunk_type:
    seq:
      - id: w_format_tag
        type: u2
        enum: w_format_tag_type
      - id: n_channels
        type: u2
      - id: n_samples_per_sec
        type: u4
      - id: n_avg_bytes_per_sec
        type: u4
      - id: n_block_align
        type: u2
      - id: w_bits_per_sample
        type: u2
      - id: cb_size
        type: u2
        if: not is_basic_pcm
      - id: w_valid_bits_per_sample
        type: u2
        if: is_cb_size_meaningful
      - id: channel_mask_and_subformat
        type: channel_mask_and_subformat_type
        if: is_extensible
    instances:
      is_extensible:
        value: w_format_tag == w_format_tag_type::extensible
      is_basic_pcm:
        value: w_format_tag == w_format_tag_type::pcm
      is_basic_float:
        value: w_format_tag == w_format_tag_type::ieee_float
      is_cb_size_meaningful:
        value: not is_basic_pcm and cb_size != 0

  channel_mask_and_subformat_type:
    seq:
      - id: dw_channel_mask
        type: channel_mask_type
      - id: subformat
        type: guid_type

  channel_mask_type:
    seq:
      - id: front_right_of_center
        type: b1
      - id: front_left_of_center
        type: b1
      - id: back_right
        type: b1
      - id: back_left
        type: b1

      - id: low_frequency
        type: b1
      - id: front_center
        type: b1
      - id: front_right
        type: b1
      - id: front_left
        type: b1

      - id: top_center
        type: b1
      - id: side_right
        type: b1
      - id: side_left
        type: b1
      - id: back_center
        type: b1

      - id: top_back_left
        type: b1
      - id: top_front_right
        type: b1
      - id: top_front_center
        type: b1
      - id: top_front_left
        type: b1

      - id: unused1
        type: b6

      - id: top_back_right
        type: b1
      - id: top_back_center
        type: b1

      - id: unused2
        type: b8

  guid_type:
    seq:
      - id: data1
        type: u4
      - id: data2
        type: u2
      - id: data3
        type: u2
      - id: data4
        type: u4be
      - id: data4a
        type: u4be

  samples_type:
    seq:
      - id: samples
        type: u4

  sample_type:
    seq:
      - id: sample
        type: u2

  pmx_chunk_type:
    seq:
      - id: data
        size-eos: true
        type: str
        encoding: UTF-8
        doc: XMP data
        doc-ref: https://github.com/adobe/XMP-Toolkit-SDK/blob/v2022.06/docs/XMPSpecificationPart3.pdf

  afsp_chunk_type:
    doc-ref: https://www.mmsp.ece.mcgill.ca/Documents/Downloads/AFsp/
    seq:
      - id: magic
        contents: "AFsp"
      - id: info_records
        type: strz
        # The AFsp package uses C strings, so the encoding isn't strictly
        # defined. Therefore, it seems reasonable to assume ASCII.
        encoding: ASCII
        repeat: eos
        doc: |
          An array of AFsp information records, in the \`<field_name>: <value>\`
          format (e.g. "\`program: CopyAudio\`"). The list of existing information
          record types are available in the \`doc-ref\` links.
        doc-ref:
          - https://www.mmsp.ece.mcgill.ca/Documents/Software/Packages/AFsp/libtsp/AF/AFsetInfo.html
          - https://www.mmsp.ece.mcgill.ca/Documents/Software/Packages/AFsp/libtsp/AF/AFprintInfoRecs.html

enums:
  w_format_tag_type:
    0x0000: unknown
    0x0001: pcm
    0x0002: adpcm
    0x0003: ieee_float
    0x0004: vselp
    0x0005: ibm_cvsd
    0x0006: alaw
    0x0007: mulaw
    0x0008: dts
    0x0009: drm
    0x000a: wmavoice9
    0x000b: wmavoice10
    0x0010: oki_adpcm
    0x0011: dvi_adpcm
    0x0012: mediaspace_adpcm
    0x0013: sierra_adpcm
    0x0014: g723_adpcm
    0x0015: digistd
    0x0016: digifix
    0x0017: dialogic_oki_adpcm
    0x0018: mediavision_adpcm
    0x0019: cu_codec
    0x001a: hp_dyn_voice
    0x0020: yamaha_adpcm
    0x0021: sonarc
    0x0022: dspgroup_truespeech
    0x0023: echosc1
    0x0024: audiofile_af36
    0x0025: aptx
    0x0026: audiofile_af10
    0x0027: prosody_1612
    0x0028: lrc
    0x0030: dolby_ac2
    0x0031: gsm610
    0x0032: msnaudio
    0x0033: antex_adpcme
    0x0034: control_res_vqlpc
    0x0035: digireal
    0x0036: digiadpcm
    0x0037: control_res_cr10
    0x0038: nms_vbxadpcm
    0x0039: cs_imaadpcm
    0x003a: echosc3
    0x003b: rockwell_adpcm
    0x003c: rockwell_digitalk
    0x003d: xebec
    0x0040: g721_adpcm
    0x0041: g728_celp
    0x0042: msg723
    0x0043: intel_g723_1
    0x0044: intel_g729
    0x0045: sharp_g726
    0x0050: mpeg
    0x0052: rt24
    0x0053: pac
    0x0055: mpeglayer3
    0x0059: lucent_g723
    0x0060: cirrus
    0x0061: espcm
    0x0062: voxware
    0x0063: canopus_atrac
    0x0064: g726_adpcm
    0x0065: g722_adpcm
    0x0066: dsat
    0x0067: dsat_display
    0x0069: voxware_byte_aligned
    0x0070: voxware_ac8
    0x0071: voxware_ac10
    0x0072: voxware_ac16
    0x0073: voxware_ac20
    0x0074: voxware_rt24
    0x0075: voxware_rt29
    0x0076: voxware_rt29hw
    0x0077: voxware_vr12
    0x0078: voxware_vr18
    0x0079: voxware_tq40
    0x007a: voxware_sc3
    0x007b: voxware_sc3_1
    0x0080: softsound
    0x0081: voxware_tq60
    0x0082: msrt24
    0x0083: g729a
    0x0084: mvi_mvi2
    0x0085: df_g726
    0x0086: df_gsm610
    0x0088: isiaudio
    0x0089: onlive
    0x008a: multitude_ft_sx20
    0x008b: infocom_its_g721_adpcm
    0x008c: convedia_g729
    0x008d: congruency
    0x0091: sbc24
    0x0092: dolby_ac3_spdif
    0x0093: mediasonic_g723
    0x0094: prosody_8kbps
    0x0097: zyxel_adpcm
    0x0098: philips_lpcbb
    0x0099: packed
    0x00a0: malden_phonytalk
    0x00a1: racal_recorder_gsm
    0x00a2: racal_recorder_g720_a
    0x00a3: racal_recorder_g723_1
    0x00a4: racal_recorder_tetra_acelp
    0x00b0: nec_aac
    0x00ff: raw_aac1
    0x0100: rhetorex_adpcm
    0x0101: irat
    0x0111: vivo_g723
    0x0112: vivo_siren
    0x0120: philips_celp
    0x0121: philips_grundig
    0x0123: digital_g723
    0x0125: sanyo_ld_adpcm
    0x0130: siprolab_aceplnet
    0x0131: siprolab_acelp4800
    0x0132: siprolab_acelp8v3
    0x0133: siprolab_g729
    0x0134: siprolab_g729a
    0x0135: siprolab_kelvin
    0x0136: voiceage_amr
    0x0140: g726adpcm
    0x0141: dictaphone_celp68
    0x0142: dictaphone_celp54
    0x0150: qualcomm_purevoice
    0x0151: qualcomm_halfrate
    0x0155: tubgsm
    0x0160: msaudio1
    0x0161: wmaudio2
    0x0162: wmaudio3
    0x0163: wmaudio_lossless
    0x0164: wmaspdif
    0x0170: unisys_nap_adpcm
    0x0171: unisys_nap_ulaw
    0x0172: unisys_nap_alaw
    0x0173: unisys_nap_16k
    0x0174: sycom_acm_syc008
    0x0175: sycom_acm_syc701_g726l
    0x0176: sycom_acm_syc701_celp54
    0x0177: sycom_acm_syc701_celp68
    0x0178: knowledge_adventure_adpcm
    0x0180: fraunhofer_iis_mpeg2_aac
    0x0190: dts_ds
    0x0200: creative_adpcm
    0x0202: creative_fastspeech8
    0x0203: creative_fastspeech10
    0x0210: uher_adpcm
    0x0215: ulead_dv_audio
    0x0216: ulead_dv_audio_1
    0x0220: quarterdeck
    0x0230: ilink_vc
    0x0240: raw_sport
    0x0241: esst_ac3
    0x0249: generic_passthru
    0x0250: ipi_hsx
    0x0251: ipi_rpelp
    0x0260: cs2
    0x0270: sony_scx
    0x0271: sony_scy
    0x0272: sony_atrac3
    0x0273: sony_spc
    0x0280: telum_audio
    0x0281: telum_ia_audio
    0x0285: norcom_voice_systems_adpcm
    0x0300: fm_towns_snd
    0x0350: micronas
    0x0351: micronas_celp833
    0x0400: btv_digital
    0x0401: intel_music_coder
    0x0402: indeo_audio
    0x0450: qdesign_music
    0x0500: on2_vp7_audio
    0x0501: on2_vp6_audio
    0x0680: vme_vmpcm
    0x0681: tpc
    0x08ae: lightwave_lossless
    0x1000: oligsm
    0x1001: oliadpcm
    0x1002: olicelp
    0x1003: olisbc
    0x1004: oliopr
    0x1100: lh_codec
    0x1101: lh_codec_celp
    0x1102: lh_codec_sbc8
    0x1103: lh_codec_sbc12
    0x1104: lh_codec_sbc16
    0x1400: norris
    0x1401: isiaudio_2
    0x1500: soundspace_musicompress
    0x1600: mpeg_adts_aac
    0x1601: mpeg_raw_aac
    0x1602: mpeg_loas
    0x1608: nokia_mpeg_adts_aac
    0x1609: nokia_mpeg_raw_aac
    0x160a: vodafone_mpeg_adts_aac
    0x160b: vodafone_mpeg_raw_aac
    0x1610: mpeg_heaac
    0x181c: voxware_rt24_speech
    0x1971: sonicfoundry_lossless
    0x1979: innings_telecom_adpcm
    0x1c07: lucent_sx8300p
    0x1c0c: lucent_sx5363s
    0x1f03: cuseeme
    0x1fc4: ntcsoft_alf2cm_acm
    0x2000: dvm
    0x2001: dts2
    0x3313: makeavis
    0x4143: divio_mpeg4_aac
    0x4201: nokia_adaptive_multirate
    0x4243: divio_g726
    0x434c: lead_speech
    0x564c: lead_vorbis
    0x5756: wavpack_audio
    0x674f: ogg_vorbis_mode_1
    0x6750: ogg_vorbis_mode_2
    0x6751: ogg_vorbis_mode_3
    0x676f: ogg_vorbis_mode_1_plus
    0x6770: ogg_vorbis_mode_2_plus
    0x6771: ogg_vorbis_mode_3_plus
    0x7000: threecom_nbx
    0x706d: faad_aac
    0x7361: amr_nb
    0x7362: amr_wb
    0x7363: amr_wp
    0x7a21: gsm_amr_cbr
    0x7a22: gsm_amr_vbr_sid
    0xa100: comverse_infosys_g723_1
    0xa101: comverse_infosys_avqsbc
    0xa102: comverse_infosys_sbc
    0xa103: symbol_g729_a
    0xa104: voiceage_amr_wb
    0xa105: ingenient_g726
    0xa106: mpeg4_aac
    0xa107: encore_g726
    0xa108: zoll_asao
    0xa109: speex_voice
    0xa10a: vianix_masc
    0xa10b: wm9_spectrum_analyzer
    0xa10c: wmf_spectrum_anayzer
    0xa10d: gsm_610
    0xa10e: gsm_620
    0xa10f: gsm_660
    0xa110: gsm_690
    0xa111: gsm_adaptive_multirate_wb
    0xa112: polycom_g722
    0xa113: polycom_g728
    0xa114: polycom_g729_a
    0xa115: polycom_siren
    0xa116: global_ip_ilbc
    0xa117: radiotime_time_shift_radio
    0xa118: nice_aca
    0xa119: nice_adpcm
    0xa11a: vocord_g721
    0xa11b: vocord_g726
    0xa11c: vocord_g722_1
    0xa11d: vocord_g728
    0xa11e: vocord_g729
    0xa11f: vocord_g729_a
    0xa120: vocord_g723_1
    0xa121: vocord_lbc
    0xa122: nice_g728
    0xa123: france_telecom_g729
    0xa124: codian
    0xf1ac: flac
    0xfffe: extensible
    0xffff: development

  fourcc:
    # little-endian
    0x46464952: riff
    0x45564157: wave
    0x5453494c: list
    0x4f464e49: info
    0x74636166: fact
    0x20746d66: fmt
    0x20657563: cue
    0x61746164: data
    0x64696d75: umid
    0x666e696d: minf
    0x6e676572: regn
    0x20336469: id3
    0x4b414550: peak
    0x584d505f: pmx
    # BWF chunks
    0x74786562: bext
    0x6c6d7861: axml
    0x4c4d5869: ixml
    0x616e6863:
      id: chna
      doc: Audio definition model
      doc-ref: https://www.itu.int/rec/R-REC-BS.2076-2-201910-I/en
    0x70736661:
      id: afsp
      doc: AFsp metadata
`
  },
  {
    id: "ksy_bitcoin_transaction",
    name: "Bitcoin Transaction",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Bitcoin Transaction",
      originalCategory: "network",
      filePath: "network/bitcoin_transaction.ksy",
      endian: "le"
    },
    content: `meta:
  id: bitcoin_transaction
  title: Bitcoin Transaction
  license: MIT
  endian: le
doc-ref: |
  https://bitcoin.org/en/developer-guide#transactions
  https://en.bitcoin.it/wiki/Transaction
seq:
  - id: version
    type: u4
    doc: |
      Version number.
  - id: num_vins
    type: u1
    doc: |
      Number of input transactions.
  - id: vins
    type: vin
    repeat: expr
    repeat-expr: num_vins
    doc: |
      Input transactions.
      An input refers to an output from a previous transaction.
  - id: num_vouts
    type: u1
    doc: |
      Number of output transactions.
  - id: vouts
    type: vout
    repeat: expr
    repeat-expr: num_vouts
    doc: |
      Output transactions.
  - id: locktime
    type: u4
types:
  vin:
    seq:
      - id: txid
        size: 32
        doc: |
          Previous transaction hash.
      - id: output_id
        type: u4
        doc: |
          ID indexing an ouput of the transaction refered by txid.
          This output will be used as an input in the present transaction.
      - id: len_script
        type: u1
        doc: |
          ScriptSig's length.
      - id: script_sig
        size: len_script
        type: script_signature
        doc: |
          ScriptSig.
        doc-ref: |
          https://en.bitcoin.it/wiki/Transaction#Input
          https://en.bitcoin.it/wiki/Script
      - id: end_of_vin
        contents: [0xff, 0xff, 0xff, 0xff]
        doc: |
          Magic number indicating the end of the current input.
    types:
      script_signature:
        seq:
          - id: len_sig_stack
            type: u1
          - id: der_sig
            type: der_signature
            doc: |
              DER-encoded ECDSA signature.
            doc-ref: |
              https://en.wikipedia.org/wiki/X.690#DER_encoding
              https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm
          - id: sig_type
            type: u1
            enum: sighash_type
            doc: |
              Type of signature.
          - id: len_pubkey_stack
            type: u1
          - id: pubkey
            type: public_key
            doc: |
              Public key (bitcoin address of the recipient).
        types:
          der_signature:
            seq:
              - id: sequence
                contents: [0x30]
              - id: len_sig
                type: u1
              - id: sep_1
                contents: [0x02]
              - id: len_sig_r
                type: u1
                doc: |
                  'r' value's length.
              - id: sig_r
                size: len_sig_r
                doc: |
                  'r' value of the ECDSA signature.
                doc-ref: 'https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm'
              - id: sep_2
                contents: [0x02]
              - id: len_sig_s
                type: u1
                doc: |
                  's' value's length.
              - id: sig_s
                size: len_sig_s
                doc: |
                  's' value of the ECDSA signature.
                doc-ref: 'https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm'
          public_key:
            seq:
              - id: type
                type: u1
              - id: x
                size: 32
                doc: |
                  'x' coordinate of the public key on the elliptic curve.
              - id: y
                size: 32
                doc: |
                  'y' coordinate of the public key on the elliptic curve.
        enums:
          sighash_type:
            1: sighash_all
            2: sighash_none
            3: sighash_single
            80: sighash_anyonecanpay
  vout:
    seq:
      - id: amount
        type: u8
        doc: |
          Number of Satoshis to be transfered.
      - id: len_script
        type: u1
        doc: |
          ScriptPubKey's length.
      - id: script_pub_key
        size: len_script
        doc: |
          ScriptPubKey.
        doc-ref: |
          https://en.bitcoin.it/wiki/Transaction#Output
          https://en.bitcoin.it/wiki/Script
`
  },
  {
    id: "ksy_dime_message",
    name: "DIME (Direct Internet Message Encapsulation) Message",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: ["dim","dime"],
      description: "DIME (Direct Internet Message Encapsulation) Message",
      originalCategory: "network",
      filePath: "network/dime_message.ksy",
      endian: "be"
    },
    content: `meta:
  id: dime_message
  title: DIME (Direct Internet Message Encapsulation) Message
  file-extension:
    - dim
    - dime
  xref:
    mime: application/dime
    wikidata: Q1227457
  license: CC0-1.0
  bit-endian: be
  endian: be
  encoding: ASCII
doc: |
  Direct Internet Message Encapsulation (DIME)
  is an old Microsoft specification for sending and receiving
  SOAP messages along with additional attachments,
  like binary files, XML fragments, and even other
  SOAP messages, using standard transport protocols like HTTP.

  Sample file: \`curl -LO
  https://github.com/kaitai-io/kaitai_struct_formats/files/5894723/scanner_withoptions.dump.gz
  && gunzip scanner_withoptions.dump.gz\`
doc-ref:
  - https://datatracker.ietf.org/doc/html/draft-nielsen-dime-02
  - https://learn.microsoft.com/en-us/archive/msdn-magazine/2002/december/sending-files-attachments-and-soap-messages-via-dime
  - http://imrannazar.com/Parsing-the-DIME-Message-Format
seq:
  - id: records
    type: record
    repeat: eos
types:
  padding:
    doc: padding to the next 4-byte boundary
    seq:
      - id: boundary_padding
        size: (- _io.pos) % 4
  option_field:
    doc: the option field of the record
    seq:
      - id: option_elements
        type: option_element
        repeat: eos
  option_element:
    doc: one element of the option field
    seq:
      - id: element_format
        type: u2
      - id: len_element
        type: u2
      - id: element_data
        size: len_element
  record:
    doc: each individual fragment of the message
    seq:
      - id: version
        doc: DIME format version (always 1)
        type: b5
      - id: is_first_record
        doc: Set if this is the first record in the message
        type: b1
      - id: is_last_record
        doc: Set if this is the last record in the message
        type: b1
      - id: is_chunk_record
        doc: Set if the file contained in this record is chunked into multiple records
        type: b1
      - id: type_format
        doc: Indicates the structure and format of the value of the TYPE field
        enum: type_formats
        type: b4
      - id: reserved
        doc: Reserved for future use
        type: b4
      - id: len_options
        doc: Length of the Options field
        type: u2
      - id: len_id
        doc: Length of the ID field
        type: u2
      - id: len_type
        doc: Length of the Type field
        type: u2
      - id: len_data
        doc: Length of the Data field
        type: u4
      - id: options
        size: len_options
        type: option_field
      - id: options_padding
        type: padding
      - id: id
        doc: Unique identifier of the file (set in the first record of file)
        type: str
        size: len_id
      - id: id_padding
        type: padding
      - id: type
        doc: Specified type in the format set with type_format
        type: str
        size: len_type
      - id: type_padding
        type: padding
      - id: data
        doc: The file data
        size: len_data
      - id: data_padding
        type: padding
enums:
  type_formats:
    0: unchanged
    1: media_type
    2: absolute_uri
    3: unknown
    4: none
`
  },
  {
    id: "ksy_dns_packet",
    name: "DNS (Domain Name Service) packet",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "DNS (Domain Name Service) packet",
      originalCategory: "network",
      filePath: "network/dns_packet.ksy",
      endian: "be"
    },
    content: `meta:
  id: dns_packet
  title: DNS (Domain Name Service) packet
  xref:
    rfc: 1035
    wikidata: Q8767
  license: CC0-1.0
  encoding: utf-8
  endian: be
doc: |
  (No support for Auth-Name + Add-Name for simplicity)
seq:
  - id: transaction_id
    doc: "ID to keep track of request/responces"
    type: u2
  - id: flags
    type: packet_flags
  - id: qdcount
    doc: "How many questions are there"
    if: flags.is_opcode_valid
    type: u2
  - id: ancount
    doc: "Number of resource records answering the question"
    if: flags.is_opcode_valid
    type: u2
  - id: nscount
    doc: "Number of resource records pointing toward an authority"
    if: flags.is_opcode_valid
    type: u2
  - id: arcount
    doc: "Number of resource records holding additional information"
    if: flags.is_opcode_valid
    type: u2
  - id: queries
    if: flags.is_opcode_valid
    type: query
    repeat: expr
    repeat-expr: qdcount
  - id: answers
    if: flags.is_opcode_valid
    type: answer
    repeat: expr
    repeat-expr: ancount
  - id: authorities
    if: flags.is_opcode_valid
    type: answer
    repeat: expr
    repeat-expr: nscount
  - id: additionals
    if: flags.is_opcode_valid
    type: answer
    repeat: expr
    repeat-expr: arcount
types:
  query:
    seq:
      - id: name
        type: domain_name
      - id: type
        type: u2
        enum: type_type
      - id: query_class
        type: u2
        enum: class_type
  answer:
    seq:
      - id: name
        type: domain_name
      - id: type
        type: u2
        enum: type_type
      - id: answer_class
        type: u2
        enum: class_type
      - id: ttl
        doc: "Time to live (in seconds)"
        type: s4
      - id: rdlength
        doc: "Length in octets of the following payload"
        type: u2
      - id: payload
        size: rdlength
        type:
          switch-on: type
          cases:
            "type_type::ptr": domain_name
            "type_type::a": address
            "type_type::aaaa": address_v6
            "type_type::cname": domain_name
            "type_type::soa": authority_info
            "type_type::mx": mx_info
            "type_type::ns": domain_name
            "type_type::srv": service
            "type_type::txt": txt_body
  domain_name:
    seq:
      - id: name
        type: label
        repeat: until
        doc: "Repeat until the length is 0 or it is a pointer (bit-hack to get around lack of OR operator)"
        repeat-until: "_.length == 0 or _.length >= 192"
  label:
    seq:
      - id: length
        doc: "RFC1035 4.1.4: If the first two bits are raised it's a pointer-offset to a previously defined name"
        type: u1
      - id: pointer
        if: "is_pointer"
        type: pointer_struct
      - id: name
        if: "not is_pointer"
        doc: "Otherwise its a string the length of the length value"
        type: str
        size: length
    instances:
      is_pointer:
        value: length >= 192
  pointer_struct:
    seq:
      - id: value
        doc: "Read one byte, then offset to that position, read one domain-name and return"
        type: u1
    instances:
      contents:
        io: _root._io
        pos: value + ((_parent.length - 192) << 8)
        type: domain_name
  address:
    seq:
      - id: ip
        size: 4
  address_v6:
    seq:
      - id: ip_v6
        size: 16
  packet_flags:
    seq:
      - id: flag
        type: u2
    instances:
      qr:
        value: (flag & 0b1000_0000_0000_0000) >> 15
      opcode:
        value: (flag & 0b0111_1000_0000_0000) >> 11
      aa:
        value: (flag & 0b0000_0100_0000_0000) >> 10
      tc:
        value: (flag & 0b0000_0010_0000_0000) >> 9
      rd:
        value: (flag & 0b0000_0001_0000_0000) >> 8
      ra:
        value: (flag & 0b0000_0000_1000_0000) >> 7
      z:
        value: (flag & 0b0000_0000_0100_0000) >> 6
      ad:
        value: (flag & 0b0000_0000_0010_0000) >> 5
      cd:
        value: (flag & 0b0000_0000_0001_0000) >> 4
      rcode:
        value: (flag & 0b0000_0000_0000_1111) >> 0
      is_opcode_valid:
        value: opcode == 0 or opcode == 1 or opcode == 2
  service:
    seq:
      - id: priority
        type: u2
      - id: weight
        type: u2
      - id: port
        type: u2
      - id: target
        type: domain_name
  txt:
    seq:
      - id: length
        type: u1
      - id: text
        type: str
        size: length
  txt_body:
    seq:
      - id: data
        type: txt
        repeat: eos
  authority_info:
    seq:
      - id: primary_ns
        type: domain_name
      - id: resoponsible_mailbox
        type: domain_name
      - id: serial
        type: u4
      - id: refresh_interval
        type: u4
      - id: retry_interval
        type: u4
      - id: expire_limit
        type: u4
      - id: min_ttl
        type: u4
  mx_info:
    seq:
      - id: preference
        type: u2
      - id: mx
        type: domain_name
enums:
  class_type:
    1: in_class
    2: cs
    3: ch
    4: hs
  type_type:
    1: a
    2: ns
    3: md
    4: mf
    5: cname
    6: soa
    7: mb
    8: mg
    9: mr
    10: "null"
    11: wks
    12: ptr
    13: hinfo
    14: minfo
    15: mx
    16: txt
    28: aaaa
    33: srv
`
  },
  {
    id: "ksy_ethernet_frame",
    name: "Ethernet frame (layer 2, IEEE 802.3)",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Ethernet frame (layer 2, IEEE 802.3)",
      originalCategory: "network",
      filePath: "network/ethernet_frame.ksy"
    },
    content: `meta:
  id: ethernet_frame
  title: Ethernet frame (layer 2, IEEE 802.3)
  xref:
    ieee: 802.3
    wikidata: Q11331406
  license: CC0-1.0
  ks-version: 0.8
  imports:
    - /network/ipv4_packet
    - /network/ipv6_packet
doc: |
  Ethernet frame is a OSI data link layer (layer 2) protocol data unit
  for Ethernet networks. In practice, many other networks and/or
  in-file dumps adopted the same format for encapsulation purposes.
doc-ref: https://ieeexplore.ieee.org/document/7428776
seq:
  - id: dst_mac
    size: 6
    doc: Destination MAC address
  - id: src_mac
    size: 6
    doc: Source MAC address
  - id: ether_type_1
    type: u2be
    enum: ether_type_enum
    doc: Either ether type or TPID if it is a IEEE 802.1Q frame
  - id: tci
    type: tag_control_info
    if: ether_type_1 == ether_type_enum::ieee_802_1q_tpid
  - id: ether_type_2
    type: u2be
    enum: ether_type_enum
    if: ether_type_1 == ether_type_enum::ieee_802_1q_tpid
  - id: body
    size-eos: true
    type:
      switch-on: ether_type
      cases:
        'ether_type_enum::ipv4': ipv4_packet
        'ether_type_enum::ipv6': ipv6_packet
instances:
  ether_type:
    value: |
      (ether_type_1 == ether_type_enum::ieee_802_1q_tpid) ? ether_type_2 : ether_type_1
    doc: |
      Ether type can be specied in several places in the frame. If
      first location bears special marker (0x8100), then it is not the
      real ether frame yet, an additional payload (\`tci\`) is expected
      and real ether type is upcoming next.
types:
  tag_control_info:
    doc: |
      Tag Control Information (TCI) is an extension of IEEE 802.1Q to
      support VLANs on normal IEEE 802.3 Ethernet network.
    seq:
      - id: priority
        type: b3
        doc: |
          Priority Code Point (PCP) is used to specify priority for
          different kinds of traffic.
      - id: drop_eligible
        type: b1
        doc: |
          Drop Eligible Indicator (DEI) specifies if frame is eligible
          to dropping while congestion is detected for certain classes
          of traffic.
      - id: vlan_id
        type: b12
        doc: |
          VLAN Identifier (VID) specifies which VLAN this frame
          belongs to.
enums:
  # https://www.iana.org/assignments/ieee-802-numbers/ieee-802-numbers.xhtml
  ether_type_enum:
    0x0800: ipv4
    0x0801: x_75_internet
    0x0802: nbs_internet
    0x0803: ecma_internet
    0x0804: chaosnet
    0x0805: x_25_level_3
    0x0806: arp
    0x8100: ieee_802_1q_tpid
    0x86dd: ipv6
    #0x88a8: ieee_802_1ad_tpid
`
  },
  {
    id: "ksy_hccap",
    name: "Hashcat capture file (old version)",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: ["hccap"],
      description: "Hashcat capture file (old version)",
      originalCategory: "network",
      filePath: "network/hccap.ksy",
      endian: "le"
    },
    content: `meta:
  id: hccap
  title: Hashcat capture file (old version)
  application:
    - Hashcat
    - aircrack-ng
  file-extension: hccap
  license: Unlicense
  encoding: utf-8
  endian: le
doc: |
  Native format of Hashcat password "recovery" utility.

  A sample of file for testing can be downloaded from
  <https://web.archive.org/web/20150220013635if_/http://hashcat.net:80/misc/example_hashes/hashcat.hccap>
doc-ref: https://hashcat.net/wiki/doku.php?id=hccap
seq:
  - id: records
    type: hccap_record
    repeat: eos
types:
  hccap_record:
    seq:
      - id: essid
        size: 36
      - id: mac_ap
        -orig-id: ap_mac
        size: 6
        doc: The BSSID (MAC address) of the access point
      - id: mac_station
        -orig-id: station_mac
        size: 6
        doc: The MAC address of a client connecting to the access point
      - id: nonce_station
        -orig-id: station_nonce
        size: 32
        doc: Nonce (random salt) generated by the client connecting to the access point.
      - id: nonce_ap
        -orig-id: ap_nonce
        size: 32
        doc: Nonce (random salt) generated by the access point.
      - id: eapol_buffer
        type: eapol_dummy
        size: 256
        doc: Buffer for EAPOL data, only first \`len_eapol\` bytes are used
      - id: len_eapol
        -orig-id: eapol_size
        type: u4
        doc: Size of EAPOL data
      - id: keyver
        type: u4
        doc: |
          The flag used to distinguish WPA from WPA2 ciphers. Value of
          1 means WPA, other - WPA2.
      - id: keymic
        size: 16
        doc: |
          The final hash value. MD5 for WPA and SHA-1 for WPA2
          (truncated to 128 bit).
    instances:
      eapol:
        io: eapol_buffer._io
        pos: 0
        size: len_eapol
  eapol_dummy: {}
`
  },
  {
    id: "ksy_hccapx",
    name: "Hashcat capture file",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: ["hccapx"],
      description: "Hashcat capture file",
      originalCategory: "network",
      filePath: "network/hccapx.ksy",
      endian: "le"
    },
    content: `meta:
  id: hccapx
  title: Hashcat capture file
  application:
    - Hashcat
    - aircrack-ng
  file-extension: hccapx
  license: Unlicense
  endian: le
doc: |
  Native format of Hashcat password "recovery" utility
doc-ref: https://hashcat.net/wiki/doku.php?id=hccapx
seq:
  - id: records
    type: hccapx_record
    repeat: eos
types:
  hccapx_record:
    seq:
      - id: magic
        contents: "HCPX"
      - id: version
        type: u4
        doc: The version number of the .hccapx file format.
      - id: ignore_replay_counter
        type: b1
        doc: |
          Indicates if the message pair matching was done based on
          replay counter or not.

          Whenever it was set to 1 it means that the replay counter
          was ignored (i.e. it was not considered at all by the
          matching algorithm).

          Hashcat currently does not perform any particular action
          based on this bit, but nonetheless this information could be
          crucial for some 3th party tools and for
          analysis/statistics. There could be some opportunity to
          implement some further logic based on this particular
          information also within hashcat (in the future).
      - id: message_pair
        type: b7
        doc: |
          The message_pair value describes which messages of the 4-way
          handshake were combined to form the .hccapx structure. It is
          always a pair of 2 messages: 1 from the AP (access point)
          and 1 from the STA (client).

          Furthermore, the message_pair value also gives a hint from
          which of the 2 messages the EAPOL origins. This is
          interesting data, but not necessarily needed for hashcat to
          be able to crack the hash.

          On the other hand, it could be very important to know if
          "only" message 1 and message 2 were captured or if for
          instance message 3 and/or message 4 were captured too. If
          message 3 and/or message 4 were captured it should be a hard
          evidence that the connection was established and that the
          password the client used was the correct one.
      - id: len_essid
        -orig-id: essid_len
        type: u1
      - id: essid
        size: len_essid
      - id: padding1
        size: 32 - len_essid
      - id: keyver
        type: u1
        doc: |
          The flag used to distinguish WPA from WPA2 ciphers. Value of
          1 means WPA, other - WPA2.
      - id: keymic
        size: 16
        doc: |
          The final hash value. MD5 for WPA and SHA-1 for WPA2
          (truncated to 128 bit).
      - id: mac_ap
        size: 6
        doc: The BSSID (MAC address) of the access point.
      - id: nonce_ap
        size: 32
        doc: Nonce (random salt) generated by the access point.
      - id: mac_station
        -orig-id: mac_sta
        size: 6
        doc: The MAC address of the client connecting to the access point.
      - id: nonce_station
        -orig-id: nonce_sta
        size: 32
        doc: Nonce (random salt) generated by the client connecting to the access point.
      - id: len_eapol
        -orig-id: eapol_len
        type: u2
        doc: The length of the EAPOL data.
      - id: eapol
        size: len_eapol
      - id: padding2
        size: 256 - len_eapol
`
  },
  {
    id: "ksy_icmp_packet",
    name: "ICMP network packet",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "ICMP network packet",
      originalCategory: "network",
      filePath: "network/icmp_packet.ksy",
      endian: "be"
    },
    content: `meta:
  id: icmp_packet
  title: ICMP network packet
  xref:
    rfc: 792
    wikidata: Q13162
  license: CC0-1.0
  endian: be
seq:
  - id: icmp_type
    type: u1
    enum: icmp_type_enum
  - id: destination_unreachable
    type: destination_unreachable_msg
    if: icmp_type == icmp_type_enum::destination_unreachable
  - id: time_exceeded
    type: time_exceeded_msg
    if: icmp_type == icmp_type_enum::time_exceeded
  - id: echo
    type: echo_msg
    if: icmp_type == icmp_type_enum::echo or icmp_type == icmp_type_enum::echo_reply
enums:
  icmp_type_enum:
    0: echo_reply
    3: destination_unreachable
    4: source_quench
    5: redirect
    8: echo
    11: time_exceeded
types:
  destination_unreachable_msg:
    seq:
      - id: code
        type: u1
        enum: destination_unreachable_code
      - id: checksum
        type: u2
    enums:
      destination_unreachable_code:
        0: net_unreachable
        1: host_unreachable
        2: protocol_unreachable
        3: port_unreachable
        4: fragmentation_needed_and_df_set
        5: source_route_failed
        6: dst_net_unkown
        7: sdt_host_unkown
        8: src_isolated
        9: net_prohibited_by_admin
        10: host_prohibited_by_admin
        11: net_unreachable_for_tos
        12: host_unreachable_for_tos
        13: communication_prohibited_by_admin
        14: host_precedence_violation
        15: precedence_cuttoff_in_effect
  time_exceeded_msg:
    seq:
      - id: code
        type: u1
        enum: time_exceeded_code
      - id: checksum
        type: u2
    enums:
      time_exceeded_code:
        0: time_to_live_exceeded_in_transit
        1: fragment_reassembly_time_exceeded
  echo_msg:
    seq:
      - id: code
        contents: [0]
      - id: checksum
        type: u2
      - id: identifier
        type: u2
      - id: seq_num
        type: u2
      - id: data
        size-eos: true
`
  },
  {
    id: "ksy_ipv4_packet",
    name: "IPv4 network packet",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "IPv4 network packet",
      originalCategory: "network",
      filePath: "network/ipv4_packet.ksy"
    },
    content: `meta:
  id: ipv4_packet
  title: IPv4 network packet
  xref:
    rfc: 791
    wikidata: Q11103
  license: CC0-1.0
  ks-version: 0.8
  imports:
    - /network/protocol_body
seq:
  - id: b1
    type: u1
  - id: b2
    type: u1
  - id: total_length
    type: u2be
  - id: identification
    type: u2be
  - id: b67
    type: u2be
  - id: ttl
    type: u1
  - id: protocol
    type: u1
  - id: header_checksum
    type: u2be
  - id: src_ip_addr
    size: 4
  - id: dst_ip_addr
    size: 4
  - id: options
    type: ipv4_options
    size: ihl_bytes - 20
  - id: body
    size: total_length - ihl_bytes
    type: protocol_body(protocol)
instances:
  version:
    value: (b1 & 0xf0) >> 4
  ihl:
    value: b1 & 0xf
  ihl_bytes:
    value: ihl * 4
types:
  ipv4_options:
    seq:
      - id: entries
        type: ipv4_option
        repeat: eos
  ipv4_option:
    seq:
      - id: b1
        type: u1
      - id: len
        type: u1
      - id: body
        size: 'len > 2 ? len - 2 : 0'
    instances:
      copy:
        value: (b1 & 0b10000000) >> 7
      opt_class:
        value: (b1 & 0b01100000) >> 5
      number:
        value: (b1 & 0b00011111)
`
  },
  {
    id: "ksy_ipv6_packet",
    name: "IPv6 network packet",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "IPv6 network packet",
      originalCategory: "network",
      filePath: "network/ipv6_packet.ksy",
      endian: "be"
    },
    content: `meta:
  id: ipv6_packet
  title: IPv6 network packet
  license: CC0-1.0
  ks-version: 0.8
  imports:
    - /network/protocol_body
  endian: be
seq:
  - id: version
    type: b4
  - id: traffic_class
    type: b8
  - id: flow_label
    type: b20
  - id: payload_length
    type: u2
  - id: next_header_type
    type: u1
  - id: hop_limit
    type: u1
  - id: src_ipv6_addr
    size: 16
  - id: dst_ipv6_addr
    size: 16
  - id: next_header
    type: protocol_body(next_header_type)
  - id: rest
    size-eos: true
`
  },
  {
    id: "ksy_microsoft_network_monitor_v2",
    name: "Microsoft Network Monitor V2",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: ["cap"],
      description: "",
      originalCategory: "network",
      filePath: "network/microsoft_network_monitor_v2.ksy",
      signature: {"offset":0,"bytes":[71,77,66,85]},
      endian: "le"
    },
    content: `meta:
  id: microsoft_network_monitor_v2
  application: Microsoft Network Monitor, v2.x
  file-extension: cap
  license: CC0-1.0
  xref:
    pronom: fmt/778
    wikidata: Q47245444
  ks-version: 0.7
  imports:
    - /network/ethernet_frame
    - /windows/windows_systemtime
  endian: le
doc: |
  Microsoft Network Monitor (AKA Netmon) is a proprietary Microsoft's
  network packet sniffing and analysis tool. It can save captured
  traffic as .cap files, which usually contain the packets and may
  contain some additional info - enhanced network info, calculated
  statistics, etc.

  There are at least 2 different versions of the format: v1 and
  v2. Netmon v3 seems to use the same file format as v1.
doc-ref: https://learn.microsoft.com/en-us/windows/win32/netmon2/capturefile-header-values
seq:
  - id: signature
    contents: GMBU
  - id: version_minor
    type: u1
    doc: Format version (minor), BCD
  - id: version_major
    type: u1
    doc: Format version (major), BCD
  - id: mac_type
    type: u2
    enum: linktype
    doc: Network topology type of captured data
  - id: time_capture_start
    type: windows_systemtime
    doc: Timestamp of capture start
  - id: frame_table_ofs
    type: u4
  - id: frame_table_len
    type: u4
  - id: user_data_ofs
    type: u4
  - id: user_data_len
    type: u4
  - id: comment_ofs
    type: u4
  - id: comment_len
    type: u4
  - id: statistics_ofs
    type: u4
  - id: statistics_len
    type: u4
  - id: network_info_ofs
    type: u4
  - id: network_info_len
    type: u4
  - id: conversation_stats_ofs
    type: u4
  - id: conversation_stats_len
    type: u4
instances:
  frame_table:
    pos: frame_table_ofs
    size: frame_table_len
    type: frame_index
    doc: Index that is used to access individual captured frames
types:
  frame_index:
    seq:
      - id: entries
        type: frame_index_entry
        repeat: eos
  frame_index_entry:
    doc: |
      Each index entry is just a pointer to where the frame data is
      stored in the file.
    seq:
      - id: ofs
        doc: Absolute pointer to frame data in the file
        type: u4
    instances:
      body:
        io: _root._io
        pos: ofs
        type: frame
        doc: Frame body itself
  frame:
    doc: |
      A container for actually captured network data. Allow to
      timestamp individual frames and designates how much data from
      the original packet was actually written into the file.
    doc-ref: https://learn.microsoft.com/en-us/windows/win32/netmon2/frame
    seq:
      - id: ts_delta
        type: u8
        doc: Time stamp - usecs since start of capture
      - id: orig_len
        type: u4
        doc: Actual length of packet
      - id: inc_len
        type: u4
        doc: Number of octets captured in file
      - id: body
        size: inc_len
        doc: Actual packet captured from the network
        type:
          switch-on: _root.mac_type
          cases:
            'linktype::ethernet': ethernet_frame
# Duplicate from pcap.ksy - should disappear from here as soon as
# we'll get shared enums working
enums:
  linktype:
    # https://www.tcpdump.org/linktypes.html
    0: null_linktype
    1: ethernet
    3: ax25
    6: ieee802_5
    7: arcnet_bsd
    8: slip
    9: ppp
    10: fddi
    50: ppp_hdlc
    51: ppp_ether
    100: atm_rfc1483
    101: raw
    104: c_hdlc
    105: ieee802_11
    107: frelay
    108: loop
    113: linux_sll
    114: ltalk
    117: pflog
    119: ieee802_11_prism
    122: ip_over_fc
    123: sunatm
    127: ieee802_11_radiotap
    129: arcnet_linux
    138: apple_ip_over_ieee1394
    139: mtp2_with_phdr
    140: mtp2
    141: mtp3
    142: sccp
    143: docsis
    144: linux_irda
    147: user0
    148: user1
    149: user2
    150: user3
    151: user4
    152: user5
    153: user6
    154: user7
    155: user8
    156: user9
    157: user10
    158: user11
    159: user12
    160: user13
    161: user14
    162: user15
    163: ieee802_11_avs
    165: bacnet_ms_tp
    166: ppp_pppd
    169: gprs_llc
    170: gpf_t
    171: gpf_f
    177: linux_lapd
    187: bluetooth_hci_h4
    189: usb_linux
    192: ppi
    195: ieee802_15_4
    196: sita
    197: erf
    201: bluetooth_hci_h4_with_phdr
    202: ax25_kiss
    203: lapd
    204: ppp_with_dir
    205: c_hdlc_with_dir
    206: frelay_with_dir
    209: ipmb_linux
    215: ieee802_15_4_nonask_phy
    220: usb_linux_mmapped
    224: fc_2
    225: fc_2_with_frame_delims
    226: ipnet
    227: can_socketcan
    228: ipv4
    229: ipv6
    230: ieee802_15_4_nofcs
    231: dbus
    235: dvb_ci
    236: mux27010
    237: stanag_5066_d_pdu
    239: nflog
    240: netanalyzer
    241: netanalyzer_transparent
    242: ipoib
    243: mpeg_2_ts
    244: ng40
    245: nfc_llcp
    247: infiniband
    248: sctp
    249: usbpcap
    250: rtac_serial
    251: bluetooth_le_ll
    253: netlink
    254: bluetooth_linux_monitor
    255: bluetooth_bredr_bb
    256: bluetooth_le_ll_with_phdr
    257: profibus_dl
    258: pktap
    259: epon
    260: ipmi_hpm_2
    261: zwave_r1_r2
    262: zwave_r3
    263: wattstopper_dlm
    264: iso_14443
`
  },
  {
    id: "ksy_packet_ppi",
    name: "Packet Ppi",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "",
      originalCategory: "network",
      filePath: "network/packet_ppi.ksy",
      endian: "le"
    },
    content: `meta:
  id: packet_ppi
  license: CC0-1.0
  imports:
    - /network/ethernet_frame
  endian: le
doc: |
  PPI is a standard for link layer packet encapsulation, proposed as
  generic extensible container to store both captured in-band data and
  out-of-band data. Originally it was developed to provide 802.11n
  radio information, but can be used for other purposes as well.

  Sample capture:
  <https://wiki.wireshark.org/uploads/27707187aeb30df68e70c8fb9d614981/http.cap>
doc-ref: >-
  https://web.archive.org/web/20090206112419/https://www.cacetech.com/documents/PPI_Header_format_1.0.1.pdf
  PPI header format spec, section 3
seq:
  - id: header
    type: packet_ppi_header
  - id: fields
    type: packet_ppi_fields
    size: header.pph_len - 8 # sizeof(packet_ppi_header)
  - id: body
    size-eos: true
    type:
      switch-on: header.pph_dlt
      cases:
        'linktype::ppi': packet_ppi
        'linktype::ethernet': ethernet_frame
types:
  packet_ppi_header:
    doc-ref: >-
      https://web.archive.org/web/20090206112419/https://www.cacetech.com/documents/PPI_Header_format_1.0.1.pdf
      PPI header format spec, section 3.1
    seq:
      - id: pph_version
        type: u1
      - id: pph_flags
        type: u1
      - id: pph_len
        type: u2
      - id: pph_dlt
        type: u4
        enum: linktype
  packet_ppi_fields:
    seq:
      - id: entries
        type: packet_ppi_field
        repeat: eos
  packet_ppi_field:
    doc-ref: >-
      https://web.archive.org/web/20090206112419/https://www.cacetech.com/documents/PPI_Header_format_1.0.1.pdf
      PPI header format spec, section 3.1
    seq:
      - id: pfh_type
        type: u2
        enum: pfh_type
      - id: pfh_datalen
        type: u2
      - id: body
        size: pfh_datalen
        type:
          switch-on: pfh_type
          cases:
            'pfh_type::radio_802_11_common': radio_802_11_common_body
            'pfh_type::radio_802_11n_mac_ext': radio_802_11n_mac_ext_body
            'pfh_type::radio_802_11n_mac_phy_ext': radio_802_11n_mac_phy_ext_body
  radio_802_11_common_body:
    doc-ref: >-
      https://web.archive.org/web/20090206112419/https://www.cacetech.com/documents/PPI_Header_format_1.0.1.pdf
      PPI header format spec, section 4.1.2
    seq:
      - id: tsf_timer
        type: u8
      - id: flags
        type: u2
      - id: rate
        type: u2
      - id: channel_freq
        type: u2
      - id: channel_flags
        type: u2
      - id: fhss_hopset
        type: u1
      - id: fhss_pattern
        type: u1
      - id: dbm_antsignal
        type: s1
      - id: dbm_antnoise
        type: s1
  radio_802_11n_mac_ext_body:
    doc-ref: >-
      https://web.archive.org/web/20090206112419/https://www.cacetech.com/documents/PPI_Header_format_1.0.1.pdf
      PPI header format spec, section 4.1.3
    seq:
      - id: flags
        type: mac_flags
      - id: a_mpdu_id
        type: u4
      - id: num_delimiters
        type: u1
      - id: reserved
        size: 3
  radio_802_11n_mac_phy_ext_body:
    doc-ref: >-
      https://web.archive.org/web/20090206112419/https://www.cacetech.com/documents/PPI_Header_format_1.0.1.pdf
      PPI header format spec, section 4.1.4
    seq:
      - id: flags
        type: mac_flags
      - id: a_mpdu_id
        type: u4
      - id: num_delimiters
        type: u1
      - id: mcs
        type: u1
        doc: Modulation Coding Scheme (MCS)
      - id: num_streams
        type: u1
        doc: Number of spatial streams (0 = unknown)
      - id: rssi_combined
        type: u1
        doc: RSSI (Received Signal Strength Indication), combined from all active antennas / channels
      - id: rssi_ant_ctl
        type: u1
        doc: RSSI (Received Signal Strength Indication) for antennas 0-3, control channel
        repeat: expr
        repeat-expr: 4
      - id: rssi_ant_ext
        type: u1
        doc: RSSI (Received Signal Strength Indication) for antennas 0-3, extension channel
        repeat: expr
        repeat-expr: 4
      - id: ext_channel_freq
        type: u2
        doc: Extension channel frequency (MHz)
      - id: ext_channel_flags
        type: channel_flags
        doc: Extension channel flags
      - id: rf_signal_noise
        type: signal_noise
        repeat: expr
        repeat-expr: 4
        doc: Signal + noise values for antennas 0-3
      - id: evm
        type: u4
        repeat: expr
        repeat-expr: 4
        doc: EVM (Error Vector Magnitude) for chains 0-3
    types:
      channel_flags:
        seq:
          # First byte
          - id: spectrum_2ghz
            type: b1
            doc: 2 GHz spectrum
          - id: ofdm
            type: b1
            doc: OFDM (Orthogonal Frequency-Division Multiplexing)
          - id: cck
            type: b1
            doc: CCK (Complementary Code Keying)
          - id: turbo
            type: b1
          # Unused LSB of first byte + MSB of second byte
          - id: unused
            type: b8
          # Second byte
          - id: gfsk
            type: b1
            doc: Gaussian Frequency Shift Keying
          - id: dyn_cck_ofdm
            type: b1
            doc: Dynamic CCK-OFDM
          - id: only_passive_scan
            type: b1
            doc: Only passive scan allowed
          - id: spectrum_5ghz
            type: b1
            doc: 5 GHz spectrum
      signal_noise:
        doc: RF signal + noise pair at a single antenna
        seq:
          - id: signal
            type: s1
            doc: RF signal, dBm
          - id: noise
            type: s1
            doc: RF noise, dBm
  mac_flags:
    seq:
      - id: unused1
        type: b1
      - id: aggregate_delimiter
        type: b1
        doc: Aggregate delimiter CRC error after this frame
      - id: more_aggregates
        type: b1
        doc: More aggregates
      - id: aggregate
        type: b1
        doc: Aggregate
      - id: dup_rx
        type: b1
        doc: Duplicate RX
      - id: rx_short_guard
        type: b1
        doc: RX short guard interval (SGI)
      - id: is_ht_40
        type: b1
        doc: true = HT40, false = HT20
      - id: greenfield
        type: b1
        doc: Greenfield
      - id: unused2
        size: 3
enums:
  pfh_type:
    2: radio_802_11_common
    3: radio_802_11n_mac_ext
    4: radio_802_11n_mac_phy_ext
    5: spectrum_map
    6: process_info
    7: capture_info

  # FIXME: this is copy-paste from pcap.ksy, remove after
  # implementation of enum sharing / parametric types
  linktype:
    # https://www.tcpdump.org/linktypes.html
    0: null_linktype
    1: ethernet
    3: ax25
    6: ieee802_5
    7: arcnet_bsd
    8: slip
    9: ppp
    10: fddi
    50: ppp_hdlc
    51: ppp_ether
    100: atm_rfc1483
    101: raw
    104: c_hdlc
    105: ieee802_11
    107: frelay
    108: loop
    113: linux_sll
    114: ltalk
    117: pflog
    119: ieee802_11_prism
    122: ip_over_fc
    123: sunatm
    127: ieee802_11_radiotap
    129: arcnet_linux
    138: apple_ip_over_ieee1394
    139: mtp2_with_phdr
    140: mtp2
    141: mtp3
    142: sccp
    143: docsis
    144: linux_irda
    147: user0
    148: user1
    149: user2
    150: user3
    151: user4
    152: user5
    153: user6
    154: user7
    155: user8
    156: user9
    157: user10
    158: user11
    159: user12
    160: user13
    161: user14
    162: user15
    163: ieee802_11_avs
    165: bacnet_ms_tp
    166: ppp_pppd
    169: gprs_llc
    170: gpf_t
    171: gpf_f
    177: linux_lapd
    187: bluetooth_hci_h4
    189: usb_linux
    192: ppi
    195: ieee802_15_4
    196: sita
    197: erf
    201: bluetooth_hci_h4_with_phdr
    202: ax25_kiss
    203: lapd
    204: ppp_with_dir
    205: c_hdlc_with_dir
    206: frelay_with_dir
    209: ipmb_linux
    215: ieee802_15_4_nonask_phy
    220: usb_linux_mmapped
    224: fc_2
    225: fc_2_with_frame_delims
    226: ipnet
    227: can_socketcan
    228: ipv4
    229: ipv6
    230: ieee802_15_4_nofcs
    231: dbus
    235: dvb_ci
    236: mux27010
    237: stanag_5066_d_pdu
    239: nflog
    240: netanalyzer
    241: netanalyzer_transparent
    242: ipoib
    243: mpeg_2_ts
    244: ng40
    245: nfc_llcp
    247: infiniband
    248: sctp
    249: usbpcap
    250: rtac_serial
    251: bluetooth_le_ll
    253: netlink
    254: bluetooth_linux_monitor
    255: bluetooth_bredr_bb
    256: bluetooth_le_ll_with_phdr
    257: profibus_dl
    258: pktap
    259: epon
    260: ipmi_hpm_2
    261: zwave_r1_r2
    262: zwave_r3
    263: wattstopper_dlm
    264: iso_14443
`
  },
  {
    id: "ksy_pcap",
    name: "Pcap",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: ["pcap","pcapdump"],
      description: "",
      originalCategory: "network",
      filePath: "network/pcap.ksy",
      endian: "le"
    },
    content: `meta:
  id: pcap
  file-extension:
    - pcap
    - pcapdump
  xref:
    forensicswiki: pcap
    justsolve: PCAP
    pronom: fmt/779
    wikidata: Q28009435
  license: CC0-1.0
  ks-version: 0.8
  imports:
    - /network/ethernet_frame
    - /network/packet_ppi
  endian: le
doc: |
  PCAP (named after libpcap / winpcap) is a popular format for saving
  network traffic grabbed by network sniffers. It is typically
  produced by tools like [tcpdump](https://www.tcpdump.org/) or
  [Wireshark](https://www.wireshark.org/).
doc-ref: https://wiki.wireshark.org/Development/LibpcapFileFormat
seq:
  - id: hdr
    type: header
  - id: packets
    type: packet
    repeat: eos
types:
  header:
    doc-ref: 'https://wiki.wireshark.org/Development/LibpcapFileFormat#Global_Header'
    seq:
      - id: magic_number
        contents: [0xd4, 0xc3, 0xb2, 0xa1]
      - id: version_major
        type: u2
        valid:
          eq: 2
      - id: version_minor
        type: u2
      - id: thiszone
        type: s4
        doc: |
          Correction time in seconds between UTC and the local
          timezone of the following packet header timestamps.
      - id: sigfigs
        type: u4
        doc: |
          In theory, the accuracy of time stamps in the capture; in
          practice, all tools set it to 0.
      - id: snaplen
        type: u4
        doc: |
          The "snapshot length" for the capture (typically 65535 or
          even more, but might be limited by the user), see: incl_len
          vs. orig_len.
      - id: network
        type: u4
        enum: linktype
        doc: |
          Link-layer header type, specifying the type of headers at
          the beginning of the packet.
  packet:
    doc-ref: 'https://wiki.wireshark.org/Development/LibpcapFileFormat#Record_.28Packet.29_Header'
    seq:
      - id: ts_sec
        type: u4
      - id: ts_usec
        type: u4
      - id: incl_len
        type: u4
        doc: Number of bytes of packet data actually captured and saved in the file.
      - id: orig_len
        type: u4
        doc: Length of the packet as it appeared on the network when it was captured.
      - id: body
        size: "incl_len < _root.hdr.snaplen ? incl_len : _root.hdr.snaplen"
        type:
          switch-on: _root.hdr.network
          cases:
            'linktype::ppi': packet_ppi
            'linktype::ethernet': ethernet_frame
        doc-ref: 'https://wiki.wireshark.org/Development/LibpcapFileFormat#Packet_Data'
enums:
  linktype:
    # https://www.tcpdump.org/linktypes.html
    0: null_linktype
    1: ethernet
    2: exp_ethernet
    3: ax25
    4: pronet
    5: chaos
    6: ieee802_5
    7: arcnet_bsd
    8: slip
    9: ppp
    10: fddi
    32: redback_smartedge
    50: ppp_hdlc
    51: ppp_ether
    99: symantec_firewall
    100: atm_rfc1483
    101: raw
    104: c_hdlc
    105: ieee802_11
    106: atm_clip
    107: frelay
    108: loop
    109: enc
    112: netbsd_hdlc
    113: linux_sll
    114: ltalk
    115: econet
    116: ipfilter
    117: pflog
    118: cisco_ios
    119: ieee802_11_prism
    120: aironet_header
    122: ip_over_fc
    123: sunatm
    124: rio
    125: pci_exp
    126: aurora
    127: ieee802_11_radiotap
    128: tzsp
    129: arcnet_linux
    130: juniper_mlppp
    131: juniper_mlfr
    132: juniper_es
    133: juniper_ggsn
    134: juniper_mfr
    135: juniper_atm2
    136: juniper_services
    137: juniper_atm1
    138: apple_ip_over_ieee1394
    139: mtp2_with_phdr
    140: mtp2
    141: mtp3
    142: sccp
    143: docsis
    144: linux_irda
    145: ibm_sp
    146: ibm_sn
    147: user0
    148: user1
    149: user2
    150: user3
    151: user4
    152: user5
    153: user6
    154: user7
    155: user8
    156: user9
    157: user10
    158: user11
    159: user12
    160: user13
    161: user14
    162: user15
    163: ieee802_11_avs
    164: juniper_monitor
    165: bacnet_ms_tp
    166: ppp_pppd
    167: juniper_pppoe
    168: juniper_pppoe_atm
    169: gprs_llc
    170: gpf_t
    171: gpf_f
    172: gcom_t1e1
    173: gcom_serial
    174: juniper_pic_peer
    175: erf_eth
    176: erf_pos
    177: linux_lapd
    178: juniper_ether
    179: juniper_ppp
    180: juniper_frelay
    181: juniper_chdlc
    182: mfr
    183: juniper_vp
    184: a429
    185: a653_icm
    186: usb_freebsd
    187: bluetooth_hci_h4
    188: ieee802_16_mac_cps
    189: usb_linux
    190: can20b
    191: ieee802_15_4_linux
    192: ppi
    193: ieee802_16_mac_cps_radio
    194: juniper_ism
    195: ieee802_15_4_withfcs
    196: sita
    197: erf
    198: raif1
    199: ipmb_kontron
    200: juniper_st
    201: bluetooth_hci_h4_with_phdr
    202: ax25_kiss
    203: lapd
    204: ppp_with_dir
    205: c_hdlc_with_dir
    206: frelay_with_dir
    207: lapb_with_dir
    209: ipmb_linux
    210: flexray
    211: most
    212: lin
    213: x2e_serial
    214: x2e_xoraya
    215: ieee802_15_4_nonask_phy
    216: linux_evdev
    217: gsmtap_um
    218: gsmtap_abis
    219: mpls
    220: usb_linux_mmapped
    221: dect
    222: aos
    223: wihart
    224: fc_2
    225: fc_2_with_frame_delims
    226: ipnet
    227: can_socketcan
    228: ipv4
    229: ipv6
    230: ieee802_15_4_nofcs
    231: dbus
    232: juniper_vs
    233: juniper_srx_e2e
    234: juniper_fibrechannel
    235: dvb_ci
    236: mux27010
    237: stanag_5066_d_pdu
    238: juniper_atm_cemic
    239: nflog
    240: netanalyzer
    241: netanalyzer_transparent
    242: ipoib
    243: mpeg_2_ts
    244: ng40
    245: nfc_llcp
    246: pfsync
    247: infiniband
    248: sctp
    249: usbpcap
    250: rtac_serial
    251: bluetooth_le_ll
    252: wireshark_upper_pdu
    253: netlink
    254: bluetooth_linux_monitor
    255: bluetooth_bredr_bb
    256: bluetooth_le_ll_with_phdr
    257: profibus_dl
    258: pktap
    259: epon
    260: ipmi_hpm_2
    261: zwave_r1_r2
    262: zwave_r3
    263: wattstopper_dlm
    264: iso_14443
    265: rds
    266: usb_darwin
    267: openflow
    268: sdlc
    269: ti_lln_sniffer
    270: loratap
    271: vsock
    272: nordic_ble
    273: docsis31_xra31
    274: ethernet_mpacket
    275: displayport_aux
    276: linux_sll2
    277: sercos_monitor
    278: openvizsla
    279: ebhscr
    280: vpp_dispatch
    281: dsa_tag_brcm
    282: dsa_tag_brcm_prepend
    283: ieee802_15_4_tap
    284: dsa_tag_dsa
    285: dsa_tag_edsa
    286: elee
    287:
      id: zwave_serial
      -orig-id: LINKTYPE_Z_WAVE_SERIAL # \`Z_WAVE\` instead of \`ZWAVE\` is a name
                                       # inconsistency (other labels use \`ZWAVE\`)
    288: usb_2_0
    289: atsc_alp
    290: etw
    291: netanalyzer_ng
    292: zboss_ncp
    293: usb_2_0_low_speed
    294: usb_2_0_full_speed
    295: usb_2_0_high_speed
    296: auerswald_log
    297: zwave_tap
    298: silabs_debug_channel
    299: fira_uci
`
  },
  {
    id: "ksy_protocol_body",
    name: "Protocol Body",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "",
      originalCategory: "network",
      filePath: "network/protocol_body.ksy"
    },
    content: `meta:
  id: protocol_body
  license: CC0-1.0
  ks-version: 0.8
  imports:
    - /network/tcp_segment
    - /network/icmp_packet
    - /network/udp_datagram
    - /network/ipv4_packet
    - /network/ipv6_packet
doc: |
  Protocol body represents particular payload on transport level (OSI
  layer 4).

  Typically this payload in encapsulated into network level (OSI layer
  3) packet, which includes "protocol number" field that would be used
  to decide what's inside the payload and how to parse it. Thanks to
  IANA's standardization effort, multiple network level use the same
  IDs for these payloads named "protocol numbers".

  This is effectively a "router" type: it expects to get protocol
  number as a parameter, and then invokes relevant type parser based
  on that parameter.
doc-ref: https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
params:
  - id: protocol_num
    type: u1
    doc: Protocol number as an integer.
seq:
  - id: body
    type:
      switch-on: protocol
      cases:
        'protocol_enum::hopopt': option_hop_by_hop
        'protocol_enum::tcp': tcp_segment
        'protocol_enum::icmp': icmp_packet
        'protocol_enum::udp': udp_datagram
        'protocol_enum::ipv4': ipv4_packet
        'protocol_enum::ipv6': ipv6_packet
        'protocol_enum::ipv6_nonxt': no_next_header
instances:
  protocol:
    value: protocol_num
    enum: protocol_enum
types:
  no_next_header:
    doc: Dummy type for IPv6 "no next header" type, which signifies end of headers chain.
  option_hop_by_hop:
    seq:
      - id: next_header_type
        type: u1
      - id: hdr_ext_len
        type: u1
      - id: body
        size: 'hdr_ext_len > 0 ? hdr_ext_len - 1 : 1'
      - id: next_header
        type: protocol_body(next_header_type)
enums:
  protocol_enum:
    0: hopopt
    1: icmp
    2: igmp
    3: ggp
    4: ipv4
    5: st
    6: tcp
    7: cbt
    8: egp
    9: igp
    10: bbn_rcc_mon
    11: nvp_ii
    12: pup
    13: argus
    14: emcon
    15: xnet
    16: chaos
    17: udp
    18: mux
    19: dcn_meas
    20: hmp
    21: prm
    22: xns_idp
    23: trunk_1
    24: trunk_2
    25: leaf_1
    26: leaf_2
    27: rdp
    28: irtp
    29: iso_tp4
    30: netblt
    31: mfe_nsp
    32: merit_inp
    33: dccp
    34: x_3pc
    35: idpr
    36: xtp
    37: ddp
    38: idpr_cmtp
    39: tp_plus_plus
    40: il
    41: ipv6
    42: sdrp
    43: ipv6_route
    44: ipv6_frag
    45: idrp
    46: rsvp
    47: gre
    48: dsr
    49: bna
    50: esp
    51: ah
    52: i_nlsp
    53: swipe
    54: narp
    55: mobile
    56: tlsp
    57: skip
    58: ipv6_icmp
    59: ipv6_nonxt
    60: ipv6_opts
    61: any_host_internal_protocol
    62: cftp
    63: any_local_network
    64: sat_expak
    65: kryptolan
    66: rvd
    67: ippc
    68: any_distributed_file_system
    69: sat_mon
    70: visa
    71: ipcv
    72: cpnx
    73: cphb
    74: wsn
    75: pvp
    76: br_sat_mon
    77: sun_nd
    78: wb_mon
    79: wb_expak
    80: iso_ip
    81: vmtp
    82: secure_vmtp
    83: vines
    84: ttp_or_iptm
    85: nsfnet_igp
    86: dgp
    87: tcf
    88: eigrp
    89: ospfigp
    90: sprite_rpc
    91: larp
    92: mtp
    93: ax_25
    94: ipip
    95: micp
    96: scc_sp
    97: etherip
    98: encap
    99: any_private_encryption_scheme
    100: gmtp
    101: ifmp
    102: pnni
    103: pim
    104: aris
    105: scps
    106: qnx
    107: a_n
    108: ipcomp
    109: snp
    110: compaq_peer
    111: ipx_in_ip
    112: vrrp
    113: pgm
    114: any_0_hop
    115: l2tp
    116: ddx
    117: iatp
    118: stp
    119: srp
    120: uti
    121: smp
    122: sm
    123: ptp
    124: isis_over_ipv4
    125: fire
    126: crtp
    127: crudp
    128: sscopmce
    129: iplt
    130: sps
    131: pipe
    132: sctp
    133: fc
    134: rsvp_e2e_ignore
    135: mobility_header
    136: udplite
    137: mpls_in_ip
    138: manet
    139: hip
    140: shim6
    141: wesp
    142: rohc
    255: reserved_255
`
  },
  {
    id: "ksy_rtcp_payload",
    name: "rtcp network payload (single udp packet)",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "rtcp network payload (single udp packet)",
      originalCategory: "network",
      filePath: "network/rtcp_payload.ksy",
      endian: "be"
    },
    content: `meta:
  id: rtcp_payload
  title: rtcp network payload (single udp packet)
  xref:
    justsolve: RTP
    wikidata: Q749940
  license: CC0-1.0
  ks-version: 0.7
  endian: be

doc: RTCP is the Real-Time Control Protocol

doc-ref: https://www.rfc-editor.org/rfc/rfc3550

seq:
  - id: rtcp_packets
    type: rtcp_packet
    repeat: eos

types:
  rtcp_packet:
    seq:
      - id: version
        type: b2
      - id: padding
        type: b1
      - id: subtype
        type: b5
      - id: payload_type
        type: u1
        enum: payload_type
      - id: length
        type: u2
      - id: body
        size: 4 * length
        type:
          switch-on: payload_type
          cases:
            'payload_type::sr': sr_packet
            'payload_type::rr': rr_packet
            'payload_type::sdes': sdes_packet
            'payload_type::psfb': psfb_packet
            'payload_type::rtpfb': rtpfb_packet

  sr_packet:
    seq:
      - id: ssrc
        type: u4
      - id: ntp_msw
        type: u4
      - id: ntp_lsw
        type: u4
      - id: rtp_timestamp
        type: u4
      - id: sender_packet_count
        type: u4
      - id: sender_octet_count
        type: u4
      - id: report_block
        type: report_block
        repeat: expr
        repeat-expr: _parent.subtype
    instances:
      ntp:
        value: (ntp_msw << 32) & ntp_lsw

  rr_packet:
    seq:
      - id: ssrc
        type: u4
      - id: report_block
        type: report_block
        repeat: expr
        repeat-expr: _parent.subtype

  report_block:
    seq:
      - id: ssrc_source
        type: u4
      - id: lost_val
        type: u1
      - id: highest_seq_num_received
        type: u4
      - id: interarrival_jitter
        type: u4
      - id: lsr
        type: u4
      - id: dlsr
        type: u4
    instances:
      fraction_lost:
        value: lost_val >> 24
      cumulative_packets_lost:
        value: lost_val & 0x00ffffff

  sdes_packet:
    seq:
      - id: source_chunk
        type: source_chunk
        repeat: expr
        repeat-expr: source_count
    instances:
      source_count:
        value: _parent.subtype

  source_chunk:
    seq:
      - id: ssrc
        type: u4
      - id: sdes_tlv
        type: sdes_tlv
        repeat: eos

  sdes_tlv:
    seq:
      - id: type
        type: u1
        enum: sdes_subtype
      - id: length
        type: u1
        if: type != sdes_subtype::pad
      - id: value
        size: length
        if: type != sdes_subtype::pad

  rtpfb_packet:
    seq:
      - id: ssrc
        type: u4
      - id: ssrc_media_source
        type: u4
      - id: fci_block
        type:
          switch-on: fmt
          cases:
            'rtpfb_subtype::transport_feedback': rtpfb_transport_feedback_packet
        size-eos: true
    instances:
      fmt:
        value: _parent.subtype
        enum: rtpfb_subtype

  rtpfb_transport_feedback_packet:
    seq:
      - id: base_sequence_number
        type: u2
      - id: packet_status_count
        type: u2
      - id: b4
        type: u4
      - id: remaining
        size-eos: true
    instances:
      reference_time:
        value: b4 >> 8
      fb_pkt_count:
        value: b4 & 0xff
      packet_status:
        size: 0
      recv_delta:
        size: 0

  packet_status_chunk:
    seq:
      - id: t
        type: b1
      - id: s2
        type: b2
        if: t.to_i == 0
      - id: s1
        type: b1
        if: t.to_i == 1
      - id: rle
        type: b13
        if: t.to_i == 0
      - id: symbol_list
        type: b14
        if: t.to_i == 1
    instances:
      s:
        value: '(t.to_i == 0) ? s2 : (s1.to_i == 0 ? 1 : 0)'

  psfb_packet:
    seq:
      - id: ssrc
        type: u4
      - id: ssrc_media_source
        type: u4
      - id: fci_block
        type:
          switch-on: fmt
          cases:
            'psfb_subtype::afb': psfb_afb_packet
        size-eos: true
    instances:
      fmt:
        value: _parent.subtype
        enum: psfb_subtype

  psfb_afb_packet:
    seq:
      - id: uid
        type: u4
      - id: contents
        type:
          switch-on: uid
          cases:
            0x52454d42: psfb_afb_remb_packet
        size-eos: true

  psfb_afb_remb_packet:
    seq:
      - id: num_ssrc
        type: u1
      - id: br_exp
        type: b6
      - id: br_mantissa
        type: b18
      - id: ssrc_list
        type: u4
        repeat: expr
        repeat-expr: num_ssrc
    instances:
      max_total_bitrate:
        value: br_mantissa * (1<<br_exp)



enums:
  payload_type:
    192: fir
    193: nack
    195: ij
    200: sr
    201: rr
    202: sdes
    203: bye
    204: app
    205: rtpfb
    206: psfb
    207: xr
    208: avb
    209: rsi
  sdes_subtype:
    0: pad
    1: cname
    2: name
    3: email
    4: phone
    5: loc
    6: tool
    7: note
    8: priv
  psfb_subtype:
    1: pli
    2: sli
    3: rpsi
    4: fir
    5: tstr
    6: tstn
    7: vbcm
    15: afb
  rtpfb_subtype:
    1: nack
    3: tmmbr
    4: tmmbn
    5: rrr
    15: transport_feedback
`
  },
  {
    id: "ksy_rtp_packet",
    name: "RTP (Real-time Transport Protocol)",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "RTP (Real-time Transport Protocol)",
      originalCategory: "network",
      filePath: "network/rtp_packet.ksy",
      endian: "be"
    },
    content: `meta:
  id: rtp_packet
  title: RTP (Real-time Transport Protocol)
  xref:
    justsolve: RTP
    rfc:
      - 3550
      - 3551
    wikidata: Q321213
  license: Unlicense
  endian: be
doc: |
  The Real-time Transport Protocol (RTP) is a widely used network
  protocol for transmitting audio or video. It usually works with the
  RTP Control Protocol (RTCP). The transmission can be based on
  Transmission Control Protocol (TCP) or User Datagram Protocol (UDP).
seq:
  - id: version
    type: b2
  - id: has_padding
    type: b1
  - id: has_extension
    type: b1
  - id: csrc_count
    type: b4
  - id: marker
    type: b1
  - id: payload_type
    type: b7
    enum: payload_type_enum
  - id: sequence_number
    type: u2
  - id: timestamp
    type: u4
  - id: ssrc
    type: u4
  - id: header_extension
    type: header_extention
    if: has_extension
  - id: data
    size: _io.size - _io.pos - len_padding
    doc: Payload without padding.
  - id: padding
    size: len_padding
instances:
  len_padding_if_exists:
    pos: _io.size - 1
    type: u1
    if: has_padding
    doc: |
      If padding bit is enabled, last byte of data contains number of
      bytes appended to the payload as padding.
  len_padding:
    value: 'has_padding ? len_padding_if_exists : 0'
    doc: Always returns number of padding bytes to in the payload.
types:
  header_extention:
    seq:
      - id: id
        type: u2
      - id: length
        type: u2
enums:
  # https://datatracker.ietf.org/doc/html/rfc3551#section-6
  payload_type_enum:
    0: pcmu
    1: reserved1
    2: reserved2
    3: gsm
    4: g723
    5: dvi4_1
    6: dvi4_2
    7: lpc
    8: pcma
    9: g722
    10: l16_1
    11: l16_2
    12: qcelp
    13: cn
    14: mpa
    15: g728
    16: dvi4_3
    17: dvi4_4
    18: g729
    19: reserved19
    20: unassigned20
    21: unassigned21
    22: unassigned22
    23: unassigned23
    24: unassigned24
    25: celb
    26: jpeg
    27: unassigned27
    28: nv
    29: unassigned29
    30: unassigned30
    31: h261
    32: mpv
    33: mp2t
    34: h263
    96: mpeg_ps
`
  },
  {
    id: "ksy_rtpdump",
    name: "Rtpdump (rtptools)",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: ["rtp","rtpdump"],
      description: "Rtpdump (rtptools)",
      originalCategory: "network",
      filePath: "network/rtpdump.ksy",
      endian: "be"
    },
    content: `meta:
  id: rtpdump
  title: Rtpdump (rtptools)
  file-extension:
    - rtp
    - rtpdump
  license: Unlicense
  imports:
    - /network/rtp_packet
  endian: be
doc: |
  rtpdump is a format used by rtptools to record and replay
  rtp data from network capture.
doc-ref: https://chromium.googlesource.com/external/webrtc/stable/talk/+/master/media/base/rtpdump.h
seq:
  - id: file_header
    type: header_t
  - id: packets
    type: packet_t
    repeat: eos
types:
  header_t:
    seq:
      - id: shebang
        contents: '#!rtpplay1.0'
      - id: space
        contents: ' '
      - id: ip
        type: str
        encoding: ascii
        terminator: 0x2f # '/'
      - id: port
        type: str
        encoding: ascii
        terminator: 0x0a # '\\n'
      - id: start_sec
        type: u4
        doc: |
          start of recording, the seconds part.
      - id: start_usec
        type: u4
        doc: |
          start of recording, the microseconds part.
      - id: ip2
        type: u4
        doc: |
          network source.
      - id: port2
        type: u2
        doc: |
          port.
      - id: padding
        type: u2
        doc: |
          2 bytes padding.
  packet_t:
    seq:
      - id: length
        type: u2
        doc: |
          packet length (including this header).
      - id: len_body
        type: u2
        doc: |
          payload length.
      - id: packet_usec
        type: u4
        doc: |
          timestamp of packet since the start.
      - id: body
        size: len_body
        type: rtp_packet
`
  },
  {
    id: "ksy_some_ip",
    name: "AUTOSAR SOME/IP",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "AUTOSAR SOME/IP",
      originalCategory: "network",
      filePath: "network/some_ip/some_ip.ksy",
      endian: "be"
    },
    content: `meta:
  id: some_ip
  title: AUTOSAR SOME/IP
  license: CC0-1.0
  ks-version: 0.9
  endian: be
  imports:
    - /network/some_ip/some_ip_sd

doc: |
  SOME/IP (Scalable service-Oriented MiddlewarE over IP) is an automotive/embedded
  communication protocol which supports remoteprocedure calls, event notifications
  and the underlying serialization/wire format.

doc-ref: https://www.autosar.org/fileadmin/standards/foundation/19-11/AUTOSAR_PRS_SOMEIPProtocol.pdf

seq:
  - id: header
    type: header
  - id: payload
    size: header.length - 8
    type:
      switch-on: header.message_id.value
      cases:
        0xffff8100: some_ip_sd

types:
  header:
    seq:
      - id: message_id
        type: message_id
        size: 4
        doc: |
          The Message ID shall be a 32 Bit identifier that is used to identify
          the RPC call to a method of an application or to identify an event.
      - id: length
        type: u4
        doc: |
          [PRS_SOMEIP_00042] Length field shall contain the length in Byte
          starting from Request ID/Client ID until the end of the SOME/IP message.
      - id: request_id
        type: request_id
        size: 4
        doc: |
          The Request ID allows a provider and subscriber to differentiate
          multiple parallel uses of the same method, event, getter or setter.
      - id: protocol_version
        type: u1
        doc: |
          The Protocol Version identifies the used SOME/IP Header format
          (not including the Payload format).
      - id: interface_version
        type: u1
        doc: |
          Interface Version shall be an 8 Bit field that contains the
          MajorVersion of the Service Interface.
      - id: message_type
        type: u1
        enum: message_type_enum
        doc: |
          The Message Type field is used to differentiate different types of
          messages.
        doc-ref: AUTOSAR_PRS_SOMEIPProtocol.pdf - Table 4.4
      - id: return_code
        type: u1
        enum: return_code_enum
        doc: |
          The Return Code shall be used to signal whether a request was
          successfully processed.
        doc-ref: AUTOSAR_PRS_SOMEIPProtocol.pdf - Table 4.5

    types:
      message_id:
        seq:
          - id: service_id
            type: u2
            doc: Service ID
          - id: sub_id
            type: b1
            doc: Single bit to flag, if there is a Method or a Event ID
          - id: method_id
            type: b15
            if: sub_id == false
            doc: Method ID
            doc-ref: AUTOSAR_PRS_SOMEIPProtocol.pdf - Table 4.1.
          - id: event_id
            type: b15
            if: sub_id == true
            doc: Event ID
            doc-ref: AUTOSAR_PRS_SOMEIPProtocol.pdf - Table 4.6
        doc: |
          [PRS_SOMEIP_00035] The assignment of the Message ID shall be up to
          the user. However, the Message ID shall be unique for the whole
          system (i.e. the vehicle). TheMessage ID is similar to a CAN ID and
          should be handled via a comparable process.
          [PRS_SOMEIP_00038] Message IDs of method calls shall be structured in
          the ID with 2^16 services with 2^15 methods.
        doc-ref: AUTOSAR_PRS_SOMEIPProtocol.pdf 4.1.1.1  Message ID

        instances:
          value:
            pos: 0
            type: u4
            doc: The value provides the undissected Message ID

      request_id:
        seq:
          - id: client_id
            type: u2
          - id: session_id
            type: u2
        doc: |
          The Request ID allows a provider and subscriber to differentiate
          multiple parallel usesof the same method, event, getter or setter.
        doc-ref: AUTOSAR_PRS_SOMEIPProtocol.pdf - section 4.1.1.3  Request ID

        instances:
          value:
            pos: 0
            type: u4
            doc: The value provides the undissected Request ID

    instances:
      is_valid_service_discovery:
        value: message_id.value == 0xffff8100 and protocol_version == 0x01 and interface_version == 0x01 and message_type == message_type_enum::notification and return_code == return_code_enum::ok
        doc: auxillary value
        doc-ref: AUTOSAR_PRS_SOMEIPServiceDiscoveryProtocol.pdf - section 4.1.2.1 General Requirements

    enums:
      message_type_enum:
        0x00 : request
        0x01 : request_no_return
        0x02 : notification
        0x40 : request_ack
        0x41 : request_no_return_ack
        0x42 : notification_ack
        0x80 : response
        0x81 : error
        0xc0 : response_ack
        0xc1 : error_ack

      return_code_enum:
        0x00 : ok
        0x01 : not_ok
        0x02 : unknown_service
        0x03 : unknown_method
        0x04 : not_ready
        0x05 : not_reachable
        0x06 : time_out
        0x07 : wrong_protocol_version
        0x08 : wrong_interface_version
        0x09 : malformed_message
        0x0a : wrong_message_type
`
  },
  {
    id: "ksy_some_ip_container",
    name: "AUTOSAR SOME/IP container",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "AUTOSAR SOME/IP container",
      originalCategory: "network",
      filePath: "network/some_ip/some_ip_container.ksy",
      endian: "be"
    },
    content: `meta:
  id: some_ip_container
  title: AUTOSAR SOME/IP container
  license: CC0-1.0
  ks-version: 0.9
  endian: be
  imports:
    - /network/some_ip/some_ip

seq:
  - id: some_ip_packages
    type: some_ip
    repeat: eos
`
  },
  {
    id: "ksy_some_ip_sd",
    name: "AUTOSAR SOME/IP Service Discovery",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "AUTOSAR SOME/IP Service Discovery",
      originalCategory: "network",
      filePath: "network/some_ip/some_ip_sd.ksy",
      endian: "be"
    },
    content: `meta:
  id: some_ip_sd
  title: AUTOSAR SOME/IP Service Discovery
  license: CC0-1.0
  ks-version: 0.9
  endian: be
  imports:
    - /network/some_ip/some_ip_sd_entries
    - /network/some_ip/some_ip_sd_options

doc: |
  The main tasks of the Service Discovery Protocol are communicating the
  availability of functional entities called services in the in-vehicle
  communication as well as controlling the send behavior of event messages.
  This allows sending only event messages to receivers requiring them (Publish/Subscribe).
  The solution described here is also known as SOME/IP-SD
  (Scalable service-Oriented MiddlewarE over IP - Service Discovery).
doc-ref: https://www.autosar.org/fileadmin/standards/foundation/19-11/AUTOSAR_PRS_SOMEIPServiceDiscoveryProtocol.pdf

seq:
  - id: flags
    type: sd_flags
    doc: The SOME/IP-SD Header shall start with an 8 Bit field called flags.
  - id: reserved
    size: 3
  - id: len_entries
    type: u4
  - id: entries
    type: some_ip_sd_entries
    size: len_entries
  - id: len_options
    type: u4
  - id: options
    type: some_ip_sd_options
    size: len_options

types:
  sd_flags:
    seq:
      - id: reboot
        type: b1
      - id: unicast
        type: b1
      - id: initial_data
        type: b1
      - id: reserved
        type: b5
    doc-ref: AUTOSAR_PRS_SOMEIPServiceDiscoveryProtocol.pdf - Figure 4.3
`
  },
  {
    id: "ksy_some_ip_sd_entries",
    name: "AUTOSAR SOME/IP Service Discovery Entries",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "AUTOSAR SOME/IP Service Discovery Entries",
      originalCategory: "network",
      filePath: "network/some_ip/some_ip_sd_entries.ksy",
      endian: "be"
    },
    content: `meta:
  id: some_ip_sd_entries
  title: AUTOSAR SOME/IP Service Discovery Entries
  license: CC0-1.0
  ks-version: 0.9
  endian: be

doc: |
  The entries are used to synchronize the state of services instances and the
  Publish/-Subscribe handling.
doc-ref: |
  https://www.autosar.org/fileadmin/standards/foundation/19-11/AUTOSAR_PRS_SOMEIPServiceDiscoveryProtocol.pdf
  - section 4.1.2.3  Entry Format

seq:
  - id: entries
    type: sd_entry
    repeat: eos

types:
  sd_entry:
    seq:
    - id: header
      type: sd_entry_header
    - id: content
      type:
        switch-on: header.type
        cases:
          entry_types::find : sd_service_entry
          entry_types::offer : sd_service_entry
          entry_types::subscribe : sd_eventgroup_entry
          entry_types::subscribe_ack : sd_eventgroup_entry

    types:
      sd_entry_header:
        seq:
          - id: type
            type: u1
            enum: entry_types
          - id: index_first_options
            type: u1
          - id: index_second_options
            type: u1
          - id: number_first_options
            type: b4
          - id: number_second_options
            type: b4
          - id: service_id
            type: u2
          - id: instance_id
            type: u2
          - id: major_version
            type: u1
          - id: ttl
            type: b24

      sd_service_entry:
        seq:
          - id: minor_version
            type: u4

      sd_eventgroup_entry:
        seq:
          - id: reserved
            type: u1
          - id: initial_data_requested
            type: b1
          - id: reserved2
            type: b3
          - id: counter
            type: b4
          - id: event_group_id
            type: u2

    enums:
      entry_types:
        0x00 : find
        0x01 : offer
        0x06 : subscribe
        0x07 : subscribe_ack
`
  },
  {
    id: "ksy_some_ip_sd_options",
    name: "AUTOSAR SOME/IP Service Discovery Options",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "AUTOSAR SOME/IP Service Discovery Options",
      originalCategory: "network",
      filePath: "network/some_ip/some_ip_sd_options.ksy",
      endian: "be"
    },
    content: `meta:
  id: some_ip_sd_options
  title: AUTOSAR SOME/IP Service Discovery Options
  license: CC0-1.0
  ks-version: 0.9
  endian: be

doc: |
  FormatOptions are used to transport additional information to the entries.
  This includes forinstance the information how a service instance is
  reachable (IP-Address, TransportProtocol, Port Number).
doc-ref: |
  https://www.autosar.org/fileadmin/standards/foundation/19-11/AUTOSAR_PRS_SOMEIPServiceDiscoveryProtocol.pdf
  - section 4.1.2.4 Options Format

seq:
  - id: entries
    type: sd_option
    repeat: eos

types:
  sd_option:
    seq:
    - id: header
      type: sd_option_header
    - id: content
      type:
        switch-on: header.type
        cases:
          option_types::configuration_option : sd_configuration_option
          option_types::load_balancing_option : sd_load_balancing_option
          option_types::ipv4_endpoint_option : sd_ipv4_endpoint_option
          option_types::ipv6_endpoint_option : sd_ipv6_endpoint_option
          option_types::ipv4_multicast_option : sd_ipv4_multicast_option
          option_types::ipv6_multicast_option : sd_ipv6_multicast_option
          option_types::ipv4_sd_endpoint_option : sd_ipv4_sd_endpoint_option
          option_types::ipv6_sd_endpoint_option : sd_ipv6_sd_endpoint_option

    types:
      sd_option_header:
        seq:
          - id: length
            type: u2
          - id: type
            type: u1
            enum: option_types

      sd_configuration_option:
        seq:
          - id: reserved
            type: u1
          - id: configurations
            type: sd_config_strings_container
            size: _parent.header.length - 1

      sd_config_strings_container:
        seq:
          - id: config_strings
            type: sd_config_string
            repeat: eos

      sd_config_string:
        seq:
          - id: length
            type: u1
          - id: config
            type: sd_config_kv_pair
            size: length
            if: length != 0

      sd_config_kv_pair:
        seq:
        - id: key
          type: str
          terminator: 0x3D
          encoding: ASCII
        - id: value
          type: str
          size-eos: true
          encoding: ASCII


      sd_load_balancing_option:
        seq:
          - id: reserved
            type: u1
          - id: priority
            type: u2
          - id: weight
            type: u2

      sd_ipv4_endpoint_option:
        seq:
          - id: reserved
            type: u1
          - id: address
            size: 4
          - id: reserved2
            type: u1
          - id: l4_protocol
            type: u1
          - id: port
            type: u2

      sd_ipv6_endpoint_option:
        seq:
          - id: reserved
            type: u1
          - id: address
            size: 16
          - id: reserved2
            type: u1
          - id: l4_protocol
            type: u1
          - id: port
            type: u2

      sd_ipv4_multicast_option:
        seq:
          - id: reserved
            type: u1
          - id: address
            size: 4
          - id: reserved2
            type: u1
          - id: l4_protocol
            type: u1
          - id: port
            type: u2

      sd_ipv6_multicast_option:
        seq:
          - id: reserved
            type: u1
          - id: address
            size: 16
          - id: reserved2
            type: u1
          - id: l4_protocol
            type: u1
          - id: port
            type: u2

      sd_ipv4_sd_endpoint_option:
        seq:
          - id: reserved
            type: u1
          - id: address
            size: 4
          - id: reserved2
            type: u1
          - id: l4_protocol
            type: u1
          - id: port
            type: u2

      sd_ipv6_sd_endpoint_option:
        seq:
          - id: reserved
            type: u1
          - id: address
            size: 16
          - id: reserved2
            type: u1
          - id: l4_protocol
            type: u1
          - id: port
            type: u2

    enums:
      option_types:
        0x01 : configuration_option
        0x02 : load_balancing_option
        0x04 : ipv4_endpoint_option
        0x06 : ipv6_endpoint_option
        0x14 : ipv4_multicast_option
        0x16 : ipv6_multicast_option
        0x24 : ipv4_sd_endpoint_option
        0x26 : ipv6_sd_endpoint_option
`
  },
  {
    id: "ksy_tcp_segment",
    name: "TCP (Transmission Control Protocol) segment",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "TCP (Transmission Control Protocol) segment",
      originalCategory: "network",
      filePath: "network/tcp_segment.ksy",
      endian: "be"
    },
    content: `meta:
  id: tcp_segment
  title: TCP (Transmission Control Protocol) segment
  xref:
    rfc:
      - 793
      - 1323
      - 9293
    wikidata: Q8803
  license: CC0-1.0
  endian: be
  ks-version: '0.10'
doc: |
  TCP is one of the core Internet protocols on transport layer (AKA
  OSI layer 4), providing stateful connections with error checking,
  guarantees of delivery, order of segments and avoidance of duplicate
  delivery.
seq:
  - id: src_port
    type: u2
    doc: Source port
  - id: dst_port
    type: u2
    doc: Destination port
  - id: seq_num
    type: u4
    doc: Sequence number
  - id: ack_num
    type: u4
    doc: Acknowledgment number
  - id: data_offset
    type: b4
    doc: Data offset (in 32-bit words from the beginning of this type, normally 32 or can be extended if there are any TCP options or padding is present)
  - id: reserved
    type: b4
  - id: flags
    type: flags
  - id: window_size
    type: u2
  - id: checksum
    type: u2
  - id: urgent_pointer
    type: u2
  - id: options
    size: (data_offset * 4) - 20
    if: ((data_offset * 4) - 20) != 0
  - id: body
    size-eos: true
types:
  flags:
    doc: |
      TCP header flags as defined "TCP Header Flags" registry.
    to-string: |
      (cwr ? "|CWR" : "") +
      (ece ? "|ECE" : "") +
      (urg ? "|URG" : "") +
      (ack ? "|ACK" : "") +
      (psh ? "|PSH" : "") +
      (rst ? "|RST" : "") +
      (syn ? "|SYN" : "") +
      (fin ? "|FIN" : "")
    seq:
      - id: cwr
        type: b1
        doc: Congestion Window Reduced
      - id: ece
        type: b1
        doc: ECN-Echo
      - id: urg
        type: b1
        doc: Urgent pointer field is significant
      - id: ack
        type: b1
        doc: Acknowledgment field is significant
      - id: psh
        type: b1
        doc: Push function
      - id: rst
        type: b1
        doc: Reset the connection
      - id: syn
        type: b1
        doc: Synchronize sequence numbers
      - id: fin
        type: b1
        doc: No more data from sender
`
  },
  {
    id: "ksy_tls_client_hello",
    name: "Tls Client Hello",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "",
      originalCategory: "network",
      filePath: "network/tls_client_hello.ksy",
      endian: "be"
    },
    content: `meta:
  id: tls_client_hello
  xref:
    rfc: 5246 # TLS 1.2
    wikidata: Q206494 # TLS
  license: MIT
  endian: be

seq:
  - id: version
    type: version

  - id: random
    type: random

  - id: session_id
    type: session_id

  - id: cipher_suites
    type: cipher_suites

  - id: compression_methods
    type: compression_methods

  - id: extensions
    type: extensions
    if: _io.eof == false

types:
  version:
    seq:
      - id: major
        type: u1

      - id: minor
        type: u1

  random:
    seq:
      - id: gmt_unix_time
        type: u4

      - id: random
        size: 28

  session_id:
    seq:
      - id: len
        type: u1

      - id: sid
        size: len

  cipher_suites:
    seq:
      - id: len
        type: u2

      - id: cipher_suites
        type: u2
        repeat: expr
        repeat-expr: len/2

  compression_methods:
    seq:
      - id: len
        type: u1

      - id: compression_methods
        size: len

  extensions:
    seq:
      - id: len
        type: u2

      - id: extensions
        type: extension
        repeat: eos

  extension:
    seq:
      - id: type
        type: u2

      - id: len
        type: u2

      - id: body
        size: len
        type:
          switch-on: type
          cases:
            0: sni
            16: alpn

  sni:
    seq:
      - id: list_length
        type: u2

      - id: server_names
        type: server_name
        repeat: eos

  server_name:
    seq:
      - id: name_type
        type: u1

      - id: length
        type: u2

      - id: host_name
        size: length

  alpn:
    seq:
      - id: ext_len
        type: u2

      - id: alpn_protocols
        type: protocol
        repeat: eos

  protocol:
    seq:
      - id: strlen
        type: u1

      - id: name
        size: strlen
`
  },
  {
    id: "ksy_udp_datagram",
    name: "UDP (User Datagram Protocol) datagram",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "UDP (User Datagram Protocol) datagram",
      originalCategory: "network",
      filePath: "network/udp_datagram.ksy",
      endian: "be"
    },
    content: `meta:
  id: udp_datagram
  title: UDP (User Datagram Protocol) datagram
  xref:
    rfc: 768
    wikidata: Q11163
  license: CC0-1.0
  endian: be
doc: |
  UDP is a simple stateless transport layer (AKA OSI layer 4)
  protocol, one of the core Internet protocols. It provides source and
  destination ports, basic checksumming, but provides not guarantees
  of delivery, order of packets, or duplicate delivery.
seq:
  - id: src_port
    type: u2
  - id: dst_port
    type: u2
  - id: length
    type: u2
  - id: checksum
    type: u2
  - id: body
    size: length - 8
`
  },
  {
    id: "ksy_websocket",
    name: "WebSocket",
    category: "Network",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "WebSocket",
      originalCategory: "network",
      filePath: "network/websocket.ksy",
      endian: "be"
    },
    content: `meta:
  id: websocket
  title: WebSocket
  xref:
    rfc: 6455
    wikidata: Q859938
  license: CC0-1.0
  endian: be
doc: |
  The WebSocket protocol establishes a two-way communication channel via TCP.
  Messages are made up of one or more dataframes, and are delineated by
  frames with the \`fin\` bit set.
seq:
  - id: initial_frame
    type: initial_frame
  - id: trailing_frames
    type: dataframe
    if: initial_frame.header.finished != true
    repeat: until
    repeat-until: _.header.finished

types:
  frame_header:
    seq:
      - id: finished
        -orig-id: fin
        type: b1
      - id: reserved
        -orig-id: 'rsv1, rsv2, rsv3'
        type: b3
      - id: opcode
        enum: opcode
        type: b4
      - id: is_masked
        type: b1
      - id: len_payload_primary
        type: b7
      - id: len_payload_extended_1
        type: u2
        if: len_payload_primary == 126
      - id: len_payload_extended_2
        type: u4
        if: len_payload_primary == 127
      - id: mask_key
        type: u4
        if: is_masked
    instances:
      len_payload:
        value: |
          len_payload_primary <= 125 ? len_payload_primary : (
            len_payload_primary == 126 ? len_payload_extended_1 : len_payload_extended_2
          )

  initial_frame:
    seq:
      - id: header
        type: frame_header
      - id: payload_bytes
        size: header.len_payload
        if: 'header.opcode != opcode::text'
      - id: payload_text
        size: header.len_payload
        type: str
        encoding: UTF-8
        if: 'header.opcode == opcode::text'

  dataframe:
    seq:
      - id: header
        type: frame_header
      - id: payload_bytes
        size: header.len_payload
        if: '_root.initial_frame.header.opcode != opcode::text'
      - id: payload_text
        size: header.len_payload
        type: str
        encoding: UTF-8
        if: '_root.initial_frame.header.opcode == opcode::text'

enums:
  opcode:
    0: continuation
    1: text
    2: binary
    3: reserved_3
    4: reserved_4
    5: reserved_5
    6: reserved_6
    7: reserved_7
    8: close
    9: ping
    0xA: pong
    0xB: reserved_control_b
    0xC: reserved_control_c
    0xD: reserved_control_d
    0xE: reserved_control_e
    0xF: reserved_control_f
`
  },
  {
    id: "ksy_nt_mdt",
    name: "NT-MDT data",
    category: "Scientific",
    metadata: {
      isGenerated: true,
      fileExtensions: ["mdt"],
      description: "NT-MDT data",
      originalCategory: "scientific",
      filePath: "scientific/nt_mdt/nt_mdt.ksy",
      signature: {"offset":0,"bytes":[1,176,147,255]},
      endian: "le"
    },
    content: `meta:
  id: nt_mdt
  title: NT-MDT data
  application:
    - Nova
    - Image Analysis
    - NanoEducator
    - Gwyddion
    - Callisto
  file-extension: mdt
  license: GPL-3.0-or-later
  endian: le
doc: |
  A native file format of NT-MDT scientific software. Usually contains
  any of:

  * [Scanning probe](https://en.wikipedia.org/wiki/Scanning_probe_microscopy) microscopy scans and spectra
  * [Raman spectra](https://en.wikipedia.org/wiki/Raman_spectroscopy)
  * results of their analysis

  Some examples of mdt files can be downloaded at:

  * <https://www.ntmdt-si.ru/resources/scan-gallery>
  * <http://callistosoft.narod.ru/Resources/Mdt.zip>
doc-ref: https://svn.code.sf.net/p/gwyddion/code/trunk/gwyddion/modules/file/nt-mdt.c
seq:
  - id: signature
    contents: [0x01, 0xb0, 0x93, 0xff]
  - id: size
    type: u4
    doc: File size (w/o header)
  - id: reserved0
    size: 4
  - id: last_frame
    type: u2
  - id: reserved1
    size: 18
  - id: wrond_doc
    size: 1
    doc: "documentation specifies 32 bytes long header, but zeroth frame starts at 33th byte in reality"
  - id: frames
    size: size
    type: framez
types:
  uuid:
    seq:
      - id: data
        type: u1
        repeat: expr
        repeat-expr: 16
  framez:
    seq:
      - id: frames
        type: frame
        repeat: expr
        repeat-expr: '_root.last_frame+1'
  title:
    seq:
      - id: title_len
        type: u4
      - id: title
        type: str
        encoding: cp1251
        size: title_len
  xml:
    seq:
      - id: xml_len
        type: u4
      - id: xml
        type: str
        encoding: UTF-16LE
        size: xml_len
  version:
    seq:
      - id: minor
        type: u1
      - id: major
        type: u1
  frame:
    seq:
      - id: size
        type: u4
        doc: "h_sz"
      - id: main
        type: frame_main
        size: size - 4
    enums:
      frame_type:
        0: scanned
        1: spectroscopy
        3: text
        105: old_mda
        106: mda
        107: palette
        190: curves_new
        201: curves
    types:
      date_time:
        seq:
          - id: date
            type: date
          - id: time
            type: time
        types:
          date:
            seq:
              - id: year
                type: u2
                doc: "h_yea"
              - id: month
                type: u2
                doc: "h_mon"
              - id: day
                type: u2
                doc: "h_day"
          time:
            seq:
              - id: hour
                type: u2
                doc: "h_h"
              - id: min
                type: u2
                doc: "h_m"
              - id: sec
                type: u2
                doc: "h_s"
      frame_main:
        seq:
          - id: type
            type: u2
            enum: frame_type
            doc: "h_what"
          - id: version
            type: version
          - id: date_time
            type: date_time
          - id: var_size
            type: u2
            doc: "h_am, v6 and older only"
          - id: frame_data
            -orig-id: dataframe
            size-eos: true
            type:
              switch-on: type
              cases:
                'frame_type::scanned': fd_scanned
                'frame_type::mda': fd_meta_data
                'frame_type::spectroscopy': fd_spectroscopy
                'frame_type::curves': fd_spectroscopy
                'frame_type::curves_new': fd_curves_new
            doc: ""
      dots:
        seq:
          - id: fm_ndots
            type: u2
          - id: coord_header
            -orig-id: coordheader
            type: dots_header
            if: fm_ndots > 0
          - id: coordinates
            type: dots_data
            repeat: expr
            repeat-expr: fm_ndots
          - id: data
            type: data_linez(_index)
            repeat: expr
            repeat-expr: fm_ndots
        types:
          dots_header:
            seq:
              - id: header_size
                -orig-id: headersize
                type: s4
              - id: header
                size: header_size
                type: header_
            types:
              header_:
                seq:
                  - id: coord_size
                    -orig-id: coordsize
                    type: s4
                  - id: version
                    type: s4
                  - id: xyunits
                    type: s2
                    enum: unit
          dots_data:
            seq:
              - id: coord_x
                type: f4
              - id: coord_y
                type: f4
              - id: forward_size
                type: s4
              - id: backward_size
                type: s4
          data_linez:
            params:
              - id: index
                type: u2
            seq:
              - id: forward
                type: s2
                repeat: expr
                repeat-expr: _parent.coordinates[index].forward_size
              - id: backward
                type: s2
                repeat: expr
                repeat-expr: _parent.coordinates[index].backward_size
      axis_scale:
        seq:
          - id: offset
            type: f4
            doc: "x_scale->offset = gwy_get_gfloat_le(&p);# r0 (physical units)"
          - id: step
            type: f4
            doc: >
              x_scale->step = gwy_get_gfloat_le(&p);
              r (physical units)
              x_scale->step = fabs(x_scale->step);
              if (!x_scale->step) {
                g_warning("x_scale.step == 0, changing to 1");
                x_scale->step = 1.0;
              }
          - id: unit
            type: s2 # x_scale->unit = (gint16)gwy_get_guint16_le(&p);
            enum: unit
            doc: "U"

      fd_curves_new:
        seq:
          - id: block_count
            type: u4
          - id: blocks_headers
            type: block_descr
            repeat: expr
            repeat-expr: block_count
          - id: blocks_names
            type: str
            encoding: UTF-8
            size: blocks_headers[_index].name_len
            repeat: expr
            repeat-expr: block_count
          - id: blocks_data
            size: blocks_headers[_index].len
            repeat: expr
            repeat-expr: block_count
        types:
          block_descr:
            seq:
              - id: name_len
                type: u4
              - id: len
                type: u4
      fd_spectroscopy:
        seq:
          - id: vars
            type: vars
            size: _parent.var_size
          - id: fm_mode
            type: u2
          - id: fm_xres
            type: u2
          - id: fm_yres
            type: u2

          - id: dots
            type: dots

          - id: data
            type: s2
            repeat: expr
            repeat-expr: fm_xres*fm_yres

          - id: title
            type: title
          - id: xml
            type: xml
        types:
          vars:
            seq:
              - id: x_scale
                type: axis_scale
              - id: y_scale
                type: axis_scale
              - id: z_scale
                type: axis_scale
              - id: sp_mode
                type: u2
              - id: sp_filter
                type: u2
              - id: u_begin
                type: f4
              - id: u_end
                type: f4
              - id: z_up
                type: s2
              - id: z_down
                type: s2
              - id: sp_averaging
                type: u2
              - id: sp_repeat
                type: u1 # bool
              - id: sp_back
                type: u1 # bool
              - id: sp_4nx
                type: s2
              - id: sp_osc
                type: u1 # bool
              - id: sp_n4
                type: u1
              - id: sp_4x0
                type: f4
              - id: sp_4xr
                type: f4
              - id: sp_4u
                type: s2
              - id: sp_4i
                type: s2
              - id: sp_nx
                type: s2
      fd_meta_data:
        seq:
          - id: head_size
            type: u4
          - id: tot_len
            type: u4
          - id: guids
            type: uuid
            repeat: expr
            repeat-expr: 2
          - id: frame_status
            size: 4
          - id: name_size
            type: u4
          - id: comm_size
            type: u4
          - id: view_info_size
            type: u4
          - id: spec_size
            type: u4
          - id: source_info_size
            type: u4
          - id: var_size
            type: u4
          - id: data_offset
            type: u4
          - id: data_size
            type: u4
          - id: title
            type: str
            size: name_size
            encoding: UTF-8
          - id: xml
            type: str
            size: comm_size
            encoding: UTF-8
          - id: struct_len
            type: u4
          - id: array_size
            type: u8
          - id: cell_size
            type: u4
          - id: n_dimensions
            type: u4
          - id: n_mesurands
            type: u4
          - id: dimensions
            type: calibration
            repeat: expr
            repeat-expr: n_dimensions
          - id: mesurands
            type: calibration
            repeat: expr
            repeat-expr: n_mesurands
        instances:
          image:
            pos: data_offset
            type: image
            size: data_size
        types:
          image:
            seq:
              - id: image
                type: vec
                repeat: eos
            types:
              vec:
                seq:
                  - id: items
                    type:
                      switch-on: _parent._parent.mesurands[_index].data_type
                      cases:
                        "data_type::uint8": u1
                        "data_type::uint16": u2
                        "data_type::uint32": u4
                        "data_type::uint64": u8
                        "data_type::int8": s1
                        "data_type::int16": s2
                        "data_type::int32": s4
                        "data_type::int64": s8
                        "data_type::float32": f4
                        "data_type::float64": f8
                        #"data_type::float48": s8
                        #"data_type::float80": s8
                        #"data_type::floatfix": s8
                    repeat: expr
                    repeat-expr: _parent._parent.n_mesurands
          calibration:
            seq:
              - id: len_tot
                type: u4
              - id: len_struct
                type: u4
              - id: len_name
                type: u4
              - id: len_comment
                type: u4
              - id: len_unit
                type: u4
              - id: si_unit
                type: u8
              - id: accuracy
                type: f8
              - id: function_id_and_dimensions
                type: u8
              - id: bias
                type: f8
              - id: scale
                type: f8
              - id: min_index
                type: u8
              - id: max_index
                type: u8
              - id: data_type
                type: s4
                enum: data_type
              - id: len_author
                type: u4
              - id: name
                type: str
                encoding: utf-8
                size: len_name
              - id: comment
                type: str
                encoding: utf-8
                size: len_comment
              - id: unit
                type: str
                encoding: utf-8
                size: len_unit
              - id: author
                type: str
                encoding: utf-8
                size: len_author
            instances:
              count:
                -orig-id: nx, ny and nz
                value: max_index - min_index + 1
      fd_scanned:
        seq:
          - id: vars
            type: vars
            size: _parent.var_size
          - id: orig_format
            type: u4
            doc: "s_oem"
            if: false

          - id: tune
            type: u4
            enum: lift_mode
            doc: "z_tune"
            if: false

          - id: feedback_gain
            type: f8
            doc: "s_fbg"
            if: false

          - id: dac_scale
            type: s4
            doc: "s_s"
            if: false

          - id: overscan
            type: s4
            doc: "s_xov (in %)"
            if: false

            #Frame mode stuff
          - id: fm_mode
            type: u2
            doc: "m_mode"
          - id: fm_xres
            type: u2
            doc: "m_nx"
          - id: fm_yres
            type: u2
            doc: "m_ny"
          - id: dots
            type: dots


          - id: image
            type: s2
            repeat: expr
            repeat-expr: fm_xres * fm_yres

            #Stuff after data
          - id: title
            type: title
          - id: xml
            type: xml
        types:
          vars:
            seq:
              - id: x_scale
                type: axis_scale
              - id: y_scale
                type: axis_scale
              - id: z_scale
                type: axis_scale

              - id: channel_index
                type: u1
                enum: adc_mode
                doc: "s_mode"

              - id: mode
                type: u1
                enum: mode
                doc: "s_dev"

              - id: xres
                type: u2
                doc: "s_nx"
              - id: yres
                type: u2
                doc: "s_ny"
              - id: ndacq
                type: u2
                doc: "Step (DAC)"
              - id: step_length
                type: f4
                doc: "s_rs in Angstrom's (Angstrom*gwy_get_gfloat_le(&p))"

              - id: adt
                type: u2
                doc: "s_adt"

              - id: adc_gain_amp_log10
                type: u1
                doc: "s_adc_a"

              - id: adc_index
                type: u1
                doc: "ADC index"

                #XXX: Some fields have different meaning in different versions
              - id: input_signal_or_version
                type: u1
                doc: "MDTInputSignal smp_in; s_smp_in (for signal) s_8xx (for version)"

              - id: substr_plane_order_or_pass_num
                type: u1
                doc: "s_spl or z_03"

              - id: scan_dir
                type: scan_dir
                doc: "s_xy TODO: interpretation"
              - id: power_of_2
                type: u1
                doc: "s_2n (bool)"

              - id: velocity
                type: f4 # frame->velocity = Angstrom*gwy_get_gfloat_le(&p);
                doc: "s_vel (Angstrom/second)"

              - id: setpoint
                type: f4 # frame->setpoint = Nano*gwy_get_gfloat_le(&p);
                doc: "s_i0"

              - id: bias_voltage
                type: f4 # frame->bias_voltage = gwy_get_gfloat_le(&p);
                doc: "s_ut"

              - id: draw
                type: u1
                doc: "s_draw (bool)"

              - id: reserved
                type: u1

              - id: xoff
                type: s4
                doc: "s_x00 (in DAC quants)"

              - id: yoff
                type: s4
                doc: "s_y00 (in DAC quants)"

              - id: nl_corr
                type: u1
                doc: "s_cor (bool)"
          dot:
            seq:
              - id: x
                type: s2
              - id: y
                type: s2
          scan_dir:
            seq:
              - id: unkn
                type: b4
              - id: double_pass
                type: b1
              - id: bottom
                type: b1
                doc: "Bottom - 1 Top - 0"
              - id: left
                type: b1
                doc: "Left - 1 Right - 0"
              - id: horizontal
                type: b1
                doc: "Horizontal - 1 Vertical - 0"
        enums:
          mode:
            0: stm
            1: afm
            2: unknown2
            3: unknown3
            4: unknown4
          input_signal:
            0: extension_slot
            1: bias_v
            2: ground
          lift_mode:
            0: step
            1: fine
            2: slope
enums:
  spm_technique:
    0: contact_mode
    1: semicontact_mode
    2: tunnel_current
    3: snom

  data_type:
    0: unknown0
    -1: int8
    1: uint8
    -2: int16
    2: uint16
    -4: int32
    4: uint32
    -8: int64
    8: uint64
    -5892: float32
    -9990: float48
    -13320: float64
    -16138: float80
    -65544: floatfix


  xml_scan_location:
    0: hlt
    1: hlb
    2: hrt
    3: hrb
    4: vlt
    5: vlb
    6: vrt
    7: vrb

  xml_param_type:
    0: none
    1: laser_wavelength
    2: units
    0xff: data_array

  spm_mode:
    0: constant_force
    1: contact_constant_height
    2: contact_error
    3: lateral_force
    4: force_modulation
    5: spreading_resistance_imaging
    6: semicontact_topography
    7: semicontact_error
    8: phase_contrast
    9: ac_magnetic_force
    10: dc_magnetic_force
    11: electrostatic_force
    12: capacitance_contrast
    13: kelvin_probe
    14: constant_current
    15: barrier_height
    16: constant_height
    17: afam
    18: contact_efm
    19: shear_force_topography
    20: sfom
    21: contact_capacitance
    22: snom_transmission
    23: snom_reflection
    24: snom_all
    25: snom

  adc_mode:
    0xFF: off
    0: height
    1: dfl
    2: lateral_f
    3: bias_v
    4: current
    5: fb_out
    6: mag
    7: mag_sin #MAG*Sin
    8: mag_cos #MAG*Cos
    9: rms
    10: calc_mag
    11: phase1
    12: phase2
    13: calc_phase
    14: ex1
    15: ex2
    16: hv_x
    17: hv_y
    18: snap_back
  consts:
    32: file_header_size
    22: frame_header_size
    8: frame_mode_size
    30: axis_scales_size
    77: scan_vars_min_size
    38: spectro_vars_min_size
  unit:
    -10: raman_shift
    -9: reserved0
    -8: reserved1
    -7: reserved2
    -6: reserved3
    -5: meter
    -4: centi_meter
    -3: milli_meter
    -2: micro_meter
    -1: nano_meter
    0: angstrom
    1: nano_ampere
    2: volt
    3: none
    4: kilo_hertz
    5: degrees
    6: percent
    7: celsius_degree # -orig-id: celsium_degree
    8: volt_high
    9: second
    10: milli_second
    11: micro_second
    12: nano_second
    13: counts
    14: pixels
    15: reserved_sfom0
    16: reserved_sfom1
    17: reserved_sfom2
    18: reserved_sfom3
    19: reserved_sfom4
    20: ampere2
    21: milli_ampere
    22: micro_ampere
    23: nano_ampere2
    24: pico_ampere
    25: volt2
    26: milli_volt
    27: micro_volt
    28: nano_volt
    29: pico_volt
    30: newton
    31: milli_newton
    32: micro_newton
    33: nano_newton
    34: pico_newton
    35: reserved_dos0
    36: reserved_dos1
    37: reserved_dos2
    38: reserved_dos3
    39: reserved_dos4
`
  },
  {
    id: "ksy_nt_mdt_pal",
    name: "NT-MDT palette format",
    category: "Scientific",
    metadata: {
      isGenerated: true,
      fileExtensions: ["pal"],
      description: "NT-MDT palette format",
      originalCategory: "scientific",
      filePath: "scientific/nt_mdt/nt_mdt_pal.ksy",
      signature: {"offset":0,"bytes":[78,84,45,77,68,84,32,80,97,108,101,116,116,101,32,70,105,108,101,32,32,49,46,48,48,33]},
      endian: "be"
    },
    content: `meta:
  id: nt_mdt_pal
  file-extension: pal
  endian: be
  encoding: UTF-16LE
  title: NT-MDT palette format
  application:
    - Nova
    - Image Analysis
    - NanoEducator
  license: Unlicense
doc: It is a color scheme for visualising SPM scans.
seq:
  - id: signature
    contents: "NT-MDT Palette File  1.00!"
  - id: count #?
    type: u4
  - id: meta
    type: meta
    repeat: expr
    repeat-expr: count
  - id: something2
    size: 1
  - id: tables
    type: col_table(_index)
    repeat: expr
    repeat-expr: count
types:
  meta:
    seq:
      - id: unkn00
        size: 3
        doc: usually 0s
      - id: unkn01
        size: 2
      - id: unkn02
        size: 1
      - id: unkn03
        size: 1
        doc: usually 0s
      - id: colors_count
        type: u2le
      - id: unkn10
        size: 2
        doc: usually 0s
      - id: unkn11
        size: 1
        doc: usually 4
      - id: unkn12
        size: 2
        doc: usually 0s
      - id: name_size
        type: u2
  color:
    seq:
      - id: red
        type: u1
      - id: unkn
        type: u1
      - id: blue
        type: u1
      - id: green
        type: u1

  col_table:
    params:
      - id: index
        type: u2
    seq:
      - id: size1
        type: u1
      - id: unkn
        type: u1
      - id: title
        type: str
        size: _root.meta[index].name_size
      - id: unkn1
        type: u2
      - id: colors
        type: color
        repeat: expr
        repeat-expr: _root.meta[index].colors_count-1
`
  },
  {
    id: "ksy_avantes_roh60",
    name: "Avantes USB spectrometer ROH file 6.0",
    category: "Scientific",
    metadata: {
      isGenerated: true,
      fileExtensions: ["roh"],
      description: "Avantes USB spectrometer ROH file 6.0",
      originalCategory: "scientific",
      filePath: "scientific/spectroscopy/avantes_roh60.ksy",
      endian: "le"
    },
    content: `meta:
  id: avantes_roh60
  title: Avantes USB spectrometer ROH file 6.0
  file-extension: roh
  xref:
    wikidata: Q29960673
  license: CC0-1.0
  endian: le
doc: |
  Avantes USB spectrometers are supplied with a Windows binary which
  generates one ROH and one RCM file when the user clicks "Save
  experiment". In the version of 6.0, the ROH file contains a header
  of 22 four-byte floats, then the spectrum as a float array and a
  footer of 3 floats. The first and last pixel numbers are specified in the
  header and determine the (length+1) of the spectral data. In the tested
  files, the length is (2032-211-1)=1820 pixels, but Kaitai determines this
  automatically anyway.

  The wavelength calibration is stored as a polynomial with coefficients
  of 'wlintercept', 'wlx1', ... 'wlx4', the argument of which is the
  (pixel number + 1), as found out by comparing with the original
  Avantes converted data files. There is no intensity calibration saved,
  but it is recommended to do it in your program - the CCD in the spectrometer
  is so uneven that one should prepare exact pixel-to-pixel calibration curves
  to get reasonable spectral results.

  The rest of the header floats is not known to the author. Note that the
  newer version of Avantes software has a different format, see also
  <https://www.mathworks.com/matlabcentral/fileexchange/37103-avantes-to-matlab>

  The RCM file contains the user-specified comment, so it may be useful
  for automatic conversion of data. You may wish to divide the spectra by
  the integration time before comparing them.

  Written and tested by Filip Dominec, 2017-2018
seq:
  - id: unknown1
    type: f4
  - id: wlintercept
    type: f4
  - id: wlx1
    type: f4
  - id: wlx2
    type: f4
  - id: wlx3
    type: f4
  - id: wlx4
    type: f4
  - id: unknown2
    type: f4
    repeat: expr
    repeat-expr: 9
  - id: ipixfirst
    type: f4
  - id: ipixlast
    type: f4
  - id: unknown3
    type: f4
    repeat: expr
    repeat-expr: 4
  - id: spectrum
    type: f4
    repeat: expr
    repeat-expr: ipixlast.to_i - ipixfirst.to_i - 1
  - id: integration_ms
    type: f4
  - id: averaging
    type: f4
  - id: pixel_smoothing
    type: f4
`
  },
  {
    id: "ksy_specpr",
    name: "SPECtrum Processing Routines Data Format 3/4/88",
    category: "Scientific",
    metadata: {
      isGenerated: true,
      fileExtensions: ["spec"],
      description: "SPECtrum Processing Routines Data Format 3/4/88",
      originalCategory: "scientific",
      filePath: "scientific/spectroscopy/specpr.ksy",
      endian: "be"
    },
    content: `meta:
  id: specpr
  title: "SPECtrum Processing Routines Data Format 3/4/88"
  file-extension: spec
  license: Unlicense
  #encoding: "utf-8"
  encoding: "ascii"
  endian: be
doc: |
  Specpr records are fixed format, 1536 bytes/record. Record number
  counting starts at 0. Binary data are in IEEE format real numbers
  and non-byte swapped integers (compatiible with all Sun
  Microsystems, and Hewlett Packard workstations (Intel and some DEC
  machines are byte swapped relative to Suns and HPs). Each record may
  contain different information according to the following scheme.

  You can get some library of spectra from
  ftp://ftpext.cr.usgs.gov/pub/cr/co/denver/speclab/pub/spectral.library/splib06.library/
seq:
  - id: records
    type: record
    repeat: eos
types:
  icflag:
    doc: "it is big endian"
    seq:
      - id: reserved
        type: b26
      - id: isctb_type
        type: b1
        doc: |
          =0 ctb is civil time
          =1 ctb is universal time
      - id: iscta_type
        type: b1
        doc: |
          =0 cta is civil time
          =1 cta is universal time
      - id: coordinate_mode
        type: b1
        doc: |
          RA, Dec / Long., Lat flag
          =0 the array "ira" and "idec" corresponds to the right ascension and declination of an astronomical object.
          =1 the array "ira" and "idec" correspond to the longitude and latitude of a spot on a planetary surface.
      - id: errors
        type: b1
        doc: >
          flag to indicate whether or not the data for the error bar (1 sigma standard deviation of the mean) is in the next record set.
          =0: no errors, =1: errors in next record set.
      # - id: type
        # type: b2
        # enum: record_type
      - id: text
        type: b1
        doc: |
          =0 the data in the array "data" is data
          =1 the data in the array "data" is ascii text as is most of the header info.
      - id: continuation
        type: b1
        doc: |
          =0 first record of a spectrum consists of: header then 256 data channels
          =1 continuation data record consisting of:
            # bit flags followed by 1532 bytes of
            # real data (bit 1=0) (383 channels)
            # or 1532 bytes of text (bit 1=1).
            # A maximum of 12 continuation records
            # are allowed for a total of 4852
            # channels (limited by arrays of 4864)
            # or 19860 characters of text (bit 1=1).
    instances:
      type:
        value: text.to_i * 1 + continuation.to_i * 2
        enum: record_type
  identifiers:
    seq:
      - id: ititle
        type: str
        size: 40
        pad-right: 0x20
        doc: "Title which describes the data"
      - id: usernm
        type: str
        size: 8
        doc: "The name of the user who created the data record"
  coarse_timestamp:
    seq:
     - id: scaled_seconds
       type: s4
    instances:
      seconds:
        value: scaled_seconds * 24000.
  illum_angle:
    seq:
     - id: angl
       type: s4
       doc: >
          (Integer*4 number, in arc-seconds*6000).
          (90 degrees=1944000000; -90 deg <= angle <= 90 deg)
    instances:
      seconds_total:
        value: angl / 6000
      minutes_total:
        value: seconds_total / 60
      degrees_total:
        value: minutes_total / 60
  data_initial:
    seq:
      - id: ids
        type: identifiers
      - id: iscta
        type: coarse_timestamp
        doc: "Civil or Universal time when data was last processed"
      - id: isctb
        type: coarse_timestamp
        doc: "Civil or Universal time at the start of the spectral run"
      - id: jdatea
        type: s4
        doc: "Date when data was last processed. Stored as integer*4 Julian Day number *10"
      - id: jdateb
        type: s4
        doc: "Date when the spectral run began. Stored as integer*4 Julian Day number *10"
      - id: istb
        type: coarse_timestamp
        doc: "Siderial time when the spectral run started. See flag #05."
      - id: isra
        type: s4
        doc: "Right ascension coordinates of an astronomical  object, or longitude on a planetary surface (integer*4 numbers in seconds *1000) (RA in RA seconds, Longitude in arc-seconds) See flag #06."
      - id: isdec
        type: s4
        doc: "Declination coordinates of an astronomical object, or latitude on a planetary surface (integer*4 number in arc-seconds *1000). See flag #06."
      - id: itchan
        type: s4
        doc: "Total number of channels in the spectrum (integer*4 value from 1 to 4852)"
      - id: irmas
        type: s4
        doc: "The equivalent atmospheric thickness through which the observation was obtained (=1.0 overhead scaled: airmass*1000; integer*4)."
      - id: revs
        type: s4
        doc: "The number of independent spectral scans which were added to make the spectrum (integer*4 number)."
      - id: iband
        type: s4
        doc: "The channel numbers which define the band normalization (scaling to unity). (integers*4)."
        repeat: expr
        repeat-expr: 2
      - id: irwav
        type: s4
        doc: "The record number within the file where the wavelengths are found (integer*4)."
      - id: irespt
        type: s4
        doc: "The record pointer to where the resolution can be found (or horizontal error bar) (integer*4)."
      - id: irecno
        type: s4
        doc: "The record number within the file where the data is located (integer*4 number)."
      - id: itpntr
        type: s4
        doc: "Text data record pointer. This pointer points to a data record where additional text describing the data may be found.  (32 bit integer)"
      - id: ihist
        type: str
        size: 60
        pad-right: 0x20
        doc: "The program automatic 60 character history."
      - id: mhist
        type: str
        size: 74
        doc: "Manual history. Program automatic for large history requirements."
        repeat: expr
        repeat-expr: 4
      - id: nruns
        type: s4
        doc: "The number of independent spectral runs which were summed or averaged to make this spectrum (integer*4)."
      - id: siangl
        type: illum_angle
        doc: >
          The angle of incidence of illuminating radiation
                integrating sphere = 2000000000
                Geometric albedo   = 2000000001
      - id: seangl
        type: illum_angle
        doc: >
          The angle of emission of illuminating radiation
                integrating sphere = 2000000000
                Geometric albedo   = 2000000001
      - id: sphase
        type: s4
        doc: >
          The phase angle between iangl and eangl
          (Integer*4 number, in arc-seconds*1500).
          (180 degrees=972000000; -180 deg <= phase <= 180 deg)
                integrating sphere = 2000000000
      - id: iwtrns
        type: s4
        doc: "Weighted number of runs (the number of runs of the spectrum with the minimum runs which was used in processing this spectrum, integer*4)."
      - id: itimch
        type: s4
        doc: "The time observed in the sample beam for each half chop in milliseconds (for chopping spectrometers only). (integer*4)"
      - id: xnrm
        type: f4
        doc: "The band normalization factor. For data scaled to 1.0, multiply by this number to recover photometric level (32 bit real number)."
      - id: scatim
        type: f4
        doc: "The time it takes to make one scan of the entire spectrum in seconds (32 bit real number)."
      - id: timint
        type: f4
        doc: "Total integration time (usually=scatime * nruns) (32 bit real number)."
      - id: tempd
        type: f4
        doc: "Temperature in degrees Kelvin (32 bit real number)."
      - id: data
        type: f4
        doc: "The spectral data (256 channels of 32 bit real data numbers)."
        repeat: expr
        repeat-expr: 256
    instances:
      phase_angle_arcsec:
        value: sphase / 1500.
        doc: "The phase angle between iangl and eangl in seconds"
  data_continuation:
    seq:
      - id: cdata
        type: f4
        repeat: expr
        repeat-expr: 383
        doc: "The continuation of the data values (383 channels of 32 bit real numbers)."
  text_initial:
    seq:
      - id: ids
        type: identifiers
      - id: itxtpt
        type: u4
        doc: "Text data record pointer. This pointer points  to a data record where additional text may be may be found."
      - id: itxtch
        type: s4
        doc: "The number of text characters (maximum= 19860)."
      - id: itext
        type: str
        size: 1476
        doc: "1476 characters of text.  Text has embedded newlines so the number of lines available is limited only by the number of characters available."
  text_continuation:
    seq:
      - id: tdata
        type: str
        size: 1532
        doc: "1532 characters of text."
  record:
    seq:
    - id: icflag
      type: icflag
      doc: "Total number of bytes comprising the document."
    - id: content
      size: 1536 - 4
      type:
        switch-on: icflag.type
        cases:
          'record_type::data_initial': data_initial
          'record_type::data_continuation': data_continuation
          'record_type::text_initial': text_initial
          'record_type::text_continuation': text_continuation
enums:
  record_type: # if I use 0b notation it doesn't work
    0: data_initial
    2: data_continuation
    1: text_initial
    3: text_continuation
`
  },
  {
    id: "ksy_efivar_signature_list",
    name: "UEFI Variable with Signature List",
    category: "Security",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "UEFI Variable with Signature List",
      originalCategory: "security",
      filePath: "security/efivar_signature_list.ksy",
      endian: "le"
    },
    content: `meta:
  id: efivar_signature_list
  title: UEFI Variable with Signature List
  xref:
    wikidata: Q859398 # UEFI standard
  license: CC0-1.0
  endian: le
doc: |
  Parse UEFI variables db and dbx that contain signatures, certificates and
  hashes. On a Linux system using UEFI, these variables are readable from:

  \`\`\`
  /sys/firmware/efi/efivars/db-d719b2cb-3d3a-4596-a3bc-dad00e67656f
  /sys/firmware/efi/efivars/dbDefault-8be4df61-93ca-11d2-aa0d-00e098032b8c
  /sys/firmware/efi/efivars/dbx-d719b2cb-3d3a-4596-a3bc-dad00e67656f
  /sys/firmware/efi/efivars/dbxDefault-8be4df61-93ca-11d2-aa0d-00e098032b8c
  \`\`\`

  Note:

  * \`d719b2cb-3d3a-4596-a3bc-dad00e67656f\` is defined as \`EFI_IMAGE_SECURITY_DATABASE_GUID\`
  * \`8be4df61-93ca-11d2-aa0d-00e098032b8c\` is defined as \`EFI_GLOBAL_VARIABLE\`

  Each file contains an EFI attribute (32-bit integer) followed by a list of
  \`EFI_SIGNATURE_LIST\` structures.
doc-ref: https://uefi.org/sites/default/files/resources/UEFI_Spec_2_8_final.pdf
seq:
  - id: var_attributes
    doc: Attributes of the UEFI variable
    type: efi_var_attr
  - id: signatures
    type: signature_list
    repeat: eos
types:
  signature_list:
    doc-ref: EFI_SIGNATURE_LIST
    seq:
      - id: signature_type
        doc: Type of the signature as a GUID
        -orig-id: SignatureType
        size: 0x10
      - id: len_signature_list
        doc: Total size of the signature list, including this header
        type: u4
        -orig-id: SignatureListSize
      - id: len_signature_header
        doc: Size of the signature header which precedes the array of signatures
        type: u4
        -orig-id: SignatureHeaderSize
      - id: len_signature
        doc: Size of each signature
        type: u4
        -orig-id: signatureSize
      - id: header
        doc: Header before the array of signatures
        -orig-id: SignatureHeader
        size: len_signature_header
      - id: signatures
        doc: An array of signatures
        -orig-id: Signatures
        size: len_signature
        repeat: expr
        repeat-expr: (len_signature_list - len_signature_header - 0x1c) / len_signature
        if: len_signature > 0
        type: signature_data
    instances:
      is_cert_sha256:
        value: signature_type == [0x26, 0x16, 0xc4, 0xc1, 0x4c, 0x50, 0x92, 0x40, 0xac, 0xa9, 0x41, 0xf9, 0x36, 0x93, 0x43, 0x28]
        doc: SHA-256 hash
        doc-ref: EFI_CERT_SHA256_GUID
      is_cert_rsa2048_key:
        value: signature_type == [0xe8, 0x66, 0x57, 0x3c, 0x9c, 0x26, 0x34, 0x4e, 0xaa, 0x14, 0xed, 0x77, 0x6e, 0x85, 0xb3, 0xb6]
        doc: RSA-2048 key (only the modulus since the public key exponent is known to be 0x10001)
        doc-ref: EFI_CERT_RSA2048_GUID
      is_cert_rsa2048_sha256:
        value: signature_type == [0x90, 0x61, 0xb3, 0xe2, 0x9b, 0x87, 0x3d, 0x4a, 0xad, 0x8d, 0xf2, 0xe7, 0xbb, 0xa3, 0x27, 0x84]
        doc: RSA-2048 signature of a SHA-256 hash
        doc-ref: EFI_CERT_RSA2048_SHA256_GUID
      is_cert_sha1:
        value: signature_type == [0x12, 0xa5, 0x6c, 0x82, 0x10, 0xcf, 0xc9, 0x4a, 0xb1, 0x87, 0xbe, 0x01, 0x49, 0x66, 0x31, 0xbd]
        doc: SHA-1 hash
        doc-ref: EFI_CERT_SHA1_GUID
      is_cert_rsa2048_sha1:
        value: signature_type == [0x4f, 0x44, 0xf8, 0x67, 0x43, 0x87, 0xf1, 0x48, 0xa3, 0x28, 0x1e, 0xaa, 0xb8, 0x73, 0x60, 0x80]
        doc: RSA-2048 signature of a SHA-1 hash
        doc-ref: EFI_CERT_RSA2048_SHA1_GUID
      is_cert_x509:
        value: signature_type == [0xa1, 0x59, 0xc0, 0xa5, 0xe4, 0x94, 0xa7, 0x4a, 0x87, 0xb5, 0xab, 0x15, 0x5c, 0x2b, 0xf0, 0x72]
        doc: X.509 certificate
        doc-ref: EFI_CERT_X509_GUID
      is_cert_sha224:
        value: signature_type == [0x33, 0x52, 0x6e, 0x0b, 0x5c, 0xa6, 0xc9, 0x44, 0x94, 0x07, 0xd9, 0xab, 0x83, 0xbf, 0xc8, 0xbd]
        doc: SHA-224 hash
        doc-ref: EFI_CERT_SHA224_GUID
      is_cert_sha384:
        value: signature_type == [0x07, 0x53, 0x3e, 0xff, 0xd0, 0x9f, 0xc9, 0x48, 0x85, 0xf1, 0x8a, 0xd5, 0x6c, 0x70, 0x1e, 0x01]
        doc: SHA-384 hash
        doc-ref: EFI_CERT_SHA384_GUID
      is_cert_sha512:
        value: signature_type == [0xae, 0x0f, 0x3e, 0x09, 0xc4, 0xa6, 0x50, 0x4f, 0x9f, 0x1b, 0xd4, 0x1e, 0x2b, 0x89, 0xc1, 0x9a]
        doc: SHA-512 hash
        doc-ref: EFI_CERT_SHA512_GUID
      is_cert_sha256_x509:
        value: signature_type == [0x92, 0xa4, 0xd2, 0x3b, 0xc0, 0x96, 0x79, 0x40, 0xb4, 0x20, 0xfc, 0xf9, 0x8e, 0xf1, 0x03, 0xed]
        doc: SHA256 hash of an X.509 certificate's To-Be-Signed contents, and a time of revocation
        doc-ref: EFI_CERT_X509_SHA256_GUID
      is_cert_sha384_x509:
        value: signature_type == [0x6e, 0x87, 0x76, 0x70, 0xc2, 0x80, 0xe6, 0x4e, 0xaa, 0xd2, 0x28, 0xb3, 0x49, 0xa6, 0x86, 0x5b]
        doc: SHA384 hash of an X.509 certificate's To-Be-Signed contents, and a time of revocation
        doc-ref: EFI_CERT_X509_SHA384_GUID
      is_cert_sha512_x509:
        value: signature_type == [0x63, 0xbf, 0x6d, 0x44, 0x02, 0x25, 0xda, 0x4c, 0xbc, 0xfa, 0x24, 0x65, 0xd2, 0xb0, 0xfe, 0x9d]
        doc: SHA512 hash of an X.509 certificate's To-Be-Signed contents, and a time of revocation
        doc-ref: EFI_CERT_X509_SHA512_GUID
      is_cert_der_pkcs7:
        value: signature_type == [0x9d, 0xd2, 0xaf, 0x4a, 0xdf, 0x68, 0xee, 0x49, 0x8a, 0xa9, 0x34, 0x7d, 0x37, 0x56, 0x65, 0xa7]
        doc: "DER-encoded PKCS #7 version 1.5 [RFC2315]"
        doc-ref: EFI_CERT_TYPE_PKCS7_GUID
  signature_data:
    doc-ref: EFI_SIGNATURE_DATA
    seq:
      - id: owner
        doc: An identifier which identifies the agent which added the signature to the list
        -orig-id: SignatureOwner
        size: 0x10
      - id: data
        doc: The format of the signature is defined by the SignatureType.
        -orig-id: SignatureData
        size-eos: true
  efi_var_attr:
    doc: Attributes of a UEFI variable
    seq:
      - id: enhanced_authenticated_access
        type: b1
        -orig-id: EFI_VARIABLE_ENHANCED_AUTHENTICATED_ACCESS
      - id: append_write
        type: b1
        -orig-id: EFI_VARIABLE_APPEND_WRITE
      - id: time_based_authenticated_write_access
        type: b1
        -orig-id: EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS
      - id: authenticated_write_access
        type: b1
        -orig-id: EFI_VARIABLE_AUTHENTICATED_WRITE_ACCESS
      - id: hardware_error_record
        type: b1
        -orig-id: EFI_VARIABLE_HARDWARE_ERROR_RECORD
      - id: runtime_access
        type: b1
        -orig-id: EFI_VARIABLE_RUNTIME_ACCESS
      - id: bootservice_access
        type: b1
        -orig-id: EFI_VARIABLE_BOOTSERVICE_ACCESS
      - id: non_volatile
        type: b1
        -orig-id: EFI_VARIABLE_NON_VOLATILE
      - id: reserved1
        doc: Reserved (unused) bits
        type: b24
`
  },
  {
    id: "ksy_openpgp_message",
    name: "OpenPGP message",
    category: "Security",
    metadata: {
      isGenerated: true,
      fileExtensions: ["gpg","pub","pgp"],
      description: "OpenPGP message",
      originalCategory: "security",
      filePath: "security/openpgp_message.ksy",
      endian: "be"
    },
    content: `meta:
  id: openpgp_message
  title: OpenPGP message
  file-extension:
    - gpg
    - pub
    - pgp
  xref:
    justsolve: PGP
    rfc: 4880
    wikidata: Q2141493
  license: MIT
  encoding: UTF-8
  endian: be
doc: The OpenPGP Message Format is a format to store encryption and signature keys for emails.
doc-ref: https://www.rfc-editor.org/rfc/rfc4880
seq:
  - id: packets
    type: packet
    repeat: eos
types:
  packet:
    -webide-representation: '{packet_type_old}'
    seq:
      - id: one
        type: b1
      - id: new_packet_format
        type: b1
      - id: packet_type_new
        type: b6
        if: new_packet_format
        enum: packet_tags
      - id: packet_type_old
        type: b4
        if: not new_packet_format
        enum: packet_tags
      - id: len_type
        type: b2
        if: not new_packet_format
      - id: body
        type:
          switch-on: new_packet_format
          cases:
            #true: new_packet
            false: old_packet

  old_packet:
    seq:
      - id: len
        type:
          switch-on: _parent.len_type
          cases:
            0: u1
            1: u2
            2: u4
      - id: body
        size: len
        type:
          switch-on: _parent.packet_type_old
          cases:
            packet_tags::user_id_packet: user_id_packet
            packet_tags::signature_packet: signature_packet
            packet_tags::public_key_packet: public_key_packet
            packet_tags::public_subkey_packet: public_key_packet
            packet_tags::secret_key_packet: secret_key_packet
            packet_tags::secret_subkey_packet: public_key_packet

  public_key_packet:
    seq:
      - id: version
        type: u1
      - id: timestamp
        type: u4
      - id: public_key_algorithm
        type: u1
        enum: public_key_algorithms
      - id: len_alg
        type: u2
      - id: rsa_n
        size: len_alg / 8
      - id: padding
        type: u2
      - id: rsa_e
        size: 3

  user_id_packet:
    seq:
      - id: user_id
        size-eos: true
        type: str

  signature_packet:
    seq:
      - id: version
        type: u1
        # enum: TODO switch?
      - id: signature_type
        type: u1
        # enum: TODO 5.2.1
      - id: public_key_algorithm
        type: u1
        enum: public_key_algorithms
      - id: hash_algorithm
        type: u1
        enum: hash_algorithms
      - id: len_hashed_subpacket
        type: u2
      - id: hashed_subpackets
        type: subpackets
        size: len_hashed_subpacket
      - id: len_unhashed_subpacket
        type: u2
      - id: unhashed_subpackets
        type: subpackets
        size: len_unhashed_subpacket
      - id: left_signed_hash
        type: u2
      - id: rsa_n
        type: u2
      - id: signature
        size-eos: true

  secret_key_packet:
    seq:
      - id: public_key
        type: public_key_packet
      - id: string_to_key
        type: u1
      - id: symmetric_encryption_algorithm
        type: u1
        enum: symmetric_key_algorithm
        if: string_to_key >= 254
      - id: secret_key
        size-eos: true

  subpackets:
    seq:
      - id: subpacketss
        type: subpacket
        repeat: eos

  subpacket:
    seq:
      - id: len
        type: len_subpacket
      - id: subpacket_type
        type: u1
        enum: subpacket_types
      - id: content
        size: len.len - 1
        type:
          switch-on: subpacket_type
          cases:
            subpacket_types::signature_creation_time: signature_creation_time
            subpacket_types::issuer: issuer
            subpacket_types::key_expiration_time: key_expiration_time
            subpacket_types::preferred_hash_algorithms: preferred_hash_algorithms
            subpacket_types::preferred_compression_algorithms: preferred_compression_algorithms
            subpacket_types::signature_expiration_time: signature_expiration_time
            subpacket_types::exportable_certification: exportable_certification
            subpacket_types::revocable: revocable
            subpacket_types::trust_signature: trust_signature
            subpacket_types::regular_expression: regular_expression
            subpacket_types::revocation_key: revocation_key
            subpacket_types::notation_data: notation_data
            subpacket_types::key_server_preferences: key_server_preferences
            subpacket_types::preferred_key_server: preferred_key_server
            subpacket_types::primary_user_id: primary_user_id
            subpacket_types::policy_uri: policy_uri
            subpacket_types::key_flags: key_flags
            subpacket_types::signers_user_id: signers_user_id
            subpacket_types::reason_for_revocation: reason_for_revocation
            subpacket_types::features: features
            subpacket_types::signature_target: signature_target
            subpacket_types::embedded_signature: embedded_signature

  len_subpacket:
    -webide-representation: '{len}'
    seq:
      - id: first_octet
        type: u1
      - id: second_octet
        type: u1
        if: first_octet >= 192 and first_octet < 255
      - id: scalar
        type: u4
        if: first_octet == 255
    instances:
      len:
        value: 'first_octet < 192 ? first_octet : ((first_octet >= 192 and first_octet < 255) ? (((first_octet - 192) << 8) + second_octet + 192) : scalar)'

  signature_creation_time:
    seq:
      - id: time
        type: u4

  issuer:
    seq:
      - id: keyid
        type: u8

  key_expiration_time:
    seq:
      - id: time
        type: u4

  preferred_hash_algorithms:
    seq:
      - id: algorithm
        type: u1
        enum: hash_algorithms
        repeat: eos

  preferred_compression_algorithms:
    seq:
      - id: algorithm
        type: u1
        enum: compression_algorithms
        repeat: eos

  signature_expiration_time:
    seq:
      - id: time
        type: u4

  exportable_certification:
    seq:
      - id: exportable
        type: u1

  revocable:
    seq:
      - id: revocable
        type: u1

  trust_signature:
    seq:
      - id: level
        type: u1
      - id: amount
        type: u1

  regular_expression:
    seq:
      - id: regex
        type: strz

  revocation_key:
    seq:
      - id: class
        type: u1
      - id: public_key_algorithm
        enum: public_key_algorithms
        type: u1
      - id: fingerprint
        size: 20

  notation_data:
    seq:
      - id: flags
        size: 4
      - id: len_name
        type: u2
      - id: len_value
        type: u2
      - id: name
        size: len_name
      - id: value
        size: len_value

  key_server_preferences:
    seq:
      - id: flag
        type: u1
        enum: server_flags
        repeat: eos

  preferred_key_server:
    seq:
      - id: uri
        type: str
        size-eos: true

  primary_user_id:
    seq:
      - id: user_id
        type: u1

  policy_uri:
    seq:
      - id: uri
        type: str
        size-eos: true

  key_flags:
    seq:
      - id: flag
        type: u1
        enum: key_flags
        repeat: eos

  signers_user_id:
    seq:
      - id: user_id
        type: str
        size-eos: true

  reason_for_revocation:
    seq:
      - id: revocation_code
        type: u1
        enum: revocation_codes
      - id: reason
        type: str
        size-eos: true

  features:
    seq:
      - id: flags
        size-eos: true

  signature_target:
    seq:
      - id: public_key_algorithm
        type: u1
        enum: public_key_algorithms
      - id: hash_algorithm
        type: u1
        enum: hash_algorithms
      - id: hash
        size-eos: true

  embedded_signature:
    seq:
      - id: signature_packet
        type: signature_packet

enums:
  packet_tags:
    0: reserved_a_packet_tag_must_not_have_this_value
    1: public_key_encrypted_session_key_packet
    2: signature_packet
    3: symmetric_key_encrypted_session_key_packet
    4: one_pass_signature_packet
    5: secret_key_packet
    6: public_key_packet
    7: secret_subkey_packet
    8: compressed_data_packet
    9: symmetrically_encrypted_data_packet
    10: marker_packet
    11: literal_data_packet
    12: trust_packet
    13: user_id_packet
    14: public_subkey_packet
    17: user_attribute_packet
    18: sym_encrypted_and_integrity_protected_data_packet
    19: modification_detection_code_packet
    60: private_or_experimental_values_0
    61: private_or_experimental_values_1
    62: private_or_experimental_values_2
    63: private_or_experimental_values_3

  public_key_algorithms:
    1: rsa_encrypt_or_sign_hac
    2: rsa_encrypt_only_hac
    3: rsa_sign_only_hac
    16: elgamal_encrypt_only_elgamal_hac
    17: dsa_digital_signature_algorithm_fips_hac
    18: reserved_for_elliptic_curve
    19: reserved_for_ecdsa
    20: reserved_formerly_elgamal_encrypt_or_sign_
    21: reserved_for_diffie_hellman_x_as_defined_for_ietf_s_mime
    100: private_experimental_algorithm_00
    101: private_experimental_algorithm_01
    102: private_experimental_algorithm_02
    103: private_experimental_algorithm_03
    104: private_experimental_algorithm_04
    105: private_experimental_algorithm_05
    106: private_experimental_algorithm_06
    107: private_experimental_algorithm_07
    108: private_experimental_algorithm_08
    109: private_experimental_algorithm_09
    110: private_experimental_algorithm_10

  symmetric_key_algorithm:
    0: plain
    1: idea
    2: triple_des
    3: cast5
    4: blowfisch
    5: reserved5
    6: reserved6
    7: aes_128
    8: aes_192
    9: aes_256
    10: twofish_256
    100: private_experimental_algorithm_00
    101: private_experimental_algorithm_01
    102: private_experimental_algorithm_02
    103: private_experimental_algorithm_03
    104: private_experimental_algorithm_04
    105: private_experimental_algorithm_05
    106: private_experimental_algorithm_06
    107: private_experimental_algorithm_07
    108: private_experimental_algorithm_08
    109: private_experimental_algorithm_09
    110: private_experimental_algorithm_10

  hash_algorithms:
    1: md5
    2: sha1
    3: ripemd160
    4: reserved4
    5: reserved5
    6: reserved6
    7: reserved7
    8: sha256
    9: sha384
    10: sha512
    11: sha224
    100: private_experimental_algorithm_00
    101: private_experimental_algorithm_01
    102: private_experimental_algorithm_02
    103: private_experimental_algorithm_03
    104: private_experimental_algorithm_04
    105: private_experimental_algorithm_05
    106: private_experimental_algorithm_06
    107: private_experimental_algorithm_07
    108: private_experimental_algorithm_08
    109: private_experimental_algorithm_09
    110: private_experimental_algorithm_10

  compression_algorithms:
    0: uncompressed
    1: zib
    2: zlib
    3: bzip
    100: private_experimental_algorithm_00
    101: private_experimental_algorithm_01
    102: private_experimental_algorithm_02
    103: private_experimental_algorithm_03
    104: private_experimental_algorithm_04
    105: private_experimental_algorithm_05
    106: private_experimental_algorithm_06
    107: private_experimental_algorithm_07
    108: private_experimental_algorithm_08
    109: private_experimental_algorithm_09
    110: private_experimental_algorithm_10

  subpacket_types:
    0: reserved0
    1: reserved1
    2: signature_creation_time
    3: signature_expiration_time
    4: exportable_certification
    5: trust_signature
    6: regular_expression
    7: revocable
    8: reserved8
    9: key_expiration_time
    10: placeholder_for_backward_compatibility
    11: preferred_symmetric_algorithms
    12: revocation_key
    13: reserved13
    14: reserved14
    15: reserved15
    16: issuer
    17: reserved17
    18: reserved18
    19: reserved19
    20: notation_data
    21: preferred_hash_algorithms
    22: preferred_compression_algorithms
    23: key_server_preferences
    24: preferred_key_server
    25: primary_user_id
    26: policy_uri
    27: key_flags
    28: signers_user_id
    29: reason_for_revocation
    30: features
    31: signature_target
    32: embedded_signature

  server_flags:
    0x80: no_modify

  key_flags:
    0x01: this_key_may_be_used_to_certify_other_keys
    0x02: this_key_may_be_used_to_sign_data
    0x04: this_key_may_be_used_to_encrypt_communications
    0x08: this_key_may_be_used_to_encrypt_storage
    0x10: the_private_component_of_this_key_may_have_been_split_by_a_secret_sharing_mechanism
    0x20: this_key_may_be_used_for_authentication
    0x80: the_private_component_of_this_key_may_be_in_the_possession_of_more_than_one_person

  revocation_codes:
    0: no_reason_specified_key_revocations_or_cert_revocations
    1: key_is_superseded_key_revocations
    2: key_material_has_been_compromised_key_revocations
    3: key_is_retired_and_no_longer_used_key_revocations
    32: user_id_information_is_no_longer_valid_cert_revocations
    100: private_use_1
    101: private_use_2
    102: private_use_3
    103: private_use_4
    110: private_use_11
`
  },
  {
    id: "ksy_ssh_public_key",
    name: "SSH public key",
    category: "Security",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "SSH public key",
      originalCategory: "security",
      filePath: "security/ssh_public_key.ksy",
      endian: "be"
    },
    content: `meta:
  id: ssh_public_key
  title: SSH public key
  license: CC0-1.0
  endian: be
doc: |
  SSH public keys are encoded in a special binary format, typically represented
  to end users as either one-liner OpenSSH format or multi-line PEM format
  (commerical SSH). Text wrapper carries extra information about user who
  created the key, comment, etc, but the inner binary is always base64-encoded
  and follows the same internal format.

  This format spec deals with this internal binary format (called "blob" in
  openssh sources) only. Buffer is expected to be raw binary and not base64-d.
  Implementation closely follows code in OpenSSH.
doc-ref: 'https://github.com/openssh/openssh-portable/blob/b4d4eda6/sshkey.c#L1970'
seq:
  - id: key_name
    type: cstring
  - id: body
    type:
      switch-on: key_name.value
      cases:
        '"ssh-rsa"': key_rsa
        '"ecdsa-sha2-nistp256"': key_ecdsa
        '"ssh-ed25519"': key_ed25519
        '"ssh-dss"': key_dsa
types:
  key_rsa:
    doc-ref: 'https://github.com/openssh/openssh-portable/blob/b4d4eda6/sshkey.c#L2011-L2028'
    seq:
      - id: rsa_e
        type: bignum2
        doc: Public key exponent, designated \`e\` in RSA documentation.
      - id: rsa_n
        type: bignum2
        doc: |
          Modulus of both public and private keys, designated \`n\` in RSA
          documentation. Its length in bits is designated as "key length".
    instances:
      key_length:
        -webide-parse-mode: eager
        value: rsa_n.length_in_bits
        doc: Key length in bits
  key_ecdsa:
    doc-ref: 'https://github.com/openssh/openssh-portable/blob/b4d4eda6/sshkey.c#L2060-L2103'
    seq:
      - id: curve_name
        type: cstring
      - id: ec
        type: elliptic_curve
  key_ed25519:
    doc-ref: 'https://github.com/openssh/openssh-portable/blob/b4d4eda6/sshkey.c#L2111-L2124'
    seq:
      - id: len_pk
        type: u4
        # must be 0x20
      - id: pk
        size: len_pk
  key_dsa:
    doc-ref: 'https://github.com/openssh/openssh-portable/blob/b4d4eda6/sshkey.c#L2036-L2051'
    seq:
      - id: dsa_p
        type: bignum2
      - id: dsa_q
        type: bignum2
      - id: dsa_g
        type: bignum2
      - id: dsa_pub_key
        type: bignum2
  cstring:
    doc: |
      A integer-prefixed string designed to be read using \`sshbuf_get_cstring\`
      and written by \`sshbuf_put_cstring\` routines in ssh sources. Name is an
      obscure misnomer, as typically "C string" means a null-terminated string.
    doc-ref: 'https://github.com/openssh/openssh-portable/blob/b4d4eda6/sshbuf-getput-basic.c#L181'
    -webide-representation: '{value}'
    seq:
      - id: len
        type: u4
      - id: value
        type: str
        size: len
        encoding: ASCII
  bignum2:
    doc: |
      Big integers serialization format used by ssh, v2. In the code, the following
      routines are used to read/write it:

      * sshbuf_get_bignum2
      * sshbuf_get_bignum2_bytes_direct
      * sshbuf_put_bignum2
      * sshbuf_get_bignum2_bytes_direct
    doc-ref: |
      https://github.com/openssh/openssh-portable/blob/b4d4eda6/sshbuf-getput-crypto.c#L35
      https://github.com/openssh/openssh-portable/blob/b4d4eda6/sshbuf-getput-basic.c#L431
    seq:
      - id: len
        type: u4
      - id: body
        size: len
    instances:
      length_in_bits:
        value: (len - 1) * 8
        doc: |
          Length of big integer in bits. In OpenSSH sources, this corresponds to
          \`BN_num_bits\` function.
  elliptic_curve:
    doc: |
      Elliptic curve dump format used by ssh. In OpenSSH code, the following
      routines are used to read/write it:

      * sshbuf_get_ec
      * get_ec
    doc-ref: |
      https://github.com/openssh/openssh-portable/blob/b4d4eda6/sshbuf-getput-crypto.c#L90
      https://github.com/openssh/openssh-portable/blob/b4d4eda6/sshbuf-getput-crypto.c#L76
    seq:
      - id: len
        type: u4
      - id: body
        size: len
`
  },
  {
    id: "ksy_asn1_der",
    name: "ASN.1 DER (Abstract Syntax Notation One, Distinguished Encoding Rules)",
    category: "Serialization",
    metadata: {
      isGenerated: true,
      fileExtensions: ["der"],
      description: "ASN.1 DER (Abstract Syntax Notation One, Distinguished Encoding Rules)",
      originalCategory: "serialization",
      filePath: "serialization/asn1/asn1_der.ksy"
    },
    content: `meta:
  id: asn1_der
  title: ASN.1 DER (Abstract Syntax Notation One, Distinguished Encoding Rules)
  file-extension: der
  xref:
    justsolve: DER
    wikidata: Q28600469
  license: CC0-1.0
doc: |
  ASN.1 (Abstract Syntax Notation One) DER (Distinguished Encoding
  Rules) is a standard-backed serialization scheme used in many
  different use-cases. Particularly popular usage scenarios are X.509
  certificates and some telecommunication / networking protocols.

  DER is self-describing encoding scheme which allows representation
  of simple, atomic data elements, such as strings and numbers, and
  complex objects, such as sequences of other elements.

  DER is a subset of BER (Basic Encoding Rules), with an emphasis on
  being non-ambiguous: there's always exactly one canonical way to
  encode a data structure defined in terms of ASN.1 using DER.

  This spec allows full parsing of format syntax, but to understand
  the semantics, one would typically require a dictionary of Object
  Identifiers (OIDs), to match OID bodies against some human-readable
  list of constants. OIDs are covered by many different standards,
  so typically it's simpler to use a pre-compiled list of them, such
  as:

  * <https://www.cs.auckland.ac.nz/~pgut001/dumpasn1.cfg>
  * <http://oid-info.com/>
  * <https://www.alvestrand.no/objectid/top.html>
doc-ref: https://www.itu.int/itu-t/recommendations/rec.aspx?rec=12483&lang=en
-webide-representation: 't={type_tag}, b={body}'
seq:
  - id: type_tag
    type: u1
    enum: type_tag
  - id: len
    type: len_encoded
  - id: body
    size: len.result
    type:
      switch-on: type_tag
      cases:
        'type_tag::object_id': body_object_id
        'type_tag::sequence_10': body_sequence
        'type_tag::sequence_30': body_sequence
        'type_tag::set': body_sequence
        'type_tag::utf8string': body_utf8string
        'type_tag::printable_string': body_printable_string
types:
  len_encoded:
    -webide-representation: 'v={result:dec}'
    seq:
      - id: b1
        type: u1
      - id: int2
        type: u2be
        if: b1 == 0x82
      - id: int1
        type: u1
        if: b1 == 0x81
    instances:
      result:
        value: '(b1 == 0x81) ? int1 : ((b1 == 0x82) ? int2 : b1)'
        -webide-parse-mode: eager
  body_sequence:
    -webide-representation: '[...]'
    seq:
      - id: entries
        type: asn1_der
        repeat: eos
  body_utf8string:
    -webide-representation: '{str}'
    seq:
      - id: str
        type: str
        size-eos: true
        encoding: UTF-8
  body_printable_string:
    -webide-representation: '{str}'
    seq:
      - id: str
        type: str
        size-eos: true
        encoding: ASCII # actually a subset of ASCII
  body_object_id:
    -webide-representation: '{first:dec}.{second:dec}.{rest}'
    doc-ref: https://learn.microsoft.com/en-us/windows/win32/seccertenroll/about-object-identifier
    seq:
      - id: first_and_second
        type: u1
      - id: rest
        size-eos: true
    instances:
      first:
        value: first_and_second / 40
      second:
        value: first_and_second % 40
enums:
  type_tag:
    0: end_of_content
    0x1: boolean
    0x2: integer
    0x3: bit_string
    0x4: octet_string
    0x5: null_value
    0x6: object_id
    0x7: object_descriptor
    0x8: external
    0x9: real
    0xa: enumerated
    0xb: embedded_pdv
    0xc: utf8string
    0xd: relative_oid
    0x10: sequence_10
    0x13: printable_string
    0x16: ia5string
    0x30: sequence_30
    0x31: set
`
  },
  {
    id: "ksy_bson",
    name: "Bson",
    category: "Serialization",
    metadata: {
      isGenerated: true,
      fileExtensions: ["bson"],
      description: "",
      originalCategory: "serialization",
      filePath: "serialization/bson.ksy",
      signature: {"offset":0,"bytes":[0]},
      endian: "le"
    },
    content: `meta:
  id: bson
  file-extension: bson
  xref:
    justsolve: BSON
    mime: application/bson
    wikidata: Q2661480
  license: CC0-1.0
  endian: le
doc: >
  BSON, short for Binary JSON, is a binary-encoded serialization of JSON-like documents. Like JSON, BSON supports the embedding of documents and arrays within other documents and arrays. BSON also contains extensions that allow representation of data types that are not part of the JSON spec. For example, BSON has a Date type and a BinData type.
  BSON can be compared to binary interchange formats, like Protocol Buffers. BSON is more "schemaless" than Protocol Buffers, which can give it an advantage in flexibility but also a slight disadvantage in space efficiency (BSON has overhead for field names within the serialized data).
  BSON was designed to have the following three characteristics:
    * Lightweight. Keeping spatial overhead to a minimum is important for any data representation format, especially when used over the network.
    * Traversable. BSON is designed to be traversed easily. This is a vital property in its role as the primary data representation for MongoDB.
    * Efficient. Encoding data to BSON and decoding from BSON can be performed very quickly in most languages due to the use of C data types.
seq:
  - id: len
    type: s4
    doc: "Total number of bytes comprising the document."
  - id: fields
    type: elements_list
    size: len - 5
  - id: terminator
    contents: [0]
types:
  code_with_scope:
    seq:
      - id: id
        type: s4
      - id: source
        type: string
      - id: scope
        type: bson
        doc: "mapping from identifiers to values, representing the scope in which the string should be evaluated."
  elements_list:
    seq:
      - id: elements
        type: element
        repeat: eos
  reg_ex:
    seq:
      - id: pattern
        type: cstring
      - id: options
        type: cstring
  string:
    seq:
      - id: len
        type: s4
      - id: str
        type: str
        encoding: UTF-8
        size: len-1
      - id: terminator
        contents: [0]
  cstring:
    seq:
      - id: str
        type: strz
        encoding: UTF-8
        doc: "MUST NOT contain '\\\\x00', hence it is not full UTF-8."
  f16:
    doc: "128-bit IEEE 754-2008 decimal floating point"
    seq:
      - id: str
        type: b1
      - id: exponent
        type: b15
      - id: significand_hi
        type: b49
      - id: significand_lo
        type: u8
  object_id:
    doc-ref: https://www.mongodb.com/docs/manual/reference/method/ObjectId/
    seq:
      - id: epoch_time
        type: u4
        doc: "seconds since the Unix epoch"
      - id: machine_id
        type: u3
      - id: process_id
        type: u2
      - id: counter
        type: u3
        doc: "counter, starting with a random value."
  db_pointer:
    seq:
      - id: namespace
        type: string
      - id: id
        type: object_id
  timestamp:
    doc: "Special internal type used by MongoDB replication and sharding. First 4 bytes are an increment, second 4 are a timestamp."
    seq:
      - id: increment
        type: u4
      - id: timestamp
        type: u4
  bin_data:
    doc: "The BSON \\"binary\\" or \\"BinData\\" datatype is used to represent arrays of bytes. It is somewhat analogous to the Java notion of a ByteArray. BSON binary values have a subtype. This is used to indicate what kind of data is in the byte array. Subtypes from zero to 127 are predefined or reserved. Subtypes from 128-255 are user-defined."
    seq:
      - id: len
        type: s4
      - id: subtype
        type: u1
        enum: subtype
      - id: content
        size: len
        type:
          switch-on: subtype
          cases:
            'subtype::byte_array_deprecated': byte_array_deprecated
    types:
      byte_array_deprecated:
        doc: "The BSON \\"binary\\" or \\"BinData\\" datatype is used to represent arrays of bytes. It is somewhat analogous to the Java notion of a ByteArray. BSON binary values have a subtype. This is used to indicate what kind of data is in the byte array. Subtypes from zero to 127 are predefined or reserved. Subtypes from 128-255 are user-defined."
        seq:
          - id: len
            type: s4
          - id: content
            size: len
    enums:
      subtype:
        0x00: generic #Generic binary subtype
        0x01: function
        0x02: byte_array_deprecated #This used to be the default subtype, but was deprecated in favor of \\\\x00. Drivers and tools should be sure to handle \\\\x02 appropriately. The structure of the binary data (the byte* array in the binary non-terminal) must be an int32 followed by a (byte*). The int32 is the number of bytes in the repetition.
        0x03: uuid_deprecated #This used to be the UUID subtype, but was deprecated in favor of \\\\x04. Drivers and tools for languages with a native UUID type should handle \\\\x03 appropriately.
        0x04: uuid
        0x05: md5
        0x80: custom #\\\\x80-\\\\xFF "User defined" subtypes. The binary data can be anything.
  element:
    seq:
      - id: type_byte
        type: u1
        enum: bson_type
      - id: name
        type: cstring
      - id: content
        #if: "(type!=type::undefined && type!=type::null && type!=type::min_key && type!=type::max_key)"
        type:
          switch-on: type_byte
          cases:
            'bson_type::number_double': f8
            'bson_type::string': string
            'bson_type::document': bson
            'bson_type::array': bson
            'bson_type::bin_data': bin_data
            'bson_type::object_id': object_id
            'bson_type::boolean': u1
            'bson_type::utc_datetime': s8 #The int64 is UTC milliseconds since the Unix epoch.
            'bson_type::reg_ex': reg_ex
            'bson_type::db_pointer': db_pointer
            'bson_type::javascript': string
            'bson_type::symbol': string # a programming language (e.g., Python) symbol
            'bson_type::code_with_scope': code_with_scope
            'bson_type::number_int': s4
            'bson_type::timestamp': timestamp
            'bson_type::number_long': s8
            'bson_type::number_decimal': f16
    enums:
      bson_type:
        0x00: end_of_object
        0x01: number_double
        0x02: string
        0x03: document
        0x04: array #The document for an array is a normal BSON document with integer values for the keys, starting with 0 and continuing sequentially. For example, the array ['red', 'blue'] would be encoded as the document {'0': 'red', '1': 'blue'}. The keys must be in ascending numerical order.
        0x05: bin_data #This is the most commonly used binary subtype and should be the 'default' for drivers and tools.
        0x06: undefined
        0x07: object_id
        0x08: boolean
        0x09: utc_datetime
        0x0a: jst_null
        0x0b: reg_ex
        0x0c: db_pointer
        0x0d: javascript
        0x0e: symbol
        0x0f: code_with_scope
        0x10: number_int
        0x11: timestamp
        0x12: number_long
        0x13: number_decimal
        0x7f: max_key #Special type which compares higher than all other possible BSON element values.
        -1: min_key #Special type which compares lower than all other possible BSON element values.
  u3:
    doc: |
      Implements unsigned 24-bit (3 byte) integer.
    seq:
      - id: b1
        type: u1
      - id: b2
        type: u1
      - id: b3
        type: u1
    instances:
      value:
        value: 'b1 | (b2 << 8) | (b3 << 16)'
`
  },
  {
    id: "ksy_chrome_pak",
    name: "Chrome PAK serialization format",
    category: "Serialization",
    metadata: {
      isGenerated: true,
      fileExtensions: ["pak"],
      description: "Chrome PAK serialization format",
      originalCategory: "serialization",
      filePath: "serialization/chrome_pak.ksy",
      endian: "le"
    },
    content: `meta:
  id: chrome_pak
  title: Chrome PAK serialization format
  file-extension: pak
  tags:
    - archive
    - serialization
  license: CC0-1.0
  endian: le
doc: |
  Format mostly used by Google Chrome and various Android apps to store
  resources such as translated strings, help messages and images.
doc-ref:
  - https://web.archive.org/web/20220126211447/https://dev.chromium.org/developers/design-documents/linuxresourcesandlocalizedstrings # version 4
  - https://chromium.googlesource.com/chromium/src/tools/grit/+/3c36f27/grit/format/data_pack.py # version 4
  - https://chromium.googlesource.com/chromium/src/tools/grit/+/8a23eae/grit/format/data_pack.py # version 5
seq:
  - id: version
    type: u4
    valid:
      any-of: [4, 5]
    doc: only versions 4 and 5 are supported
  - id: num_resources_v4
    type: u4
    if: version == 4
  - id: encoding
    type: u1
    enum: encodings
    doc: |
      Character encoding of all text resources in the PAK file. Note that
      the file can **always** contain binary resources, this only applies to
      those that are supposed to hold text.

      In practice, this will probably always be \`encodings::utf8\` - I haven't
      seen any organic file that would state otherwise. \`UTF8\` is also usually
      hardcoded in Python scripts from the GRIT repository that generate .pak
      files (for example
      [\`pak_util.py:79\`](https://chromium.googlesource.com/chromium/src/tools/grit/+/8a23eae/pak_util.py#79)).
  - id: v5_part
    type: header_v5_part
    if: version == 5
  - id: resources
    type: resource(_index, _index < num_resources)
    repeat: expr
    repeat-expr: num_resources + 1
    doc: |
      The length is calculated by looking at the offset of
      the next item, so an extra entry is stored with id 0
      and offset pointing to the end of the resources.
  - id: aliases
    type: alias
    repeat: expr
    repeat-expr: num_aliases
instances:
  num_resources:
    value: 'version == 5 ? v5_part.num_resources : num_resources_v4'
  num_aliases:
    value: 'version == 5 ? v5_part.num_aliases : 0'
types:
  header_v5_part:
    seq:
      - id: encoding_padding
        size: 3
      - id: num_resources
        type: u2
      - id: num_aliases
        type: u2
  resource:
    -webide-representation: '{id:dec} - o:{ofs_body} s:{len_body}'
    params:
      - id: idx
        type: s4
      - id: has_body
        type: bool
    seq:
      - id: id
        type: u2
      - id: ofs_body
        type: u4
    instances:
      len_body:
        value: _parent.resources[idx + 1].ofs_body - ofs_body
        if: has_body
        doc: MUST NOT be accessed until the next \`resource\` is parsed
      body:
        pos: ofs_body
        size: len_body
        if: has_body
        doc: MUST NOT be accessed until the next \`resource\` is parsed
  alias:
    -webide-representation: '{id:dec} -> resources[{resource_idx:dec}] ({resource})'
    seq:
      - id: id
        type: u2
      - id: resource_idx
        type: u2
        valid:
          max: _parent.num_resources - 1
    instances:
      resource:
        value: _parent.resources[resource_idx]
enums:
  encodings:
    0:
      id: binary
      doc: file is not expected to contain any text resources
    1:
      id: utf8
      doc: all text resources are encoded in UTF-8
    2:
      id: utf16
      doc: all text resources are encoded in UTF-16
`
  },
  {
    id: "ksy_google_protobuf",
    name: "Google Protocol Buffers (protobuf)",
    category: "Serialization",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Google Protocol Buffers (protobuf)",
      originalCategory: "serialization",
      filePath: "serialization/google_protobuf.ksy"
    },
    content: `meta:
  id: google_protobuf
  title: Google Protocol Buffers (protobuf)
  xref:
    justsolve: Protobuf
    wikidata: Q1645574
  license: MIT
  ks-version: 0.7
  imports:
    - /common/vlq_base128_le
doc: |
  Google Protocol Buffers (AKA protobuf) is a popular data
  serialization scheme used for communication protocols, data storage,
  etc. There are implementations are available for almost every
  popular language. The focus points of this scheme are brevity (data
  is encoded in a very size-efficient manner) and extensibility (one
  can add keys to the structure, while keeping it readable in previous
  version of software).

  Protobuf uses semi-self-describing encoding scheme for its
  messages. It means that it is possible to parse overall structure of
  the message (skipping over fields one can't understand), but to
  fully understand the message, one needs a protocol definition file
  (\`.proto\`). To be specific:

  * "Keys" in key-value pairs provided in the message are identified
    only with an integer "field tag". \`.proto\` file provides info on
    which symbolic field names these field tags map to.
  * "Keys" also provide something called "wire type". It's not a data
    type in its common sense (i.e. you can't, for example, distinguish
    \`sint32\` vs \`uint32\` vs some enum, or \`string\` from \`bytes\`), but
    it's enough information to determine how many bytes to
    parse. Interpretation of the value should be done according to the
    type specified in \`.proto\` file.
  * There's no direct information on which fields are optional /
    required, which fields may be repeated or constitute a map, what
    restrictions are placed on fields usage in a single message, what
    are the fields' default values, etc, etc.
doc-ref: https://protobuf.dev/programming-guides/encoding/
seq:
  - id: pairs
    type: pair
    repeat: eos
    doc: Key-value pairs which constitute a message
types:
  pair:
    doc: Key-value pair
    seq:
      - id: key
        type: vlq_base128_le
        doc: |
          Key is a bit-mapped variable-length integer: lower 3 bits
          are used for "wire type", and everything higher designates
          an integer "field tag".
      - id: value
        doc: |
          Value that corresponds to field identified by
          \`field_tag\`. Type is determined approximately: there is
          enough information to parse it unambiguously from a stream,
          but further infromation from \`.proto\` file is required to
          interprete it properly.
        type:
          switch-on: wire_type
          cases:
            'wire_types::varint': vlq_base128_le
            'wire_types::len_delimited': delimited_bytes
            'wire_types::bit_64': u8le
            'wire_types::bit_32': u4le
    instances:
      wire_type:
        value: 'key.value & 0b111'
        enum: wire_types
        doc: |
          "Wire type" is a part of the "key" that carries enough
          information to parse value from the wire, i.e. read correct
          amount of bytes, but there's not enough informaton to
          interprete in unambiguously. For example, one can't clearly
          distinguish 64-bit fixed-sized integers from 64-bit floats,
          signed zigzag-encoded varints from regular unsigned varints,
          arbitrary bytes from UTF-8 encoded strings, etc.
      field_tag:
        value: 'key.value >> 3'
        doc: |
          Identifies a field of protocol. One can look up symbolic
          field name in a \`.proto\` file by this field tag.
    enums:
      wire_types:
        0: varint
        1: bit_64
        2: len_delimited
        3: group_start
        4: group_end
        5: bit_32
  delimited_bytes:
    seq:
      - id: len
        type: vlq_base128_le
      - id: body
        size: len.value
`
  },
  {
    id: "ksy_microsoft_cfb",
    name: "Microsoft Compound File Binary (CFB), AKA OLE (Object Linking and Embedding) file format",
    category: "Serialization",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Microsoft Compound File Binary (CFB), AKA OLE (Object Linking and Embedding) file format",
      originalCategory: "serialization",
      filePath: "serialization/microsoft_cfb.ksy",
      endian: "le"
    },
    content: `meta:
  id: microsoft_cfb
  title: Microsoft Compound File Binary (CFB), AKA OLE (Object Linking and Embedding) file format
  xref:
    justsolve: Microsoft_Compound_File
    loc:
      - fdd000380 # CFB 3
      - fdd000392 # CFB 4
    wikidata: Q5156830
  license: CC0-1.0
  endian: le
seq:
  - id: header
    type: cfb_header
instances:
  sector_size:
    value: '1 << header.sector_shift'
  fat:
    pos: sector_size
    size: header.size_fat * sector_size
    type: fat_entries
  dir:
    pos: (header.ofs_dir + 1) * sector_size
    type: dir_entry
types:
  cfb_header:
    seq:
      - id: signature
        contents: [0xd0, 0xcf, 0x11, 0xe0, 0xa1, 0xb1, 0x1a, 0xe1]
        doc: Magic bytes that confirm that this is a CFB file
      - id: clsid
        contents: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        doc: Reserved class ID field, must be all 0
      - id: version_minor
        type: u2
      - id: version_major
        type: u2
      - id: byte_order
        contents: [0xfe, 0xff]
        doc: In theory, specifies a byte order. In practice, no other values besides FE FF (which imply little endian order) are used.
      - id: sector_shift
        type: u2
        doc: For major version 3, must be 0x9 (sector size = 512 bytes). For major version 4, must be 0xc (sector size = 4096 bytes).
      - id: mini_sector_shift
        type: u2
      - id: reserved1
        size: 6
      - id: size_dir
        type: s4
        doc: Number of directory sectors in this file. For major version 3, must be 0.
      - id: size_fat
        type: s4
        doc: Number of FAT sectors in this file.
      - id: ofs_dir
        type: s4
        doc: Starting sector number for directory stream.
      - id: transaction_seq
        type: s4
        doc: A transaction sequence number, which is incremented each time the file is saved if transactions are implemented, 0 otherwise.
      - id: mini_stream_cutoff_size
        type: s4
      - id: ofs_mini_fat
        type: s4
        doc: Starting sector number for mini FAT.
      - id: size_mini_fat
        type: s4
        doc: Number of mini FAT sectors in this file.
      - id: ofs_difat
        type: s4
        doc: Starting sector number for DIFAT.
      - id: size_difat
        type: s4
        doc: Number of DIFAT sectors in this file.
      - id: difat
        repeat: expr
        repeat-expr: 109
        type: s4
  fat_entries:
    seq:
      - id: entries
        type: s4
        repeat: eos
  dir_entry:
    seq:
      - id: name
        type: str
        size: 64
        encoding: UTF-16LE
      - id: name_len
        type: u2
      - id: object_type
        type: u1
        enum: obj_type
      - id: color_flag
        type: u1
        enum: rb_color
      - id: left_sibling_id
        type: s4
      - id: right_sibling_id
        type: s4
      - id: child_id
        type: s4
      - id: clsid
        size: 16
      - id: state
        type: u4
        doc: User-defined flags for storage or root storage objects
      - id: time_create
        type: u8
        doc: Creation time, in Windows FILETIME format (number of 100-nanosecond intervals since January 1, 1601, UTC)
      - id: time_mod
        type: u8
        doc: Modification time, in Windows FILETIME format (number of 100-nanosecond intervals since January 1, 1601, UTC).
      - id: ofs
        type: s4
        doc: For stream object, number of starting sector. For a root storage object, first sector of the mini stream, if the mini stream exists.
      - id: size
        type: u8
        doc: For stream object, size of user-defined data in bytes. For a root storage object, size of the mini stream.
    instances:
      mini_stream:
        io: _root._io
        pos: (ofs + 1) * _root.sector_size
        size: size
        if: object_type == obj_type::root_storage
      child:
        io: _root._io
        pos: (_root.header.ofs_dir + 1) * _root.sector_size + child_id * 0x80 # sizeof<dir_entry>
        type: dir_entry
        if: child_id != -1
      left_sibling:
        io: _root._io
        pos: (_root.header.ofs_dir + 1) * _root.sector_size + left_sibling_id * 0x80 # sizeof<dir_entry>
        type: dir_entry
        if: left_sibling_id != -1
      right_sibling:
        io: _root._io
        pos: (_root.header.ofs_dir + 1) * _root.sector_size + right_sibling_id * 0x80 # sizeof<dir_entry>
        type: dir_entry
        if: right_sibling_id != -1
    enums:
      obj_type:
        0: unknown
        1: storage
        2: stream
        5: root_storage
      rb_color:
        0: red
        1: black
`
  },
  {
    id: "ksy_msgpack",
    name: "MessagePack (msgpack) serialization format",
    category: "Serialization",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "MessagePack (msgpack) serialization format",
      originalCategory: "serialization",
      filePath: "serialization/msgpack.ksy",
      endian: "be"
    },
    content: `meta:
  id: msgpack
  title: MessagePack (msgpack) serialization format
  xref:
    wikidata: Q6821738
  license: CC0-1.0
  endian: be
doc: |
  MessagePack (msgpack) is a system to serialize arbitrary structured
  data into a compact binary stream.
doc-ref: https://github.com/msgpack/msgpack/blob/master/spec.md
seq:
  - id: b1
    type: u1
    doc: |
      First byte is msgpack message is either a piece of data by
      itself or determines types of further, more complex data
      structures.
  # ========================================================================
  - id: int_extra
    type:
      switch-on: b1
      cases:
        0xcc: u1
        0xcd: u2
        0xce: u4
        0xcf: u8
        0xd0: s1
        0xd1: s2
        0xd2: s4
        0xd3: s8
  # ========================================================================
  - id: float_32_value
    type: f4
    if: is_float_32
  - id: float_64_value
    type: f8
    if: is_float_64
  # ========================================================================
  - id: str_len_8
    type: u1
    if: is_str_8
  - id: str_len_16
    type: u2
    if: is_str_16
  - id: str_len_32
    type: u4
    if: is_str_32
  - id: str_value
    type: str
    encoding: UTF-8
    size: str_len
    if: is_str
  # ========================================================================
  - id: num_array_elements_16
    type: u2
    if: is_array_16
  - id: num_array_elements_32
    type: u4
    if: is_array_32
  - id: array_elements
    type: msgpack
    repeat: expr
    repeat-expr: num_array_elements
    if: is_array
  # ========================================================================
  - id: num_map_elements_16
    type: u2
    if: is_map_16
  - id: num_map_elements_32
    type: u4
    if: is_map_32
  - id: map_elements
    type: map_tuple
    repeat: expr
    repeat-expr: num_map_elements
    if: is_map
instances:
#  value:
#    value: >-
#      is_bool ? bool_value :
#      is_int ? int_value :
#      is_array ? array_elements :
#      0
  is_nil:
    value: b1 == 0xc0
    doc-ref: 'https://github.com/msgpack/msgpack/blob/master/spec.md#formats-nil'
  # ========================================================================
  is_bool:
    value: b1 == 0xc2 or b1 == 0xc3
  bool_value:
    value: b1 == 0xc3
    if: is_bool
    doc-ref: 'https://github.com/msgpack/msgpack/blob/master/spec.md#formats-bool'
  # ========================================================================
  is_pos_int7:
    value: b1 & 0b1000_0000 == 0
  pos_int7_value:
    value: b1
    if: is_pos_int7
  is_neg_int5:
    value: b1 & 0b111_00000 == 0b111_00000
  neg_int5_value:
    value: -(b1 & 0b000_11111)
    if: is_neg_int5
  is_int:
    value: is_pos_int7 or is_neg_int5
  int_value:
    value: >-
      is_pos_int7 ? pos_int7_value :
      is_neg_int5 ? neg_int5_value :
      0x1337
    if: is_int
  # ========================================================================
  is_float_32:
    value: b1 == 0xca
    doc-ref: 'https://github.com/msgpack/msgpack/blob/master/spec.md#formats-float'
  is_float_64:
    value: b1 == 0xcb
    doc-ref: 'https://github.com/msgpack/msgpack/blob/master/spec.md#formats-float'
  is_float:
    value: is_float_32 or is_float_64
  float_value:
    value: >-
      is_float_32 ? float_32_value : float_64_value
    if: is_float
  # ========================================================================
  is_fix_str:
    value: b1 & 0b111_00000 == 0b101_00000
    doc-ref: 'https://github.com/msgpack/msgpack/blob/master/spec.md#formats-str'
  is_str_8:
    value: b1 == 0xd9
    doc-ref: 'https://github.com/msgpack/msgpack/blob/master/spec.md#formats-str'
  is_str_16:
    value: b1 == 0xda
    doc-ref: 'https://github.com/msgpack/msgpack/blob/master/spec.md#formats-str'
  is_str_32:
    value: b1 == 0xdb
    doc-ref: 'https://github.com/msgpack/msgpack/blob/master/spec.md#formats-str'
  is_str:
    value: is_fix_str or is_str_8 or is_str_16 or is_str_32
  str_len:
    value: >-
      is_fix_str ? (b1 & 0b000_11111) :
      is_str_8 ? str_len_8 :
      is_str_16 ? str_len_16 :
      str_len_32
    if: is_str
  # ========================================================================
  is_array:
    value: is_fix_array or is_array_16 or is_array_32
    doc-ref: 'https://github.com/msgpack/msgpack/blob/master/spec.md#formats-array'
  is_fix_array:
    value: b1 & 0b1111_0000 == 0b1001_0000
    doc-ref: 'https://github.com/msgpack/msgpack/blob/master/spec.md#formats-array'
  is_array_16:
    value: b1 == 0xdc
    doc-ref: 'https://github.com/msgpack/msgpack/blob/master/spec.md#formats-array'
  is_array_32:
    value: b1 == 0xdd
    doc-ref: 'https://github.com/msgpack/msgpack/blob/master/spec.md#formats-array'
  num_array_elements:
    value: >-
      is_fix_array ? b1 & 0b0000_1111 :
      is_array_16 ? num_array_elements_16 :
      num_array_elements_32
    if: is_array
    doc-ref: 'https://github.com/msgpack/msgpack/blob/master/spec.md#formats-array'
  # ========================================================================
  is_map:
    value: is_fix_map or is_map_16 or is_map_32
    doc-ref: 'https://github.com/msgpack/msgpack/blob/master/spec.md#formats-map'
  is_fix_map:
    value: b1 & 0b1111_0000 == 0b1000_0000
    doc-ref: 'https://github.com/msgpack/msgpack/blob/master/spec.md#formats-map'
  is_map_16:
    value: b1 == 0xde
    doc-ref: 'https://github.com/msgpack/msgpack/blob/master/spec.md#formats-map'
  is_map_32:
    value: b1 == 0xdf
    doc-ref: 'https://github.com/msgpack/msgpack/blob/master/spec.md#formats-map'
  num_map_elements:
    value: >-
      is_fix_map ? b1 & 0b0000_1111 :
      is_map_16 ? num_map_elements_16 :
      num_map_elements_32
    if: is_map
    doc-ref: 'https://github.com/msgpack/msgpack/blob/master/spec.md#formats-map'
types:
  map_tuple:
    seq:
      - id: key
        type: msgpack
      - id: value
        type: msgpack
`
  },
  {
    id: "ksy_php_serialized_value",
    name: "Serialized PHP value",
    category: "Serialization",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Serialized PHP value",
      originalCategory: "serialization",
      filePath: "serialization/php_serialized_value.ksy"
    },
    content: `meta:
  id: php_serialized_value
  title: Serialized PHP value
  application: PHP
  license: CC0-1.0
  ks-version: 0.9
  # No endianness, since all numbers are stored as ASCII decimal.
  # This encoding is only used to parse numbers. All strings, class names, etc.
  # are treated as raw byte arrays, because PHP strings are byte strings
  # with no particular encoding.
  encoding: ASCII
doc: |
  A serialized PHP value, in the format used by PHP's built-in \`serialize\` and
  \`unserialize\` functions. This format closely mirrors PHP's data model:
  it supports all of PHP's scalar types (\`NULL\`, booleans, numbers, strings),
  associative arrays, objects, and recursive data structures using references.
  The only PHP values not supported by this format are *resources*,
  which usually correspond to native file or connection handles and cannot be
  meaningfully serialized.

  There is no official documentation for this data format;
  this spec was created based on the PHP source code and the behavior of
  \`serialize\`/\`unserialize\`. PHP makes no guarantees about compatibility of
  serialized data between PHP versions, but in practice, the format has
  remained fully backwards-compatible - values serialized by an older
  PHP version can be unserialized on any newer PHP version.
  This spec supports serialized values from PHP 7.3 or any earlier version.
doc-ref:
  - 'https://www.php.net/manual/en/function.serialize.php'
  - 'https://www.php.net/manual/en/function.serialize.php#66147'
  - 'https://www.php.net/manual/en/function.unserialize.php'
  - 'https://github.com/php/php-src/blob/php-7.3.5/ext/standard/var_unserializer.re'
  - 'https://github.com/php/php-src/blob/php-7.3.5/ext/standard/var.c#L822'
seq:
  - id: type
    type: u1
    enum: value_type
    doc: A single-character code indicating the type of the serialized value.
  - id: contents
    type:
      switch-on: type
      cases:
        'value_type::null': null_contents
        'value_type::bool': bool_contents
        'value_type::int': int_contents
        'value_type::float': float_contents
        'value_type::string': string_contents
        'value_type::php_6_string': string_contents
        'value_type::array': array_contents
        'value_type::php_3_object': php_3_object_contents
        'value_type::object': object_contents
        'value_type::custom_serialized_object':
          custom_serialized_object_contents
        'value_type::variable_reference': int_contents
        'value_type::object_reference': int_contents
    doc: |
      The contents of the serialized value, which vary depending on the type.
enums:
  value_type:
    0x43: # 'C'
      id: custom_serialized_object
      doc: |
        An \`object\` whose class implements a custom serialized format using
        \`Serializable\`. Available since PHP 5.1.
    0x4e: # 'N'
      id: 'null'
      doc: A \`NULL\` value.
    0x4f: # 'O'
      id: object
      doc: |
        An \`object\` value (including its class name) serialized in the
        default format. Available since PHP 4.
    0x52: # 'R'
      id: variable_reference
      doc: |
        An additional reference to a value that has already appeared earlier.
        Available since PHP 4.0.4.
    0x53: # 'S'
      id: php_6_string
      doc: |
        A \`string\` value from PHP 6. PHP 6 was never released, but support for
        deserializing PHP 6 strings was added in PHP 5.2.1 and is still present
        as of PHP 7.3. In all versions that support them (other than PHP 6),
        they are deserialized exactly like regular strings.
    0x61: # 'a'
      id: array
      doc: An \`array\` value.
    0x62: # 'b'
      id: bool
      doc: A \`bool\` value. Available since PHP 4.
    0x64: # 'd'
      id: float
      doc: A \`float\` value.
    0x69: # 'i'
      id: int
      doc: An \`int\` value.
    0x6f: # 'o'
      id: php_3_object
      doc: |
        An \`object\` value (without a class name), as serialized by PHP 3.

        PHP 4 through 7.3 included code to deserialize PHP 3 objects,
        which has now been removed from the development repo and will likely
        no longer be included in PHP 7.4. However, apparently this code
        has been broken ever since it was added - it cannot even deserialize
        a simple PHP 3 object like \`o:0:{}\`. If the code worked, PHP 3 objects
        deserialized under PHP 4 and higher would have the class \`stdClass\`.
    0x72: # 'r'
      id: object_reference
      doc: |
        An \`object\` value which shares its identity with another \`object\`
        that has already appeared earlier. Available since PHP 5.
    0x73: # 's'
      id: string
      doc: A \`string\` value.
  bool_value:
    0x30: false # '0'
    0x31: true # '1'
types:
  null_contents:
    doc: |
      The contents of a null value (\`value_type::null\`). This structure
      contains no actual data, since there is only a single \`NULL\` value.
    seq:
      - id: semicolon
        contents: ';'
  bool_contents:
    doc: The contents of a boolean value (\`value_type::bool\`).
    seq:
      - id: colon
        contents: ':'
      - id: value_dec
        type: u1
        enum: bool_value
        doc: |
          The value of the \`bool\`: \`0\` for \`false\` or \`1\` for \`true\`.
      - id: semicolon
        contents: ';'
    instances:
      value:
        value: 'value_dec == bool_value::true'
        doc: The value of the \`bool\`, parsed as a boolean.
  int_contents:
    doc: |
      The contents of an integer-like value:
      either an actual integer (\`value_type::int\`) or a reference
      (\`value_type::variable_reference\`, \`value_type::object_reference\`).
    seq:
      - id: colon
        contents: ':'
      - id: value_dec
        type: str
        terminator: 0x3b # ';'
        doc: The value of the \`int\`, in ASCII decimal.
    instances:
      value:
        value: value_dec.to_i
        doc: The value of the \`int\`, parsed as an integer.
  float_contents:
    doc: The contents of a floating-point value.
    seq:
      - id: colon
        contents: ':'
      - id: value_dec
        type: str
        terminator: 0x3b # ';'
        doc: |
          The value of the \`float\`, in ASCII decimal, as generated by PHP's
          usual double-to-string conversion. In particular, this means that:

          * A decimal point may not be included (for integral numbers)
          * The number may use exponent notation (e. g. \`1.0E+16\`)
          * Positive and negative infinity are represented as \`INF\`
            and \`-INF\`, respectively
          * Not-a-number is represented as \`NAN\`
  length_prefixed_quoted_string:
    doc: |
      A quoted string prefixed with its length.

      Despite the quotes surrounding the string data, it can contain
      arbitrary bytes, which are never escaped in any way.
      This does not cause any ambiguities when parsing - the bounds of
      the string are determined only by the length field, not by the quotes.
    seq:
      - id: len_data_dec
        type: str
        terminator: 0x3a # ':'
        doc: |
          The length of the string's data in bytes, in ASCII decimal.
          The quotes are not counted in this length number.
      - id: opening_quote
        contents: '"'
      - id: data
        size: len_data
        doc: The data contained in the string. The quotes are not included.
      - id: closing_quote
        contents: '"'
    instances:
      len_data:
        value: len_data_dec.to_i
        doc: |
          The length of the string's contents in bytes, parsed as an integer.
          The quotes are not counted in this size number.
  string_contents:
    doc: |
      The contents of a string value.

      Note: PHP strings can contain arbitrary byte sequences.
      They are not necessarily valid text in any specific encoding.
    seq:
      - id: colon
        contents: ':'
      - id: string
        type: length_prefixed_quoted_string
      - id: semicolon
        contents: ';'
    instances:
      value:
        value: string.data
        doc: The value of the string, as a byte array.
  mapping_entry:
    doc: A mapping entry consisting of a key and a value.
    seq:
      - id: key
        type: php_serialized_value
        doc: The key of the entry.
      - id: value
        type: php_serialized_value
        doc: The value of the entry.
  count_prefixed_mapping:
    doc: A mapping (a sequence of key-value pairs) prefixed with its size.
    seq:
      - id: num_entries_dec
        type: str
        terminator: 0x3a # ':'
        doc: The number of key-value pairs in the mapping, in ASCII decimal.
      - id: opening_brace
        contents: '{'
      - id: entries
        type: mapping_entry
        repeat: expr
        repeat-expr: num_entries
        doc: The key-value pairs contained in the mapping.
      - id: closing_brace
        contents: '}'
    instances:
      num_entries:
        value: num_entries_dec.to_i
        doc: |
          The number of key-value pairs in the mapping, parsed as an integer.
  array_contents:
    doc: The contents of an array value.
    seq:
      - id: colon
        contents: ':'
      - id: elements
        type: count_prefixed_mapping
        doc: |
          The array's elements. Keys must be of type \`int\` or \`string\`,
          values may have any type.
  php_3_object_contents:
    doc: |
      The contents of a PHP 3 object value. Unlike its counterpart in PHP 4
      and above, it does not contain a class name.
    seq:
      - id: colon
        contents: ':'
      - id: properties
        type: count_prefixed_mapping
        doc: |
          The object's properties. Keys must be of type \`string\`,
          values may have any type.
  object_contents:
    doc: |
      The contents of an object value serialized in the default format.
      Unlike its PHP 3 counterpart, it contains a class name.
    seq:
      - id: colon1
        contents: ':'
      - id: class_name
        type: length_prefixed_quoted_string
        doc: The name of the object's class.
      - id: colon2
        contents: ':'
      - id: properties
        type: count_prefixed_mapping
        doc: |
          The object's properties. Keys ust be of type \`string\`,
          values may have any type.
  custom_serialized_object_contents:
    doc: |
      The contents of an object value that implements a custom
      serialized format using \`Serializable\`.
    seq:
      - id: colon1
        contents: ':'
      - id: class_name
        type: length_prefixed_quoted_string
        doc: The name of the object's class.
      - id: colon2
        contents: ':'
      - id: len_data_dec
        type: str
        terminator: 0x3a # ':'
        doc: |
          The length of the serialized data in bytes, in ASCII decimal.
          The braces are not counted in this size number.
      - id: opening_brace
        contents: '{'
      - id: data
        size: len_data
        doc: |
          The custom serialized data. The braces are not included.

          Although the surrounding braces make it look like a regular
          serialized object, this field is actually more similar to a string:
          it can contain arbitrary data that is not required to follow
          any common structure.
      - id: closing_quote
        contents: '}'
    instances:
      len_data:
        value: len_data_dec.to_i
        doc: |
          The length of the serialized data in bytes, parsed as an integer.
          The braces are not counted in this length number.
`
  },
  {
    id: "ksy_python_pickle",
    name: "Python pickle serialization format",
    category: "Serialization",
    metadata: {
      isGenerated: true,
      fileExtensions: ["pickle","pkl"],
      description: "Python pickle serialization format",
      originalCategory: "serialization",
      filePath: "serialization/python_pickle.ksy",
      endian: "le"
    },
    content: `meta:
  id: python_pickle
  title: Python pickle serialization format
  application: Python
  file-extension:
    - pickle
    - pkl
  xref:
    justsolve: Pickle
    wikidata: Q7190889
  license: CC0-1.0
  endian: le
doc: |
  Python Pickle format serializes Python objects to a byte stream, as a sequence
  of operations to run on the Pickle Virtual Machine.

  The format is mostly implementation defined, there is no formal specification.
  Pickle data types are closely coupled to the Python object model.
  Python singletons, and most builtin types (e.g. \`None\`, \`int\`,\`dict\`, \`list\`)
  are serialised using dedicated Pickle opcodes.
  Other builtin types, and all classes  (e.g. \`set\`, \`datetime.datetime\`) are
  serialised by encoding the name of a constructor callable.
  They are deserialised by importing that constructor, and calling it.
  So, unpickling an arbitrary pickle, using the Python's stdlib pickle module
  can cause arbitrary code execution.

  Pickle format has evolved with Python, later protocols add opcodes & types.
  Later Python releases can pickle to or unpickle from any earlier protocol.

  * Protocol 0: ASCII clean, no explicit version, fields are '\\n' terminated.
  * Protocol 1: Binary, no explicit version, first length prefixed types.
  * Protocol 2 ([PEP 307](https://peps.python.org/pep-0307/)): Python 2.3+.
    Explicit versioning, more length prefixed types.
  * Protocol 3: Python 3.0+. Dedicated opcodes for \`bytes\` objects.
  * Protocol 4 ([PEP 3154](https://peps.python.org/pep-3154/)): Python 3.4+.
    Opcodes for 64 bit strings, framing, \`set\`.
  * Protocol 5 ([PEP 574](https://peps.python.org/pep-0574/)): Python 3.8+:
  Opcodes for \`bytearray\` and out of band data
doc-ref: https://github.com/python/cpython/blob/v3.8.1/Lib/pickletools.py
seq:
  # TODO is there a way to declare PROTO is optional, but only valid at position 0?
  - id: ops
    type: op
    repeat: until
    repeat-until: _.code == opcode::stop
types:
  op:
    seq:
      - id: code
        type: u1
        enum: opcode
        doc: |
          Operation code that determines which action should be
          performed next by the Pickle Virtual Machine. Some opcodes
          are only available in later versions of the Pickle protocol.
      - id: arg
        type:
          switch-on: code
          cases:
            'opcode::int': decimalnl_short
            'opcode::binint': s4
            'opcode::binint1': u1
            'opcode::binint2': u2
            'opcode::long': decimalnl_long
            'opcode::long1': long1
            'opcode::long4': long4
            'opcode::string': stringnl
            'opcode::binstring': string4
            'opcode::short_binstring': string1
            'opcode::binbytes': bytes4
            'opcode::short_binbytes': bytes1
            'opcode::binbytes8': bytes8
            'opcode::none': no_arg
            'opcode::newtrue': no_arg
            'opcode::newfalse': no_arg
            'opcode::unicode': unicodestringnl
            'opcode::short_binunicode': unicodestring1
            'opcode::binunicode': unicodestring4
            'opcode::binunicode8': unicodestring8
            'opcode::float': floatnl
            'opcode::binfloat': f8be
            'opcode::empty_list': no_arg
            'opcode::append': no_arg
            'opcode::appends': no_arg
            'opcode::list': no_arg
            'opcode::empty_tuple': no_arg
            'opcode::tuple': no_arg
            'opcode::tuple1': no_arg
            'opcode::tuple2': no_arg
            'opcode::tuple3': no_arg
            'opcode::empty_dict': no_arg
            'opcode::dict': no_arg
            'opcode::setitem': no_arg
            'opcode::setitems': no_arg
            'opcode::empty_set': no_arg
            'opcode::additems': no_arg
            'opcode::frozenset': no_arg
            'opcode::pop': no_arg
            'opcode::dup': no_arg
            'opcode::mark': no_arg
            'opcode::pop_mark': no_arg
            'opcode::get': decimalnl_short
            'opcode::binget': u1
            'opcode::long_binget': u4
            'opcode::put': decimalnl_short
            'opcode::binput': u1
            'opcode::long_binput': u4
            'opcode::memoize': no_arg
            'opcode::ext1': u1
            'opcode::ext2': u2
            'opcode::ext4': u4
            'opcode::global_opcode':  stringnl_noescape_pair
            'opcode::stack_global': no_arg
            'opcode::reduce': no_arg
            'opcode::build': no_arg
            'opcode::inst': stringnl_noescape_pair
            'opcode::obj': no_arg
            'opcode::newobj': no_arg
            'opcode::newobj_ex': no_arg
            'opcode::proto': u1
            'opcode::stop': no_arg
            'opcode::frame': u8
            'opcode::persid': stringnl_noescape
            'opcode::binpersid': no_arg
            'opcode::bytearray8': bytearray8
            'opcode::next_buffer': no_arg
            'opcode::readonly_buffer': no_arg
        doc: |
          Optional argument for the operation. Data type and length
          are determined by the value of the opcode.

  decimalnl_short:
    doc: |
      Integer or boolean, encoded with the ASCII characters [0-9-].

      The values '00' and '01' encode the Python values \`False\` and \`True\`.
      Normally a value would not contain leading '0' characters.
    seq:
      - id: val
        type: str
        encoding: ascii
        terminator: 0x0a # "\\n"

  decimalnl_long:
    doc: Integer, encoded with the ASCII chracters [0-9-], followed by 'L'.
    seq:
      - id: val
        type: str
        encoding: ascii
        terminator: 0x0a # "\\n"

  # TODO Can kaitai express constraint that these are quoted?
  stringnl:
    doc: Quoted string, possibly containing Python string escapes.
    seq:
      - id: val
        type: str
        encoding: ascii
        terminator: 0x0a # "\\n"

  stringnl_noescape:
    doc: Unquoted string, does not contain string escapes.
    seq:
      - id: val
        type: str
        encoding: ascii
        terminator: 0x0a # "\\n"

  stringnl_noescape_pair:
    doc: Pair of unquoted, unescaped strings.
    seq:
      - id: val1
        type: stringnl_noescape
      - id: val2
        type: stringnl_noescape

  unicodestringnl:
    doc: Unquoted string, containing Python Unicode escapes.
    seq:
      - id: val
        type: str
        encoding: ascii
        terminator: 0x0a # "\\n"

  floatnl:
    doc: |
      Double float, encoded with the ASCII characters [0-9.e+-], '-inf', 'inf',
      or 'nan'.
    seq:
      - id: val
        type: str
        encoding: ascii
        terminator: 0x0a # "\\n"

  long1:
    doc: |
      Large signed integer, in the range -2**(8*255-1) to 2**(8*255-1)-1,
      encoded as two's complement.
    seq:
      - id: len
        type: u1
      - id: val
        size: len

  long4:
    doc: |
      Large signed integer, in the range -2**(8*2**32-1) to 2**(8*2**32-1)-1,
      encoded as two's complement.
    seq:
      - id: len
        type: u4
      - id: val
        size: len

  string1:
    doc: |
      Length prefixed string, between 0 and 255 bytes long. Encoding is
      unspecified.

      The default Python 2.x string type (\`str\`) is a sequence of bytes.
      These are pickled as \`string1\` or \`string4\`, when protocol == 2.
      The bytes are written directly, no explicit encoding is performed.

      Python 3.x will not pickle an object as \`string1\` or \`string4\`.
      Instead, opcodes and types with a known encoding are used.
      When unpickling

      - \`pickle.Unpickler\` objects default to ASCII, which can be overriden
      - \`pickletools.dis\` uses latin1, and cannot be overriden
    doc-ref: https://github.com/python/cpython/blob/bb8071a4cae/Lib/pickle.py#L486-L495
    seq:
      - id: len
        type: u1
      - id: val
        size: len

  string4:
    doc: |
      Length prefixed string, between 0 and 2**31-1 bytes long. Encoding is
      unspecified.

      Although the len field is signed, any length < 0 will raise an exception
      during unpickling.

      See the documentation for \`string1\` for further detail about encodings.
    doc-ref: https://github.com/python/cpython/blob/bb8071a4cae/Lib/pickle.py#L486-L495
    seq:
      - id: len
        # Not a typo, the length really is a signed integer
        type: s4
      - id: val
        size: len

  bytes1:
    doc: Length prefixed byte string, between 0 and 255 bytes long.
    seq:
      - id: len
        type: u1
      - id: val
        size: len

  bytes4:
    doc: Length prefixed string, between 0 and 2**32-1 bytes long
    seq:
      - id: len
        type: u4
      - id: val
        size: len

  bytes8:
    doc: |
      Length prefixed string, between 0 and 2**64-1 bytes long.

      Only a 64-bit build of Python would produce a pickle containing strings
      large enough to need this type. Such a pickle could not be unpickled on
      a 32-bit build of Python, because the string would be larger than
      \`sys.maxsize\`.
    seq:
      - id: len
        type: u8
      - id: val
        size: len

  bytearray8:
    doc: |
      Length prefixed string, between 0 and 2**64-1 bytes long.

      The contents are deserilised into a \`bytearray\` object.
    seq:
      - id: len
        type: u8
      - id: val
        size: len

  unicodestring1:
    doc: Length prefixed string, between 0 and 255 bytes long
    seq:
      - id: len
        type: u1
      - id: val
        type: str
        encoding: utf8
        size: len

  unicodestring4:
    doc: Length prefixed string, between 0 and 2**32-1 bytes long
    seq:
      - id: len
        type: u4
      - id: val
        type: str
        encoding: utf8
        size: len

  unicodestring8:
    doc: |
      Length prefixed string, between 0 and 2**64-1 bytes long.

      Only a 64-bit build of Python would produce a pickle containing strings
      large enough to need this type. Such a pickle could not be unpickled on
      a 32-bit build of Python, because the string would be larger than
      \`sys.maxsize\`.
    seq:
      - id: len
        type: u8
      - id: val
        type: str
        encoding: utf8
        size: len

  no_arg:
    doc: Some opcodes take no argument, this empty type is used for them.

enums:
  opcode:
    0x28: # "("
      id: "mark"
      -orig-id: MARK
      doc: push special markobject on stack
    0x2e: # "."
      id: "stop"
      -orig-id: STOP
      doc: every pickle ends with STOP
    0x30: # "0"
      id: "pop"
      -orig-id: POP
      doc: discard topmost stack item
    0x31: # "1"
      id: "pop_mark"
      -orig-id: POP_MARK
      doc: discard stack top through topmost markobject
    0x32: # "2"
      id: "dup"
      -orig-id: DUP
      doc: duplicate top stack item
    0x46: # "F"
      id: "float"
      -orig-id: FLOAT
      doc: push float object; decimal string argument
    0x49: # "I"
      id: "int"
      -orig-id: INT
      doc: push integer or bool; decimal string argument
    0x4a: # "J"
      id: "binint"
      -orig-id: BININT
      doc: push four-byte signed int
    0x4b: # "K"
      id: "binint1"
      -orig-id: BININT1
      doc: push 1-byte unsigned int
    0x4c: # "L"
      id: "long"
      -orig-id: LONG
      doc: push long; decimal string argument
    0x4d: # "M"
      id: "binint2"
      -orig-id: BININT2
      doc: push 2-byte unsigned int
    0x4e: # "N"
      id: "none"
      -orig-id: NONE
      doc: push None
    0x50: # "P"
      id: "persid"
      -orig-id: PERSID
      doc: push persistent object; id is taken from string arg
    0x51: # "Q"
      id: "binpersid"
      -orig-id: BINPERSID
      doc: push persistent object; id is taken from stack
    0x52: # "R"
      id: "reduce"
      -orig-id: REDUCE
      doc: apply callable to argtuple, both on stack
    0x53: # "S"
      id: "string"
      -orig-id: STRING
      doc: push string; NL-terminated string argument
    0x54: # "T"
      id: "binstring"
      -orig-id: BINSTRING
      doc: push string; counted binary string argument
    0x55: # "U"
      id: "short_binstring"
      -orig-id: SHORT_BINSTRING
      doc: push string; counted binary string argument 256 bytes
    0x56: # "V"
      id: "unicode"
      -orig-id: UNICODE
      doc: push Unicode string; raw-unicode-escaped argument
    0x58: # "X"
      id: "binunicode"
      -orig-id: BINUNICODE
      doc: push Unicode string; counted UTF-8 string argument
    0x61: # "a"
      id: "append"
      -orig-id: APPEND
      doc: append stack top to list below it
    0x62: # "b"
      id: "build"
      -orig-id: BUILD
      doc: call __setstate__ or __dict__.update()
    0x63: # "c"
      id: "global_opcode"
      -orig-id: GLOBAL
      -affected-by: 90
      doc: |
        push self.find_class(modname, name); 2 string args

        As of KSC 0.9, this enum key can't be called \`global\` because it would
        cause a syntax error in Python (it is a keyword).
    0x64: # "d"
      id: "dict"
      -orig-id: DICT
      doc: build a dict from stack items
    0x7d: # "}"
      id: "empty_dict"
      -orig-id: EMPTY_DICT
      doc: push empty dict
    0x65: # "e"
      id: "appends"
      -orig-id: APPENDS
      doc: extend list on stack by topmost stack slice
    0x67: # "g"
      id: "get"
      -orig-id: GET
      doc: push item from memo on stack; index is string arg
    0x68: # "h"
      id: "binget"
      -orig-id: BINGET
      doc: push item from memo on stack; index is 1-byte arg
    0x69: # "i"
      id: "inst"
      -orig-id: INST
      doc: build & push class instance
    0x6a: # "j"
      id: "long_binget"
      -orig-id: LONG_BINGET
      doc: push item from memo on stack; index is 4-byte arg
    0x6c: # "l"
      id: "list"
      -orig-id: LIST
      doc: build list from topmost stack items
    0x5d: # "]"
      id: "empty_list"
      -orig-id: EMPTY_LIST
      doc: push empty list
    0x6f: # "o"
      id: "obj"
      -orig-id: OBJ
      doc: build & push class instance
    0x70: # "p"
      id: "put"
      -orig-id: PUT
      doc: store stack top in memo; index is string arg
    0x71: # "q"
      id: "binput"
      -orig-id: BINPUT
      doc: store stack top in memo; index is 1-byte arg
    0x72: # "r"
      id: "long_binput"
      -orig-id: LONG_BINPUT
      doc: store stack top in memo; index is 4-byte arg
    0x73: # "s"
      id: "setitem"
      -orig-id: SETITEM
      doc: add key+value pair to dict
    0x74: # "t"
      id: "tuple"
      -orig-id: TUPLE
      doc: build tuple from topmost stack items
    0x29: # ")"
      id: "empty_tuple"
      -orig-id: EMPTY_TUPLE
      doc: push empty tuple
    0x75: # "u"
      id: "setitems"
      -orig-id: SETITEMS
      doc: modify dict by adding topmost key+value pairs
    0x47: # "G"
      id: "binfloat"
      -orig-id: BINFLOAT
      doc: push float; arg is 8-byte float encoding

    # Protocol 2
    0x80:
      id: "proto"
      -orig-id: PROTO
      doc: identify pickle protocol
    0x81:
      id: "newobj"
      -orig-id: NEWOBJ
      doc: build object by applying cls.__new__ to argtuple
    0x82:
      id: "ext1"
      -orig-id: EXT1
      doc: push object from extension registry; 1-byte index
    0x83:
      id: "ext2"
      -orig-id: EXT2
      doc: ditto, but 2-byte index
    0x84:
      id: "ext4"
      -orig-id: EXT4
      doc: ditto, but 4-byte index
    0x85:
      id: "tuple1"
      -orig-id: TUPLE1
      doc: build 1-tuple from stack top
    0x86:
      id: "tuple2"
      -orig-id: TUPLE2
      doc: build 2-tuple from two topmost stack items
    0x87:
      id: "tuple3"
      -orig-id: TUPLE3
      doc: build 3-tuple from three topmost stack items
    0x88:
      id: "newtrue"
      -orig-id: NEWTRUE
      doc: push True
    0x89:
      id: "newfalse"
      -orig-id: NEWFALSE
      doc: push False
    0x8a:
      id: "long1"
      -orig-id: LONG1
      doc: push long from < 256 bytes
    0x8b:
      id: "long4"
      -orig-id: LONG4
      doc: push really big long

    # Protocol 3 (Python 3.x)
    0x42: # "B"
      id: "binbytes"
      -orig-id: BINBYTES
      doc: push bytes; counted binary string argument
    0x43: # "C"
      id: "short_binbytes"
      -orig-id: SHORT_BINBYTES
      doc: push bytes; counted binary string argument < 256 bytes

    # Protocol 4
    0x8c:
      id: "short_binunicode"
      -orig-id: SHORT_BINUNICODE
      doc: push short string; UTF-8 length < 256 bytes
    0x8d:
      id: "binunicode8"
      -orig-id: BINUNICODE8
      doc: push very long string
    0x8e:
      id: "binbytes8"
      -orig-id: BINBYTES8
      doc: push very long bytes string
    0x8f:
      id: "empty_set"
      -orig-id: EMPTY_SET
      doc: push empty set on the stack
    0x90:
      id: "additems"
      -orig-id: ADDITEMS
      doc: modify set by adding topmost stack items
    0x91:
      id: "frozenset"
      -orig-id: FROZENSET
      doc: build frozenset from topmost stack items
    0x92:
      id: "newobj_ex"
      -orig-id: NEWOBJ_EX
      doc: like NEWOBJ but work with keyword only arguments
    0x93:
      id: "stack_global"
      -orig-id: STACK_GLOBAL
      doc: same as GLOBAL but using names on the stacks
    0x94:
      id: "memoize"
      -orig-id: MEMOIZE
      doc: store top of the stack in memo
    0x95:
      id: "frame"
      -orig-id: FRAME
      doc: indicate the beginning of a new frame

    # Protocol 5
    0x96:
      id: "bytearray8"
      -orig-id: "BYTEARRAY8"
      doc: push bytearray
    0x97:
      id: "next_buffer"
      -orig-id: "NEXT_BUFFER"
      doc: push next out-of-band buffer
    0x98:
      id: "readonly_buffer"
      -orig-id: "READONLY_BUFFER"
      doc: make top of stack readonly
`
  },
  {
    id: "ksy_ruby_marshal",
    name: "Ruby Marshal",
    category: "Serialization",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "",
      originalCategory: "serialization",
      filePath: "serialization/ruby_marshal.ksy",
      signature: {"offset":0,"bytes":[4,8]},
      endian: "le"
    },
    content: `meta:
  id: ruby_marshal
  license: CC0-1.0
  endian: le
doc: |
  Ruby's Marshal module allows serialization and deserialization of
  many standard and arbitrary Ruby objects in a compact binary
  format. It is relatively fast, available in stdlibs standard and
  allows conservation of language-specific properties (such as symbols
  or encoding-aware strings).

  Feature-wise, it is comparable to other language-specific
  implementations, such as:

  * Java's
    [Serializable](https://docs.oracle.com/javase/8/docs/api/java/io/Serializable.html)
  * .NET
    [BinaryFormatter](https://learn.microsoft.com/en-us/dotnet/api/system.runtime.serialization.formatters.binary.binaryformatter?view=net-7.0)
  * Python's
    [marshal](https://docs.python.org/3/library/marshal.html),
    [pickle](https://docs.python.org/3/library/pickle.html) and
    [shelve](https://docs.python.org/3/library/shelve.html)

  From internal perspective, serialized stream consists of a simple
  magic header and a record.
doc-ref: 'https://docs.ruby-lang.org/en/2.4.0/marshal_rdoc.html#label-Stream+Format'
seq:
  - id: version
    contents: [4, 8]
  - id: records
    type: record
types:
  record:
    doc: |
      Each record starts with a single byte that determines its type
      (\`code\`) and contents. If necessary, additional info as parsed
      as \`body\`, to be determined by \`code\`.
    seq:
      - id: code
        type: u1
        enum: codes
      - id: body
        type:
          switch-on: code
          cases:
            'codes::bignum': bignum
            'codes::instance_var': instance_var
            'codes::packed_int': packed_int
            'codes::ruby_array': ruby_array
            'codes::ruby_hash': ruby_hash
            'codes::ruby_string': ruby_string
            'codes::ruby_struct': ruby_struct
            'codes::ruby_symbol': ruby_symbol
            'codes::ruby_symbol_link': packed_int
            'codes::ruby_object_link': packed_int
  packed_int:
    doc: |
      Ruby uses sophisticated system to pack integers: first \`code\`
      byte either determines packing scheme or carries encoded
      immediate value (thus allowing smaller values from -123 to 122
      (inclusive) to take only one byte. There are 11 encoding schemes
      in total:

      * 0 is encoded specially (as 0)
      * 1..122 are encoded as immediate value with a shift
      * 123..255 are encoded with code of 0x01 and 1 extra byte
      * 0x100..0xffff are encoded with code of 0x02 and 2 extra bytes
      * 0x10000..0xffffff are encoded with code of 0x03 and 3 extra
        bytes
      * 0x1000000..0xffffffff are encoded with code of 0x04 and 4
        extra bytes
      * -123..-1 are encoded as immediate value with another shift
      * -256..-124 are encoded with code of 0xff and 1 extra byte
      * -0x10000..-257 are encoded with code of 0xfe and 2 extra bytes
      * -0x1000000..0x10001 are encoded with code of 0xfd and 3 extra
         bytes
      * -0x40000000..-0x1000001 are encoded with code of 0xfc and 4
         extra bytes

      Values beyond that are serialized as bignum (even if they
      technically might be not Bignum class in Ruby implementation,
      i.e. if they fit into 64 bits on a 64-bit platform).
    doc-ref: 'https://docs.ruby-lang.org/en/2.4.0/marshal_rdoc.html#label-Fixnum+and+long'
    seq:
      - id: code
        type: u1
      - id: encoded
        type:
          switch-on: code
          cases:
            # 0x00: none
            0x01: u1
            0x02: u2
            0x03: u2
            0x04: u4
            0xff: u1
            0xfe: u2
            0xfd: u2
            0xfc: u4
      - id: encoded2
        type:
          switch-on: code
          cases:
            0x03: u1
            0xfd: u1
        doc: |
          One extra byte for 3-byte integers (0x03 and 0xfd), as
          there is no standard \`u3\` type in KS.
    instances:
      is_immediate:
        value: code > 4 and code < 0xfc
      value:
        value: >
          is_immediate ? (code < 0x80 ? code - 5 : (4 - (~code & 0x7f))) :
          code == 0 ? 0 :
          code == 0xff ? (encoded - 0x100) :
          code == 0xfe ? (encoded - 0x10000) :
          code == 0xfd ? ((encoded2 << 16 | encoded) - 0x1000000) :
          code == 0x03 ? (encoded2 << 16 | encoded) :
          encoded
  ruby_symbol:
    doc-ref: 'https://docs.ruby-lang.org/en/2.4.0/marshal_rdoc.html#label-Symbols+and+Byte+Sequence'
    seq:
      - id: len
        type: packed_int
      - id: name
        size: len.value
        type: str
        encoding: UTF-8
  ruby_string:
    doc-ref: 'https://docs.ruby-lang.org/en/2.4.0/marshal_rdoc.html#label-String'
    seq:
      - id: len
        type: packed_int
      - id: body
        size: len.value
  ruby_array:
    seq:
      - id: num_elements
        type: packed_int
      - id: elements
        type: record
        repeat: expr
        repeat-expr: num_elements.value
  ruby_hash:
    doc-ref: 'https://docs.ruby-lang.org/en/2.4.0/marshal_rdoc.html#label-Hash+and+Hash+with+Default+Value'
    seq:
      - id: num_pairs
        type: packed_int
      - id: pairs
        type: pair
        repeat: expr
        repeat-expr: num_pairs.value
  bignum:
    doc-ref: 'https://docs.ruby-lang.org/en/2.4.0/marshal_rdoc.html#label-Bignum'
    seq:
      - id: sign
        type: u1
        doc: A single byte containing \`+\` for a positive value or \`-\` for a negative value.
      - id: len_div_2
        type: packed_int
        doc: Length of bignum body, divided by 2.
      - id: body
        size: len_div_2.value * 2
        doc: Bytes that represent the number, see ruby-lang.org docs for reconstruction algorithm.
  ruby_struct:
    doc-ref: 'https://docs.ruby-lang.org/en/2.4.0/marshal_rdoc.html#label-Struct'
    seq:
      - id: name
        type: record
        doc: Symbol containing the name of the struct.
      - id: num_members
        type: packed_int
        doc: Number of members in a struct
      - id: members
        type: pair
        repeat: expr
        repeat-expr: num_members.value
  instance_var:
    doc-ref: 'https://docs.ruby-lang.org/en/2.4.0/marshal_rdoc.html#label-Instance+Variables'
    seq:
      - id: obj
        type: record
      - id: num_vars
        type: packed_int
      - id: vars
        type: pair
        repeat: expr
        repeat-expr: num_vars.value
  pair:
    seq:
      - id: key
        type: record
      - id: value
        type: record
enums:
  codes:
    0x22: ruby_string
    0x30: const_nil
    0x3a: ruby_symbol
    0x3b: ruby_symbol_link
    0x40: ruby_object_link
    0x46: const_false
    0x49: instance_var
    0x53: ruby_struct
    0x54: const_true
    0x5b: ruby_array
    0x69: packed_int
    0x6c: bignum
    0x7b: ruby_hash
`
  },
  {
    id: "ksy_regf",
    name: "Windows registry database",
    category: "Windows",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Windows registry database",
      originalCategory: "windows",
      filePath: "windows/regf.ksy",
      endian: "le"
    },
    content: `meta:
  id: regf
  title: Windows registry database
  application: Windows NT and later
  xref:
    justsolve: Windows_Registry
    forensicswiki: windows_nt_registry_file_(regf)
    wikidata: Q463244
  license: CC0-1.0
  endian: le
doc: |
  This spec allows to parse files used by Microsoft Windows family of
  operating systems to store parts of its "registry". "Registry" is a
  hierarchical database that is used to store system settings (global
  configuration, per-user, per-application configuration, etc).

  Typically, registry files are stored in:

  * System-wide: several files in \`%SystemRoot%\\System32\\Config\\\`
  * User-wide:
    * \`%USERPROFILE%\\Ntuser.dat\`
    * \`%USERPROFILE%\\Local Settings\\Application Data\\Microsoft\\Windows\\Usrclass.dat\` (localized, Windows 2000, Server 2003 and Windows XP)
    * \`%USERPROFILE%\\AppData\\Local\\Microsoft\\Windows\\Usrclass.dat\` (non-localized, Windows Vista and later)

  Note that one typically can't access files directly on a mounted
  filesystem with a running Windows OS.
doc-ref: 'https://github.com/libyal/libregf/blob/main/documentation/Windows%20NT%20Registry%20File%20(REGF)%20format.asciidoc'
seq:
  - id: header
    type: file_header
  - id: hive_bins
    type: hive_bin
    size: 4096
    repeat: eos
types:
  file_header:
    seq:
      - id: signature
        contents: "regf"
      - id: primary_sequence_number # Matches the secondary sequence number if the hive was properly synchronized
        type: u4
      - id: secondary_sequence_number # Matches the primary sequence number if the hive was properly synchronized
        type: u4
      - id: last_modification_date_and_time # Contains a FILETIME in UTC
        type: filetime
      - id: major_version
        type: u4
      - id: minor_version
        type: u4
      - id: type
        type: u4
        enum: file_type
      - id: format
        type: u4
        enum: file_format
      - id: root_key_offset
        type: u4
      - id: hive_bins_data_size
        type: u4
      - id: clustering_factor # Logical sector size of the underlying disk in bytes divided by 512
        type: u4
      - id: unknown1 # Sometimes contains the last part of the filename in UTF-16 LE most of the time with an end-of-string character, but not always. Unused bytes are 0.
        size: 64
      - id: unknown2 # Can contain remnant data, Padding used for the checksum?
        size: 396
      - id: checksum # XOR-32 of the previous 508 bytes
        type: u4
      - id: reserved
        size: 3576
      - id: boot_type # This field has no meaning on a disk
        type: u4
      - id: boot_recover # This field has no meaning on a disk
        type: u4
    enums:
      file_type:
        0: normal
        1: transaction_log
      file_format:
        1: direct_memory_load
  hive_bin_header:
    seq:
      - id: signature
        contents: "hbin"
      - id: offset
        type: u4
        doc: |
          The offset of the hive bin, Value in bytes and relative from
          the start of the hive bin data
      - id: size
        type: u4
        doc: Size of the hive bin
      - id: unknown1
        type: u4
        doc: 0 most of the time, can contain remnant data
      - id: unknown2
        type: u4
        doc: 0 most of the time, can contain remnant data
      - id: timestamp
        type: filetime
        doc: Only the root (first) hive bin seems to contain a valid FILETIME
      - id: unknown4
        type: u4
        doc: Contains number of bytes
  hive_bin_cell:
    -webide-representation: "{identifier}"
    seq:
      - id: cell_size_raw
        type: s4
      - id: identifier
        type: str
        size: 2
        encoding: ascii
      - id: data
        size: cell_size - 2 - 4
        type:
          switch-on: identifier
          cases:
            "'nk'": named_key
            "'lh'": sub_key_list_lh_lf
            "'lf'": sub_key_list_lh_lf
            "'li'": sub_key_list_li
            "'ri'": sub_key_list_ri
            "'vk'": sub_key_list_vk
            "'sk'": sub_key_list_sk
    instances:
      cell_size:
        value: "(cell_size_raw < 0 ? -1 : +1) * cell_size_raw"
        -webide-parse-mode: eager
      is_allocated:
        value: "cell_size_raw < 0"
        -webide-parse-mode: eager
    types:
      named_key:
        seq:
          - id: flags
            type: u2
            enum: nk_flags
          - id: last_key_written_date_and_time
            type: filetime
          - id: unknown1 # empty value
            type: u4
          - id: parent_key_offset # The offset value is in bytes and relative from the start of the hive bin data
            type: u4
          - id: number_of_sub_keys
            type: u4
          - id: number_of_volatile_sub_keys # The offset value is in bytes and relative from the start of the hive bin data / Refers to a sub keys list or contains -1 (0xffffffff) if empty.
            type: u4
          - id: sub_keys_list_offset # The offset value is in bytes and relative from the start of the hive bin data / Refers to a sub keys list or contains -1 (0xffffffff) if empty.
            type: u4
          - id: number_of_values
            type: u4
          - id: values_list_offset
            type: u4
          - id: security_key_offset
            type: u4
          - id: class_name_offset
            type: u4
          - id: largest_sub_key_name_size
            type: u4
          - id: largest_sub_key_class_name_size
            type: u4
          - id: largest_value_name_size
            type: u4
          - id: largest_value_data_size
            type: u4
          - id: unknown2 # Some run-time caching index or hash?
            type: u4
          - id: key_name_size
            type: u2
          - id: class_name_size
            type: u2
          - id: unknown_string_size
            type: u4
          - id: unknown_string
            type: str
            size: unknown_string_size
            encoding: ascii
        enums:
          nk_flags:
            0x0001: key_is_volatile   # Is volatile key
            0x0002: key_hive_exit     # Is mount point (of another Registry hive)
            0x0004: key_hive_entry    # Is root key (of current Registry hive)
            0x0008: key_no_delete     # Cannot be deleted
            0x0010: key_sym_link      # Is symbolic link key
            0x0020: key_comp_name     # Name is an ASCII string / Otherwise the name is a Unicode (UTF-16 little-endian) string
            0x0040: key_prefef_handle # Is predefined handle
            0x0080: key_virt_mirrored # Unknown
            0x0100: key_virt_target   # Unknown
            0x0200: key_virtual_store # Unknown
            0x1000: unknown1
            0x4000: unknown2
      sub_key_list_lh_lf:
        seq:
          - id: count
            type: u2
          - id: items
            type: item
            repeat: expr
            repeat-expr: count
        types:
          item:
            seq:
              - id: named_key_offset # The offset value is in bytes and relative from the start of the hive bin data
                type: u4
              - id: hash_value # A different hash function is used for different sub key list types
                type: u4
      sub_key_list_li:
        seq:
          - id: count
            type: u2
          - id: items
            type: item
            repeat: expr
            repeat-expr: count
        types:
          item:
            seq:
              - id: named_key_offset # The offset value is in bytes and relative from the start of the hive bin data
                type: u4
      sub_key_list_ri:
        seq:
          - id: count
            type: u2
          - id: items
            type: item
            repeat: expr
            repeat-expr: count
        types:
          item:
            seq:
              - id: sub_key_list_offset # The offset value is in bytes and relative from the start of the hive bin data
                type: u4
      sub_key_list_vk:
        seq:
          - id: value_name_size # If the value name size is 0 the value name is "(default)"
            type: u2
          - id: data_size
            type: u4
          - id: data_offset # The offset value is in bytes and relative from the start of the hive bin data.
            type: u4
          - id: data_type
            type: u4
            enum: data_type_enum
          - id: flags
            type: u2
            enum: vk_flags
          - id: padding # unknown
            type: u2
          - id: value_name
            size: value_name_size
            type: str
            encoding: ascii
            if: "flags == vk_flags::value_comp_name"
        enums:
          data_type_enum:
            0x00000000: reg_none # Undefined type
            0x00000001: reg_sz # String / [MSDN] states that this is either in ASCII or Unicode with an end-of-string character / Although the string seems to be always stored as UTF-16 little-endian and sometimes the end-of-string character is not included. / Also see: Corruption scenarios
            0x00000002: reg_expand_sz # String that contains expandable (environment) variables like %PATH% / Either in ASCII or Unicode with an end-of-string character
            0x00000003: reg_binary # binary_data
            0x00000004: reg_dword # REG_DWORD_LITTLE_ENDIAN: 32-bit integer (double word) little-endian
            0x00000005: reg_dword_big_endian # Integer 32-bit signed big-endian (double word)
            0x00000006: reg_link # String that contains a symbolic link / Either in ASCII or Unicode with an end-of-string character
            0x00000007: reg_multi_sz # Array of strings / Either in ASCII or Unicode with an end-of-string character
            0x00000008: reg_resource_list # Resource list
            0x00000009: reg_full_resource_descriptor # Full resource descriptor
            0x0000000a: reg_resource_requirements_list # Resource requirements list
            0x0000000b: reg_qword # REG_QWORD_LITTLE_ENDIAN: Integer 64-bit signed little-endian (quad word)
          vk_flags:
            0x0001: value_comp_name # Name is an ASCII string / Otherwise the name is an Unicode (UTF-16 little-endian) string
      sub_key_list_sk:
        seq:
          - id: unknown1
            type: u2
          - id: previous_security_key_offset
            type: u4
          - id: next_security_key_offset
            type: u4
          - id: reference_count
            type: u4
  hive_bin:
    seq:
      - id: header
        type: hive_bin_header
      - id: cells
        type: hive_bin_cell
        repeat: eos
  filetime:
    seq:
      - id: value
        type: u8
    -webide-representation: "{value}"
`
  },
  {
    id: "ksy_windows_lnk_file",
    name: "Windows shell link file",
    category: "Windows",
    metadata: {
      isGenerated: true,
      fileExtensions: ["lnk"],
      description: "Windows shell link file",
      originalCategory: "windows",
      filePath: "windows/windows_lnk_file.ksy",
      endian: "le"
    },
    content: `meta:
  id: windows_lnk_file
  title: Windows shell link file
  file-extension: lnk
  xref:
    forensicswiki: lnk
    justsolve: Windows_Shortcut
    mime: application/x-ms-shortcut
    pronom: x-fmt/428
    wikidata: Q29000599
  license: CC0-1.0
  imports:
    - windows_shell_items
  encoding: cp437
  endian: le
doc: |
  Windows .lnk files (AKA "shell link" file) are most frequently used
  in Windows shell to create "shortcuts" to another files, usually for
  purposes of running a program from some other directory, sometimes
  with certain preconfigured arguments and some other options.
doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf'
seq:
  - id: header
    type: file_header
  - id: target_id_list
    type: link_target_id_list
    if: header.flags.has_link_target_id_list
  - id: info
    type: link_info
    if: header.flags.has_link_info
  - id: name
    -orig-id: NAME_STRING
    type: string_data
    if: header.flags.has_name
  - id: rel_path
    -orig-id: RELATIVE_PATH
    type: string_data
    if: header.flags.has_rel_path
  - id: work_dir
    -orig-id: WORKING_DIR
    type: string_data
    if: header.flags.has_work_dir
  - id: arguments
    -orig-id: COMMAND_LINE_ARGUMENTS
    type: string_data
    if: header.flags.has_arguments
  - id: icon_location
    -orig-id: ICON_LOCATION
    type: string_data
    if: header.flags.has_icon_location
types:
  file_header:
    -orig-id: ShellLinkHeader
    doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.1'
    seq:
      - id: len_header
        -orig-id: HeaderSize
        contents: [0x4c, 0, 0, 0]
        doc: |
          Technically, a size of the header, but in reality, it's
          fixed by standard.
      - id: link_clsid
        contents: [0x01, 0x14, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46]
        doc: |
          16-byte class identified (CLSID), reserved for Windows shell
          link files.
      - id: flags
        -orig-id: LinkFlags
        type: link_flags
        size: 4
      - id: file_attrs
        type: u4
      - id: time_creation
        -orig-id: CreationTime
        type: u8
      - id: time_access
        -orig-id: AccessTime
        type: u8
      - id: time_write
        -orig-id: WriteTime
        type: u8
      - id: target_file_size
        -orig-id: FileSize
        type: u4
        doc: Lower 32 bits of the size of the file that this link targets
      - id: icon_index
        -orig-id: IconIndex
        type: s4
        doc: Index of an icon to use from target file
      - id: show_command
        -orig-id: ShowCommand
        type: u4
        enum: window_state
        doc: Window state to set after the launch of target executable
      - id: hotkey
        type: u2
      - id: reserved
        contents: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
  link_flags:
    doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.1.1'
    seq:
      # Byte #0
      - id: is_unicode
        -orig-id: IsUnicode (H)
        type: b1
      - id: has_icon_location
        -orig-id: HasIconLocation (G)
        type: b1
      - id: has_arguments
        -orig-id: HasArguments (F)
        type: b1
      - id: has_work_dir
        -orig-id: HasWorkingDir (E)
        type: b1
      - id: has_rel_path
        -orig-id: HasRelativePath (D)
        type: b1
      - id: has_name
        -orig-id: HasName (C)
        type: b1
      - id: has_link_info
        -orig-id: HasLinkInfo (B)
        type: b1
      - id: has_link_target_id_list
        -orig-id: HasLinkTargetIDList (A)
        type: b1
      # Byte #1, 2
      - type: b16
      # Byte #3
      - id: reserved
        type: b5
      - id: keep_local_id_list_for_unc_target
        -orig-id: KeepLocalIDListForUNCTarget (AA)
        type: b1
      - type: b2
  link_target_id_list:
    -orig-id: LinkTargetIDList
    doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.2'
    seq:
      - id: len_id_list
        -orig-id: IDListSize
        type: u2
      - id: id_list
        -orig-id: IDList
        size: len_id_list
        type: windows_shell_items
  link_info:
    -orig-id: LinkInfo
    doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.3'
    seq:
      - id: len_all
        -orig-id: LinkInfoSize
        type: u4
      - id: all
        size: len_all - 4
        type: all
    types:
      all:
        doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.3'
        seq:
          - id: len_header
            -orig-id: LinkInfoHeaderSize
            type: u4
          - id: header
            size: len_header - 8 # LinkInfoSize and LinkInfoHeaderSize
            type: header
        instances:
          volume_id:
            -orig-id: VolumeID
            pos: header.ofs_volume_id - 4
            type: volume_id_spec
            if: header.flags.has_volume_id_and_local_base_path
          local_base_path:
            -orig-id: LocalBasePath
            pos: header.ofs_local_base_path - 4
            terminator: 0
            if: header.flags.has_volume_id_and_local_base_path
      header:
        doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.3'
        seq:
          - id: flags
            -orig-id: LinkInfoFlags
            type: link_info_flags
          - id: ofs_volume_id
            -orig-id: VolumeIDOffset
            type: u4
          - id: ofs_local_base_path
            -orig-id: LocalBasePathOffset
            type: u4
          - id: ofs_common_net_rel_link
            -orig-id: CommonNetworkRelativeLinkOffset
            type: u4
          - id: ofs_common_path_suffix
            -orig-id: CommonPathSuffixOffset
            type: u4
          - id: ofs_local_base_path_unicode
            -orig-id: LocalBasePathOffsetUnicode
            type: u4
            if: not _io.eof
          - id: ofs_common_path_suffix_unicode
            -orig-id: CommonPathSuffixOffsetUnicode
            type: u4
            if: not _io.eof
      link_info_flags:
        -orig-id: LinkInfoFlags
        doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.3'
        seq:
          - id: reserved1
            type: b6
          - id: has_common_net_rel_link
            -orig-id: CommonNetworkRelativeLinkAndPathSuffix (B)
            type: b1
          - id: has_volume_id_and_local_base_path
            -orig-id: VolumeIDAndLocalBasePath (A)
            type: b1
          - id: reserved2
            type: b24
      volume_id_spec:
        -orig-id: VolumeID
        doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.3.1'
        seq:
          - id: len_all
            -orig-id: VolumeIDSize
            type: u4
          - id: body
            size: len_all - 4
            type: volume_id_body
      volume_id_body:
        -orig-id: VolumeID
        doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.3.1'
        seq:
          - id: drive_type
            -orig-id: DriveType
            type: u4
            enum: drive_types
          - id: drive_serial_number
            -orig-id: DriveSerialNumber
            type: u4
          - id: ofs_volume_label
            -orig-id: VolumeLabelOffset
            type: u4
          - id: ofs_volume_label_unicode
            -orig-id: VolumeLabelOffsetUnicode
            type: u4
            if: is_unicode
        instances:
          is_unicode:
            value: ofs_volume_label == 0x14
          volume_label_ansi:
            pos: ofs_volume_label - 4
            type: strz
            if: not is_unicode
  string_data:
    seq:
      - id: chars_str
        -orig-id: CountCharacters
        type: u2
      - id: str
        size: chars_str * 2
        type: str
        encoding: UTF-16LE
enums:
  window_state:
    1: normal
    3: maximized
    7: min_no_active
  drive_types:
    0: unknown
    1: no_root_dir
    2: removable
    3: fixed
    4: remote
    5: cdrom
    6: ramdisk
`
  },
  {
    id: "ksy_windows_minidump",
    name: "Windows MiniDump",
    category: "Windows",
    metadata: {
      isGenerated: true,
      fileExtensions: ["dmp","mdmp"],
      description: "Windows MiniDump",
      originalCategory: "windows",
      filePath: "windows/windows_minidump.ksy",
      signature: {"offset":0,"bytes":[77,68,77,80]},
      endian: "le"
    },
    content: `meta:
  id: windows_minidump
  title: Windows MiniDump
  file-extension:
    - dmp
    - mdmp
  license: CC0-1.0
  endian: le
doc: |
  Windows MiniDump (MDMP) file provides a concise way to store process
  core dumps, which is useful for debugging. Given its small size,
  modularity, some cross-platform features and native support in some
  debuggers, it is particularly useful for crash reporting, and is
  used for that purpose in Windows and Google Chrome projects.

  The file itself is a container, which contains a number of typed
  "streams", which contain some data according to its type attribute.
doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_header
# https://github.com/libyal/libmdmp/blob/main/documentation/Minidump%20(MDMP)%20format.asciidoc
seq:
  - id: magic1
    -orig-id: Signature
    contents: MDMP
  - id: magic2
    -orig-id: Version
    contents: [0x93, 0xa7]
  - id: version
    -orig-id: Version
    type: u2
  - id: num_streams
    -orig-id: NumberOfStreams
    type: u4
  - id: ofs_streams
    -orig-id: StreamDirectoryRva
    type: u4
  - id: checksum
    -orig-id: CheckSum
    type: u4
  - id: timestamp
    -orig-id: TimeDateStamp
    type: u4
  - id: flags
    type: u8
instances:
  streams:
    pos: ofs_streams
    type: dir
    repeat: expr
    repeat-expr: num_streams
types:
  dir:
    -orig-id: MINIDUMP_DIRECTORY
    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_directory
    seq:
      - id: stream_type
        -orig-id: StreamType
        type: u4
        enum: stream_types
      - id: len_data
        -orig-id: DataSize
        type: u4
        doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_location_descriptor
      - id: ofs_data
        type: u4
        -orig-id: Rva
    instances:
      data:
        pos: ofs_data
        size: len_data
        type:
          switch-on: stream_type
          cases:
            'stream_types::system_info': system_info
            'stream_types::misc_info': misc_info
            'stream_types::thread_list': thread_list
            'stream_types::memory_list': memory_list
            'stream_types::exception': exception_stream
            # TODO: support more stream types
  system_info:
    doc: |
      "System info" stream provides basic information about the
      hardware and operating system which produces this dump.
    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_system_info
    seq:
      - id: cpu_arch
        -orig-id: ProcessorArchitecture
        type: u2
        enum: cpu_archs
      - id: cpu_level
        -orig-id: ProcessorLevel
        type: u2
      - id: cpu_revision
        -orig-id: ProcessorRevision
        type: u2
      - id: num_cpus
        -orig-id: NumberOfProcessors
        type: u1
      - id: os_type
        -orig-id: ProductType
        type: u1
      - id: os_ver_major
        -orig-id: MajorVersion
        type: u4
      - id: os_ver_minor
        -orig-id: MinorVersion
        type: u4
      - id: os_build
        -orig-id: BuildNumber
        type: u4
      - id: os_platform
        -orig-id: PlatformId
        type: u4
      - id: ofs_service_pack
        -orig-id: CSDVersionRva
        type: u4
      - id: os_suite_mask
        type: u2
      - id: reserved2
        type: u2
      # TODO: the rest of CPU information
    instances:
      service_pack:
        io: _root._io
        pos: ofs_service_pack
        type: minidump_string
        if: ofs_service_pack > 0
    enums:
      cpu_archs:
        0: intel
        5: arm
        6: ia64
        9: amd64
        0xffff: unknown
  misc_info:
    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_misc_info
    # https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_misc_info_2
    seq:
      - id: len_info
        -orig-id: SizeOfInfo
        type: u4
      - id: flags1
        -orig-id: Flags1
        type: u4
      - id: process_id
        -orig-id: ProcessId
        type: u4
      - id: process_create_time
        -orig-id: ProcessCreateTime
        type: u4
      - id: process_user_time
        -orig-id: ProcessUserTime
        type: u4
      - id: process_kernel_time
        -orig-id: ProcessKernelTime
        type: u4
      - id: cpu_max_mhz
        -orig-id: ProcessorMaxMhz
        type: u4
      - id: cpu_cur_mhz
        -orig-id: ProcessorCurrentMhz
        type: u4
      - id: cpu_limit_mhz
        -orig-id: ProcessorMhzLimit
        type: u4
      - id: cpu_max_idle_state
        -orig-id: ProcessorMaxIdleState
        type: u4
      - id: cpu_cur_idle_state
        -orig-id: ProcessorCurrentIdleState
        type: u4
  thread_list:
    -orig-id: MINIDUMP_THREAD_LIST
    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_thread_list
    seq:
      - id: num_threads
        -orig-id: NumberOfThreads
        type: u4
      - id: threads
        -orig-id: Threads
        type: thread
        repeat: expr
        repeat-expr: num_threads
  thread:
    -orig-id: MINIDUMP_THREAD
    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_thread
    seq:
      - id: thread_id
        -orig-id: ThreadId
        type: u4
      - id: suspend_count
        -orig-id: SuspendCount
        type: u4
      - id: priority_class
        -orig-id: PriorityClass
        type: u4
      - id: priority
        -orig-id: Priority
        type: u4
      - id: teb
        -orig-id: Teb
        type: u8
        doc: Thread Environment Block
      - id: stack
        -orig-id: Stack
        type: memory_descriptor
      - id: thread_context
        -orig-id: ThreadContext
        type: location_descriptor
  memory_list:
    -orig-id: MINIDUMP_MEMORY_LIST
    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_memory64_list
    seq:
      - id: num_mem_ranges
        type: u4
      - id: mem_ranges
        type: memory_descriptor
        repeat: expr
        repeat-expr: num_mem_ranges
  exception_stream:
    -orig-id: MINIDUMP_EXCEPTION_STREAM
    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_exception_stream
    seq:
      - id: thread_id
        -orig-id: ThreadId
        type: u4
      - id: reserved
        -orig-id: __alignment
        type: u4
      - id: exception_rec
        -orig-id: ExceptionRecord
        type: exception_record
      - id: thread_context
        -orig-id: ThreadContext
        type: location_descriptor
  exception_record:
    -orig-id: MINIDUMP_EXCEPTION
    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_exception
    seq:
      - id: code
        -orig-id: ExceptionCode
        type: u4
      - id: flags
        -orig-id: ExceptionFlags
        type: u4
      - id: inner_exception
        -orig-id: ExceptionRecord
        type: u8
      - id: addr
        -orig-id: ExceptionAddress
        type: u8
        doc: Memory address where exception has occurred
      - id: num_params
        -orig-id: NumberParameters
        type: u4
      - id: reserved
        -orig-id: __unusedAlignment
        type: u4
      - id: params
        -orig-id: ExceptionInformation
        type: u8
        repeat: expr
        repeat-expr: 15
        doc: |
          Additional parameters passed along with exception raise
          function (for WinAPI, that is \`RaiseException\`). Meaning is
          exception-specific. Given that this type is originally
          defined by a C structure, it is described there as array of
          fixed number of elements (\`EXCEPTION_MAXIMUM_PARAMETERS\` =
          15), but in reality only first \`num_params\` would be used.
  memory_descriptor:
    -orig-id: MINIDUMP_MEMORY_DESCRIPTOR
    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_memory_descriptor
    seq:
      - id: addr_memory_range
        -orig-id: StartOfMemoryRange
        type: u8
      - id: memory
        type: location_descriptor
  location_descriptor:
    -orig-id: MINIDUMP_LOCATION_DESCRIPTOR
    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_location_descriptor
    seq:
      - id: len_data
        -orig-id: DataSize
        type: u4
      - id: ofs_data
        -orig-id: Rva
        type: u4
    instances:
      data:
        io: _root._io
        pos: ofs_data
        size: len_data
  minidump_string:
    doc: |
      Specific string serialization scheme used in MiniDump format is
      actually a simple 32-bit length-prefixed UTF-16 string.
    doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ns-minidumpapiset-minidump_string
    seq:
      - id: len_str
        -orig-id: Length
        type: u4
      - id: str
        -orig-id: Buffer
        size: len_str
        type: str
        encoding: UTF-16LE
enums:
  stream_types:
    # https://learn.microsoft.com/en-us/windows/win32/api/minidumpapiset/ne-minidumpapiset-minidump_stream_type
    0: unused
    1: reserved_0
    2: reserved_1
    3: thread_list
    4: module_list
    5: memory_list
    6: exception
    7: system_info
    8: thread_ex_list
    9: memory_64_list
    10: comment_a
    11: comment_w
    12: handle_data
    13: function_table
    14: unloaded_module_list
    15: misc_info
    16: memory_info_list
    17: thread_info_list
    18: handle_operation_list
    19: token
    20: java_script_data
    21: system_memory_info
    22: process_vm_counters
    23: ipt_trace
    24: thread_names
    0x8000: ce_null
    0x8001: ce_system_info
    0x8002: ce_exception
    0x8003: ce_module_list
    0x8004: ce_process_list
    0x8005: ce_thread_list
    0x8006: ce_thread_context_list
    0x8007: ce_thread_call_stack_list
    0x8008: ce_memory_virtual_list
    0x8009: ce_memory_physical_list
    0x800A: ce_bucket_parameters
    0x800B: ce_process_module_map
    0x800C: ce_diagnosis_list
    # Breakpad extensions; see Breakpad's src/google_breakpad/common/minidump_format.h
    0x47670001: md_raw_breakpad_info
    0x47670002: md_raw_assertion_info
    0x47670003: md_linux_cpu_info      # /proc/cpuinfo
    0x47670004: md_linux_proc_status   # /proc/\$x/status
    0x47670005: md_linux_lsb_release   # /etc/lsb-release
    0x47670006: md_linux_cmd_line      # /proc/\$x/cmdline
    0x47670007: md_linux_environ       # /proc/\$x/environ
    0x47670008: md_linux_auxv          # /proc/\$x/auxv
    0x47670009: md_linux_maps          # /proc/\$x/maps
    0x4767000a: md_linux_dso_debug
    # Crashpad extension; See Crashpad's minidump/minidump_extensions.h
    0x43500001: md_crashpad_info_stream
`
  },
  {
    id: "ksy_windows_resource_file",
    name: "Windows resource file",
    category: "Windows",
    metadata: {
      isGenerated: true,
      fileExtensions: ["res"],
      description: "Windows resource file",
      originalCategory: "windows",
      filePath: "windows/windows_resource_file.ksy",
      endian: "le"
    },
    content: `meta:
  id: windows_resource_file
  title: Windows resource file
  file-extension: res
  xref:
    justsolve: Windows_resource
    wikidata: Q1417897
  license: CC0-1.0
  endian: le
doc: |
  Windows resource file (.res) are binary bundles of
  "resources". Resource has some sort of ID (numerical or string),
  type (predefined or user-defined), and raw value. Resource files can
  be seen standalone (as .res file), or embedded inside PE executable
  (.exe, .dll) files.

  Typical use cases include:

  * providing information about the application (such as title, copyrights, etc)
  * embedding icon(s) to be displayed in file managers into .exe
  * adding non-code data into the binary, such as menus, dialog forms,
    cursor images, fonts, various misc bitmaps, and locale-aware
    strings

  Windows provides special API to access "resources" from a binary.

  Normally, resources files are created with \`rc\` compiler: it takes a
  .rc file (so called "resource-definition script") + all the raw
  resource binary files for input, and outputs .res file. That .res
  file can be linked into an .exe / .dll afterwards using a linker.

  Internally, resource file is just a sequence of individual resource
  definitions. RC tool ensures that first resource (#0) is always
  empty.
seq:
  - id: resources
    type: resource
    repeat: eos
types:
  resource:
    doc: |
      Each resource has a \`type\` and a \`name\`, which can be used to
      identify it, and a \`value\`. Both \`type\` and \`name\` can be a
      number or a string.
    doc-ref: https://learn.microsoft.com/en-us/windows/win32/menurc/resourceheader
    seq:
      - id: value_size
        -orig-id: DataSize
        type: u4
        doc: Size of resource value that follows the header
      - id: header_size
        -orig-id: HeaderSize
        type: u4
        doc: |
          Size of this header (i.e. every field except \`value\` and an
          optional padding after it)
      - id: type
        -orig-id: TYPE
        type: unicode_or_id
      - id: name
        -orig-id: NAME
        type: unicode_or_id
      - id: padding1
        size: (4 - _io.pos) % 4
      - id: format_version
        -orig-id: DataVersion
        type: u4
      - id: flags
        -orig-id: MemoryFlags
        type: u2
      - id: language
        -orig-id: LanguageId
        type: u2
      - id: value_version
        -orig-id: Version
        type: u4
        doc: Version for value, as specified by a user.
      - id: characteristics
        -orig-id: Characteristics
        type: u4
        doc: Extra 4 bytes that can be used by user for any purpose.
      - id: value
        size: value_size
      - id: padding2
        size: (4 - _io.pos) % 4
    instances:
      type_as_predef:
        value: type.as_numeric
        enum: predef_types
        if: not type.is_string and type.as_numeric <= 0xff
        doc: |
          Numeric type IDs in range of [0..0xff] are reserved for
          system usage in Windows, and there are some predefined,
          well-known values in that range. This instance allows to get
          it as enum value, if applicable.
    enums:
      predef_types:
        # https://learn.microsoft.com/en-us/windows/win32/menurc/resource-types
        # Win16
        1: cursor
        2: bitmap
        3: icon
        4: menu
        5: dialog
        6: string
        7: fontdir
        8: font
        9: accelerator
        10: rcdata
        12: group_cursor
        14: group_icon
        # Win32
        11: messagetable
        16: version
        17: dlginclude
        19: plugplay
        20: vxd
        21: anicursor
        22: aniicon
        23: html
        24: manifest
  unicode_or_id:
    doc: |
      Resources use a special serialization of names and types: they
      can be either a number or a string.

      Use \`is_string\` to check which kind we've got here, and then use
      \`as_numeric\` or \`as_string\` to get relevant value.
    seq:
      - id: first
        type: u2
        if: save_pos1 >= 0
      - id: as_numeric
        type: u2
        if: not is_string
      - id: rest
        type: u2
        repeat: until
        repeat-until: _ == 0
        if: is_string
      - id: noop
        size: 0
        if: is_string and save_pos2 >= 0
    instances:
      # Super dirty hack to save start and end position in a stream to re-read it as string if needed
      save_pos1:
        value: _io.pos
      save_pos2:
        value: _io.pos
      is_string:
        value: first != 0xffff
      as_string:
        pos: save_pos1
        size: save_pos2 - save_pos1 - 2
        type: str
        encoding: UTF-16LE
        if: is_string
`
  },
  {
    id: "ksy_windows_shell_items",
    name: "Windows Shell Items",
    category: "Windows",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Windows Shell Items",
      originalCategory: "windows",
      filePath: "windows/windows_shell_items.ksy",
      endian: "le"
    },
    content: `meta:
  id: windows_shell_items
  title: Windows Shell Items
  xref:
    forensicswiki: shell_item
  license: CC0-1.0
  endian: le
doc: |
  Windows Shell Items (AKA "shellbags") is an undocumented set of
  structures used internally within Windows to identify paths in
  Windows Folder Hierarchy. It is widely used in Windows Shell (and
  most visible in File Explorer), both as in-memory and in-file
  structures. Some formats embed them, namely:

  * Windows Shell link files (.lnk) Windows registry
  * Windows registry "ShellBags" keys

  The format is mostly undocumented, and is known to vary between
  various Windows versions.
doc-ref: https://github.com/libyal/libfwsi/blob/main/documentation/Windows%20Shell%20Item%20format.asciidoc
seq:
  - id: items
    -orig-id: IDList
    type: shell_item
    repeat: until
    repeat-until: _.len_data == 0
    doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.2.1'
types:
  shell_item:
    -orig-id: ItemID
    doc-ref: 'https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-SHLLINK/[MS-SHLLINK].pdf Section 2.2.2'
    seq:
      - id: len_data
        type: u2
      - id: data
        size: len_data - 2
        type: shell_item_data
        if: len_data >= 2
  shell_item_data:
    seq:
      - id: code
        type: u1
      - id: body1
        type:
          switch-on: code
          cases:
            0x1f: root_folder_body
      - id: body2
        type:
          switch-on: code & 0x70
          cases:
            0x20: volume_body
            0x30: file_entry_body
  root_folder_body:
    doc-ref: 'https://github.com/libyal/libfwsi/blob/main/documentation/Windows%20Shell%20Item%20format.asciidoc#32-root-folder-shell-item'
    seq:
      - id: sort_index
        type: u1
      - id: shell_folder_id
        size: 16
      # TODO: various extensions
  volume_body:
    doc-ref: 'https://github.com/libyal/libfwsi/blob/main/documentation/Windows%20Shell%20Item%20format.asciidoc#33-volume-shell-item'
    seq:
      - id: flags
        type: u1
  file_entry_body:
    doc-ref: 'https://github.com/libyal/libfwsi/blob/main/documentation/Windows%20Shell%20Item%20format.asciidoc#34-file-entry-shell-item'
    seq:
      - type: u1
      - id: file_size
        type: u4
      - id: last_mod_time
        type: u4
      - id: file_attrs
        type: u2
    instances:
      is_dir:
        value: _parent.code & 0x01 != 0
      is_file:
        value: _parent.code & 0x02 != 0
`
  },
  {
    id: "ksy_windows_systemtime",
    name: "Microsoft Windows SYSTEMTIME structure",
    category: "Windows",
    metadata: {
      isGenerated: true,
      fileExtensions: [],
      description: "Microsoft Windows SYSTEMTIME structure",
      originalCategory: "windows",
      filePath: "windows/windows_systemtime.ksy",
      endian: "le"
    },
    content: `meta:
  id: windows_systemtime
  title: Microsoft Windows SYSTEMTIME structure
  xref:
    justsolve: Windows_SYSTEMTIME
  license: CC0-1.0
  endian: le
doc: |
  Microsoft Windows SYSTEMTIME structure, stores individual components
  of date and time as individual fields, up to millisecond precision.
doc-ref: https://learn.microsoft.com/en-us/windows/win32/api/minwinbase/ns-minwinbase-systemtime
seq:
  - id: year
    -orig-id: wYear
    type: u2
    doc: Year
  - id: month
    -orig-id: wMonth
    type: u2
    doc: Month (January = 1)
  - id: dow
    -orig-id: wDayOfWeek
    type: u2
    doc: Day of week (Sun = 0)
  - id: day
    -orig-id: wDay
    type: u2
    doc: Day of month
  - id: hour
    -orig-id: wHour
    type: u2
    doc: Hours
  - id: min
    -orig-id: wMinute
    type: u2
    doc: Minutes
  - id: sec
    -orig-id: wSecond
    type: u2
    doc: Seconds
  - id: msec
    -orig-id: wMilliseconds
    type: u2
    doc: Milliseconds
`
  }
];

/**
 * Get all generated formats
 */
export function getGeneratedFormats() {
  return generatedFormats;
}

/**
 * Get formats by category
 */
export function getFormatsByCategory(category) {
  return generatedFormats.filter(f => f.category === category);
}

/**
 * Get format by ID
 */
export function getGeneratedFormat(id) {
  return generatedFormats.find(f => f.id === id) || null;
}

/**
 * Get all categories
 */
export function getCategories() {
  return [...new Set(generatedFormats.map(f => f.category))].sort();
}

/**
 * Format statistics
 */
export const formatStats = {
  totalFormats: 185,
  categories: {
  "3D Graphics": 1,
  "Archives": 17,
  "CAD": 1,
  "Common": 7,
  "Database": 4,
  "Executable": 11,
  "File System": 17,
  "Firmware": 4,
  "Fonts": 3,
  "Games": 17,
  "Geospatial": 2,
  "Hardware": 3,
  "Images": 17,
  "Logs": 7,
  "Machine Code": 1,
  "macOS": 8,
  "Media": 18,
  "Network": 25,
  "Scientific": 4,
  "Security": 3,
  "Serialization": 9,
  "Windows": 6
}
};

export default {
  generatedFormats,
  getGeneratedFormats,
  getFormatsByCategory,
  getGeneratedFormat,
  getCategories,
  formatStats
};
